.COMMENT EDITED 17-AUG-79 FOR RSTS/E V7.0-07
.NHY
.uc
.PAPER SIZE 60,72
.LM 0
.RM 72
.HEADER MIXED
.TITLE QSTATS and LQSTAT
.FIGURE 5
.C
QSTATS and LQSTAT
.SKIP 5
NOTICE: This document describes programs which the
Digital Equipment Corporation has no committment
to support at this time.
If you experience any difficulties, please send a description of the problem
to DIGITAL via normal SPR channels.
Please mark the SPR "FYI" (For Your Information),
as DIGITAL does not make any commitment to reply to such SPR's,
nor to correct any possible errors in the software.

.page
The information in this document is subJect to change without notice
and should not be construed as a commitment by Digital Equipment
Corporation.
.blanK 1
Digital Equipment Corporation assumes no responsibility for the use
or reliability of this document or the described software.
.blanK 3
.center 70
Copyright (C) 1979, 1981 Digital Equipment Corporation

.PAGE
.C
QSTATS and LQSTATS
.B
QSTATS is a monitor statistics sampling program which extracts
data collected by the RSTS/E V7.0 operating system and saves the data
in a file.
LQSTAT then post-processes the data into report format with some statistical
reduction.
.b
The first section of this discussion will be concerned with the metrics
extracted. The second will be concerned with the actual execution procedures
needed to run the programs.
.b 2
DEFINITION OF METRICS
.b
There are 3 measurement areas: cache, system, and disk. Each of these
areas and the individual measurement within them will be discussed below.
Each metric will be identified by the name tag given to it in the QSTATS
program followed by a discussing of the meaning of the metric.

.page
.lm 0
.c
*Cache Measurements*
.b
The Cache measurement data items are listed below:
.lm 20
.ts 20
.b.i -20
SIN.TOT.READS	Total number of single cluster reads performed which were
eligible for caching.
This includes all FIP I/O, any other directory I/O, all data transfers which
do not cross a cache cluster boundary, and all segment reads (see SEG.READS).
.b .i -20
SIN.TOT.HITS	The total number of SIN.TOT.READS which were found in the
cache (cache hits).
.b .i -20
SIN.DIR.READS	The number of SIN.TOT.READS performed for FIP I/O and other
directory I/O.
.b .i -20
SIN.DIR.HITS	The total number of SIN.DIR.READS due to FIP and
directory I/O.
.b .i -20
SIN.DATA.READS	The total number of SIN.TOT.READS performed which were
due to user data transfers which were cached.
(requires data cache being enabled for user I/O).
.b .i -20
SIN.DATA.HITS	The total number of SIN.DATA.READS which were found in
the cache (data cache hits).
.b .i -20
NOLOOK.READS	The total number of disk reads which were not cached.
This includes all swaps, non-file structured reads, and all reads from files
not opened with caching.
.b .i -20
INSTALL.READS	The total number of disk reads originating in the cache
code to install disk data in the cache.
.b .i -20
MCLU.R.CACHED	The total number of large reads which were eligible for
caching but were divided into segments before attempting to perform them.
Large reads are all reads which cross cache cluster boundaries.
The division into segments occurs at cache cluster boundaries.
.b.i -20
MCLU.R.NOTCD	The total number of large transfers which were eligible
for caching but which were not divided and, therefore, not cached.
This occurs with large transfers unless all the segments which make up the
transfer are already in the cache or can all be installed.
It also occurs if the large transfer is from a file opened in sequential
mode as dividing a sequential read to get the data installed in the cache
will require more reads than if the read is not cached. Since the read is
sequential, having the data in the cache would not do any good.
.b.i -20
SEG.READS	The total number of segments produced by dividing up the
transfers counted in MCLU.READS.CAS.
.b.i -20
WRITE.CHKD	The number of writes that were checked to see if the block
was in the cache.
.b.i -20
WRITE.HITS	The number of WRITE.CHKD found in the cache.
.b.i -20
CHENUE	The total number of cache buffere obtained from the extended buffer
pool.
.b.i -20
CHFCNT	The total number of CHENUE which contained disk data requested
by FIP.
.b.i -20
CHDCNT	The total number of CHENUE which contained disk data requested
by user data transfers.

.lm 0
.page
.center
*System Measurements*
.b
The system measurements are described below:
.lm 20
.ts 20
.b.i -20
UPTICS	The number of tic increments (converted into seconds) between sample
measurement intervals.
(Those items which follow that are preceded by a "_%" represent a
percentage of UPTICS.)
.b.i -20
FREE.SMALL.BUFF	The number of free small buffers.
.B.I -20
_%SYS.CHARGED.TICS	The time in which a user was running
AND the system was executing monitor code when the clock interrupted.
.b.i -20
_%LOST.TICS	The time for which the system could find no job
resident in core that could be run during a swap interval, implies that the
job could have been run if more core was available.
.b .i -20
_%SYS.UNCH.TICS	The time in which monitor code was being
executed but no job was actually running.
SYS.CHARGED plus SYS.UNCH equals the total monitor load on the system.
If this sum is consistently high (over 10-15%), user jobs may be requiring
too much monitor service. For example, several jobs may be typing large
amounts of data on terminals at hich Baud rates or jobs may be requiring
large amounts of file processing.
.B.I -20
_%NULL.TICS	The time during which the CPU was idle.
If low, the system may not have enough reserve capacity to give good
response to terminal users.
If high on a system which is known to be loaded, the CPU could be idle
because all jobs are waiting for disk accesses or file processor
requests to be completed.
.b.i -20
_%USER.TICS	The time during which the system was executing user
code when a clock interrupt occurred.
.B.I -20
_%CHARGED.TICS	The time charged to a particular user.
.B.I -20
_%UNCHARGED.TICS	The time not charged to any user.
.b.i -20
_%FIP.NEEDED	The time during which at least one
job requested file processor service.
(It should be kept as low as possible.)
.b.i -20
_%FIP.IDLE	The time during which FIP was not actually running.
.b.i -20
_%FIP.WAITING	The time during which FIP was in use but was
waiting for some other process to complete.
The particular process is further described by one of the following values.
.b.i -20
_%FIP.CODE.WAIT	The time during which FIP was waiting for a
system overlay code segment to be loaded to memory.
.b.i -20
_%FIP.DISK.WAIT	The time FIP was waiting for a disk transfer
to complete.
If high, the size of XBUF should be checked.
.b.i -20
_%FIP.SAT.WAIT	The time FIP was waiting for a copy of a
disk's storage allocation table (map of the free space on each disk).
If high, the pack clustersize could be increased so that each SAT block maps
a greater proportion of the disk or consideration could be given to
creating or extending files less frequently.
.b.i -20
_%FIP.OTHER.WAIT	The time FIP was waiting for some other system
service.
.B.I -20
_%FIP.CPU	The CPU required for file processing.
.b.i -20
_%IO.TIME	The time the CPU was executing a device
interrupt service routine.
.b.i -20
_%CACHE.TIME	The time the CPU spent in cache code of
the monitor.
.b.i -20
KB.CHAR.IN	The number of characters input from all terminals
within the UPTICS interval.
If more than 100-150 characters per second are input, the system may seem
slow since a large amount of CPU capacity will be dedicated to process and
echo this volume of data.
.b.i -20
KB.CHAR.OUT	The number of characters output to all terminals within
the UPTICS interval.
If more than 200-300 characters per second are output, the system may seem
slow since a large amount of CPU capacity will be dedicated to generate and
output this volume of data.

.lm 0
.page
.center
*Disk Measurements*
.B
The disk measurement data is done for each disk on the system and consists
of the following:
.lm +20
.ts 20
.b.i -20
SWAP.R.PHY.CNT	The number of reads requests that includes job swapping
as well as disks accesses required to load Run-Time systems.
.b .i -20
SWAP.R.PHY.BLK	The number of blocks associated with the SWAP.R.PHY.CNT
(will always be multi-block).
.b .i -20
SWAP.WRT.CNT	The number of writes requested for job swapping.
.b .i -20
SWAP.WRT.BLK	The number of blocks done for SWAP.WRT.CNT.
.b .i -20
SWAP.R.CHE.CNT	The number of read hit accesses that came from the cache.
.b .i -20
SWAP.R.CHE.BLK	The number of read hit blocks.
.B .I -20
FILE.R.PHY.CNT	The number of reads requested for user level data reads
as well as accesses needed to run or compile a program or to load a
program overlay segment.
.b .i -20
FILE.R.PHY.BLK	The number of blocks for FILE.R.PHY.CNT.
.b .i -20
FILE.WRT.CNT	The number of writes as counterpart to FILE.R.PHY.CNT.
.b .i -20
FILE.WRT.BLK	The number of block for FILE.WRT.CNT.
.b.i -20
FILE.R.CHE.CNT	The number of read hit accesses that came from the cache.
.b .i -20
FILE.R.CHE.BLK	The number of read hit blocks.
.B .I -20
SAT.R.PHY.CNT	The number of read requests needed to acquire the storage
allocation table (needed to determine the location of free space on the disk).
.b.i -20
SAT.R.PHY.BLK	The number of blocks for SAT.R.PHY.CNT.
.b .i -20
SAT.WRT.CNT	The number of write requests as counterpart to SAT.R.PHY.CNT.
.b .i -20
SAT.WRT.BLK	The number of blocks for SAT.WRT.CNT.
.b.i -20
SAT.R.CHE.CNT	The number of read hit accesses that came from the cache.
.b .i -20
SAT.R.CHE.BLK	The number of read hit blocks.
.B
.TESTPAGE 8
.I -20
OVER.R.PHY.CNT	The number of read requests required to load non-resident
monitor segments, as well as accesses to the error message file.
On a private disk, the number of reads that were done for cache installation.
.b.i -20
OVER.R.PHY.BLK	The number of blocks for OVER.R.PHY.CNT.
.b.i -20
OVER.WRT.CNT	NULL - counterpart to OVER.R.PHY.CNT.
.b.i -20
OVER.WRT.BLK	NULL - number of blocks for OVER.WRT.CNT.
.b.i -20
OVER.R.CHE.CNT	The number of read hit accesses that came from the cache.
.b .i -20
OVER.R.CHE.BLK	The number of read hit blocks.
.B .I -20
DIR.R.PHY.CNT	The number of read requests needed to process the file
directory information.
.b.i -20
DIR.R.PHY.BLK	The number of blocks for DIR.WRT.CNT.
.B.I -20
DIR.R.CHE.CNT	The number of read hit accesses that came from the cache.
.B.I -20
DIR.R.CHE.BLK	The number of read hit blocks

.page
.lm -20
Operational Procedures
.B
The program that collects the statistics is "QSTATS" and the program that
performs the data reduction process is called "LQSTAT". In the section that
follows the running requirement (in particular, the input dialogue) will be
discussed.
.b 2
.c
*QSTATS DESCRIPTION*
.B
The QSTATS program is written in BASIC-PLUS, and has been derived from
several different statistics programs.
QSTATS has the additional functionality of data storage within a
self defining structure.
The dialogue procedure is:
.b
RUN $QSTATS
.i 0
_<QSTAT's header line>
.b
GENERIC FILE PREFIX FOR FILES <QSTAT>?
.i 25;name of files for output
.b
INTER-SAMPLE SLEEP TIME <60%> ?
.i 25;seconds to elapse between samples
.b
EXPERIMENT NAME <*TEST*> ?
.i 25;20 character label for test
.b
DO YOU WANT SELECTED DISK UNITS (YES/NO) _<NO> ?
.lm 25
.i 0
Answer yes if you want only specific units checked;
answer no (ot type _<cr>) if all units should be checked
.b.i -25
SHOULD disk BE IGNORED (YES/NO) _<NO> ?
.i 0
If you answered 'yes' to the selected disk units question,
QSTATS will list all disks so that you may indicate which units should be
skipped.
.lm -25
.B
After the user (who must be privileged) has performed the dialogue, the
program will open the output file, take the first time sample, and the detach
itself from the terminal while issuing the message "Detaching...." to so
indicate. After the experiment is completed, the user must attach to
the QSTATS job, and then type a CTRL/C (_^C) which will force
the program to perform its clean up operation.

.PAGE
.c
*LQSTAT DESCRIPTION*
.B
The LQSTAT program is also written in BASIC-PLUS, and takes the data
base from QSTATS, allow timeslice reporting as well as computation of the
mean and standard deviation of the metrics. The dialogue procedure is:
.B
RUN $LQSTAT
.i 0
_<LQSTAT's header line>
.b
GENERIC STATS FILE PREFIX <QSTAT>?
.i 25;report file name
.b
LOW RANGE VALUE <2%>?
.i 25;begin report on this sample point
.b
HIGH RANGE VALUE <NUMBER OF SAMPLES - 1%>?
.i 25;end report on this sample point
.B
The report file may then be spooled to the printer.

