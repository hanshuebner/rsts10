	.TITLE	PATIN
	.IDENT	/1.01/
 
;
; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C. MONIA 01-DEC-75
;
; MODIFIED BY:
;
;	J. GALLANT	6-NOV-84	1.01
;		JG0081	-- ADD LOGICAL NAME SUPPORT	
;
; PATCH PROGRAM INITIALIZATION
;
; MACRO LIBRARY CALLS
;
 
	.MCALL	FINIT$
 
;+
; **-$PATIN-INITIALIZE PATCH PROGRAM STORAGE
;
;  THIS SUBROUTINE IS CALLED TO PERFORM ALL STORAGE INITIALIZA-
; TION AND PARSE THE COMMAND LINE INPUT FILE SPECIFICATIONS.
;
; INPUTS:
;
;	NONE
;
; OUTPUTS:
;
;	THE INITIAL STATE OF ALL STORAGE IS ESTABLISHED
;
;
;	FILENAME BLOCKS ARE SETUP FOR THE INPUT, OUTPUT AND
;	CORRECTION FILES
;
;-
 
$PATIN::			;
	SAVRG			; SAVE THE NONVOLATILE REGISTERS
	FINIT$
	SUB	#T$MSIZ,SP	; ALLOCATE TEMP. BUFFER ON STACK
10$:				;
	MOV	#$CLRBG,R0	; GET START OF AREA TO CLEAR
	MOV	#C$LRSZ/2,R1	; GET NUMBER OF WORDS TO CLEAR
20$:				;
	CLR	(R0)+		; CLEAR SPECIFIED MEMORY LOCATIONS
	SOB	R1,20$		; ...
	CALL	$INIDM		; INITIALIZE DYNAMIC MEMORY
	MOV	#$SCTHD,$SCTHD+2 ; SET SECTION TABLE LISTHEAD
	MOV	#$LNDES,R4	; GET ADDRESS OF LINE DESCRIPTOR
	MOV	#$PTCMD,R0	; POINT TO COMMAND LINE CONTROL BLOCK
	CLR	R1		; SET FOR DEFAULT PROMPT
	CALL	$CMLIO		; READ COMMAND LINE INPUT
	BCS	100$		; IF C/S END-OF-FILE
	MOV	R1,(R4)		; SET COMMAND LINE DESCRIPTOR
	MOV	R0,2(R4)	; ...
	MOV	R4,R0		; GET ADDRESS OF LINE DESCRIPTOR
	MOV	SP,R1		; SET ADDRESS OF TEMP. BUFFER
	CALL	$SYNTX		; ANALYZE SYNTAX
	BCS	10$		; IF C/S SYNTAX ERROR
	MOV	#$OUFDB,R0	; POINT TO OUTPUT FDB
	MOV	SP,R1		; SET TEMP. BUFFER ADDRESS
	CLR	R2		; NO SWITCHES ON OUTPUT FILE
	CALL	$SCANO		; SCAN FOR OUTPUT FILE
	BCS	50$		; IF C/S NO OUTPUT FILE
	TST	R0		; MULTIPLE OUTPUT FILES SPECIFIED?
	BNE	30$		; IF NE NO
	ERROR$	E$R25,S$V1,R4	; REPORT ERROR
	BR	10$		; TRY AGAIN
30$:				;
	MOV	#$OUFDB,R0	; POINT TO OUTPUT FILE FDB
	MOV	#$OUFNB,R1	; SET ADDRESS OF OUTPUT FILENAME BLOCK
	CALL	PARSE		; PARSE FILE NAME
	BCS	10$		; IF C/S ILLEGAL FILE SPECIFICATION
	BIS	#OU$FL,$SWTCH	; FLAG OUTPUT FILE SPECIFIED
50$:				;
	MOV	#$INFDB,R0	; SET ADDRESS OF INPUT FILE FDB
	MOV	SP,R1		; COPY ADDRESS OF TEMP BUFFER
	MOV	#$INSWT,R2	; SET ADDRESS OF FILE SWITCH TABLE
	CALL	$SCANI		; SCAN FOR INPUT FILE
	BCC	60$		; IF C/C HAVE INPUT FILE SPECIFICATION
	ERROR$	E$R27,S$V1,R4	; MISSING INPUT FILE
	BR	10$		;
60$:				;
	MOV	#$INFNB,R1	; GET FILE NAME STORAGE
	CALL	PRFND		; PARSE/FIND INPUT FILE
	BCS	10$		; IF C/S TRY AGAIN
	MOV	$INPSW,$INSW	; COPY FILE SWITCH WORD
	MOV	$CKSUM,$INCS	; COPY CHECKSUM VALUE
	BIS	#IN$FL,$SWTCH	; SET INPUT FILE PRESENT
	CLR	$INPSW		; RESET FILE SWITCH WORD
	CLR	$CKSUM		; RESET SWITCH VALUE
	MOV	SP,R1		; POINT TO TEMP. BUFFER
	MOV	#$INSWT,R2	; GET ADDRESS OF SWITCH TABLE
	CALL	$SCANI		; SCAN FOR CORRECTION INPUT FILE
	BCC	70$		; IF C/C HAVE FILE SPECIFICATION
	ERROR$	E$R28,S$V1,R4	; MISSING CORRECTION FILE
	BR	10$		; GO AGAIN
70$:				;
	TST	R0		; TOO MANY FILES SPECIFIED?
	BNE	80$		; IF NE NO
	ERROR$	E$R29,S$V1,R4	; TOO MANY INPUT FILES SPECIFIED
	BR	10$		; TRY AGAIN
80$:				;
	MOV	#$CRFNB,R1	; GET CORRECTION FILE NAMEBLOCK STORAGE
	CALL	PRFND		; PARSE/FIND CORRECTION FILE
	BCS	10$		; IF C/S UNABLE TO LOCATE FILE
	BIS	#CR$FL,$SWTCH	; FLAG CORRECTION FILE PRESENT
	MOV	$INPSW,$CRSW	; SET CORRECTION FILE SWITCHES
	MOV	$CKSUM,$CRCS	; SAVE CHECKSUM SWITCH
	ADD	#T$MSIZ,SP	; CLEAN STACK
	RETURN			;
 
;
; END-OF-FILE DURING COMMAND INPUT
;
 
100$:				;
	JMP	$EXIT		; EXIT
 
;
; PARSE/FIND AN INPUT FILE
;
 
	.ENABL	LSB
 
PRFND:				;
	MOV	#$INFDB,R0	; GET FDB FOR INPUT FILES
	CALL	PARSE		; PARSE FILENAME
	BCS	20$		; IF C/S ERROR
	CALL	.FIND		; FIND FILE
	BCC	20$		; IF C/C FOUND FILE OK
	MOV	R1,R2		; COPY ADDRESS OF FNB
	MOV	#S$V1*400!E$R11,R1 ; SET ERROR/SEVERITY
	BR	10$		;
 
;
; PARSE FILE NAME
;
 
PARSE:				;
	MOV	F.DSPT(R0),R2	; GET ADDRESS OF DATASET DESCRIPTOR
	MOV	F.DFNB(R0),R3	; GET ADDRESS OF DEFAULT NAME BLOCK
	BISB	#FL.AEX,F.FLG(R0)	;INDICATE STRING HAS BEEN EXPAND
	CALL	.PARSE		; PARSE FILENAME
	BCC	20$		; IF C/C OK
	MOV	R1,R2		; COPY ADDRESS OF FNB
	MOV	#S$V1*400!E$R26,R1 ; SET ERROR/SEVERITY
10$:				;
	ADD	#N.FNAM,R2	; POINT TO FILENAME
	ERROR$			; REPORT ERROR
	SEC			; SET CARRY
20$:				;
	RETURN			;
 
	.END
