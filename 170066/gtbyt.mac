	.TITLE	GTBYT
	.IDENT	/00/
;                                                                               ;**NEW**
; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;                                                                               ;**NEW**
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE               ;**NEW**
; ON A  SINGLE COMPUTER SYSTEM AND CAN BE  COPIED (WITH INCLUSION               ;**NEW**
; OF DEC'S COPYRIGHT  NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT               ;**NEW**
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.                               ;**NEW**
;                                                                               ;**NEW**
; THE  INFORMATION  IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT               ;**NEW**
; NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL               ;**NEW**
; EQUIPMENT CORPORATION.                                                        ;**NEW**
;                                                                               ;**NEW**
; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY               ;**NEW**
; OF  ITS  SOFTWARE ON  EQUIPMENT WHICH  IS  NOT SUPPLIED BY DEC.               ;**NEW**
;                                                                               ;**NEW**
; VERSION 00                                                                   ;**NEW**
;                                                                               ;**NEW**
; C. MONIA 01-DEC-75
;                                                                               ;**-13
; ROUTINES TO GET BYTE/WORD FROM INPUT FILE
;
; MACRO LIBRARY CALLS
;

	.MCALL	GET$S,QIOSY$                                                    ;**NEW**
	QIOSY$                                                                  ;**-1

;
; LOCAL DATA
;

BYTEA:	.BLKW	1		;NEXT BYTE IN RECORD ADDRESS
$NBYTE::.BLKW	1		;NUMBER OF BYTES REMAINING IN RECORD

;+
; **-$GTBYT-GET BYTE FROM INPUT FILE
;
; THIS ROUTINE IS CALLED TO GET THE NEXT BYTE FROM THE CURRENT INPUT
; FILE ($INFDB). IF THERE ARE NO MORE BYTES IN THE CURRENT RECORD,
; THEN THE NEXT RECORD IS READ AND THE LENGTH OF THAT RECORD IS RE-
; TURNED TO THE CALLER. ELSE THE NEXT BYTE IS RETURNED TO THE CALLER.
; THUS THE NORMAL USE OF THIS ROUTINE IS TO MAKE A CALL TO OBTAIN THE
; BYTE COUNT AND THEN TO MAKE SUBSEQUENT CALLS TO OBTAIN EACH BYTE.
; BEFORE THE FIRST CALL IS MADE FOR EACH FILE, $NBYTE MUST BE ZEROED
; IN ORDER TO FORCE A READ.
;
; INPUTS:
;
;	$INFDB RECORD BLOCK.
;
; OUTPUTS:
;
;	C=1 IF EOF ENCOUNTERED.
;	C=0 IF NEXT BYTE OR RECORD LENGTH IS OBTAINED.
;		R0=NEXT BYTE OR RECORD LENGTH.
;-

$GTBYT::DEC	$NBYTE		;ANY MORE BYTES?
	BLT	10$		;IF LT NO
	CLR	R0		;CLEAR R0 AND CARRY
	BISB	@BYTEA,R0	;PICK UP NEXT BYTE
	INC	BYTEA		;INCREMENT BYTE ADDRESS
	BR	30$		;EXIT THROUGH COMMON POINT
10$:	MOV	#$INFDB,R0	;GET INPUT FILE RECORD BLOCK
	GET$S	R0		; GET NEXT RECORD                               ;**NEW**
	BCC	20$		;IF CC OKAY                                     ;**-1
	CMPB	#IE.EOF,F.ERR(R0);EOF?
	SEC			;ASSUME EOF
	BEQ	30$		;IF EQ YES
	ERROR$	E$R16,S$V2,#$INFDB+F.FNB+N.FNAM ; FATAL, NO RETURN
20$:	MOV	F.NRBD+2(R0),BYTEA;SET ADDRESS OF NEXT BYTE
	MOV	F.NRBD(R0),R0	;GET LENGTH OF RECORD
	MOV	R0,$NBYTE	;SET NUMBER OF BYTES
30$:	RETURN			;

;+
; **-$GTWRD-GET WORD FROM INPUT FILE
;
; THIS ROUTINE IS CALLED TO GET THE NEXT TWO BYTES FROM THE CURRENT
; INPUT FILE ($INPPT). $GTBYT IS CALLED TWICE TO OBTAIN THE TWO BYTES
; AND THE RESULTANT WORD IS RETURNED TO THE CALLER.
;
; INPUTS:
;
;	NONE.
;
; OUTPUTS:
;
;	R0=NEXT TWO BYTES FROM THE INPUT FILE.
;-

$GTWRD::CALL	$GTBYT		;GET FIRST BYTE
	MOV	R0,-(SP)	;SAVE IT ON STACK
	CALL	$GTBYT		;GET SECOND BYTE
	SWAB	R0		;SWAP HALVES
	BIS	(SP)+,R0	;MERGE BYTES
	RETURN			;

	.END
