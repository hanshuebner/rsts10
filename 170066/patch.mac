	.TITLE	PATCH
	.IDENT	/02.02/
 
;
;		COPYRIGHT (c) 1981 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD
;	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE  IS  FURNISHED  UNDER  A LICENSE AND MAY BE USED
; AND  COPIED  ONLY IN  ACCORDANCE WITH THE TERMS OF SUCH LICENSE
; AND WITH  THE INCLUSION  OF THE ABOVE  COPYRIGHT  NOTICE.  THIS
; SOFTWARE  OR ANY OTHER  COPIES  THEREOF, MAY NOT BE PROVIDED OR
; OTHERWISE MADE  AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND
; OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERED.
;
; THE INFORMATION  IN THIS DOCUMENT IS SUBJECT  TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT  BY  DIGITAL
; EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
;
; VERSION 02.02
;
; C. MONIA 01-DEC-75
;
;
; MODIFICATIONS:
;
;	JAK001	8-17-77		ADD EXIT WITH STATUS
;
;
;	CDZ006	17-AUG-81	SAVE CORRECT EXIT STATUS DURING CHECKSUM INQUIRY
;	CDZ007	21-AUG-81	REPORT ERROR IN EXIT STATUS IF SPECIFIED CHECKSUM IS INCORRECT
;
; OBJECT MODULE PATCH PROGRAM EXECUTIVE
;
; MACRO LIBRARY CALLS
;
 
	.MCALL	CLOSE$,RCML$
 
;
; LOCAL DATA
;
SAVSTS:	.BLKW	1		;
;
; STACK POINTER SAVE
;
 
SPSAV:	.BLKW	1		;
 
;+
; **-$PATCH-OBJECT MODULE PATCH PROGRAM EXECUTIVE
;-
 
	.ENABL	LSB
 
$PATCH::			;
	MOV	SP,SPSAV	; SAVE STACK POINTER
	MOV	#EX$SUC,$EXSTS	; ASSUME SUCCESSFUL COMPLETION
10$:				;
	MOV	SPSAV,SP	; RESTORE STACK
	CALL	$PATIN		; INITIALIZE PATCH
	CALL	$SRCMN		; SEARCH CONCATENATED FILE FOR MODULE
	CALL	$BLGSD		; BUILD GSD TABLES
	CALL	$EDGSD		; MERGE CORRECTION FILE GSD
	CALL	$MRGFL		; MERGE RLD RECORDS
	MOV	#$INSW,R0	; GET ADDRESS OF INPUT FILE SWITCHES
	MOV	#$INCS,R1	; GET ADDRESS OF INPUT FILE CHECKSUM
	MOV	#$INFNB,R2	; GET ADDRESS OF INPUT FILENAME BLOCK
	CALL	CHKSM		; VALIDATE/REPORT CHECKSUM
	MOV	#$CRSW,R0	; GET CORRECTION FILE SWITCH WORD
	MOV	#$CRCS,R1	; GET CORRECTION FILE CHECKSUM
	MOV	#$CRFNB,R2	; GET ADDRESS OF CORRECTION FILE NAMEBLOCK
	CALL	CHKSM		; VALIDATE/REPORT CHECKSUM
 
;+
; **-$RSTRT-CLOSE ALL FILES AND RESTART PATCH
;-
 
$RSTRT::			;
	CALL	CLOSE		; CLOSE ALL FILES
	BR	10$		; GO AGAIN
 
	.DSABL	LSB
 
;+
; **-$EXIT-CLOSE ALL FILES AND EXIT
;-
 
$EXIT::				;
	CALL	CLOSE		; CLOSE ALL FILES
	MOV	$EXSTS,R0	; GET EXIT STATUS
	CALL	$EXST		; CALL	EXIT ROUTINE
 
;
; VALIDATE OR REPORT MODULE CHECKSUM
;
 
CHKSM:				;
	BIT	#SW$CS,(R0)	; CHECKSUM SWITCH SPECIFIED?
	BEQ	30$		; IF EQ NO
	TST	(R1)+		; CHECKSUM TO BE VALIDATED?
	BEQ	10$		; IF EQ NO, REPORT IT
	CMP	(R1),-(R1)	; CHECKSUM COMPARE OK?
	BEQ	30$		; IF EQ YES
	ADD	#N.FNAM,R2	; POINT TO FILE NAME
8$:	ERROR$	E$R14,S$V1	; REPORT CHECKSUM ERROR
	BR	30$		; EXIT
10$:				;
	MOV	R1,R0		; SAVE ADDRESS OF CHECKSUM
	MOV	#<S$V0*400!E$R12>,R1 ; ASSUME INPUT FILE CHECKSUM
	CMP	R2,#$INFNB	; INPUT FILE?
	BEQ	20$		; IF EQ YES
	MOV	#<S$V0*400!E$R13>,R1 ; 
20$:				;
	MOV	R0,R2		; SET CHECKSUM ADDRESS
	MOV	$EXSTS,SAVSTS	; SAVE CURRENT EXIT STATUS
	ERROR$			; REPORT CHECKSUM
	MOV	SAVSTS,$EXSTS	; RESTORE CORRECT EXIT STATUS
30$:				;
	RETURN			;
 
 
;
; CLOSE ALL FILES
;
 
CLOSE:				;
 
	.IF NDF	R$$11M
 
	CLOSE$	$PTEDB		; CLOSE ERROR MESSAGE OUTPUT FILE
 
	.ENDC
 
	CLOSE$	#$INFDB		; CLOSE INPUT FILE
	CLOSE$	#$OUFDB		; CLOSE OUTPUT FILE
	RCML$	#$PTCMD		; RESET GCML BLOCK
	RETURN			;
 
	.END	$PATCH
