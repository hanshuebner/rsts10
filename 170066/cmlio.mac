	.TITLE	CMLIO
	.IDENT	/00/
 
;
; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C. MONIA 25-NOV-75
;
; PROCESS COMMAND LINE INPUT
;
; MACRO LIBRARY CALLS
;
 
	.MCALL	GCML$
 
;
; LOCAL MACROS
;
; DEFINE ERROR MESSAGE CODES
;
; ERCOD	CODE,ERROR,SVRTY
;
; WHERE:
;
;	CODE=$GCML ERROR CODE
;	ERROR,SEVRTY=ERROR MESSAGE ARGUMENTS (ERROR, SEVERITY) TO
;		ACCOMPANY A CALL TO $ERMSG IF THE SPECIFIED ERROR
;		OCCURS.
;
 
	.MACRO	ERCOD	CODE,ERROR,SVRTY
	.PSECT	ERCOD
	.WORD	177400!CODE
	.WORD	SVRTY*400!ERROR
	.WORD	0
.=.-2
	.PSECT
	.ENDM
 
;
; LOCAL DATA
;
; ERROR CODE TRANSLATION TABLE
;
 
	.PSECT	ERCOD,D
 
ERRTB:	ERCOD	GE.BIF,E$R18,S$V2	; ILLEGAL INDIRECT FILE SPECIFICATION
	ERCOD	GE.MDE,E$R19,S$V2	; MAX. INDIRECT DEPTH EXCEEDED
;
; PROMPT STRING BUFFER
;
 
PRMTBF:	.ASCII	<012>/PAT>/	;
PRMTLG=.-PRMTBF			; LENGTH OF PROMPT STRING
 
	.EVEN
 
;+
; **-$CMLIO-READ COMMAND LINE
;
; THIS SUBROUTINE IS CALLED TO READ A SINGLE COMMAND LINE AND RETURN
; THE LENGTH AND ADDRESS OF THE LINE RECEIVED. THE COMMAND LINE IS
; TERMINATED WITH A ZERO BYTE.
;
; INPUTS:
;
;	R0=ADDRESS OF '$GCML' BLOCK
;	R1=ADDRESS OF PROMPT STRING (0=NONE)
;	R2=LENGTH OF PROMPT
;
; OUTPUTS:
;
;	C/CLEAR - HAVE COMMAND LINE INPUT
;
;		R0=ADDRESS OF COMMAND LINE
;		R1=LENGTH OF COMMAND LINE
;
;	C/SET - END OF FILE DETECTED
;
;-
 
$CMLIO::			;
	MOV	R0,-(SP)	; PUSH ADDRESS OF DESCRIPTOR
	ADD	#G.CMLD,(SP)	; OFFSET TO LINE DESCRIPTOR
10$:				;
	TST	R1		; PROMPT SPECIFIED?
	BNE	15$		; IF NE NO
	MOV	#PRMTBF,R1	; GET ADDRESS OF PROMPT STRING
	MOV	#PRMTLG,R2	; LENGTH OF STRING
15$:				;
	GCML$	R0,R1,R2	; GET COMMAND LINE
	BCC	40$		; IF C/C HAVE COMMAND LINE
	MOVB	G.ERR(R0),R2	; GET ERROR CODE
	CMPB	R2,#GE.EOF	; END OF FILE?
	SEC			; ASSUME YES
	BEQ	50$		; IF EQ YES
	MOV	#ERRTB-4,R0	; GET ADDRESS OF ERROR TABLE LESS OFFSET
20$:				;
	CMP	(R0)+,(R0)+	; STEP TO NEXT ENTRY
	MOV	#S$V2*400!E$R17,R1 ; SET ERROR, SEVERITY
	TST	(R0)		; END OF TABLE?
	BEQ	30$		; IF EQ YES
	CMP	(R0),R2		; TEST ERROR CODE
	BNE	20$		; IF NE NOT SPECIFIED CODE
	MOV	2(R0),R1	; GET ERROR, SEVERITY
30$:				;
	MOV	(SP)+,R2	; GET COMMAND LINE DESCRIPTOR ADDRESS
	ERROR$			; TRAP TO ERROR PROCESSOR, NO RETURN
40$:				;
	TST	G.CMLD(R0)	; NULL LINE?
	BEQ	10$		; IF EQ YES
	MOV	(SP),R0		; GET ADDRESS OF DESCRIPTOR
	MOV	(R0)+,R1	; GET BYTE COUNT
	MOV	(R0),R0		; GET BUFFER ADDRESS
	MOV	R0,R2		; COPY BUFFER ADDRESS
	ADD	R1,R2		; OFFSET TO END OF BUFFER
	CLRB	(R2)		; INSERT NULL AT END OF BUFFER
50$:				;
	INC	(SP)+		; CLEAN STACK
	RETURN			;
 
	.END
