	.TITLE	SCRLD
	.IDENT	/02/
 
;
; COPYRIGHT (C) 1975,1976,1977
; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
; IN DEC.
;
; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;
; VERSION 02
;
; C. MONIA 16-JAN-75
;
; MODIFICATIONS:
;
;	C. MONIA  29-APR-77
;
;		CORRECT ERROR IN PSECT SEQUENCING WHEN NUMBER OF
;		SECTIONS EXCEEDS 127.
;
;
; PATCH CORRECTION INPUT FILE COMPLEX RLD RECORDS
;
; EQUATED SYMBOLS:
;
 
RLD=004				; RECORD TYPE 4 - RLD
STO=012				; COMPLEX TYPE 12 - STORE RESULT
STOD=013			; COMPLEX TYPE 13 - STORE DISPLACED
 
;
; LOCAL DATA
;
; COMPLEX RELOCATION RECORD BYTE COUNT TABLE
;
; EACH BYTE REPRESENTS THE NUMBER OF BYTES IN EACH COMPLEX
; RELOCATION COMMAND. A VALUE OF -1 INDICATES AN ILLEGAL RECORD.
; THE HIGH ORDER BIT SET INDICATES THAT THE SECTOR NUMBER ADJACENT
; TO THE COMMAND BYTE MUST BE REMAPPED.
;
;
 
CPCNT:				;
	.BYTE	1		; COMPLEX COMMAND TYPE 0 - NOP
	.BYTE	1		; COMPLEX COMMAND TYPE 1 - ADD
	.BYTE	1		; COMPLEX COMMAND TYPE 2 - SUBTRACT
	.BYTE	1		; COMPLEX COMMAND TYPE 3 - MULTIPLY
	.BYTE	1		; COMPLEX COMMAND TYPE 4 - DIVIDE
	.BYTE	1		; COMPLEX COMMAND TYPE 5 - AND
	.BYTE	1		; COMPLEX COMMAND TYPE 6 - INCLUSIVE OR
	.BYTE	1		; COMPLEX COMMAND TYPE 7 - EXCLUSIVE OR
	.BYTE	1		; COMPLEX COMMAND TYPE 10 - NEGATION
	.BYTE	1		; COMPLEX COMMAND TYPE 11 - COMPLEMENT
	.BYTE	1		; COMPLEX COMMAND TYPE 12 - STORE
	.BYTE	1		; COMPLEX COMMAND TYPE 13 - STORE DISPLACED
	.BYTE	-1		; COMPLEX COMMAND TYPE 14 - ILLEGAL
	.BYTE	-1		; COMPLEX COMMAND TYPE 15 - ILLEGAL
	.BYTE	5		; COMPLEX COMMAND TYPE 16 - FETCH GLOBAL
	.BYTE	204		; COMPLEX COMMAND TYPE 17 - FETCH REL. VALUE
	.BYTE	3		; COMPLEX COMMAND TYPE 20 - FETCH CONSTANT
	.BYTE	1		; COMPLEX COMMAND TYPE 21 - FETCH LIBRARY OFFSET
LGCPL=.-CPCNT-1			; LARGEST COMPLEX TYPE
 
;
; RLD BYTE COUNT TABLE.
;
; THIS BYTE TABLE CONTAINS THE NUMBER OF BYTES IN EACH RLD COMMAND
; TYPE. IT IS USED WHEN SCANNING AN RLD RECORD TO LOCATE ANY COMPLEX
; RLD STRINGS.
;
 
RLCNT:				;
	.BYTE	-1		; RLD TYPE 0 - ILLEGAL FORMAT
	.BYTE	4		; RLD TYPE 1 - INTERNAL RELOCATION
	.BYTE	6		; RLD TYPE 2 - GLOBAL RELOCATION
	.BYTE	4		; RLD TYPE 3 - INTERNAL DISPLACED REL.
	.BYTE	6		; RLD TYPE 4 - GLOBAL DISPLACED
	.BYTE	10		; RLD TYPE 5 - GLOBAL ADDITIVE
	.BYTE	10		; RLD TYPE 6 - GLOBAL ADDITIVE DISPLACED
	.BYTE	10		; RLD TYPE 7 - LOCATION COUNTER DEFINITION
	.BYTE	4		; RLD TYPE 10 - LOCATION COUNTER MOD.
	.BYTE	2		; RLD TYPE 11 - .LIMIT DIRECTIVE
	.BYTE	6		; RLD TYPE 12 - SECTION RELOCATION
	.BYTE	-1		; RLD TYPE 13 - ILLEGAL FORMAT
	.BYTE	6		; RLD TYPE 14 - SECTOR DISPLACED
	.BYTE	10		; RLD TYPE 15 - SECTOR ADDITIVE
	.BYTE	10		; RLD TYPE 16 - SECTOR ADDITIVE DISPL.
	.BYTE	200		; RLD TYPE 17 - COMPLEX RELOCATION
LGRLD=.-RLCNT-1			; LARGEST RLD RECORD TYPE
 
;+
; **-$SCRLD-SCAN AN RLD RECORD
;
; THIS SUBROUTINE IS CALLED TO SCAN AN RLD RECORD IN THE CORRECTION
; INPUT FILE IN ORDER TO RE-MAP COMPLEX RELOCATION COMMANDS THAT
; REFERENCE THE SECTOR NUMBER. THE CORRECTION FILE SECTOR MAPPING TABLE
; IS REFERENCED TO CONVERT THIS VALUE TO THE EQUIVALENT NUMBER FOR THE 
; MODIFIED OUTPUT FILE.
;
; INPUTS:
;
;	R0=ADDRESS OF CORRECTION INPUT BYTE-COUNT, RECORD ADDRESS DOUBLE-
;	   WORD.
;
;	$CRCMT=ADDRESS OF CORRECTION FILE SECTION MAPPING TABLE
;
; OUTPUTS:
;
;	THE SECTION NUMBER IN ALL APPROPRIATE RLD RECORDS
;	IS REMAPPED
;
; R0 AND R3 THROUGH R5 ARE UNMODIFIED.
;
;-
 
	.EVEN
 
$SCRLD::			;
	MOV	R0,-(SP)	; SAVE R0
	MOV	F.NRBD(R0),R2	; GET BYTE COUNT
	MOV	F.NRBD+2(R0),R1	; GET BUFFER ADDRESS
	CMPB	(R1)+,#RLD	; RLD RECORD TYPE?
	BNE	40$		; IF NE NO, EXIT
	INC	R1		; POINT TO FIRST RLD COMMAND
	SUB	#2,R2		; ADJUST BYTE COUNT
	BEQ	40$		; IF EQ DONE
10$:				;
	MOVB	(R1),R0		; GET RLD TYPE
	BIC	#177600,R0	; CLEAR EXTRANEOUS BITS
	CMP	R0,#LGRLD	; LEGAL RLD TYPE?
	BHI	ILFMT		; IF HI NO
	MOVB	RLCNT(R0),R0	; GET RLD BYTE COUNT
	BPL	20$		; IF PL, NOT ERROR OR COMPLEX
	ROLB	R0		; ILLEGAL FORMAT?
	BNE	ILFMT		; IF NE YES
	CALL	SCPL		; SCAN COMPLEX STRING
	TST	R2		; SET CONDITION CODES
	BR	30$		; CONTINUE
20$:				;
	ADD	R0,R1		; OFFSET TO NEXT COMMAND
	SUB	R0,R2		; ADJUST BYTE COUNT
30$:				;
	BNE	10$		; IF NE GO AGAIN
40$:				;
	MOV	(SP)+,R0	; RESTORE R0
	RETURN			;
 
;
; SCAN A COMPLEX STRING
;
 
SCPL:				;
	CMPB	(R1)+,(R1)+	; POINT TO FIRST COMPLEX COMMAND
	SUB	#2,R2		; ADJUST BYTE COUNT
10$:				;
	MOVB	(R1),R0		; GET COMMAND TYPE
	CMPB	R0,#LGCPL	; LEGAL COMMAND TYPE?
	BHI	ILFMT		; IF HIGH YES
	MOVB	CPCNT(R0),-(SP)	; GET COUNT
	BPL	20$		; IF PL UPDATE COUNT AND POINTERS
	CMPB	(SP),#-1	; ILLEGAL FORMAT
	BEQ	ILFMT		; IF EQ YES
	CLR	R0		; SET FOR MOVB WITH NO EXTEND
	BISB	1(R1),R0	; GET SECTION NUMBER
	ADD	$CRCMT,R0	; OFFSET TO MAPPING TABLE ENTRY
	MOVB	(R0),1(R1)	; RE-MAP SECTION NUMBER
20$:				;
	BIC	#177600,(SP)	; CLEAR EXTRANEOUS BITS
	MOVB	(R1),R0		; GET COMMAND TYPE AGAIN
	ADD	(SP),R1		; POINT TO NEXT COMMAND
	SUB	(SP)+,R2	; ADJUST BYTE COUNT
	CMP	R0,#STO		; STORE COMMAND
	BEQ	30$		; IF EQ YES EXIT
	CMP	R0,#STOD	; STORE DISPLACED?
	BNE	10$		; IF NE YES, GO AGAIN
30$:				;
	RETURN			;
 
;
; MODULE HAS ILLEGAL FORMAT
;
 
ILFMT:				;
	ERROR$	E$R1,S$V2,#$INFDB+F.FNB+N.FNAM ; CORR. FILE HAS ILLEGAL FORMAT
 
	.END
