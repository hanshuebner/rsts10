	.TITLE	SRCMN
	.IDENT	/00/
 
;
; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C. MONIA 11-NOV-75
;
; SEARCH  CONCATENATED OBJECT MODULES FOR SPECIFIED MODULE NAME
;
; MACRO LIBRARY CALLS
;
 
	.MCALL	CLOSE$
 
;
; LOCAL DATA
;
; DISPATCH TABLES FOR RECORD AND BLOCK TYPES
;
 
	.PSECT	$$DSPV,D,GBL,OVR
 
	.BLKW	1		; BLOCK TYPE 0 - ILLEGAL FORMAT
	.BLKW	1		; BLOCK TYPE 1 - START GSD
	.BLKW	1		; BLOCK TYPE 2 - END GSD
	.BLKW	1		; BLOCK TYPE 3 - TEXT
	.WORD	RPEAT		; BLOCK TYPE 4 - RLD
	.BLKW	1		; BLOCK TYPE 5 - ISD
	.BLKW	1		; BLOCK TYPE 6 - MODULE END
 
;
; GSD RECORD DISPATCH TABLE
;
 
	.WORD	MODN		; GSD RECORD TYPE 0 - MODULE NAME
 
	.PSECT
 
;
; NAME OF CORRECTION FILE MODULE
;
 
MODNM:	.BLKW	2		;
 
;
; INITIAL STACK POINTER
;
 
SPSAV:	.BLKW	1		;
 
;+
; **-$SRCMN-SEARCH FOR MODULE NAME
;
; THIS SUBROUTINE IS CALLED TO SEARCH A FILE OF CONCATENATED
; OBJECT MODULES FOR A MODULE WHOSE NAME MATCHES THAT
; OF THE CORRECTION INPUT FILE. IF THE SEARCH IS SUCCESSFUL THE
; OBJECT FILE IS POSITIONED TO THE BEGINNING OF THE SPECIFIED
; MODULE.
;
; INPUTS:
;
;	$CRFNB=CORRECTION INPUT FILE NAME BLOCK
;	$INFNB=INPUT FILE NAME BLOCK
;
; OUTPUTS:
;
;	INPUT FILE IS OPENED AND POSITIONED TO THE BEGINNING
;	OF THE SPECIFIED MODULE.
;
;-
 
$SRCMN::			;
	SAVRG			; SAVE NON-VOLATILE REGISTERS
	CLR	MODNM		; CLEAR MODULE NAME
	MOV	#$CRFNB,R0	; GET CORRECTION FILE NAME BLOCK
	CALL	10$		; SCAN CORRECTION FILE FOR NAME
	BCS	30$		; IF C/S FILE FORMAT ERROR
	CLOSE$	#$INFDB		; CLOSE CORRECTION INPUT FILE
	BCC	5$		; IF C/C CLOSED FILE OK
	ERROR$	E$R2,S$V2,#$INFDB+F.FNB+N.FNAM ; ERROR DURING CLOSE
5$:				;
	MOV	#$INFNB,R0	; GET INPUT FILE NAME BLOCK ADDRESS
10$:				;
	CALL	$OPNIN		; OPEN INPUT FILE
20$:				;
	MOV	#$INFDB,R0	; POINT TO INPUT FILE FDB
	CALL	.MARK		; MARK CURRENT POSITION IN FILE
	MOV	#$FILPT,R0	; GET ADDRESS TO STORE FILE POSITION
	MOV	R1,(R0)+	; SAVE FILE POSITION
	MOV	R2,(R0)+	; ...
	MOV	R3,(R0)		; ...
	MOV	SP,SPSAV	; MARK STACK
	CALL	$OBSCN		; SCAN OBJECT MODULE
	BCC	20$		; IF C/C SCAN NEXT MODULE
	MOV	#$INFDB,R0	; GET INPUT FILE FDB
	CMPB	#IE.EOF,F.ERR(R0) ; END OF FILE?
	SEC			; ASSUME YES
	BEQ	40$		; IF EQ YES
30$:				;
	ERROR$	E$R1,S$V2,#$INFDB+F.FNB+N.FNAM ; INPUT FILE HAS ILLEGAL FORMAT
40$:				;
	MOV	MODNM,R1	; SEARCHING FOR MODULE?
	BNE	50$		; IF NE YES, NOT FOUND
	RETURN			;
 
;
; UNABLE TO LOCATE SPECIFIED MODULE
;
 
50$:				;
	ERROR$	E$R5,S$V2,#MODNM ;
 
 
;
; PROCESS MODULE NAME
;
 
MODN:				;
	MOV	#MODNM,R1	; POINT TO MODULE NAME STORAGE
	TST	(R1)		; SEARCHING FOR NAME?
	BNE	10$		; IF NE YES
	MOV	S$YM(R0),(R1)+	; SET NAME
	MOV	S$YM+2(R0),(R1)	; ...
	BR	20$		;
10$:				;
	CMP	S$YM(R0),(R1)+	; TEST FIRST PART OF NAME
	BNE	30$		; IF NE CONTINUE
	CMP	S$YM+2(R0),(R1)	; TEST SECOND PART OF NAME
	BNE	30$		;
	ADD	#S$YM,R0	; OFFSET TO DESCRIPTOR
	MOV	#$MODNM,R2	; POINT TO MODULE NAME STORAGE
 
	.REPT	4
	MOV	(R0)+,(R2)+	; SAVE MODULE NAME
	.ENDR
 
	MOV	#$FILPT,R0	; GET ADDRESS CONTAINING FILE POSITION
	MOV	(R0)+,R1	; GET FILE POSITION
	MOV	(R0)+,R2	; ...
	MOV	(R0)+,R3	; ...
	MOV	#$INFDB,R0	; GET FDB ADDRESS
	CALL	.POINT		; POSITION FILE
	BCC	20$		; IF C/C POSITIONED OK
	ERROR$	E$R3,S$V2,#$INFDB+F.FNB+N.FNAM ; ERROR POSITIONING FILE
20$:				;
	MOV	SPSAV,SP	; CLEAN STACK
30$:				;
	RETURN			;
 
;
; FORCE READ OF NEXT RECORD
;
 
RPEAT:				;
	CLR	$NBYTE		; FORCE READ OF NEXT RECORD
	RETURN
 
	.END
