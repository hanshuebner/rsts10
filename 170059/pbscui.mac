.INCLUDE	%CMN:COMMON%
TITLE	PBSCUI,<PBS CUI COMMAND TABLES>,0D,02-AUG-91,PRL/ACT/DBM/BGN/SEL

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	PBSCUI Edit History
;+
; EDIT	BY   DATE	REASON
;*********************  V8.0
;  001	PRL  03-Jul-82	Creation
;  002	PRL  22-Nov-82	Add /[NO]FLAG_PAGES
;  003	PRL  28-Nov-82	Add DELETE/PRINTER & DELETE/DEVICE
;  004	PRL  01-Dec-82	Allow /FORMS=(A,...) for INIT/PRINTER
;  005	PRL  16-Dec-82	Change /ENTRY args to parameter list
;  006	PRL  19-Dec-82	Fix command codes to return separate codes
;			for each command (SHOW QUEUE, DELETE/JOB, etc.)
;  007	PRL  30-Dec-82	Add /QUEUE, /OWNER, /NAME qualifiers for PRINT
;  008	PRL  06-Jan-83	Allow "NO" prefix in /ABORT
;  009	PRL  09-Jan-83	Fix /FORMS qualifier for START/PRINTER command
;  010	ACT  31-Jan-83	Add /[NO]SHARABLE
;*********************  V9.0
;  011	PRL  03-Jul-83	Update for V9.0
;  012	PRL  30-Aug-83	Add SUBMIT command
;  013	PRL  07-Nov-83	Update for multi-keyword commands
;  014	PRL  09-Jan-84	Update for new commands
;  015	ACT  31-Jan-84	Remove /OWNER qualifier for PRINT
;  016	ACT  06-Feb-84	Add OPEN/QUEUE command
;  017	PRL  19-Jun-84	General cleanup
;  018	PRL  23-Jul-84	Add CONF clauses to PARMs (new feature)
;  019	PRL  03-Aug-84	Change /NOHOLD -> /RELEASE
;  020	PRL  25-Sep-84	Add /[NO]CONTROLS to INITIALIZE/SERVER and SET SERVER
;  021	PRL  04-Oct-84	Add $DISALLOW code to report conflicting elements
;  022	PRL  29-Jan-85	Remove /USER qualifier from SUBMIT & SET ENTRY cmds
;  023	PRL  26-Feb-85	Require args to START/QUEUE/MANAGER qualifiers
;  024	PRL  21-Mar-85	Remove /ALL from SET QUEUE and SET SERVER commands
;*********************  V9.1
;  025	PRL  10-May-85	Disallow 'NO' on /AFTER qualifier for SUBMIT command
;  026	PRL  03-Sep-85	Make argument optional on /LOG_FILE qualifier
;
;			[RSTS/E V9.6]
;  027	DBM  16-Feb-88	Add /[NO]WRAP
;  028  BGN  26-FEB-88  Add SYNCHRONIZE command
;
;			[RSTS/E V10.0]
;  029  PRL  27-Jun-89	Add /STATUS qualifier for SHOW ENTRY
;  030  PRL  20-Jul-89	Add /NOTIFY qualifier for PRINT and SUBMIT
;  031	PRL  14-Aug-89	Allow /STATUS arg(s) to be optional
;  032	PRL  15-Aug-89	Add /BY_JOB_STATUS qualifier for SHOW ENTRY
;  033	PRL  03-Sep-89	Make /STATUS and /BY_JOB_STATUS hard conflicting
;  034  SEL  17-Nov-89	Add /OUTPUT qualifier to the SHOW commands
;  035	PRL  02-Jul-90	Add ABORTING argument keyword for /STATUS
;
;			[RSTS/E V10.1]
;  036	PRL  17-Mar-91	Add /[NO]NOTIFY qualifier to SET ENTRY command
;-

.SBTTL	Define and order the .PSECTS

	DEFORG	PBSCUI

.SBTTL	Define PBSCUI  Macros

.LIBRARY	%CUI:CUIMLB%

	.MCALL	$CUI
	$CUI	TABLE				;include the CUI tables

.SBTTL	DEFINE PBSCUI MACROS

	.MACRO	CONF	ELEM1,ELEM2
	 $FETCQ	ELEM1
	 $IF	PRESENT
	 $DO
	 MOV	U.POS(R4),CONFPOS
	 $ENDDO
	 $DISALLOW <ELEM2>,U.CNFE
	 $DO
	 CLR	CONFPOS
	 $ENDDO
	 $ENDIF
	.ENDM	CONF

GLOBAL	<CONFPOS,U.CNFE>

.SBTTL	Define QUEUE command table for CUI

CMDTBL::					;command table entry
	$THR
	$RDCMD	PROMPT=CMD.P			;read queue command
	$PARKEY					;parse command keyword
	$ONKEY	ASNQ.C,ASNQUE			;  ASSIGN/QUEUE command
	$ONKEY	CLSQ.C,CLSQUE			;  CLOSE/QUEUE command
	$ONKEY	DBUG.C,DBUG			;  DEBUG command
	$ONKEY	DSNQ.C,DSNQUE			;  DEASSIGN/QUEUE command
	$ONKEY	DELE.C,DELENT			;  DELETE/ENTRY command
	$ONKEY	DELQ.C,DELQUE			;  DELETE/QUEUE command
	$ONKEY	DELS.C,DELSER			;  DELETE/SERVER command
	$ONKEY	INIQ.C,INIQUE			;  INITIALIZE/QUEUE command
	$ONKEY	INIS.C,INISER			;  INITIALIZE/SERVER command
	$ONKEY	NDBG.C,NODEBG			;  NODEBUG command
	$ONKEY	OPNQ.C,OPNQUE			;  OPEN/QUEUE command
	$ONKEY	PRNT.C,PRINT			;  PRINT command
	$ONKEY	SETE.C,SETENT			;  SET ENTRY command
	$ONKEY	SETQ.C,SETQUE			;  SET QUEUE command
	$ONKEY	SETS.C,SETSER			;  SET SERVER command
	$ONKEY	SHOE.C,SHOENT			;  SHOW ENTRY command
	$ONKEY	SHOX.C,SHOENT			;  SHOW ENTRIES command
	$ONKEY	SHOQ.C,SHOQUE			;  SHOW QUEUES command
	$ONKEY	SHOS.C,SHOSER			;  SHOW SERVERS command
	$ONKEY	STRM.C,STRPBS			;  START/QUEUE/MANAGER cmd
	$ONKEY	STRQ.C,STRQUE			;  START/QUEUE command
	$ONKEY	STRS.C,STRSER			;  START/SERVER command
	$ONKEY	STPM.C,STPPBS			;  STOP/QUEUE/MANAGER cmd
	$ONKEY	STPQ.C,STPQUE			;  STOP/QUEUE command
	$ONKEY	STPS.C,STPSER			;  STOP/SERVER command
	$ONKEY	SBMT.C,SUBMIT			;  SUBMIT command
	$ONKEY	SYNC.C,SYNCHR			;  SYNCHRONIZE command	;028
	$ENDKEY
	$ENDTHR

.SBTTL	Define ASSIGN/QUEUE command

ASNQUE:	$THR
	$DEFCMD	U.CMDC=ASNQ.C			; define ASSIGN/QUEUE command
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	;  parse queue-name parm
	$PARM	SER.T,TYPE=U$ANY,PROMPT=SER.P	;  parse device parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define CLOSE/QUEUE Command

CLSQUE:	$THR
	$DEFCMD	U.CMDC=CLSQ.C			;define CLOSE/QUEUE command
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	;    parse queue-name parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define DEASSIGN/QUEUE command

DSNQUE:	$THR
	$DEFCMD	QUAL=DSNQQL,U.CMDC=DSNQ.C	; define DEASSIGN/QUEUE command
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	;  parse queue-name parm
	$FETCQ	ALL.Q				;fetch /ALL qualifier
	$IF	PRESENT				;if present,
	$PARM	SER.T,TYPE=U$ANY,FLAGS=PF.OPT	; parse optional server parm
	$ELSE					;else,
	$PARM	SER.T,TYPE=U$ANY,PROMPT=SER.P	; parse required server parm
	$ENDIF					;end if
	$ENDCMD
	$ENDTHR

.SBTTL	Define DEASSIGN/QUEUE Command Qualifiers

DSNQQL:	DEFQUAL	ALL.Q				;/ALL
	ENDQUAL

.SBTTL	Define DEBUG command

DBUG:	$THR
	$DEFCMD	QUAL=DBUGQL,U.CMDC=DBUG.C	; define DBUG command
	$ENDCMD
	$ENDTHR

.SBTTL	Define DEBUG Command Qualifiers

DBUGQL:	DEFQUAL	SND.Q,FLAGS=QF.NEG		;/[NO]SEND
	ENDQUAL

.SBTTL	Define DELETE/ENTRY Command

DELENT:	$THR
	$DEFCMD	QUAL=DELEQL,U.CMDC=DELE.C	; define DELETE/ENTRY command
	$PARM	ENT.T,TYPE=U$ANY,FLAGS=PF.COL,,PROMPT=ENT.P ;   parse entry parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define DELETE/ENTRY Command Qualifiers

DELEQL:	DEFQUAL	BAT.Q,CONF=PRT.Q	;/BATCH
	DEFQUAL	PRT.Q,CONF=BAT.Q	;/PRINT
	ENDQUAL

.SBTTL	Define DELETE/QUEUE Command

DELQUE:	$THR
	$DEFCMD	U.CMDC=DELQ.C			; define DELETE/QUEUE command
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	;   parse queue-name parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define DELETE/SERVER Command

DELSER:	$THR
	$DEFCMD	U.CMDC=DELS.C			; define DELETE/SERVER command
	$PARM	SER.T,TYPE=U$ANY,PROMPT=SER.P	; parse device parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define INITIALIZE/QUEUE Command

INIQUE:	$THR
	$DEFCMD	QUAL=INIQQL,U.CMDC=INIQ.C 	; define INITIALIZE/QUEUE cmd
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	;   parse queue parm
	$ENDCMD
	CONF	PRT.E,BAT.E			; check for conflicts
	$ENDTHR

.SBTTL	Define INITIALIZE/QUEUE Command Qualifiers

INIQQL:	DEFQUAL	BAT.Q,CLASS=BAT.E,CONF=PRN.Q	;/BATCH
	DEFQUAL	CLS.Q,CONF=OPN.Q		;/CLOSE
	DEFQUAL	CPU.Q,FLAGS=QF.ALIS,ARG=REQ,CLASS=BAT.E ;/CPU_LIMIT
	 DEFARG	TAG=MAX.K,ARG=REQ		;  =MAXIMUM
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U16,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TAG=DFL.K,ARG=REQ		;  =DEFAULT
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U16,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U16,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	DFL.Q				;/DEFAULT
	DEFQUAL	FRM.Q,ARG=REQ,CLASS=PRT.E	;/FORMS
	 DEFARG	TYPE=U$ANY			;  =form-name
	 ENDARG
	DEFQUAL	OPN.Q,CONF=CLS.Q		;/OPEN
	DEFQUAL	PGL.Q,FLAGS=QF.ALIS,ARG=REQ,CLASS=PRT.E ;/PAGE_LIMIT
	 DEFARG	TAG=MAX.K,ARG=REQ		;  =MAXIMUM
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U32,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TAG=DFL.K,ARG=REQ		;  =DEFAULT
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U32,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U32,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	PRN.Q,CLASS=PRT.E,CONF=BAT.Q	;/PRINT
	DEFQUAL	PTY.Q,FLAGS=QF.ALIS,ARG=REQ	;/PRIORITY
	 DEFARG	TAG=MAX.K,ARG=REQ		;  =MAXIMUM
	  DEFARG	TYPE=U$U8,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TAG=DFL.K,ARG=REQ		;  =DEFAULT
	  DEFARG	TYPE=U$U8,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TYPE=U$U8,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	PRV.Q,FLAGS=QF.ALIS,ARG=REQ	 ;/PRIVILEGES
	 DEFARG	TYPE=U$ANY			; =(priv[,...])
	 ENDARG
	DEFQUAL	TIM.Q,FLAGS=QF.ALIS,ARG=REQ,CLASS=BAT.E ;/TIME_LIMIT
	 DEFARG	TAG=MAX.K,ARG=REQ		;  =MAXIMUM
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U16,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TAG=DFL.K,ARG=REQ		;  =DEFAULT
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U16,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U16,MINVAL=1		;  =n
	 ENDARG
	ENDQUAL

.SBTTL	Define INITIALIZE/SERVER Command

INISER:	$THR
	$DEFCMD	QUAL=INISQL,U.CMDC=INIS.C	; define INITIALIZE/SERVER cmd
	$PARM	SER.T,TYPE=U$ANY,PROMPT=SER.P	;   parse server parm
	$ENDCMD
	CONF	PRT.E,BAT.E			;test for conflicting quals
	$ENDTHR

.SBTTL	Define INITIALIZE/SERVER command qualifiers

INISQL:	DEFQUAL	CTL.Q,FLAGS=QF.NEG,ARG=OPT,CLASS=PRT.E ;/[NO]CONTROLS
	 DEFARG	UPA.K				;  =UP_ARROW
	 ENDARG
	DEFQUAL	FRM.Q,ARG=REQ,CLASS=PRT.E	;/FORMS
	 DEFARG	TYPE=U$ANY			;  =form-name
	 ENDARG
	DEFQUAL	PRI.Q,ARG=REQ,CLASS=BAT.E	;/PRIORITY
	 DEFARG	TYPE=U$S8,MINVAL=-120,MAXVAL=120 ;  =n
	 ENDARG
	DEFQUAL	RNB.Q,ARG=REQ,CLASS=BAT.E	;/RUN_BURST
	 DEFARG	TYPE=U$U8,MINVAL=1,MAXVAL=127	;   =n
	 ENDARG
	DEFQUAL	TEN.Q,CLASS=PRT.E		;/TENTATIVE
	DEFQUAL SHR.Q,FLAGS=QF.NEG		;/[NO]SHAREABLE
	ENDQUAL

.SBTTL	Define NODEBUG command

NODEBG:	$THR
	$DEFCMD	QUAL=DBUGQL,U.CMDC=NDBG.C	; define NODEBUG command
	$ENDCMD
	$ENDTHR

.SBTTL	Define OPEN/QUEUE Command

OPNQUE:	$THR
	$DEFCMD	U.CMDC=OPNQ.C			;define OPEN/QUEUE command
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	;    parse queue-name parm
	$ENDCMD
	$ENDTHR

.SBTTL	Process PRINT command

PRINT:	$THR
	$DEFCMD	QUAL=PRNTQL,U.CMDC=PRNT.C	;define PRINT command
	$PARM	FIL.T,TYPE=LF.N.W,OCCURS=99.,PROMPT=FIL.P ;  parse file-spec
	$PARM	ENT.T,TYPE=U$ANY,QUAL=PRNTQP,FLAGS=PF.OPT ;  parse entry parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define PRINT Command/File Qualifiers

; Define PRINT file qualifiers

PRNTQL:	DEFQUAL	CNV.Q,FLAGS=QF.NEG!QF.PARM	;/[NO]CONVERT
	DEFQUAL COP.Q,FLAGS=QF.PARM,ARG=REQ	;/COPIES
	 DEFARG	TYPE=U$U8,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL DEL.Q,FLAGS=QF.NEG!QF.PARM	;/[NO]DELETE
	DEFQUAL	FEE.Q,FLAGS=QF.NEG!QF.PARM	;/[NO]FEED
	DEFQUAL	FPG.Q,FLAGS=QF.NEG!QF.PARM	;/[NO]FLAG_PAGES
	DEFQUAL	TRN.Q,FLAGS=QF.NEG!QF.PARM	;/[NO]TRUNCATE
	DEFQUAL	RAP.Q,FLAGS=QF.NEG!QF.PARM	;/[NO]WRAP		;027

; Define PRINT command qualifiers

PRNTQP:	DEFQUAL	AFT.Q,ARG=REQ			;/AFTER
	 DEFARG	TYPE=U$TIME			;  =date/time
	 ENDARG
	DEFQUAL	FRM.Q,ARG=REQ			;/FORMS
	 DEFARG	TYPE=U$ANY			;   =form-name
	 ENDARG
	DEFQUAL	HLD.Q				;/HOLD			;019
	DEFQUAL	JBC.Q,ARG=REQ			;/JOB_COUNT
	 DEFARG	TYPE=U$U8,MINVAL=1		;   =n
	 ENDARG
	DEFQUAL	NAM.Q,ARG=REQ			;/NAME
	 DEFARG	TYPE=U$ANY			;  =entry-name
	 ENDARG
	DEFQUAL	NTF.Q,FLAGS=QF.NEG		;/[NO]NOTIFY		;030
	DEFQUAL	OWN.Q,ARG=REQ			;/OWNER
	 DEFARG	TYPE=U$ACC			;  =ppn
	 ENDARG
	DEFQUAL	PGL.Q,ARG=REQ			;/PAGE_LIMIT
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U32,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL PRI.Q,ARG=REQ			;/PRIORITY
	 DEFARG	TYPE=U$U8,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	QUE.Q,ARG=REQ			;/QUEUE
	 DEFARG	TYPE=U$ANY			;  =queue-name
	 ENDARG
	ENDQUAL

.SBTTL	Define SET ENTRY Command

SETENT:	$THR
	$DEFCMD	QUAL=SETEQL,U.CMDC=SETE.C	;define SET ENTRY cmd
	$PARM	ENT.T,TYPE=U$ANY,PROMPT=ENT.P	; parse entry parm
	$ENDCMD
	CONF	PRT.E,BAT.E			;test for conflicting quals
	$ENDTHR

.SBTTL	Define SET ENTRY Command Qualifiers

SETEQL:	DEFQUAL	AFT.Q,FLAGS=QF.NEG,ARG=REQ	;/AFTER
	 DEFARG	TYPE=U$TIME			;  =date/time
	 ENDARG
	DEFQUAL	BAT.Q,CONF=PRT.Q		;/BATCH
	DEFQUAL	CPU.Q,ARG=REQ,CLASS=BAT.E	;/CPU_LIMIT
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U16,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	FRM.Q,ARG=REQ,CLASS=PRT.E	;/FORMS
	 DEFARG	TYPE=U$ANY			;  =form-name
	 ENDARG
	DEFQUAL	HLD.Q,CONF=RLS.Q		;/HOLD			;019
	DEFQUAL	JBC.Q,ARG=REQ,CLASS=PRT.E	;/JOB_COUNT
	 DEFARG	TYPE=U$U8,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	NTF.Q,FLAGS=QF.NEG		;/[NO]NOTIFY		;036
	DEFQUAL	PGL.Q,ARG=REQ,CLASS=PRT.E	;/PAGE_LIMIT
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U32,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	PRN.Q,CONF=BAT.Q		;/PRINT
	DEFQUAL PTY.Q,ARG=REQ			;/PRIORITY
	 DEFARG	TYPE=U$U8,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	RLS.Q,CONF=HLD.Q		;/RELEASE		;019
	DEFQUAL	TIM.Q,ARG=REQ,CLASS=BAT.E	;/TIME_LIMIT
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U16,MINVAL=1		;  =n
	 ENDARG
	ENDQUAL

.SBTTL	Define SET QUEUE command

SETQUE:	$THR
	$DEFCMD	QUAL=SETQQL,U.CMDC=SETQ.C	; define SET QUEUE cmd
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	; parse required queue parm
	$ENDCMD
	CONF	PRT.E,BAT.E			;test for conflicting quals
	$ENDTHR

.SBTTL	Define SET QUEUE Command Qualifiers

SETQQL:	DEFQUAL	BAT.Q,CLASS=BAT.E,CONF=PRN.Q	;/BATCH
	DEFQUAL	CPU.Q,FLAGS=QF.ALIS,ARG=REQ,CLASS=BAT.E	;/CPU_LIMIT
	 DEFARG	TAG=MAX.K,ARG=REQ		;  =MAXIMUM
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U16,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TAG=DFL.K,ARG=REQ		;  =DEFAULT
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U16,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U16,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	DFL.Q,FLAGS=QF.NEG		;/[NO]DEFAULT
	DEFQUAL	FRM.Q,ARG=REQ,CLASS=PRT.E	;/FORMS
	 DEFARG	TYPE=U$ANY			;  =form-name
	 ENDARG
	DEFQUAL	PGL.Q,FLAGS=QF.ALIS,ARG=REQ,CLASS=PRT.E ;/PAGE_LIMIT
	 DEFARG	TAG=MAX.K,ARG=REQ		;  =MAXIMUM
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U32,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TAG=DFL.K,ARG=REQ		;  =DEFAULT
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U32,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U32,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	PRN.Q,CLASS=PRT.E,CONF=BAT.Q	;/PRINT
	DEFQUAL	PTY.Q,FLAGS=QF.ALIS,ARG=REQ	;/PRIORITY
	 DEFARG	TAG=MAX.K,ARG=REQ		;  =MAXIMUM
	  DEFARG	TYPE=U$U8,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TAG=DFL.K,ARG=REQ		;  =DEFAULT
	  DEFARG	TYPE=U$U8,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TYPE=U$U8,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	PRV.Q,FLAGS=QF.NEG!QF.ALIS,ARG=REQ ;/[NO]PRIVILEGES
	 DEFARG	TYPE=U$ANY			; =(priv[,...])
	 ENDARG
	DEFQUAL	TIM.Q,FLAGS=QF.ALIS,ARG=REQ,CLASS=BAT.E ;/TIME_LIMIT
	 DEFARG	TAG=MAX.K,ARG=REQ		;  =MAXIMUM
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U16,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	TAG=DFL.K,ARG=REQ		;  =DEFAULT
	  DEFARG	UNL.K			;    =UNLIMITED
	  DEFARG	TYPE=U$U16,MINVAL=1	;    =n
	  ENDARG
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U16,MINVAL=1		;  =n
	 ENDARG
	ENDQUAL

.SBTTL	Define SET SERVER Command

SETSER:	$THR
	$DEFCMD	QUAL=SETSQL,U.CMDC=SETS.C	; define SET SERVER command
	$PARM	SER.T,TYPE=U$ANY,PROMPT=SER.P	; parse required server parm
	$ENDCMD
	CONF	PRT.E,BAT.E			;test for conflicting quals
	$ENDTHR

.SBTTL	Define SET SERVER Command Qualifiers

SETSQL:	DEFQUAL	BAT.Q,CLASS=BAT.E,CONF=PRN.Q	;/BATCH
	DEFQUAL	CTL.Q,FLAGS=QF.NEG,ARG=OPT,CLASS=PRT.E ;/[NO]CONTROLS
	 DEFARG	UPA.K				;  =UP_ARROW
	 ENDARG
	DEFQUAL	FRM.Q,ARG=REQ,CLASS=PRT.E	;/FORMS
	 DEFARG	TYPE=U$ANY			;  =form-name
	 ENDARG
	DEFQUAL	PRN.Q,CLASS=PRT.E,CONF=BAT.Q	;/PRINT
	DEFQUAL	PTY.Q,ARG=OPT,CLASS=BAT.E	;/PRIORITY
	 DEFARG	TYPE=U$S8,MINVAL=-120,MAXVAL=120 ;  =n
	 ENDARG
	DEFQUAL	RNB.Q,ARG=OPT,CLASS=BAT.E	;/RUN_BURST
	 DEFARG	TYPE=U$U8,MINVAL=1,MAXVAL=127	;   =n
	 ENDARG
	DEFQUAL SHR.Q,FLAGS=QF.NEG		;/[NO]SHAREABLE
	ENDQUAL

.SBTTL	Define SHOW ENTRY (SHOW ENTRIES) command

SHOENT:	$THR
	$DEFCMD	QUAL=SHOEQL,U.CMDC=SHOE.C	; define SHOW ENTRY command
	$PARM	ENT.T,TYPE=U$ANY,FLAGS=PF.OPT	;  parse entry parm
	$ENDCMD
	CONF	STS.Q,BYJ.Q			;test for conflicting quals ;033
	$ENDTHR

.SBTTL	Define SHOW ENTRY command qualifiers

SHOEQL:	DEFQUAL ALL.Q				;/ALL
	DEFQUAL	BAT.Q,CONF=PRT.Q		;/BATCH
	DEFQUAL	BRF.Q,CONF=FUL.Q		;/BRIEF
	DEFQUAL FIL.Q				;/FILES
	DEFQUAL	FUL.Q,CONF=BRF.Q		;/FULL
	DEFQUAL	OUT.Q,FLAGS=QF.NEG,ARG=OPT	;/[NO]OUTPUT=FILENAME	;034+
	 DEFARG TYPE=LF.N			;LOCAL FILENAME REQ.
	 ENDARG								;034-
	DEFQUAL	PRT.Q,CONF=BAT.Q		;/PRINT
	DEFQUAL	STS.Q,FLAGS=QF.ALIS,ARG=OPT	;/STATUS		;029
	 DEFARG	ABT.K				;  =ABORTING		;035
	 DEFARG	AFT.K				;  =AFTER		;029
	 DEFARG	EXE.K				;  =EXECUTING		;032
	 DEFARG	FRM.K				;  =FORMS		;029
	 DEFARG	HLD.K				;  =HOLDING		;032
	 DEFARG	PND.K				;  =PENDING		;032
	 DEFARG	RDY.K				;  =READY		;029
	 DEFARG	STR.K				;  =STARTED		;029
	 DEFARG	TIM.K				;  =TIMED_RELEASE	;032
	 ENDARG
	DEFQUAL	BYJ.Q,FLAGS=QF.ALIS,ARG=OPT	;/BY_JOB_STATUS		;032
	 DEFARG	ABT.K				;  =ABORTING		;035
	 DEFARG	AFT.K				;  =AFTER		;032
	 DEFARG	EXE.K				;  =EXECUTING		;032
	 DEFARG	FRM.K				;  =FORMS		;032
	 DEFARG	HLD.K				;  =HOLDING		;032
	 DEFARG	PND.K				;  =PENDING		;032
	 DEFARG	RDY.K				;  =READY		;032
	 DEFARG	STR.K				;  =STARTED		;032
	 DEFARG	TIM.K				;  =TIMED_RELEASE	;032
	 ENDARG
	ENDQUAL

.SBTTL	Define SHOW QUEUE command

SHOQUE:	$THR
	$DEFCMD	QUAL=SHOQQL,U.CMDC=SHOQ.C	; define SHOW QUEUE command
	$PARM	QUE.T,TYPE=U$ANY,FLAGS=PF.OPT	;    parse queue parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define SHOW QUEUE command qualifiers

SHOQQL:	DEFQUAL ALL.Q				;/ALL
	DEFQUAL	BAT.Q,CONF=PRT.Q		;/BATCH
	DEFQUAL	BRF.Q,CONF=FUL.Q		;/BRIEF
	DEFQUAL	FUL.Q,CONF=BRF.Q		;/FULL
	DEFQUAL	OUT.Q,FLAGS=QF.NEG,ARG=OPT	;/[NO]OUTPUT=FILENAME	;034+
	 DEFARG TYPE=LF.N			;LOCAL FILENAME REQ.
	 ENDARG								;034-
	DEFQUAL	PRT.Q,CONF=BAT.Q		;/PRINT
	ENDQUAL

.SBTTL	Define SHOW SERVER command

SHOSER:	$THR
	$DEFCMD	QUAL=SHOSQL,U.CMDC=SHOS.C	; define SHOW SERVER command
	$PARM	SER.T,TYPE=U$ANY,FLAGS=PF.OPT	;   parse server parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define SHOW SERVER command qualifiers

SHOSQL:	DEFQUAL ALL.Q				;/ALL
	DEFQUAL	BAT.Q,CONF=PRT.Q		;/BATCH
	DEFQUAL	BRF.Q,CONF=FUL.Q		;/BRIEF
	DEFQUAL	FUL.Q,CONF=BRF.Q		;/FULL
	DEFQUAL	OUT.Q,FLAGS=QF.NEG,ARG=OPT	;/[NO]OUTPUT=FILENAME	;034+
	 DEFARG TYPE=LF.N			;LOCAL FILENAME REQ.
	 ENDARG								;034-
	DEFQUAL	PRT.Q,CONF=BAT.Q		;/PRINT
	ENDQUAL

.SBTTL	Define START/QUEUE command

STRQUE:	$THR
	$DEFCMD	U.CMDC=STRQ.C			;  define START/QUEUE cmd
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	;    parse queue parm
	$ENDTHR

.SBTTL	Define START/QUEUE/MANAGER command

STRPBS:	$THR
	$DEFCMD	QUAL=STRMQL,U.CMDC=STRM.C	;  define START/QUEUE/MANAGER command
	$ENDTHR

.SBTTL	Define START/QUEUE/MANAGER Command Qualifiers

STRMQL:	DEFQUAL	PRI.Q,ARG=REQ,CLASS=BAT.E	;/PRIORITY		;023
	 DEFARG	TYPE=U$S8,MINVAL=-120,MAXVAL=120 ;  =n
	 ENDARG
	DEFQUAL	RNB.Q,ARG=REQ,CLASS=BAT.E	;/RUN_BURST		;023
	 DEFARG	TYPE=U$U8,MINVAL=1,MAXVAL=127	;   =n
	 ENDARG
	ENDQUAL

.SBTTL	Define START/SERVER Command

STRSER:	$THR
	$DEFCMD	QUAL=STRSQL,U.CMDC=STRS.C	;define START/SERVER command
	$PARM	SER.T,TYPE=U$ANY,PROMPT=SER.P	;  parse server parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define START/SERVER Command Qualifiers

STRSQL:	DEFQUAL	BWD.Q,ARG=OPT,CLASS=RST.E,CONF=RST.E ;/BACKSPACE
	 DEFARG	TYPE=U$U32,MINVAL=1		;  [=n]
	 ENDARG
	DEFQUAL	FWD.Q,ARG=OPT,CLASS=RST.E,CONF=RST.E ;/FORWARDSPACE
	 DEFARG	TYPE=U$U32,MINVAL=1		;  [=n]
	 ENDARG
	DEFQUAL	NXJ.Q,CLASS=RST.E,CONF=RST.E 	;/NEXT_JOB
	DEFQUAL	PAG.Q,ARG=REQ,CLASS=RST.E,CONF=RST.E ;/PAGE
	 DEFARG	TYPE=U$U32,MINVAL=1		;  [=n]
	 ENDARG
	DEFQUAL	RST.Q,CLASS=RST.E,CONF=RST.E 	;/RESTART
	DEFQUAL	TOP.Q,CLASS=RST.E,CONF=RST.E 	;/TOP_OF_FILE
	ENDQUAL

.SBTTL	Define STOP/QUEUE Command

STPQUE:	$THR
	$DEFCMD	U.CMDC=STPQ.C			;define STOP/QUEUE command
	$PARM	QUE.T,TYPE=U$ANY,PROMPT=QUE.P	;  parse queue parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define STOP/QUEUE/MANAGER Command

STPPBS:	$THR
	$DEFCMD	QUAL=STPMQL,U.CMDC=STPM.C	;  define STOP/QUEUE/MANAGER command
	$ENDCMD
	$ENDTHR

.SBTTL	Define STOP/QUEUE/MANAGER Command Qualifiers

STPMQL:	DEFQUAL	ABO.Q,FLAGS=QF.NEG		;/[NO]ABORT
	ENDQUAL

.SBTTL	Define STOP/SERVER Command

STPSER:	$THR
	$DEFCMD	QUAL=STPSQL,U.CMDC=STPS.C	;define STOP/SERVER command
	$PARM	SER.T,TYPE=U$ANY,PROMPT=SER.P	;  parse server parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define STOP/SERVER Command Qualifiers

STPSQL:	DEFQUAL	JEN.Q,CLASS=STP.E,CONF=STP.E	;/JOB_END
	DEFQUAL	FEN.Q,CLASS=STP.E,CONF=STP.E	;/FILE_END
	DEFQUAL	PEN.Q,CLASS=STP.E,CONF=STP.E	;/PAGE_END
	ENDQUAL

.SBTTL	Define SUBMIT Command

SUBMIT:	$THR
	$DEFCMD	QUAL=SBMTQL,U.CMDC=SBMT.C	;define SUBMIT command
	$PARM	FIL.T,TYPE=LF.N.W,OCCURS=11,PROMPT=FIL.P ;  parse file-spec
	$PARM	ENT.T,TYPE=U$ANY,QUAL=SBMTQP,FLAGS=PF.OPT ;  parse entry-spec parm
	$ENDCMD
	$ENDTHR

.SBTTL	Define SUBMIT Command/File Qualifiers

; Define SUBMIT File Qualifiers

SBMTQL: DEFQUAL DEL.Q,FLAGS=QF.NEG!QF.PARM	;/[NO]DELETE

; Define SUBMIT Command Qualifiers

SBMTQP:	DEFQUAL	AFT.Q,ARG=REQ			;/AFTER
	 DEFARG	TYPE=U$TIME			;  =date/time
	 ENDARG
	DEFQUAL	CPU.Q,ARG=REQ			;/CPU_LIMIT
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U16,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	HLD.Q				;/HOLD			;019
	DEFQUAL	LGD.Q,FLAGS=QF.NEG		;/[NO]LOG_DELETE
	DEFQUAL	LGF.Q,FLAGS=QF.NEG,ARG=OPT	;/[NO]LOG_FILE		;026
	 DEFARG	TYPE=LF.N.W			;  =filespec
	 ENDARG
	DEFQUAL	LGQ.Q,FLAGS=QF.NEG,ARG=OPT	;/[NO]LOG_QUEUE
	 DEFARG	TYPE=U$ANY			;  =queue-name
	 ENDARG
	DEFQUAL	NAM.Q,ARG=REQ			;/NAME
	 DEFARG	TYPE=U$ANY			;  =entry-name
	 ENDARG
	DEFQUAL	NTF.Q,FLAGS=QF.NEG		;/[NO]NOTIFY		;030
	DEFQUAL	OWN.Q,ARG=REQ			;/OWNER
	 DEFARG	TYPE=U$ACC			;  =ppn
	 ENDARG
	DEFQUAL	PAR.Q,FLAGS=QF.ALIS,ARG=REQ	;/PARAMETERS
	 DEFARG	TYPE=U$ANY			;  =(parm[,...])
	 ENDARG
	DEFQUAL PRI.Q,ARG=REQ			;/PRIORITY
	 DEFARG	TYPE=U$U8,MINVAL=1		;  =n
	 ENDARG
	DEFQUAL	QUE.Q,ARG=REQ			;/QUEUE
	 DEFARG	TYPE=U$ANY			;  =queue-name
	 ENDARG
	DEFQUAL	TIM.Q,ARG=REQ			;/TIME_LIMIT
	 DEFARG	UNL.K				;  =UNLIMITED
	 DEFARG	TYPE=U$U16,MINVAL=1		;  =n
	 ENDARG
	ENDQUAL

.SBTTL	Define SYNCHRONIZE Command					;028

SYNCHR:	$THR
	$DEFCMD	QUAL=SYNCQL,U.CMDC=SYNC.C	;define SYNCHRONIZE command
	$PARM	ENT.T,TYPE=U$ANY,FLAGS=PF.OPT	; parse entry parm
	$ENDCMD
	$ENDTHR

; Define SYNCHRONIZE Command Qualifiers

SYNCQL:	DEFQUAL	ENT.Q,ARG=REQ			;/ENTRY
	 DEFARG	TYPE=U$U16
	 ENDARG
	DEFQUAL	QUE.Q,ARG=REQ			;/QUEUE
	 DEFARG	TYPE=U$ANY			;  =queue-name
	 ENDARG
	ENDQUAL

.SBTTL	Define PBS prompt strings

CMD.P:	.ASCIC	^\"PBSMGR> "\			;command prompt
SER.P:	.ASCIC	<"Server: ">			;sub-prompt for server-name
ENT.P:	.ASCIC	<"Entry: ">			;sub-prompt for entry-spec
FIL.P:	.ASCIC	<"Files: ">			;sub-prompt for file-spec
QUE.P:	.ASCIC	<"Queue: ">			;sub-prompt for queue-name

.SBTTL	Declare global constants

GLOBAL	<ASNQ.C,CLSQ.C,DBUG.C,DELE.C,DELQ.C,DSNQ.C>
GLOBAL	<INIQ.C,OPNQ.C,PRNT.C,SETE.C,SETQ.C>
GLOBAL	<SHOE.C,SHOQ.C>
GLOBAL	<STRM.C,STPQ.C,STPM.C,STPQ.C,SBMT.C>
GLOBAL	<DELS.C,INIS.C,SETS.C,SHOS.C,STRS.C,STPS.C,SYNC.C>              ;028
GLOBAL	<SER.T,ENT.T,FIL.T,QUE.T>
GLOBAL	<BAT.E,PRT.E,RST.E,STP.E>

.END
