1	SUB DISPLY (MSG.TXT$)						      &
\	MODULE$ = "DISPLY"						      &
\	ON ERROR GOTO 19000						      &
\	SUBEXIT IF CC.FLG%						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : DISPLY					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : PRL					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1982, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL DISPLY (MSG.TXT$)					      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!	MSG.TXT$	I	text to display			      &
	!	DISPLAY%	I	display text flag:		      &
	!				   TRUE = display text		      &
	!				  FALSE = don't display text	      &
	!	LITERAL%	I	literal message flag:		      &
	!				   TRUE = don't append <cr><lf>	      &
	!				  FALSE = append <cr><lf>	      &
	!	U.POS%		I	position to display uparrow	      &
	!				  (0 --> don't repaint cmd line	      &
	!	C.POS%		I	2nd position to display uparrow	      &
	!				  (0 --> no 2nd uparrow)	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	! V9.0-02	09-Jul-83	(PRL) Update for V9.0		      &
	! V9.0-07	19-Jun-84	(PRL) General cleanup		      &
	! V9.0-10	20-Dec-85	(PRL) Support 2nd uparrow on repaint  &
	! V9.0-12	28-Feb-85	(PRL) Use RECORD 32 with repainting   &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!	This subprogram is called to display the string MSG.TXT$      &
	!	at the user's console terminal.  It will ensure that CTRL/O   &
	!	has been cancelled and that the text begins at the leftmost   &
	!	column of the terminal.					      &
	!								      &
	!	If the global flag DISPLAY% is false, then this routine exits &
	!	with no message displayed, allowing the calling program to    &
	!	enable/disable error message display.			      &
	!								      &
	!	If the global U.POS% is positive, then this routine will:     &
	!	1) repaint the user's command line, 2) display an uparrow     &
	!	on the next line at the character position U.POS% (defined    &
	!	in CUICMN.B2S - 1 =1st character position, etc.), 3) display  &
	!	the string MSG.TXT$.  If the global U.POS% = 0, then only     &
	!	the string MSG.TXT$ is displayed.			      &
	!								      &
	!	If the global flag LITERAL% is true, then the message text is &
	!	displayed at the current cursor position with no <cr><lf>     &
	!	delimiter.  If false, then the message text is displayed at   &
	!	the left margin with a <cr><lf> delimiter.		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!	DISPLAY%	display message flag			      &
	!	LITERAL%	literal mode (no <cr><lf> delimiter)	      &
	!	MSG.TXT$	text sting to be displayed		      &
	!	Z%		work integer				      &
	!								      &
	!******************************************************************** &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "SYSTEM:PBSCMN.B2S"		!include QUEUE data section   &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
	GOSUB 10000				!go display error message     &
		IF DISPLAY%			!  if display enabled	      &
\	C.POS% = 0%				!always clear conflict pos    &
\	SUBEXIT					!and exit		      &

10000	!	d i s p l a y   e r r o r   m e s s a g e		      &
	!								      &
	!								      &
	Z% = RCTRLO(KB.CHNL%)			!cancel any CTRL/O	      &
\	PRINT #KB.CHNL% IF CCPOS(KB.CHNL%)	!ensure left margin	      &
			UNLESS LITERAL%		!  unless literal mode	      &
						!			      &
\	GOSUB 10100				!go repaint cmd line	      &
		IF U.POS%			!  if request repainting      &
						!			      &
\	RETURN IF CC.FLG%			!exit if CTRL/C		      &
\	MSG.TXT$ = MSG.TXT$ + CR + LF		!append <cr><lf> to text      &
		UNLESS LITERAL%			!  unless literal mode	      &
\	PRINT #KB.CHNL%, MSG.TXT$;		!print error text	      &
						!			      &
\	RETURN					!exit			      &

10100	!	r e p a i n t   c o m m a n d   l i n e			      &
	!								      &
	!								      &
	CALL FET$CS BY REF			!fetch the command line	      &
\	RETURN IF U.STAT% OR CC.FLG%		!exit if error or CTRL/C      &
						!			      &
\	CMD$ = SEG$(U.STR$,1%,U.LEN%)		!get cmd line		      &
\	PRINT #KB.CHNL%, RECORD 32%, CMD$	!repaint the command line     &
						!			      &
\	UU.POS% = U.POS% - 1%			!compute 1st pointer pos      &
\	IF C.POS% THEN				!if request 2nd pointer,      &
		UU.CNF% = C.POS% - 1%		!  compute 2nd pointer pos    &
\		IF UU.POS% > UU.CNF% THEN	!  if reverse ordered,	      &
			Z% = UU.POS%		!    switch		      &
\			UU.POS% = UU.CNF%	!      them		      &
\			UU.CNF% = Z%		!        around		      &
\		END IF				!  end if		      &
\	END IF					!end if			      &
						!			      &
\	PRINT #KB.CHNL%, RECORD 32%, TAB(UU.POS%); "^";			      &
						!display 1st error pointer    &
\	PRINT #KB.CHNL%, RECORD 32%, TAB(UU.CNF%); "^";			      &
						!display 2nd error pointer    &
		IF C.POS%			!  if any 2nd pointer	      &
\	PRINT #KB.CHNL%				!return to left margin	      &
						!			      &
\	RETURN					!exit			      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ERRSTS% = ERR				!save error status	      &
\	ERRLIN% = ERL				!save error line	      &
\	ERRNAM$ = ERN$				!save module name	      &
\	PRINT "??Program failure in "; ERRNAM$; CR; LF;			      &
			ERT$(ERRSTS%); " at line "; NUM1$(ERRLIN%)	      &
						!display err msg (on ch #0)   &
\	RESUME 32767				!resume to exit		      &

32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
