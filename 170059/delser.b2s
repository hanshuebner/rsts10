1	SUB DELSER							      &
\	MODULE$ = "DELSER"						      &
\	ON ERROR GOTO 19000						      &
\	SUBEXIT IF CC.FLG%						      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : DELSER.B2S				      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : ACT/PRL/DBM				      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C)  1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL DELSER						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!	ERRSTS%		O	error status			      &
	!				  0 = no error			      &
	!				  n = ERR value n		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	! V9.0-02	30-Mar-84	(ACT) Creation for V9.0		      &
	! V9.0-07	18-Jun-84	(PRL) General cleanup		      &
	! =================================================================== &
	! V9.1-05	09-Aug-85	(PRL) Fix FN.KBX.TO.KB$ function      &
	! =================================================================== &
	! V9.5-01	10-Jun-87	(DBM) Fix FN.KBX.TO.KB$ function      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!	This subprogram is called to process a DELETE/SERVER	      &
	!	command. The format of the command is			      &
	!								      &
	!		DELETE/SERVER server-name[:]			      &
	!								      &
	!	There are no qualifiers defined for this command.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name			description			      &
	!	====			===========			      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b r o u t i n e s   u s e d				      &
	!								      &
	!	line #/name		description			      &
	!	===========		===========			      &
	!	DISPLY			display text at user's KB:	      &
	!	INIPKT			initialize send packet		      &
	!	SEND			send packet to queue manager	      &
	!	RECV			receive packet from queue manager     &
	!	CHKSER			validate server name		      &
	!								      &
	!	FET$CQ			(CUI) fetch command qualifier	      &
	!	FET$P			(CUI) fetch parameter		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m a p   d e c l a r a t i o n s				      &
	!								      &
	!	line #	name	description				      &
	!	======	====	===========				      &
	!	   700	PBSCMN	PBS common data (%INCLUDE PBSCMN.B2S)	      &
	!	   700	PBSMAP	PBS map fields (%INCLUDE PBSMAP.B2S)	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	c o m m o n   d e c l a r a t i o n s			      &
	!								      &
	!	line #	name	description				      &
	!	======	====	===========				      &
	!	   700	PBSKEY	PBS CUI keywords (%INCLUDE PBSKEY.B2S)	      &
	!	   700	CUICMN	CUI common data (%INCLUDE CUICMN.B2S)	      &
	!								      &
	!******************************************************************** &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "SYSTEM:PBSCMN.B2S"		!include QUEUE data section   &
	%INCLUDE "SYSTEM:PBSMAP.B2S"		!include QUEUE map sections   &
	%INCLUDE "SYSTEM:PBSKEY.B2S"		!include CUI keywords	      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
	CALL INIPKT				!initialize send packet	      &
\	SUBEXIT IF ERRSTS%			!exit if any errors	      &
		   OR CC.FLG%			!  or CTRL/C		      &
						!			      &
\	CALL FET$P BY REF (SER.T%)		!fetch server parameter	      &
\	SER.POS% = U.POS%			!save pos of server in cmd    &
\	SER$ = SEG$(U.STR$,1%,U.LEN%)		!get server name	      &
\	Z% = 2%					!allow logical server name    &
\	CALL CHKSER (SER$,SER.TYP%,Z%)		!validate server name	      &
\	SUBEXIT IF ERRSTS%			!exit if invalid server	      &
		   OR CC.FLG%			!  or CTRL/C		      &
						!			      &
\	SRV$ = FN.KBX.TO.KB$ (SER$)		!display standard KBn: name   &
						!			      &
\	PKT.CMD$ = CHR$(DD.CMD%)		!load del server cmd code     &
\	PKT.RTQ$ = CHR$(AK.FLG%)		!load ACK request flag	      &
\	PKT.QUE$ = CHR$(SER.TYP%)		!load server type	      &
\	PKT.ID.DVL$ = CHR$(LEN(SER$))		!load server name length      &
\	PKT.ID.DEV$ = SER$			!load server name	      &
						!			      &
\	CALL SEND (DD.LEN%,SEND.RETRY%)		!send the delete dev packet   &
\	SUBEXIT IF ERRSTS%			!exit if any errors	      &
		   OR CC.FLG%			!  or CTRL/C		      &
			OR NOSEND%		!    or NOSEND flag set	      &
						!			      &
\	CALL RECV (RECV.WAIT%)			!wait for ACK		      &
\	SUBEXIT IF ERRSTS%			!exit if any errors	      &
		   OR CC.FLG%			!  or CTRL/C		      &
						!			      &
\	IF ASCII(PKT.CMD$) = AK.CMD% THEN	!if ACK received,	      &
		SELECT SER.TYP%			!  select via server type:    &
\		CASE = PRT.TYP%			!  case = print server,	      &
\			Z$ = "Print s"		!    build prefix text	      &
\		CASE = BAT.TYP%			!  case = batch server,	      &
\			Z$ = "Batch s"		!    build prefix text	      &
\		CASE ELSE			!  case else,		      &
\			Z$ = "S"		!    build prefix text	      &
\		END SELECT			!  end select		      &
						!			      &
\		U.POS% = 0%			!  disable repainting of cmd  &
\		IF PKT.STS% = RMS.LBY% THEN	!  if status shows MDL,	      &
			Z1$ = " marked for deletion"			      &
						!    use 'marked for del'     &
		ELSE	Z1$ = " deleted"	!  else use 'deleted'	      &
\		END IF				!  end if		      &
\		CALL DISPLY (Z$+"erver "+SRV$+Z1$)			      &
						!  display confirmation msg   &
\		ERRSTS% = 0%			!  return success status      &
						!			      &
	ELSE					!else NACK received:	      &
		ERRSTS% = PKT.STS%		!save error status code	      &
\		U.POS% = SER.POS%		!  point to server name in cmd &
\		IF ERRSTS% = RMS.RNF% THEN	!  if device not found,	      &
			CALL DISPLY ("?Server does not exist")		      &
						!    display err msg	      &
		ELSE	FATAL% = TRUE%		!  else set fatal error flag  &
\			ERRNAM$ = MODULE$	!    return bad module name   &
\		END IF				!  end if		      &
						!			      &
\	END IF					!end if			      &
						!			      &
\	SUBEXIT					!exit			      &

15500	!	f n . k b x . t o . k b $  ( SRV$ )			      &
	!								      &
	!								      &
	! inputs:	SRV$		-	server name in _KBcn: format  &
	!								      &
	! outputs:	FN.KBX.TO.KB$	-	server name in _KBn: format   &
	!								      &
	! uses:		FIRQB%()	-	sys call array		      &
	!								      &
	!								      &
	DEF FN.KBX.TO.KB$ (SRV$)					      &
\	IF LEFT(SRV$,3%) = "_KB" THEN		!if KB type server,	      &
		ON ERROR GOTO 15520		!else trap own errors	      &
\		CHANGE FSS$(SRV$,1%) TO FIRQB%	!  FSS the server name	      &
\		SRV$ = "_KB" + NUM1$(FIRQB%(25%)) + ":"			      &
						!  return full _KBn: name     &
			UNLESS (FIRQB%(30%) AND 128%)			      &
						!  unless invalid (removed)   &
\	END IF					!end if			      &
\	GOTO 15550				!skip to exit		      &

15520	RESUME 15550				!resume to exit		      &

15550	FN.KBX.TO.KB$ = SRV$			!return server name	      &
\	FNEND					!end FN.KBX.TO.KB$ function   &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	FATAL% = TRUE%				!set fatal error flag	      &
\	ERRSTS% = ERR				!save error no.		      &
\	ERRLIN% = ERL				!save error line no.	      &
\	ERRNAM$ = ERN$				!save module name	      &
\	RESUME 32767				!resume to exit		      &

32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
