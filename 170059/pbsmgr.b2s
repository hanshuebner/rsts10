1	!******************************************************************** &
	!								      &
	!	p r o g r a m   t i t l e				      &
	!								      &
	!	   program : PBSMGR.B2S					      &
	!	   version : V10.1					      &
	!	      edit : J						      &
	!	 edit date : 27-MAR-92					      &
  	!	 author(s) : PRL/DRP/ACT/SEL				      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1982, 1992 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	! V9.0-02	07-Jul-83	(PRL) Update for V9.0		      &
	! V9.0-03	31-Aug-83	(PRL) Add SUBMIT command	      &
	! V9.0-07	03-Apr-84	(ACT) Change PRINTER, BATCH_PROCESSOR &
	!					commands to SERVER commands   &
	! V9.0-12	28-Feb-85	(PRL) Don't allow RUN unless ALWDBG%  &
	! ------------------------------------------------------------------- &
	! V9.6-08	 2-Mar-88	(BGN) Add SYNCHRONIZE command	      &
	! ------------------------------------------------------------------- &
	! V10.0-A	03-Jul-89	(PRL) Don't open KB if KB.CHNL% = 0   &
	! V10.0-A	26-AUG-89	(PRL) Elimiate PBSMGR.EDT$ edit level &
	! V10.0-G	17-Nov-89	(SEL) Add /OUTPUT for SHOW commands   &
	! ------------------------------------------------------------------- &
	! V10.1-J	27-Mar-92	(PRL) Update PBS version no.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	p r o g r a m   d e s c r i p t i o n			      &
	!								      &
	!	PBSMGR.B2S is the main program which serves as the user-      &
	!	interface to the RSTS/E Print/Batch Services (PBS) Package.   &
	!	PBSMGR.B2S translates user and operator commands into request &
	!	"packets" and sends them for processing to the queue manager  &
	!	(PBS.TSK).						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	c h a n n e l   a s s i g n m e n t s			      &
	!								      &
	!	channel #	file-spec		description	      &
	!	=========	=========		===========	      &
	!	    0		KB:			console keyboard      &
	!	    1		KB:PBSMGR.LST		user's keyboard	      &
	!	    2		PBS$:PBS.SYS		PBS system file	      &
	!	    3		_NL:			s/r packet data	      &
	!	    4		PBS$:FORMS.SYS		forms def file	      &
	!	    5		PBS$:SETUP.SYS		set-up def file	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b r o u t i n e s   u s e d				      &
	!								      &
	!	name			description			      &
	!	====			===========			      &
	!	FET$CQ BY REF		(CUI) fetch command qualifier	      &
	!	U.INI BY REF		(CUI) initialize CUI tables	      &
	!	U.DIA BY REF		(CUI) get user command		      &
	!								      &
	!	DISPLY			display message at user's KB	      &
	!	PRINT			PRINT command processor		      &
	!	SUBMIT			SUBMIT command processor	      &
	!	DELENT			DELETE/ENTRY command processor	      &
	!	SHOENT			SHOW ENTRY command processor	      &
	!	SHOQUE			SHOW QUEUE command processor	      &
	!	SHOSER			SHOW SERVER command processor	      &
	!	SYNCHR			SYNCHRONIZE command processor	      &
	!	SETENT			SET ENTRY command processor	      &
	!	SETQUE			SET QUEUE command processor	      &
	!	SETSER			SET SERVER command processor	      &
	!								      &
	!	STRPBS			START/MANAGER command processor	      &
	!	STPPBS			STOP/MANAGER command processor	      &
	!								      &
	!	INIQUE			INITIALIZE/QUEUE command processor    &
	!	DELQUE			DELETE/QUEUE command processor	      &
	!	STRQUE			START/QUEUE command processor	      &
	!	STPQUE			STOP/QUEUE command processor	      &
	!	ASNQUE			ASSIGN/QUEUE command processor	      &
	!	DSNQUE			DEASSIGN/QUEUE command processor      &
	!								      &
	!	INISER			INITIALIZE/SERVER command processor   &
	!	DELSER			DELETE/SERVER command processor	      &
	!	STRSER			START/SERVER command processor	      &
	!	STPSER			STOP/SERVER command processor	      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	f u n c t i o n s   u s e d				      &
	!								      &
	!	line #	name		description			      &
	!	======	====		===========			      &
	!	15000	FN.OPERATOR%	return operator status		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m a p   d e c l a r a t i o n s				      &
	!								      &
	!	line #	name	description				      &
	!	======	====	===========				      &
	!	   700  PBSCMN	QUEUE common data (%INCLUDE PBSCMN.B2S)	      &
	!	   700	PBSMAP	Send/Recv/Record fields (%INCLUDE PBSMAP.B2S) &
	!								      &
	!******************************************************************** &
	!								      &
	!	c o m m o n   d e c l a r a t i o n s			      &
	!								      &
	!	line #	name	description				      &
	!	======	====	===========				      &
	!	   700	PBSKEY	CUI keywords (%INCLUDE PBSKEY.B2S)	      &
	!	   700	CUICMN	CUI common data (%INCLUDE CUICMN.B2S)	      &
	!								      &
	!******************************************************************** &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "SYSTEM:PBSCMN.B2S"		!include common data section  &
	%INCLUDE "SYSTEM:PBSMAP.B2S"		!include map sections	      &
	%INCLUDE "SYSTEM:PBSKEY.B2S"		!include CUI keywords	      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	!******************************************************************** &
	!								      &
	!	D E F I N E   C O N S T A N T S				      &
	!								      &
	!******************************************************************** &
									      &
	EXTERNAL WORD CONSTANT			! Define RSTS error codes:    &
						! (LB:ERR.STB)		      &
						!			      &
			CTRLCE,			!   ?programmable ^C trap     &
			EOF,			!   ?End of file	      &
			NODEVC,			!   ?Invalid device	      &
			PRVIOL			!   ?Protection violation     &
									      &
									      &

1000	!	s e t   u p   f o r   R U N   e n t r y			      &
	!								      &
	!								      &
	ENT.TY% = 0%			!init as a RUN entry		      &
\	HDNG% = TRUE%			!enable program heading		      &
\	NORUN% = NOT ALWDBG%		!set NORUN flag unless debugging on   &

2000	!	s e t   u p   f o r   c o m m a n d   p r o c e s s i n g     &
	!								      &
	!								      &
	ON ERROR GOTO 19000			!init standard error trap     &
\	MODULE$ = "PBSMGR"			!init our module name	      &
\	DISPLAY% = TRUE%			!enable message display	      &
\	LITERAL% = FALSE%			!disable literal display      &
						!			      &
\	PBSMGR.VER$ =  "V10.1-J"		!define program version	      &
						!			      &
\	OPEN "_KB:PBSMGR.LST" AS FILE KB.CHNL%	!open user's KB		      &
		UNLESS KB.CHNL% = 0%		!  unless using std KB chnl   &
						!			      &
\	IF HDNG% THEN				!if heading enabled,	      &
		U.POS% = 0%			!  disable repainting of cmd  &
\		CALL DISPLY (MODULE$+" "+PBSMGR.VER$+"  "+ERT$(0%)+CR.LF$)    &
						!  print program heading      &
\	END IF					!end if			      &
						!			      &
\	IF NORUN% THEN				!if RUN not allowed,	      &
		U.POS% = 0%			!  disable repainting of cmd  &
\		CALL DISPLY ("?Please use DCL commands")		      &
						!  display error	      &
\		GOTO 32000			!  and exit		      &
\	END IF					!end if			      &
						!			      &
\	CALL U.INI BY REF (U.CMN%,ENT.TY%)	!init CUI tables	      &
						!			      &
\	CHANGE SYS (CHR.6$+CHR$(26%)) TO FIRQB%	!return job info	      &
\	JOB.NO% = FIRQB%(1%) / 2%		!save job no.		      &
\	KB.NO% = FIRQB%(4%)			!save user kb no.	      &
\	PROJ$ = CHR$(FIRQB%(22%))		!save proj no.		      &
\	PROG$ = CHR$(FIRQB%(21%))		!save prog no.		      &
						!			      &
\	CHANGE SYS (CHR.6$+CHR$(16%)+CHR.0$+CHR$(255%)) TO FIRQB%	      &
						!return user kb info	      &
\	KB.WIDTH% = FIRQB%(5%) - 1%		!save width		      &
						!			      &
\	CALL CCTRAP BY REF (TRUE%)		!enable local CTRL/C traps    &
\	CC.CNT% = 0%				!init CTRL/C counter	      &

3000	!	p r o c e s s   P B S   c o m m a n d s			      &
	!								      &
	!								      &
	ON ERROR GOTO 19000			!reset standard error trap    &
\	CLOSE #12%				!Close output channel	      &
\	Z$ = SYS (PRIV.OFF$)			!ensure temp privs dropped    &
\	Z$ = SYS (CHR.6$+CHR$(31%))		!ensure no 3rd party privs    &
\	Z% = RCTRLO(KB.CHNL%)			!cancel any CTRL/O	      &
\	DISPLAY% = TRUE%			!enable message display	      &
\	LITERAL% = FALSE%			!disable literal display      &
\	CC.FLG% = FALSE%			!clear CTRL/C flag	      &
\	GOTO 6000				!process fatal error	      &
		IF FATAL%			!  if fatal err received      &

3100	CALL U.DIA BY REF			!get user command	      &
\	IF CC.FLG% THEN				!if CTRL/C,		      &
		CC.CNT% = CC.CNT% + 1%		!  incr CTRL/C counter	      &
\		IF CC.CNT% > 1% THEN		!  if more than 1 CTRL/C,     &
			GOTO 32000		!    exit program	      &
		ELSE	GOTO 3000		!  else re-prompt	      &
\		END IF				!  end if		      &
\	END IF					!end if			      &
						!			      &
\	CC.CNT% = 0%				!clear the CTRL/C counter     &
\	IF U.STAT% THEN				!if CUI error,		      &
\		SELECT U.STAT%			!  select via error code:     &
\		CASE = ERR.EOF%			!  case = CTRL/Z,	      &
\			GOTO 32000		!    exit program	      &
\		CASE ELSE			!  case else,		      &
\			GOTO 3000		!    re-prompt		      &
\		END SELECT			!  end select		      &

4000	!	p r o c e s s   u s e r   c o m m a n d s		      &
	!								      &
	!								      &
	GOTO 3000 IF CC.FLG%			!re-prompt if CTRL/C	      &
\	GOSUB 11000				!Check for /OUTPUT qualifier  &
\	SELECT U.CMDC%				!select via command code:     &
						!			      &
\	CASE = PRNT.C% 				!case = PRINT command,	      &
\		CALL PRINT			!  call PRINT processor	      &
						!			      &
\	CASE = SBMT.C% 				!case = SUBMIT cmd,	      &
\		CALL SUBMIT			!  call SUBMIT processor      &
						!			      &
\	CASE = DELE.C% 				!case = DELETE/ENTRY cmd,     &
\		CALL DELENT			!  call DELETE/ENTRY proc     &
						!			      &
\	CASE = SETE.C% 				!case = SET ENTRY cmd,	      &
\		CALL SETENT			!  call DELETE/ENTRY proc     &
						!			      &
\	CASE = SHOE.C% 				!case = SHOW ENTRY command,   &
\		CALL SHOENT			!  call SHOW ENTRY processor  &
						!			      &
\	CASE = SYNC.C%				!case = SYNCHRONIZE	      &
\		CALL SYNCHR			!  call SYNCHRONIZE processor &
						!			      &
\	CASE = SHOQ.C% 				!case = SHOW QUEUE command,   &
\		CALL SHOQUE			!  call SHOW QUEUE processor  &
						!			      &
\	CASE = SHOS.C% 				!case = SHOW SERVER command   &
\		CALL SHOSER			! call SHOW SERVER processor  &
						!			      &
\	CASE = STRM.C% 				!case = START/QUE/MAN cmd,    &
\		CALL STRPBS			!  call START QUEUE MGR proc  &
			IF FN.PRIV%("PBSCTL")	!    if user has PBSCTL priv  &
						!			      &
\	CASE = STPM.C% 				!case = STOP/QUE/MAN commnd,  &
\		CALL STPPBS			!  call STOP QUEUE MGR proc   &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = INIQ.C% 				!case = INIT/QUEUE command,   &
\		CALL INIQUE			!  call INIT QUEUE proc	      &
			IF FN.PRIV%("SWCFG")	!   if user has SWCFG priv    &
						!			      &
\	CASE = DELQ.C% 				!case = DELETE/QUEUE cmd,     &
\		CALL DELQUE			!  call DELETE QUEUE proc     &
			IF FN.PRIV%("SWCFG")	!   if user has SWCFG priv    &
						!			      &
\	CASE = STRQ.C% 				!case = START/QUEUE command,  &
\		CALL STRQUE			!  call START QUEUE proc      &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = STPQ.C% 				!case = STOP/QUEUE command,   &
\		CALL STPQUE			!  call STOP QUEUE proc	      &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = OPNQ.C% 				!case = OPEN/QUEUE command,   &
\		CALL OPNQUE			!  call OPEN QUEUE proc	      &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = CLSQ.C% 				!case = CLOSE/QUEUE command,  &
\		CALL CLSQUE			!  call CLOSE QUEUE proc      &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = ASNQ.C% 				!case = ASSIGN/QUEUE cmd,     &
\		CALL ASNQUE			!  call ASSIGN QUEUE proc     &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = DSNQ.C% 				!case = DEASSIGN/QUEUE cmd,   &
\		CALL DSNQUE			!  call DEASSIGN QUEUE proc   &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = SETQ.C% 				!case = SET QUEUE cmd,	      &
\		CALL SETQUE			!  call SET QUEUE proc	      &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
\						!			      &
\	CASE = INIS.C% 				!case = INI/SERVER command,   &
\		CALL INISER			!  call INIT SERVER proc      &
			IF FN.PRIV%("SWCFG")	!   if user has SWCFG priv    &
						!			      &
\	CASE = DELS.C% 				!case = DEL/SERVER command,   &
\		CALL DELSER			!  call DELETE SERVER proc    &
			IF FN.PRIV%("SWCFG")	!   if user has SWCFG priv    &
						!			      &
\	CASE = STRS.C% 				!case = START/SERVER cmd,     &
\		CALL STRSER			!  call START SERVER proc     &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = STPS.C% 				!case = STOP/SERVER commnd,   &
\		CALL STPSER			!  call STOP SERVER processor &
			IF FN.PRIV%("PBSCTL")	!   if user has PBSCTL priv   &
						!			      &
\	CASE = SETS.C% 				!case = SET SERVER commnd,    &
\		CALL SETSER			!  call SET SERVER processor  &
\						!			      &
\	CASE = DBUG.C% 				!case = DBUG command,	      &
\		GOSUB 10000			!  call [NO]DEBUG processor   &
						!			      &
\	CASE = NDBG.C%				!case = NODEBUG command,      &
\		GOSUB 10000			!  call [NO]DEBUG processor   &
						!			      &
\	CASE ELSE				!case else,		      &
\		CALL DISPLY ("?Command not installed")			      &
						!  display not installed msg  &
						!			      &
\	END SELECT				!end select		      &
\	GOTO 3000				!re-prompt		      &

6000	!	p r o c e s s   f a t a l   e r r o r			      &
	!								      &
	!								      &
	IF ERRSTS% >= 0% THEN			!if RSTS error,		      &
		Z$ = ERT$(ERRSTS%) + " at line " + NUM1$(ERRLIN%)	      &
						!  use RSTS error text	      &
	ELSE	Z$ = "?Packet error no. " + NUM1$(ERRSTS%)		      &
						!else use NACK error text     &
\	END IF					!end if			      &
						!			      &
\	DISPLAY% = TRUE%			!enable message display	      &
\	U.POS% = 0%				!disable repainting of cmd    &
\	CALL DISPLY ("??Program failure in "+ERRNAM$+CR.LF$+Z$)		      &
						!display fatal error text     &
\	GOTO 32000				!and exit		      &

10000	!	p r o c e s s   [ N O ] D E B U G   c o m m a n d	      &
	!								      &
	!								      &
	IF NOT ALWDBG% THEN			!if ALWDBG flag off,	      &
		CALL DISPLY("?Invalid keyword")	!  display error message      &
\		RETURN				!  and exit		      &
\	END IF					!end if			      &
						!			      &
\	DEBUG% = (U.CMDC% = DBUG.C%)		!set/clear DEBUG flag	      &
						!			      &
\	NOSEND% = FALSE%			!clear NOSEND flag	      &
\	CALL FET$CQ BY REF (SND.Q%)		!fetch /[NO]SEND qual	      &
\	NOSEND% = U.NO%				!set/clear NOSEND flag	      &
		IF U.PRES%			!  if present		      &
						!			      &
\	IF DEBUG% THEN				!if DEBUG cmd,		      &
		Z0$ = ""			!  null prefix text	      &
	ELSE	Z0$ = "NO"			!else build NO prefix text    &
\	END IF					!  end if		      &
						!			      &
\	IF NOSEND% THEN				!if NOSEND enabled,	      &
		Z1$ = "NO"			!  build NO prefix text	      &
	ELSE	Z1$ = ""			!else null prefix text	      &
\	END IF					!  end if		      &
						!			      &
\	U.POS% = 0%				!disable repainting cmd	      &
\	CALL DISPLY (Z0$+"DEBUG, "+Z1$+"SEND mode set")			      &
						!display state msg	      &
						!			      &
\	RETURN					!and exit		      &

11000	SHO.CHNL% = 0%				!Default output to KB:	      &
\	CALL FET$CQ BY REF (OUT.Q%)		!/OUTPUT?		      &
\	RETURN IF NOT U.PRES%			! Nope, so output to KB:      &
\	IF U.NO% THEN				! /NOOUTPUT?		      &
	   OPEN "_NL:" FOR OUTPUT AS FILE 12% 	! Yup, so open null device    &
	ELSE								      &
	   CALL FET$A BY REF			! /OUTPUT=FILENAME?	      &
\  	   RETURN IF NOT U.PRES%		! Nope, so output to KB:      &
\	   ON ERROR GOTO 11030			! Set up local error trap     &
\	   OPEN SEG$(U.STR$,1%,U.LEN%) FOR OUTPUT AS FILE 12%		      &
\	   CAUSE ERROR NODEVC			! Don't use it if...	      &
		IF STATUS AND 256%              !     device is NFS...	      &
		UNLESS STATUS AND 2048%		!     unless CCPOS() is valid &
\	   CAUSE ERROR PRVIOL			! Don't use it if...	      &
		IF STATUS AND 1024%             !       we don't have access  &
\	   ON ERROR GOTO 19000			! Ensure standard error trap  &
\	END IF					! File okay		      &
\	SHO.CHNL% = 12%				! Channel # to pass to subprgm &

11025	RETURN					! Go back		      &

11030	CALL DISPLY (ERT$(ERR)) 		! Print error		      &
\	RESUME 3000				! Exit program		      &

15000	!	f n . p r i v % ( P R I V $ )				      &
	!								      &
	!								      &
	!inputs:	PRIV$		-	priv name to check	      &
	!								      &
	!outputs:	FN.PRIV%	-	privilege status:	      &
	!					  TRUE  -> priv on	      &
	!					  FALSE -> priv off	      &
	!								      &
	!		ERRSTS%		-	0 if priv on		      &
	!					ERR.PRVIOL if priv off	      &
	!								      &
	DEF FN.PRIV%(PRIV$)			!start definition	      &
\	PRIV$ = EDIT$(PRIV$,-1%)		!trim the priv name string    &
\	Z$ = SYS (				!do check priv SYS call:      &
		CHR.6$ +			!  FIP call		      &
		CHR$(32%) +			!  check access function      &
		CHR$(1%) +			!  check priv name subfun     &
		CHR.0$ +			!  reserved		      &
		CHR.00$ +			!  reserved		      &
		PRIV$				!  priv name to check	      &
		 )				!end of sys call	      &
\	FN.PRIV%,Z% = (ASCII(SEG$(Z$,3%,3%)) = 0%)			      &
						!return fn value	      &
\	IF Z% THEN				!if priv enabled,	      &
		ERRSTS% = 0%			!  return success	      &
	ELSE	ERRSTS% = ERR.PRVIOL%		!else return PRVIOL error     &
\		U.POS% = 1%			!  point to start of cmd      &
\		CALL DISPLY ("?"+PRIV$+" privilege required")		      &
						!  display error message      &
\	END IF					!end if			      &
						!			      &
\	FNEND					!end FN.PRIV% function	      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	FATAL% = TRUE%				!set fatal error flag	      &
\	ERRSTS% = ERR				!save error no.		      &
\	ERRLIN% = ERL				!save bad line no.	      &
\	ERRNAM$ = ERN$				!save bad module name	      &
\	RESUME 6000				!resume to display fatal msg  &

30000	!	C C L   e n t r y   p o i n t				      &
	!								      &
	!								      &
	HDNG% = FALSE%				!show no program heading      &
\	NORUN% = FALSE%				!clear disallow-RUN flag      &
\	Z$ = SYS (CHR$(7%))			!get core common	      &
\	Z% = POS(Z$," ",1%)			!look for blank in cmd line   &
\	IF Z% THEN				!if any command after name,   &
		ENT.TY% = 1%			!  set CCL entry type	      &
\		Z$ = SYS(CHR$(8%)+SEG$(Z$,Z%+1%,MAXINT%))		      &
						!  put command in core cmn    &
	ELSE	ENT.TY% = 0%			!else make us a run entry     &
\	END IF					!end if			      &
						!			      &
\	GOTO 2000				!branch to main		      &

30500	!	D C L   e n t r y   p o i n t				      &
	!								      &
	!								      &
	ENT.TY% = 16%				!set DCL entry type	      &
\	HDNG% = FALSE%				!no program heading	      &
\	NORUN% = FALSE%				!clear disallow-RUN flag      &
\	GOTO 2000				!and branch to main	      &

31000	!	C H A I N   e n t r y   p o i n t			      &
	!								      &
	!								      &
	ENT.TY% = 2%				!set CHAIN entry type	      &
\	HDNG% = FALSE%				!no program heading	      &
\	NORUN% = FALSE%				!clear disallow-RUN flag      &
\	GOTO 2000				!and branch to main	      &

32000	!	e n d - o f - p r o g r a m   p r o c e s s i n g	      &
	!								      &
	!								      &
	CLOSE #Z% FOR Z% = 1% TO 12%		!close all channels	      &
\	Z% = RCTRLO(0%)				!cancel any CTRL/O	      &
\	Z$ = SYS (				!do remove rcvrs sys call:    &
		CHR.6$ +			!  FIP function		      &
		CHR$(22%) +			!  send/recv function	      &
		CHR.0$ +			!  remove rcvr subfun	      &
		STRING$(33%,0%) +		!  skip to all ribs flag      &
		CHR$(-1%)			!  remove all ribs	      &
		 )				!end of remove rcvr sys call  &
\	Z$ = SYS (CHR$(9%))			!exit to user's KBM	      &

32767	!	e n d   o f   p r o g r a m				      &
	!								      &
	!								      &
	END
