1	SUB DELQUE							      &
\	MODULE$ = "DELQUE"						      &
\	ON ERROR GOTO 19000						      &
\	SUBEXIT IF CC.FLG%						      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : DELQUE.B2S				      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : PRL					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1983, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL DELQUE						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!	ERRSTS%		O	error status			      &
	!				  0 = no error			      &
	!				  n = ERR value n		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	! V9.0-02	04-Jul-83	(PRL) Creation for V9.0		      &
	! V9.0-07	15-Jun-84	(PRL) General cleanup		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!	This subprogram is called to process the command	      &
	!								      &
	!		DELETE/QUEUE queue-name[:]			      &
	!								      &
	!	There are no qualifiers defined for this command.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name			description			      &
	!	====			===========			      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b r o u t i n e s   u s e d				      &
	!								      &
	!	line #/name		description			      &
	!	===========		===========			      &
	!	DISPLY			display text at user's KB:	      &
	!	INIPKT			initialize send packet		      &
	!	SEND			send packet to queue manager	      &
	!	RECV			receive packet from queue manager     &
	!	CHKQUE			validate queue name		      &
	!								      &
	!	FET$P			(CUI) fetch parameter		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m a p   d e c l a r a t i o n s				      &
	!								      &
	!	line #	name	description				      &
	!	======	====	===========				      &
	!	   700	PBSCMN	PBS common data (%INCLUDE PBSCMN.B2S)	      &
	!	   700	PBSMAP	PBS map fields (%INCLUDE PBSMAP.B2S)	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	c o m m o n   d e c l a r a t i o n s			      &
	!								      &
	!	line #	name	description				      &
	!	======	====	===========				      &
	!	   700	PBSKEY	PBS CUI keywords (%INCLUDE PBSKEY.B2S)	      &
	!	   700	CUICMN	CUI common data (%INCLUDE CUICMN.B2S)	      &
	!								      &
	!******************************************************************** &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "SYSTEM:PBSCMN.B2S"		!include QUEUE data section   &
	%INCLUDE "SYSTEM:PBSMAP.B2S"		!include QUEUE map sections   &
	%INCLUDE "SYSTEM:PBSKEY.B2S"		!include CUI keywords	      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
	CALL INIPKT				!initialize send packet	      &
\	SUBEXIT IF ERRSTS%			!exit if any errors	      &
		   OR CC.FLG%			!  or CTRL/C		      &
						!			      &
\	CALL FET$P BY REF (QUE.T%)		!fetch queue parameter	      &
\	QUE.POS% = U.POS%			!save pos of queue in cmd     &
\	QUE$ = SEG$(U.STR$,1%,U.LEN%)		!get queue name		      &
\	CALL CHKQUE (QUE$,FALSE%)		!validate queue name	      &
\	SUBEXIT IF ERRSTS%			!exit if invalid queue name   &
		   OR CC.FLG%			!  or CTRL/C		      &
						!			      &
\	PKT.CMD$ = CHR$(DQ.CMD%)		!load DELETE QUEUE cmd code   &
\	PKT.RTQ$ = CHR$(AK.FLG%)		!load ACK request flag	      &
\	PKT.IQ.QNL$ = CHR$(LEN(QUE$)) 		!load queue name length	      &
\	PKT.IQ.QNM$ = QUE$			!load the queue name	      &
						!			      &
\	CALL SEND (DQ.LEN%,SEND.RETRY%)		!send the DELETE QUEUE pkt    &
\	SUBEXIT IF ERRSTS%			!exit if any errors	      &
		   OR CC.FLG%			!  or CTRL/C		      &
			OR NOSEND%		!    or NOSEND flag set	      &
						!			      &
\	CALL RECV (RECV.WAIT%)			!wait for ACK/NACK	      &
\	SUBEXIT IF ERRSTS%			!exit if any errors	      &
		   OR CC.FLG%			!  or CTRL/C		      &
						!			      &
\	IF ASCII(PKT.CMD$) = AK.CMD% THEN	!if ACK received,	      &
		QUE.TYP% = (ASCII(PKT.QUE$) AND 15%)			      &
						!  get queue type	      &
\		SELECT QUE.TYP%			!  select via queue type:     &
\		CASE = PRT.TYP%			!  case = print queue,	      &
\			Z$ = "Print q"		!    build 'print' text	      &
\		CASE = BAT.TYP%			!  case = batch queue,	      &
\			Z$ = "Batch q"		!    build 'batch' text	      &
\		CASE ELSE			!  case else,		      &
\			Z$ = "Q"		!    build null text	      &
\		END SELECT			!  end select		      &
						!			      &
\		IF PKT.STS% = RMS.LBY% THEN	!  if queue not empty,	      &
			Z1$ = " marked for deletion"			      &
						!    show marked for deletion &
		ELSE	Z1$ = " deleted"	!  else show deleted	      &
\		END IF				!  end if		      &
						!			      &
\		U.POS% = 0%			!  disable repainting of cmd  &
\		CALL DISPLY (Z$+"ueue "+QUE$+Z1$)			      &
						!  display confirmation msg   &
\		ERRSTS% = 0%			!  return success status      &
						!			      &
	ELSE					!else NACK received:	      &
		ERRSTS% = PKT.STS%		!  save error status code     &
\		U.POS% = QUE.POS%		!  point to queue name in cmd &
\		IF ERRSTS% = RMS.RNF% THEN	!  if device not found,	      &
			CALL DISPLY ("?Queue does not exist")		      &
						!    display err msg	      &
		ELSE	FATAL% = TRUE%		!  else set fatal error flag  &
\			ERRNAM$ = MODULE$	!    return bad module name   &
\		END IF				!  end if		      &
\	END IF					!end if			      &
						!			      &
\	SUBEXIT					!exit			      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	FATAL% = TRUE%				!set fatal error flag	      &
\	ERRSTS% = ERR				!save error no.		      &
\	ERRLIN% = ERL				!save error line no.	      &
\	ERRNAM$ = ERN$				!save module name	      &
\	RESUME 32767				!resume to exit		      &

32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
