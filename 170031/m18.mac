TITLE	M18,<OLD SEND/RECEIVE>,01,12-FEB-90,MHB/JDM/TS/WJS

;                   Copyright 1974,1990 by Digital Equipment Corporation
;                                  All rights reserved.
;
;          This software is furnished under a license and may be used and copied
;          only  in  accordance  with  the  terms  of  such license and with the
;          inclusion of the above copyright notice.  This software or any copies
;          shall not be provided to any other person.   No title to or ownership
;          of the software is hereby transferred.
;
;          The information in this software is subject to change without notice.
;
;          DIGITAL  assumes  no  responsibility  for the  use, functionality, or
;          reliability of its  software  on equipment  which  is not supplied by
;          DIGITAL.
;
;	MODIFICATIONS:
;
;*C* 12-Feb-90    Sconce:    SYS(18.) split out from SN.MAC


	$M18$	==:	1	;Global to tell BPLGEN that old-format
				;  message SEND/RECEIVE is present

	org	M18		;Overlays dummy in SN

SYS618: MOVB	(R3),R2		;PUT THE FUNCTION CODE HERE
	MOV	R2,-(SP)	;STACK FUNCTION FOR POST PROCESSING
	TST	R0		;ANY STRING BYTES LEFT ?
	BEQ	80$		;NO, FIRQB ALL SET UP FOR REMOVE
10$:	MOVB	(R3)+,(R4)+	;SET UP FIRST PART OF FIRQB
	DEC	R0		;COUNT AS ANOTHER STRING BYTE MOVED
	BEQ	30$		;LENGTH = 0 SO ALL DONE NOW
	CMP	R4,#FIRQB+12	;MOVED ALL BUT THE USER PARAMETERS ?
	BLO	10$		;NO, DO SOME MORE
	TSTB	R2		;ORIGINAL FUNCTION REMOVE OR RECEIVE ?
	BPL	30$		;YES, SO NO DATA TO MOVE
	TST	(R4)+		;INDEX TO PARAMETER AREA OF FIRQB
20$:	MOVB	(R3)+,(R4)+	;LOAD THE DATA TO SEND INTO FIRQB
	DEC	R0		;COUNT AS ANOTHER STRING BYTE MOVED
	BEQ	30$		;LENGTH = 0 NOW SO ALL DONE
	CMP	R4,#FIRQB+40	;ALL OF FIRQB LOADED ?
	BLO	20$		;NO, THIS WILL END EVENTUALLY

30$:	TSTB	R2		;RECEIVE AND SEND NEED RAD50 CONVERSION
	BEQ	80$		;BUT REMOVE DOES NOT
	MOV	#FIRQB+14,R3	;POINT AT FIRQB
	MOV	(R3),-(SP)	;SAVE 1ST TWO BYTES OF PARAMETERS
	TST	-(R3)		;BACK UP ONE WORD
	MOV	-(R3),-(SP)	;STACK 2ND RAD50 WORD FOR LATER
	MOV	-(R3),R2	;WE'LL CONVERT 1ST RAD50 WORD NOW
	CALLX	R50A01		;THIS WILL CONVERT 1 RAD50 TO 3 ASCII
	MOV	(SP)+,R2	;NOW GET BACK THE SECOND RAD50 WORD
	CALLX	R50A01		; AND CONVERT THAT TO ASCII
	MOV	(SP)+,(R3)	;RESTORE 1ST TWO BYTES OF PARAMETERS
	MOV	#FIRQB+4,R4	;GET A POINTER TO ORIGINAL FUNCTION CODE
	MOVB	(R4),R2		; AND RESTORE THE FUNCTION CODE TO HERE
	BMI	80$		;IT WAS A SEND, NO DIDLING REQUIRED
	MOVB	#3,(R4)+	;THIS IS A COMBINED CALL IN V6B TERMS
	MOVB	(R4),R0		;SAVE PRIV BIT AND MSG MAX
	DEC	R2		;0=NO SLEEP, 1=SLEEP
	BEQ	40$		;SO SET NO SLEEP IF ZERO
	MOV	#1,R2		;ENSURE ONLY ONE OTHER OPTION
40$:	BIS	#6,R2		;SET TRUNCATION & FLOW INHIBIT
	MOVB	R2,(R4)		;STORE RECEIVE MODIFIER
	ADD	#7,R4		;INDEX TO OBJECT TYPE FIELD IN FIRQB
	MOV	#10.,R2		;10. WORDS TO CLEAR
50$:	CLR	(R4)+		;ZERO REST OF FIRQB
	SOB	R2,50$		; AND POINT R4 TO FIRQB+40
	MOV	#3,R2		;ASSUME LOCAL PRIVILEGED SENDERS ONLY
	TSTB	R0		;GOOD ASSUMPTION ?
	BMI	60$		;YES, ONLY PRIV'D SENDERS
	ASR	R2		;NO, SAY ANY LOCAL SENDER ALLOWED
60$:	MOVB	R2,15-40(R4)	;SET ACCESS CONTROL BYTE IN FIRQB @+15
	BIC	#^C<177>,R0	;GET USER'S SPECIFIED MESSAGE MAX
	BNE	70$		;NON-ZERO, SO O.K.
	INC	R0		;ZERO, MAKE IT A ONE
70$:	MOVB	R0,20-40(R4)	;SET MSG MAX IN FIRQB @+20

80$:	MOV	#FIRQB,R4	;RELOAD R4 WITH FIRQB POINTER
	TSTB	4(R4)		;IS THIS A REMOVE ?
	BNE	90$		;NOPE
	ASLB	5(R4)		;MAKE JOB NUMBER TO REMOVE * 2
90$:	.MESAG			;NOW DO THE MESSAG CALL

	MOV	#ERRSND-1,R0	;GET MAP OF HISTORICAL ERROR CODES
	TSTB	(SP)		;WAS THIS A SEND?
	BMI	100$		;YES, ALL SET FOR CONVERSION
	CMPB	(R0)+,(R0)+	;NO, GET MAP OF HISTORICAL ERROR CODES
100$:	INC	R0		;SKIP THE HISTORICAL CODE
	TSTB	(R0)		;MORE IN LIST?
	BEQ	110$		;NO, USE THE CODE WE GOT
	CMPB	IOSTS,(R0)+	;IS THIS A MATCH?
	BNE	100$		;NO, LOOP
	MOVB	(R0),IOSTS	;YES, REPLACE THE CODE

110$:	TST	(SP)+		;WAS THIS A RECEIVE ?
	BLE	130$		;NO, SO NO USEFUL DATA IS RETURNED
	ADD	#10,R4		;POINT TO FIRQB+10 WITH R4
	MOV	R4,R3		;COPY THAT
	TST	(R3)+		;MAKE IT FIRQB+12 IN R3
	MOV	-(R4),-(R3)	;COPY RETURNED PPN TO FIRQB+10
	CLRB	-(R3)		;INSERT A ZERO BYTE AT FIRQB+7
	MOVB	-(R4),-(R3)	;JOB NUMBER * 2 TO FIRQB+6
	ADD	#7,R4		;POINT TO RETURNED MSG AT FIRQB+14
	CMP	(R3)+,(R3)+	;WE WANT MSG TO START AT FIRQB+12
	MOV	#10.,R0		;TEN WORDS TO MOVE
120$:	MOV	(R4)+,(R3)+	;SO MOVE EM OUT
	SOB	R0,120$		;TIL MEDIUM WELL DONE
	CLR	(R3)+		;ZERO FIRQB+36 FOR GRINS

130$:	MOV	#FIRQB,R4	;SET POINTER TO RETURNED DATA
	MOV	#UUORET,-(SP)	;SET RETURN FOR UUO COMPLETION
	CALLRX	IODIE		;CHECK FOR ERROR AND DIE IF ERROR

GLOBAL	<UUORET>

;+
; THIS TABLE MAPS THE ERRORS POSSIBLE IN V6B SEND/RECEIVE INTO
; THE LIMITED SET OF ERRORS REPORTED IN V6A. THIS IS DONE FOR
; DOWNWARD COMPATIBILTY WITH THE OLD SMALL MESSAGE SEND/RECEIVE
; CALLS.
;-

.MACRO	ERRBYT	NEW,OLD
.GLOBL	NEW,OLD
.NLIST
	.BYTE	NEW,OLD
.LIST
.ENDM	ERRBYT

ERRSND:	ERRBYT	NOROOM,NOBUFS	;QUOTA EXCEEDED --> NO BUFFERS
ERRMAP:	ERRBYT	PRVIOL,BADFUO	;PROTECTION VIOLATION --> ILLEGAL SYS USAGE
	ERRBYT	FIEXST,BADFUO	;ID ALREADY IN USE --> ILLEGAL SYS USAGE
	.WORD	0		;END THE LIST

	.end
