.INCLUDE /SYSTEM:BCKPFX/
TITLE	CRCTAB,<CRC Table Generator>,0A,10-MAY-91,SHL/KPH

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR CRCTAB

;+
;
;			[RSTS V9.0]
;  000  SHL  05-Sep-83  Creation
;
;			[RSTS V9.3]
;  001  KPH  22-Jan-86	Add CRC-32 support
;-

.SBTTL	Call any needed MACROs

.MCALL	SUBR

.SBTTL	Initialize CRC table

	.PSECT	ROCODE,RO,I,LCL,REL,CON

;+
; CRCTAB - Initialize CRC table
;
;	R5 -> Argument list
;		.WORD	2	Number of arguments
;		.WORD	TBLADR	Address to store 256 word CRC table
;		.WORD	LOPOLY	CRC polynomial to use to build table
;	    [	.WORD	HIPOLY	MSB of CRC polynomial for 32-bit CRC
;
;	CALL	CRCTAB
;-

CRCTAB::SUBR	<TBLADR,LOPOLY,HIPOLY>					;001
	CMPB	(R5),#3		; Desire CRC-32?			;001
	BEQ	TAB512		; Yes, go build the 32-bit table	;001
	CLR	R0		; Initialize entry value/iteration counter
	MOV	TBLADR(R5),R3	; Address of table
	MOV	LOPOLY(R5),R4	; CRC polynomial
10$:	MOV	#8.,R1		; Initialize shift counter
	MOV	R0,R2		; Value for which to compute table entry
20$:	CLC			; Clear carry bit
	ROR	R2		; Shift R2 right 1 bit
	BCC	30$		; Carry clear?
	XOR	R4,R2		; No, XOR in CRC poly
30$:	SOB	R1,20$		; Decrement shift counter and go back for more if not done
	MOV	R2,(R3)+	; Store value in table
	CMP	#255.,R0	; Done all 256 entries yet?
	BEQ	40$		; Yes. Bye, bye!
	INC	R0		; No.  Set up next value...
	BR	10$		;  ... and go back for more

40$:	RETURN			; All done now

TAB512:	CLR	-(SP)		; Initialize entry value/iteration counter ;001
	MOV	TBLADR(R5),R3	; R3 -> CRC table			;001
	MOV	HIPOLY(R5),R4	; R4 = High order word of polynomial	;001
	MOV	LOPOLY(R5),R5	; R5 = Low order word of polynomial	;001
10$:	MOV	#8.,R2		; Initialize shift counter		;001
	CLR	R0		; Set up MSB of value to use		;001
	MOV	(SP),R1		; Set up LSB of value to use		;001
20$:	CLC			; Set up for a right shift		;001
	ROR	R0		; Shift MSB right one bit		;001
	ROR	R1		; Now shift LSB right one bit		;001
	BCC	30$		; Carry clear, don't do XOR this time	;001
	XOR	R4,R0		; No, XOR in CRC poly LSB		;001
	XOR	R5,R1		; And XOR in CRC poly MSB		;001
30$:	SOB	R2,20$		; Loop for the eight shifts		;001
	MOV	R1,(R3)+	; Store LSB of result			;001
	MOV	R0,(R3)+	; Store MSB of result			;001
	INCB	(SP)		; Set up for next entry			;001
	BNE	10$		; More to do, go do it			;001
	TST	(SP)+		; Yes, clean up stack			;001
	RETURN			; And we're done			;001

.END
