TITLE	RNFIO,<RUNOFF I/O ROUTINES>,14,18-APR-85,DNC/CM

;
;		COPYRIGHT (c) 1974, 1985 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

;
; VERSION M01
;
; AUTHOR: L. WADE 1-JUN-72
;
; MODIFIED BY:
;
;	E. POLLACK U. OF W. 19-DEC-73
;
;	D. N. CUTLER 14-SEP-75
;
; RUNOFF I/O ROUTINES
;
; MACRO LIBRARY CALLS
;
 
	.MCALL	GET$S,PUT$S
 
;
; LOCAL DATA
;
; I/O STATUS BLOCK
;
 
 
IOSB:	.BLKW	2
 
 
;+
; FILE INPUT/OUTPUT ROUTINES
;-

	.ENABL	LSB
FMSGL:	INC	S1
FMSG::	MOVB	@S1,R1
	BEQ	40$		;IF EQ NULL
	CALL	FOUT		;OUTPUT CHARACTER
	BR	FMSGL		;LOOP
CRLF::	MOV	(PC)+,R1	;GET CARRIAGE RETURN AND LINE FEED
	.BYTE	LF,CR		;
	MOV	PC,-(SP)	;SET TO REPEAT OUTPUT TWICE
	SWAB	R1		;SWAP CHARACTER TO RIGHT BYTE
FOUT::	MOVB	R1,@HFOUT+2	;STORE CHARACTER IN BUFFER
	INC	HFOUT+2		;INCREMENT BUFFER POINTER
	DEC	HFOUT+4		;ANY MORE ROOM IN BUFFER?
	BEQ	OUTPUT		;IF EQ NO
	RETURN			;
FIN::	DEC	HFIN+4		;ANYTHING IN BUFFER?
	BGT	30$		;IF GT YES
	GET$S	#TTLDMY,#INBUF,HFIN ;INPUT A RECORD
	BCC	20$		;BR	IF I/O OK
	CMPNEB	#IE.EOF,F.ERR(R0),RDERR3 ;NOT END OF FILE?
	MOV	#1,F.NRBD(R0)	;SET BYTE COUNT TO 1
	MOVB	#EOFC,INBUF	;SET EOF BYTE
20$:	MOV	F.NRBD(R0),-(SP) ;GET BYTE COUNT OF LINE
	BNE	25$		;IF NE NOT NULL LINE
	MOVB	#' ,@F.NRBD+2(R0) ;INSERT A BLANK
	INC	(SP)		;INCREMENT BYTE COUNT
25$:	MOV	F.NRBD+2(R0),R0	;AND GET THE BUFFER ADDRESS
	ADD	(SP),R0		;ADVANCE POINTER TO END OF CHARACTERS
	MOVB	#CR,(R0)+	;SET CR/LF AT END OF LINE
	MOVB	#LF,(R0)+	;
	ADD	#2,(SP)		;AND ADJUST BYTE COUNT
	MOV	(SP)+,HFIN+4	;SET COMMON HEADER
	MOV	#INBUF-1,HFIN+2 ;RESET POINTER FOR EMPTY
30$:	INC	HFIN+2		;POINT TO CHARACTER
	MOVB	@HFIN+2,R1	;GET NEXT CHARACTER FROM INPUT RECORD
	BIC	#^C<177>,R1	;CLEAR EXCESS BITS
	BEQ	FIN		;IF EQ NULL
	CMPEQ	R1,#177,FIN	;RUBOUT?
40$:	RETURN			;
	.DSABL	LSB

;
; THIS ROUTINE OUTPUTS THE CURRENT CONTENTS OF THE LINE BUFFER
;
 
 
OUTPUT::MOV	HFOUT,LSTBLK+F.NRBD ;CALCULATE LENGTH OF LINE TO OUTPUT
	SUB	HFOUT+4,LSTBLK+F.NRBD  ;
	BEQ	OUT3		;IF EQ EMPTY BUFFER
	CMP	PAGENO,LOWPAG	;ONLY PRINT IN THE SELECTED PAGE
	BLO	OUT1		;RANGE
	CMP	PAGENO,HGHPAG
	BHI	OUT2		;QUIT IF BEYOND RANGE
	PUT$S	#LSTBLK,#OUBUF	;OUTPUT LINE
	BCS	WRERR3		;IF CS ERROR
OUT1:	MOV	HFOUT,HFOUT+4
	MOV	#OUBUF,HFOUT+2
OUT3:	RETURN			;
OUT2:	CALL	OUT1		;RESET POINTERS TO AVOID SIDE EFFECTS
	TSTEQ	HGHPAG,OUT3	;SECOND TIME THROUGH?
	CLR	HGHPAG
	JMP	ENDFIL		;OTHERWISE INITIATE TERMINATION

;
; I/O ERROR EXITS
;
 
WRERR3:	CALL	$ERMSG
	.WORD	OUTERR
WRERR4:	JMP	RUNOFF		;RESTART
RDERR3:	CALL	$ERMSG
	.WORD	INPERR
	BR	WRERR4		;RESTART
 
;
; TERMINAL I/O ROUTINES
;
; THIS ROUTINE PERFORMS THE EQUIVALENT OF THE TTCALL 3,
; OF THE PDP-10.
;

TTC3::	MOV	@(SP),R0	;GET ADDRESS OF INPUT STRING
	ADD	#2,(SP)		;SKIP OVER STRING ADDRESS
	MOV	#TTBUF,R1	;ADDRESS OF OUTPUT STRING
10$:	MOVB	(R0)+,(R1)+
	BNE	10$
	SUB	#TTBUF,R1
	MOV	R1,TTBLK+F.NRBD	;SET COUNT OF CHARACTERS
TTC33::	PUT$S	#TTBLK,#TTBUF
	CLR	TTBLK+F.NRBD	;MAKE THE LINE EMPTY
	RETURN			;

;+
; READ TERMINAL INPUT RECORD
;-

TTC4N::	GET$S	#TTIBLK		;GET A RECORD
	RETURN			;

;THIS ROUTINE SIMULATES TTCALL 1, WHICH OUTPUTS ONE
;CHARACTER AT A TIME

TTC1::	CMP	#TTLIN,TTBLK+F.NRBD ;CHECK FOR FULL BUFFER
	BGT	10$		;IF GT NO
	CALL	TTC33		;OUTPUT THE LINE
10$:	MOVB	R1,@TTBLK+F.NRBD+2
	INC	TTBLK+F.NRBD+2
	INC	TTBLK+F.NRBD
	RETURN			;

	.END
