TITLE	ERMSG,<INITIALIZATION & ERROR MESSAGE ROUTINE>,14,18-APR-85,DNC/CM

;
;		COPYRIGHT (c) 1974, 1985 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

;
; VERSION M01
;
; AUTHOR: L. WADE 1-JUN-72
;
; MODIFIED BY:
;
;	E. POLLACK U. OF W. 19-DEC-73
;
;	D. N. CUTLER 27-JUL-75
;
; INITIALIZATION AND ERROR MESSAGE ROUTINE
;
; LOCAL DATA
;
; ERROR MESSAGES
;
 
	.MACRO	GENERM MESSAG
	.IF	DF,RSTS		;++RSTS V7.0
	 .BYTE	'?		;++RSTS V7.0
	.ENDC			;++RSTS V7.0
	 .ASCIZ	/MESSAG/
	.EVEN
	.ENDM	GENERM

	.PSECT	ERMSG,GBL,D
BFOVF::	GENERM	<RNO -- INTERNAL BUFFER OVERFLOW> 	;
ILCMM::	GENERM	<RNO -- ILLEGAL COMMAND> 		;
ILCMM2::.ASCIZ	/ON OUTPUT PAGE / 			;
JUSRM1::GENERM	<RNO -- CAN'T JUSTIFY LINE:  > 		;
HALTM::	GENERM	<RNO -- FATAL ERROR, ABORTING> 		;
OUTERR::GENERM	<RNO -- ERROR ON OUTPUT FILE> 		;
INPERR::GENERM	<RNO -- ERROR ON INPUT FILE> 		;
CORERR::GENERM	<RNO -- NOT ENOUGH MEMORY> 		;
LSTERR::GENERM	<RNO -- CAN'T INDENT LIST ELEMENT> 	;
NOTERR::GENERM	<RNO -- CAN'T REDUCE MARGINS> 		;
MGCMDE::GENERM	<RNO -- COMMAND SYNTAX ERROR> 		;
MGOFER::GENERM	<RNO -- OUTPUT FILE SPECIFICATION ERROR>;
MGOPER::GENERM	<RNO -- OUTPUT FILE OPEN FAILURE> 	;
MGIFER::GENERM	<RNO -- INPUT FILE SPECIFICATION ERROR> ;
MGIPER::GENERM	<RNO -- INPUT FILE OPEN FAILURE> 	;
MGPOST::.ASCIZ	/POSITION PAPER, TYPE RETURN/		;

	.PSECT
 
;+
; **-$ERMSG-DUMMY ENTRY POINT TO LOAD ERROR MESSAGES
;-
 
$ERMSG::JMP	TTC3		;TRANSFER TO REAL OUTPUT ROUTINE
 
;+
; **-$INITL-INITIALIZE RUNOFF VARIABLES
;-
 
$INITL::MOV	#JUSTF+PJUSTF+FILLF,F.1 ;INITIAL FLAGS
	CLRB	$GCISW		;CLEAR REREAD FLAG
	CLRB	$SDISW		;CLEAR SECONDARY INPUT FLAG
	CLRB	$ULMSW		;CLEAR UNDERLINE MODE FLAG
	CLRB	$ULNSW		;CLEAR UNDERLINE ENABLE FLAG
	CLRB	$ULSSW		;CLEAR UNDERLINE SIMULATE FLAG
	CLR	$AUTSW		;CLEAR AUTOPARAGRAPH FLAG
	CLR	$CFLSW		;CLEAR WORD CAPITALIZE FLAG
	CLR	$HFLSW		;CLEAR HYPHENATION FLAG
	MOV	#5,$HDRSW	;SET PRINT HEADER FLAG
	MOV	SP,$HPHSW	;SET HYPHENATION ACTIVE
	MOV	SP,$NUMSW	;SET NUMBER PAGE FLAG
	MOV	SP,$PERSW	;SET PUNCTUATION DOUBLE SPACE FLAG
	MOV	SP,$PGPSW	;SET PAGE PENDING FLAG
	CLR	$SBPSW		;CLEAR SUBPAGE FLAG
	CLR	$ULLSW		;CLEAR UNDERLINE LOCK FLAG
	CLRB	GCSCH		;NO SAVED CHARACTER
	CLRB	ULMCH		;NO SAVED UNDERLINE CHARACTER
	MOV	#INLPG,R2	;INITIAL LENGTH OF PAGE
	MOV	R2,PNLPG
	MOV	R2,NLPG
	MOV	#IRMRG,RMARG	;INITIAL RIGHT MARGIN
	MOV	#IRMRG,PRMRG	;INITIAL PERMANENT MARGIN
	MOV	#ILMRG,LMARG	;INITIAL LEFT MARGIN
	CLR	CAS		;INITIAL CASE SETTING IS UPPER
	CLR	WCAS		;CLEAR WORD CASE CONVERSION
	MOV	#APNDN,R0	;CLEAR APPENDIX, CHAPTER AND HEADING LEVELS
	CLR	(R0)+		;
	CLR	(R0)+		;
	CLR	(R0)+		;
	CLR	(R0)		;
	MOV	#LSTK,LSTKP	;INITIALIZE LIST STACK POINTER
	CLR	LSTCT		;CLEAR CURRENT ELEMENT NUMBER
	MOV	#1,PAGENO	;SET INITIAL PAGE NUMBER
	MOV	#PAGHD,R0	;INITIALIZE PAGE HEADING PROTOTYPE
	MOV	(PC)+,(R0)+	;
	.ASCII	/PA/		;
	MOV	(PC)+,(R0)+	;
	.ASCII	/GE/		;
	MOV	(PC)+,(R0)	;
	.ASCIZ	/ /		;
	MOV	#ILSTTP,LSTPT	;SET INITIAL LIST PAGE TEST COUNT
	MOV	#ILSTVS,LSTVS	;SET INITIAL LIST SPACING
	MOV	#SPCNG,NSPNG	;SET INITIAL SPACING
	MOV	#IPARTP,PARPT	;SET INITIAL PARAGRAPH PAGE TEST COUNT
	MOV	#IPARVS,PARSP	;SET INITIAL PARAGRAPH SPACING COUNT
	MOV	#IPARIN,PARIND	;INITIAL PARAGRAPH INDENTING
	CLR	TTLLEN		;INITIALIZE TITLE LENGTH
	MOV	TTLP1,TTLP2	;INITIALIZE TITLE DESCRIPTOR
	MOV	STTLP1,STTLP2	;INITIALIZE SUBTITLE DESCRIPTOR
	CLR	LINEC		;START AT TOP OF PAGE
	CLR	INDCT		;AND LEFT OF PAPER
	CLR	R0		;CLEAR LOOP COUNTER
	MOV	#8.,R1		;SET INITIAL TAB STOP VALUE
10$:	MOVB	R1,TABTAB(R0)	;SET STANDARD TAB STOPS
	ADD	#8.,R1		;ADVANCE TO NEXT TAB STOP
	INC	R0		;INCREMENT LOOP COUNTER
	CMPNE	R0,#17.,10$	;LOOP IF END OF LOOP NOT REACHED
	MOV	R0,NTABS	;SET NUMBER OF TAB STOPS
	CLR	FOOTC		;NO FOOTNOTE LINES HELD YET
	CLR	XFIRST		;NOTHING IN THE INDEX
	MOV	#FFDSW!HYPSW,$SWTCH ;SET DEFAULT SWITCH SETTINGS
	.IF	NDF,RSTS	;++RSTS V7.0
	BIS	#SPLSW,$SWTCH	;++RSTS V7.0 SET DEFAULT TO '/SP'
	.ENDC			;++RSTS V7.0
	MOV	LNIN1,LNIN2	;INITIALIZE LINE INPUT DESCRIPTOR
	CLR	HFIN+4		;SET CHARACTER COUNTS
	MOV	HFOUT,HFOUT+4	;SET CHARACTER COUNTS
	MOV	#OUBUF,HFOUT+2 ;INITIALIZE POINTERS
	CLR	LOWPAG		;SET PAGE NUMBER RANGE TO PRINT
	MOV	#-1,HGHPAG
	RETURN			;
 
	.END
