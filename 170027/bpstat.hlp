! BPSTAT.HLP - help file for BASIC-PLUS STATEMENTS sub-topic
!
!            Copyright (c) 1985 by
! Digital Equipment Corportation, Maynard, Mass.
!
The following statements can be used in a BASIC-PLUS program.  See the
BASIC-PLUS Language Manual for complete details on how to write
BASIC-PLUS programs.  
*EXTEND
  1.  Variable/function names can have up to 29 alphanumeric
      (and dot) characters in addition to leading alphabetic
      characters, FN prefix, and $ or % suffix.
 
  2.  A line ending in & <space/tab sequence> RETURN signals
      continuation.
 
  3.  A line ending in ! comment & <space/tab sequence>
      RETURN signals line-by-line comment and continuation.
 
*CHAIN
 Format:   {line number}  CHAIN <string>  [LINE {<exp>}]
 
 Examples:
    375 chain "PROG2.BAC"
    500 chain "PROG3" line 75%
    600 chain Second.Phase$ line 32000%
 
*CHANGE
 Format:                           <array name>  TO  <sting var>
           {line number}  CHANGE   <string var>  TO  <array name>
 
 Examples:
    25 change Typed.Line$ to Character.Array%
    70 change Character.Array% to Line.to.Print$
    75 change Returned.SYS.Data$ to Byte.Array%
 
*CLOSE
 Format:   {line number} CLOSE <list of variables>
 
 Examples:
    100 close 2%
    250 close I% for I%=1% to 12%
 
*DATA
 Format:   {line number} DATA <list of values>
 
 Example:  300 data 4.3, "Some string", 85, 04, 10
 
*DEF*
DEF*, single line
 
 Format:   {line number} DEF* FN <var>(arg)=<exp(arg)>
 
 Example:  20 def* fnRMS(X,Y,Z) = sqr(X^2% + Y^2% + Z^2%)
 
DEF*, multiple line
 
 Formats:
    {line number} DEF* FN<var>(arg) <statement>
    {line number} FN<var>=<exp>
    {line number} FNEND
 
 Examples:
    10 def* fnFactorial(M%)     ! Factorial function
    20   if M% <= 1% then fnFactorial = 1.         &
                     else fnFactorial = M% *       &
                            fnFactorial(M% - 1%)
    30 fnend
 
*DIM
Memory arrays
 
 Format:  {line number} DIM <var(dimension(s))>
 
 Example: 20 dim A(20%), B$(5%, 10%), C%(45%)
 
Virtual arrays
 
 Format: {line number} DIM
 #<constant>,<var(dimension(s))>=<constant>
 
 Example: 75 dim #4%, A$(100%)=32%, B(50%, 50%)
 
*END
 Format:   {line number} END
 
 Example:  32767 end
 
*FOR
 Format:
   {line number} FOR <numeric var>=<exp> TO <exp> {STEP<exp>}
 
    20 for I%=2% to 40% step 2%
    55 for Cursor% = Here% to Here% + Span%
 
 See also NEXT.
*FOR-UNTIL
 Format:
   {line number} FOR <numeric var>=<exp> {STEP <exp>} UNTIL <cond>
 
 Examples:
    70 for N% = 2% step 4% until N% > A% or N% = B%
    80 for B% = 1% until B% > 10%
 
 See also NEXT.
*FOR-WHILE
 Format:
   {line number} FOR <numeric var>=<exp> {STEP <exp>} WHILE <cond>
 
 Examples:
    110 for I% = 1% step 2% while Q% <> 0%
    120 for Line.Counter% = Current.Line% while Lines.Remaining%
 
 See also NEXT.
*GOTO
 Format:   {line number} GOTO <line number>
 
 Example:  100 goto 50   ! Re-start major loop
 
*ON-GOTO
 Format:   {line number} ON <exp> GOTO <list of line numbers>
 
 Example:  75 on Sub.Function% goto 95, 150, 45, 200
 
*GOSUB
 Format:   {line number} GOSUB <line number>
 
 Example:  90 gosub 200
 
*ON-GOSUB
 Format:   {line number} ON <exp> GOSUB <list of line numbers>
 
 Example:  85 on fnParse%(Command$) gosub 200, 250, 400, 375
 
*IF-THEN
 Format:                            THEN <statement>
           {line number} IF <cond>  THEN <line number>
                                    GOTO <line number>
 
 Examples:
    55 if A% > B% or B% > C% then print "No"
    60 if fnA%(R$) = Q% then 250
    95 if Lines.Remaining% goto 345
 
*IF-THEN-ELSE
 Format:
                           THEN <statement>  
  {line number} IF <cond>  THEN <line number>  ELSE <statement>
                           GOTO <line number>  ELSE <line number>
 
 Examples:
    30 if B% = A% then print "Equal" else print "Not equal"
    50 if A% > N% then 200 else print A%
    75 if B == R then stop else 80
 
*INPUT
 Format:   {line number} INPUT #<exp>,<list of variables>
 
 Examples:
    25 input "Type your name", Her.Name$
    55 input #8%, Sequence%, Voltage, Comment$
 
*INPUT LINE
 Format:   {line number} INPUT LINE #<exp>,<string variable>
 
 Examples:
    40 input line Typed.Line$
    75 input line #1%, Line.From.Disk$
 
*KILL
 Format:   {line number} KILL <string>
 
 Example:  45 kill "NONAME.BAS"
 
*LET
 Format:   {line number} LET <var>,<var>,<var>...=<exp>
 
 Examples:
    55 let Area = pi * Radius^2%
    60 B, C, A = 4.2     ! Multiple assignment
 
*NAME-AS
 Format:   {line number} NAME <string> AS <string>
 
 Examples:
    455 name "NOSUCH.FIL" as Another.Name$
    270 name "WORK:MATRIX.NEW" as "WORK:MATRIX.OLD"
 
*NEXT
 Format:   {line number} NEXT <numeric var>
 
 Examples:
    25 next I%
    60 next Column%
 
*ON ERROR GOTO
 Format:   {line number} ON ERROR GOTO <line number>
 
 Examples:
    10 on error goto 500
    526 on error goto 0     ! Disables error routine
 
*OPEN
Format: 
 {line number} OPEN <string>  FOR INPUT   AS FILE <exp>
                                  OUTPUT
 {,RECORDSIZE<exp>} {,CLUSTERSIZE<exp>} {,FILESIZE<exp>}
 {,MODE<exp>}
 
 Examples:
    10 open "LP:" for output as file Report.Channel%
    20 open "FOO.DAT" as file 3%
    30 open "DB4:DATA.TR" for input as file 10%
 
*PRINT
 Format:   {line number} PRINT #<exp>,<list>
 
 Examples:
    25 print   ! Generates CR/LF
    75 print "Beginning of output"; I%, X*I%
    45 print #4%, "Output to device"; fnCleanup$(A$); B; A
 
*PRINT-USING
 Format:   {line number} PRINT #<exp>, USING <string>,<list>
 
 Examples:
    54 print using "##.##", A
    56 print #7%, using B$, A, B, C
 
*RANDOMIZE
 Format:   {line number} RANDOM{IZE}
 
 Examples:
    55 randomize
    70 random
 
*READ
 Format:   {line number} READ <list of variables>
 
 Example:  25 read A% ,B$ ,C, F1, R2, B(25%)
 
*REM
 Format:   {line number} REM <message>
 
 eXAMPLE:  10 rem This is a comment
 
 Format:   {line number} <statement>!<message>
 
 Example:  15 print    ! Perform a CR/LF
 
*RESTORE
 Format:   {line number} RESTORE
 
 Example:  125 restore
 
*RESUME
 Format:   {line number} RESUME <line number>
 
 Examples:
    1000 resume      ! Equivalent to "resume 0"
    1200 resume 200
 
*RETURN
 Format:   {line number} RETURN
 
 Example:  375 return
 
*STOP
 Format:   {line number} STOP
 
 Example:  75 stop
 
*MAT READ
 Format:   {line number} MAT READ <list of matrices>
 
 Examples:
    55 dim A(20%), B$(32%), C%(15%, 10%)
    90 mat read A, B$(25%), C%
 
*MAT PRINT
Format:   {line number} MAT PRINT #<exp>,<matrix name>
 
Examples:
  10 dim A(20%), B(15%, 20%)
  90 mat print A,          ! Print 10*10 matrix, packed
  95 mat print B(10%, 5%), ! Print 10*5 matrix, 5 elements per line
  97 mat print #2%, A;     ! Print on output channel 2
 
*MAT INPUT
 Format:   {line number} MAT INPUT #<exp>,<list of matrices>
 
 Examples:
    10 dim B$(40%), F1%(35%)
    20 open "DM3:FOO.DAT" for input as file 3%
    30 mat input #3, B$, F1%
 
*MAT-ZER
*MAT-CON
*MAT-IDN
                                              ZER
 Format:   {line number} MAT <matrix name> =  CON  dimension(s)
                                              IDN
 
 Examples:
    10 dim B(15%,10%), A(10%), C%(5%)
    15 mat C% = con            ! All elements of C%() = 1%
    20 mat B = idn(10%, 10%)   ! Identity matrix 10*10
    95 mat B = zer(N%, M%)     ! Clears an N% by M% matrix
 
*IF-MODIFIER
 Format:   <statement> IF <condition>
 
 Examples:
    10  print Result if Result <> 0.
    20  print Result% if Result%
    250 print #3%, Formatted.Line$ if Lines.Remaining%
 
*UNLESS-MODIFIER
 Format:   <statement> UNLESS <condition>
 
 Example:  45 print #5%, chr$(12%); unless Lines.Remaining%
 
*FOR-MODIFIER
 Format:   <statement> FOR <var>=<exp>TO<exp> {STEP<exp>}
 
 Examples:
    75 let B$(I%) = "PDP-11" for I% = 1% to 25%
    80 read Parameter(I%) for I% = 2% to 8% step 2%
 
*WHILE-MODIFIER
 Format:   <statement> WHILE <condition>
 
 Example:  10 gosub 14000 while Lines.Remaining%
 
*UNTIL-MODIFIER
 Format:   <statement> UNTIL <condition>
 
 Example:  115 if B <> 0. then gosub 10000 until EOF%(3%)
 
*SLEEP
 Format:   {line number} SLEEP <expression>
 
 Example:  100 sleep 20%    ! Dismiss job for 20 seconds
 
*WAIT
 Format:   {line number} WAIT <expression>
 
 Example:  525 wait A% + 5%    ! Wait A%+5% seconds for input
 
*LSET
 Format:   {line number} LSET <string var>,<string var>=<string>
 
 Example:  90 lset Part.Number$ = cvt%$(Part.Number%)
 
*RSET
 Format:   {line number} RSET <string var>,<string var>=<string>
 
 Example:  250 rset Total$ = num1$(Total)
 
*FIELD
 Format:   {line number} FIELD #<expr>,<expr>AS<string var>
    {,<expr>AS<string var>}...
 
 Example:  75 field #2%, 2% as Part.Number$, 20% as Description$
 
*GET
 Format:   {line number} GET #<expr>,RECORD<expr>
 
 Example:  100 get #1%, record Index% + Offset%
 
*PUT
 Format:   {line number} PUT #<expr> {,RECORD<expr>} {,COUNT<expr>}
 
 Example:  500 put #1%, count 80%
 
*UNLOCK
 Format:   {line number} UNLOCK#<expr>
 
 Example:  700 unlock #3%
