! ACCNTS.HLP - HELP file for ACCOUNTS topic
!
!            Copyright (c) 1985 by
! Digital Equipment Corportation, Maynard, Mass.
!
Accounts are used on RSTS to identify users, to store files, and to
maintain user access information like passwords and privileges.

Each account on the system is assigned a unique identification number,
called a "project-programmer" number, or PPN.  The PPN consists of two
numbers separated by a comma and enclosed in square brackets, such as
[1,2].  The first number, called the project number, specifies the
project or group that the account belongs to.  The second number, called
the programmer number, specifies a particular user within a group.  For
example, the PPNs [100,2] and [100,3] represent two accounts (2 and 3)
in the same group (100).

Both project and programmer numbers are integers in the range 0 to 254.
The account [0,0] does not exist and cannot be created.  Jobs which are
running in a logged-out state are displayed as belonging to account
[0,0].

If you have sufficient privilege, you can issue the CREATE/ACCOUNT
command to create an account on a disk.  You can later use the
DELETE/ACCOUNT command to delete accounts no longer needed.  Once you
create an account, you can use the SET ACCOUNT command to modify its
characteristics, such as privileges or quotas.  Any user with SETPAS
privilege can use the SET PASSWORD command to change his or her
account's password.  If you have additional privileges, you can use the
SET PASSWORD command to change the password of any account.

You can issue the SHOW ACCOUNT command to display the characteristics
and status of your accounts.  With sufficient privilege you can also use
the SHOW ACCOUNT command to display other accounts as well.

You can obtain on-line information about these commands under the help
topic of the same name.  For example, to find out about the
CREATE/ACCOUNT command, see the help topic CREATE/ACCOUNT.

There are two kinds of accounts you can create: user accounts and
non-user accounts.

User accounts are normally created on the system disk and include all of
the information necessary to log into the system (password), and define
what functions the user is allowed to perform (privileges).  User
accounts are also used to store files on disk.

Non-user accounts are only created for the purpose of storing files.
They contain no access or authorization information.  If you create a
non-user account on the system disk, then that account can only be used
to maintain files;  you cannot run jobs in or access the system from
that account.  Note that all [0,*] accounts are always created as
non-user accounts and can only be used to store files.

Normally, all of the accounts you create on a private disk are non-user
accounts.  If you want, you can create a user account on a private disk.
However, RSTS will ignore any access or authorization information on it.

If you use a multi-disk public structure (a single system disk and one
or more public disks), then you only need to create accounts on the
system disk.  RSTS will automatically create (non-user) accounts on the
public disks as they are needed to store files.  If possible, you should
avoid using multi-disk public structure because of the significant
overhead incurred in accessing accounts across several disks.

Accounts have many associated attributes that control how the account
can be used.  For example, an account with the NOPASSWORD_PROMPT
attribute can be logged in to without requiring a password.

See the appropriate ACCOUNTS sub-topic for further information on
account attributes.

Also, see the topics PRIVILEGES and QUOTAS for more information about
account privileges and quotas.  

*Captive
A captive account can only be used under the control of a DCL command
procedure.  As such, it can only be used to perform actions defined in
its login command file.  For example, you may want to establish a
special account to be used to perform daily or weekly backups of the
system.  You would create a LOGIN.COM file for the account that would
prompt the user for the devices to be used and then issue the
appropriate BACKUP command.

By designating such an account as a captive account, you are assured
that the user cannot exit the command procedure and return to the
interactive level.  If RSTS sees that a captive account is at the
interactive level, it immediately removes the job from the system.

Generally, you can write LOGIN.COM procedures in such a way as to
prevent a user from exiting it.  However, by marking the account
captive, you are assured an extra margin of security.  If, because of
an error in the command file, the user is able to exit, RSTS will
remove the job before the user can perform any other actions.

Note that captive accounts prevent users from performing unwanted
actions at the interactive level.  However, they do not prevent users
from performing unwanted actions within a command procedure.  Care
must be taken when designing a "secure" LOGIN command procedure to
ensure that users can only perform the actions intended.

By default, accounts are created nocaptive.  You can later use the SET
ACCOUNT command to change an account's captive attribute.

See the /CAPTIVE qualifier of the CREATE/ACCOUNT command for further
details.  

*Cluster size
The cluster size of an account determines how many files can be stored
in it.  The larger the cluster size, the more files the account can
maintain.  Use a small cluster size for accounts that do not store
many files, to reduce the amount of disk space required for the
account.

Account cluster sizes are chosen from the values 1, 2, 4, 8, and 16.
You cannot use a value smaller than the pask cluster size of the disk
where the account resides.  Once you create an account, you cannot
change its cluster size.  If it is necessary to do so, then you must
backup all the files in the account, delete the account and re-create
it with the new cluster size, then restore its files.

See the /CLUSTER_SIZE qualifier of the CREATE/ACCOUNT command for
further details.  

*Dialup
You can designate as account as dialup or nodialup.  If an account is
nodialup, then you cannot log into that account on a dialup terminal
line.

By default, accounts are created as dialup accounts.  You can later
use the SET ACCOUNT command to change an account's dialup attribute.

See the /DIALUP qualifier of the CREATE/ACCOUNT command for further
details.  

*Expiration date
*|Expired
You can assign an expiration date to an account.  Once an account's
expiration date has passed, the account cannot be used.  You cannot
log into or create jobs in an expired account.

By default, accounts are created NOEXPIRE, meaning that no expiration
date is assigned.  You can later use the SET ACCOUNT command to change
an account's expiration date (/EXPIRE=date), remove an account's
expiration date (/NOEXPIRE), or expire the account immediately
(/EXPIRE).

See the /EXPIRE qualifier of the CREATE/ACCOUNT command for further
details.  

*Interactive
You can designate an account interactive or nointeractive.  If an
account is nointeractive, then you cannot log into it, but you can
still run jobs in it through batch or other command procedures.

By default, accounts are created interactive.  You can later use the
SET ACCOUNT command to change an account's interactive attribute.

See the /INTERACTIVE qualifier of the CREATE/ACCOUNT command for
further details.  

*Lookup
Each user account can have a lookup or nolookup password.  Nolookup
passwords are more secure than lookup passwords since they are longer
(14 characters vs 6 characters for lookup passwords), allow more
characters to choose from for your password (any printable character
plus space and tab vs alpha-numeric characters for lookup passowrds),
and are stored in a "hashed" format on the disk so that they cannot be
discovered by reading data on the disk.

Lookup passwords are provided for compatibility with earlier versions
of RSTS.  Some applications may need to read account passwords stored
on the disk, and therefore require lookup passwords to function
correctly.

Because of the security benefits from nolookup passwords, you are
encouraged to use nolookup passwords.  By default, accounts are
created with nolookup passwords.

You can later use the SET ACCOUNT command to change an account's
lookup attribute.  Note that you must define a new password for an
account if you change its lookup or nolookup attribute.

You can also use the DSKCVT (disk convert) utility at any time to
convert all of the accounts on a disk from lookup passwords to
nolookup passwords, without having to enter a new password for each
account.

See the /PASSWORD_PROMPT qualifier of the CREATE/ACCOUNT command for
further details.  Also, you can obtain additional on-line information
about passwords under the help topic PASSWORDS.  

*Names
You can assign a one to 13 character name to each user or nouser
account you create.  An account's name field can be used to identify
the account's owner or describe the account's use.  You can use any
printable character plus space and tab in the account name field.

An account's name is displayed by the SHOW ACCOUNT command.  It is
also printed in block letters on the job and file header pages of
files printed by Print/Batch services (PBS).  The BROADCAST command
also includes the account's name in the message header displayed on a
target terminal.

By default, no name is assigned to an account when you create it.  You
can later use the SET ACCOUNT command to define or change an account's
name.

See the /NAME qualifier of the CREATE/ACCOUNT command for further
details.  

*Network
You can designate as account as network or nonetwork.  If an account
is nonetwork, then you cannot log into that account via the SET HOST
command from another network node.  Also, you cannot create network
server jobs in the account for performing other network tasks.  Mark
accounts nonetwork to restrict their use to the local node.

By default, accounts are created as network accounts.  You can later
use the SET ACCOUNT command to change an account's network attribute.

See the /NETWORK qualifier of the CREATE/ACCOUNT command for further
details.  

*Password prompt
The password prompt attribute determines whether a password is
required to log into the account.  By default, user accounts are
created with a password prompt, requiring you to provide the correct
password before you can log into it.

If you create an account with no password prompt, then the account is
a "guest" account;  anyone can log into the account without supplying
a password.

You may want to create guest accounts that are captive, allowing any
user to log into them, but only performing tasks defined in the
account's LOGIN.COM command file.  See the ACCOUNT sub-topic CAPTIVE
for further details on defining and using captive accounts.

You can use the SET ACCOUNT command to change an account password
prompt attribute.  Note that changing an account to nopassword prompt
does not disturb the account's password.  If you later change the
account back to password prompt, the account's original password is
reactivated.

See the /PASSWORD_PROMPT qualifier of the CREATE/ACCOUNT command for
further details.  

*Position
When you create an account, you can specify where the directory data
for its files should be located on the disk.  By locating the
directory data of an account close to other directory information on
the disk, you may improve disk performance by minimizing the
"scattering" of data across the disk.

By default, an account's directory information is positioned near the
master and group file directories.  You can also locate it near the
middle of the disk, or at a specific disk cluster.

Once you create an account, you cannot change the position of its
directory.  If you need to do so, you must backup the account's files,
delete and re-create the account at the new position, then restore the
account's files.

See the /POSITION qualifier of the CREATE/ACCOUNT command for further
details.  

*Privileges
Each user account has a set of authorized privileges that determines
what system functions a job running in the account can perform.  An
account can be assigned all privileges, allowing it to perform any
task the system is capable of performing.  Similiarly, an account can
be assigned no privileges, allowing it to perform only those tasks
that require no privileges to perform.

By default, an account is assigned the privilege SETPAS when it is
created, allowing its owner to change the account's password.  You can
later use the SET ACCOUNT command to change an account's privileges.

See the /PASSWORD qualifier of the CREATE/ACCOUNT command for further
details.  Also, you can obtain additional on-line information about
privileges and how to use them under the help topic PRIVILEGES.  

*Size
Size refers to the number of clusters in the account's directory to
preallocate when the account is created.  Each account uses a maximum
of seven clusters.  Normally, RSTS allocates new clusters to the
account as they are needed to store files.  By preallocating some or
all of an account's clusters when you create the account, you reserve
space on the disk for them.  Also, you reduce the overhead necessary
to access the account's clusters, since they are allocated at the same
time.

By default, an account is created with one cluster preallocated.  See
the /SIZE qualifier of the CREATE/ACCOUNT command for further details.

*Template
When you create an account, you can accept all the default attributes
for the account, or you can specify different attributes.  Because of
the many attributes associated with an account, it is difficult to
specify all of the qualifier necessary with the CREATE/ACCOUNT command
to properly set up the account.

For this reason, the CREATE/ACCOUNT command accepts a /TEMPLATE
qualifier that allows you to specify an existing account to use as the
basis for setting up the new account.  Except for password, all of the
template account's attributes become the default values for the new
account.  You can still specify individual qualifiers to override the
template account's attribute.

For example, if you create all accounts in the group [100,*] with the
same attributes, then to create a new account [100,30], you could
issue the command:

     $ CREATE/ACCOUNT/TEMPLATE=[100,1] [100,30]

This would create the account [10,30] and assign it the same
attributes as the account [100,1].

See the /TEMPLATE qualifier of the CREATE/ACCOUNT command for further
details on how to use the template account feature.
