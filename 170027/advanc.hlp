! ADVANC.HLP - HELP file for ADVANCED topic
!
!            Copyright (c) 1985 by
! Digital Equipment Corportation, Maynard, Mass.
!
The HELP topic ADVANCED is generally for reference by RSTS/E
programmers.  You can find more complete information about the
sub-topics below in the RSTS/E Programming Manual and the RSTS/E System
Directives Manual.  

*ASCII chart
The table below lists the 7-bit ASCII characters and their decimal and
octal values:
 
CHAR DEC OCT   CHAR DEC OCT   CHAR DEC OCT   CHAR DEC OCT
---- --- ---   ---- --- ---   ---- --- ---   ---- --- ---
 NUL   0   0     SP  32  40     @   64 100     `   96 140
 ^A    1   1     !   33  41     A   65 101     a   97 141
 ^B    2   2     "   34  42     B   66 102     b   98 142
 ^C    3   3     #   35  43     C   67 103     c   99 143
 ^D    4   4     $   36  44     D   68 104     d  100 144
 ^E    5   5     %   37  45     E   69 105     e  101 145
 ^F    6   6     &   38  46     F   70 106     f  102 146
 BEL   7   7     '   39  47     G   71 107     g  103 147
 BKSP  8  10     (   40  50     H   72 110     h  104 150
 TAB   9  11     )   41  51     I   73 111     i  105 151
 LF   10  12     *   42  52     J   74 112     j  106 152
 VT   11  13     +   43  53     K   75 113     k  107 153
 FF   12  14     ,   44  54     L   76 114     l  108 154
 CR   13  15     -   45  55     M   77 115     m  109 155
 ^N   14  16     .   46  56     N   78 116     n  110 156
 ^O   15  17     /   47  57     O   79 117     o  111 157
 ^P   16  20     0   48  60     P   80 120     p  112 160
 XON  17  21     1   49  61     Q   81 121     q  113 161
 ^R   18  22     2   50  62     R   82 122     r  114 162
 XOFF 19  23     3   51  63     S   83 123     s  115 163
 ^T   20  24     4   52  64     T   84 124     t  116 164
 ^U   21  25     5   53  65     U   85 125     u  117 165
 ^V   22  26     6   54  66     V   86 126     v  118 166
 ^W   23  27     7   55  67     W   87 127     w  119 167
 ^X   24  30     8   56  70     X   88 130     x  120 170
 ^Y   25  31     9   57  71     Y   89 131     y  121 171
 ^Z   26  32     :   58  72     Z   90 132     z  122 172
 ESC  27  33     ;   59  73     [   91 133     {  123 173
 FS   28  34     <   60  74     \   92 134     |  124 174
 GS   29  35     =   61  75     ]   93 135     }  125 175
 RS   30  36     >   62  76     ^   94 136     ~  126 176
 US   31  37     ?   63  77     _   95 137    DEL 127 177

For more information on ASCII and Radix-50 character codes, including
8-bit (multinational) characters, see the RSTS/E Programming Manual.  

*CPU
The table below lists the CPU types that RSTS/E supports:
 
+-------+---------+-------+------------+-----+-----+-----+-----+
|       | Address | I & D | Supervisor |     |     |     |     |
|  CPU  |  Space  | Space |    Mode    | FPU | FPA | CIS | FIS |
+-------+---------+-------+------------+-----+-----+-----+-----+
| 11/23 | 22-bit  |  N/A  |    N/A     | Opt | Opt | Opt | N/A |
| 11/24 | 22-bit  |  N/A  |    N/A     | Opt | Opt | Opt | N/A |
| 11/34 | 18-bit  |  N/A  |    N/A     | Opt | N/A | N/A | N/A |
| 11/35 | 18-bit  |  N/A  |    N/A     | N/A | N/A | N/A | Opt |
| 11/40 | 18-bit  |  N/A  |    N/A     | N/A | N/A | N/A | Opt |
| 11/44 | 22-bit  |  Yes  |    CSM     | Opt | N/A | Opt | N/A |
| 11/45 | 18-bit  |  Yes  |    CSM*    | Opt | N/A | N/A | N/A |
| 11/50 | 18-bit  |  Yes  |    CSM*    | Opt | N/A | N/A | N/A |
| 11/53 | 22-bit  |  Yes  |    CSM     | Yes | N/A | N/A | N/A |
| 11/53+| 22-bit  |  Yes  |    CSM     | Yes | N/A | N/A | N/A |
| 11/55 | 18-bit  |  Yes  |    CSM*    | Opt | N/A | N/A | N/A |
| 11/60 | 18-bit  |  N/A  |    N/A     | Yes | Opt | N/A | N/A |
| 11/70 | 22-bit  |  Yes  |    CSM*    | Opt | N/A | N/A | N/A |
| 11/73 | 22-bit  |  Yes  |    CSM     | Yes | N/A | N/A | N/A |
| 11/83 | 22-bit  |  Yes  |    CSM     | Yes | Yes | N/A | N/A |
| 11/84 | 22-bit  |  Yes  |    CSM     | Yes | Yes | N/A | N/A |
| 11/93 | 22-bit  |  Yes  |    CSM     | Yes | Yes | N/A | N/A |
| 11/94 | 22-bit  |  Yes  |    CSM     | Yes | Yes | N/A | N/A |
+-------+---------+-------+------------+-----+-----+-----+-----+
    Opt  = Available as an option
    N/A  = Not available
    CSM  = CPU hardware implements the CSM instruction
    CSM* = RSTS/E monitor emulates the CSM instruction

*Disks
@HELP$:DISKS.HLP 

*FIP codes
The table below lists the FIP codes used in SYS calls:
 
-29 Get Mon Tbls III    -28 Spooling            -27 Snap Shot Dump
-26 File utility        -25 R/W attributes      -24 Add/Delete CCL
-23 Terminating FSS     -22 Special run prior   -21 Temporary privs
-20 Lock/unlock job     -19 Set logins          -18 RTS/LIB handling
-17 Name file to RTS    -16 Shutup              -15 Accounting dump
-14 Change date/time    -13 Change Pr/RB/Si     -12 Get Mon Tables I.
-11 Change file stats   -10 Normal FSS          -9 Hang up a dataset
-8 WCB/DDB information  -7 CTRL/C trap enable   -6 Poke memory
-5 Broadcast to a KB    -4 Force to a keyboard  -3 Get Mon Tables II.
-2 Disable logins       -1 Enable logins         0 Create user account
 1 Delete user account   2 Obsolete              3 Disk pack status
 4 Login                 5 Logout                6 Attach/Reattach
 7 Detach                8 Change passw/quota    9 Return error text
10 Assign/Reassign dev  11 Deassign device      12 Deassign devices
13 Zero a device        14 Read/reset Acct data 15 Dir lookup on index
16 Set terminal chars   17 Disk lookup on name  18 "Old" send/receive
19 Disk caching control 20 Date and time conv.  21 System logicals
22 Message send/receive 23 Add/rem system files 24 Create a job
25 Wildcard PPN lookup  26 Return job status    28 Set/Clear privs
29 Stall/unstall system 31 3rd party priv check 32 Check access rights
33 Open next disk file  34 Set system defaults 

For more information on these FIP calls, see the RSTS/E Programming
Manual.  

*Floppy SPEC%
Format:

     VALUE% = SPEC%( FUNCTION%, PARM, CHANNEL%, 18% )

CHANNEL% is always the I/O channel on which the flexible diskette is
open
 
Return Current Density
  FUNCTION% = 0%
  PARM      = 0.
  VALUE%    = 1% for single density
              2% for double density (never on RX01)
 
Re-compute Density (not on RX01)
  FUNCTION% = 1%
  PARM      = 0.
  VALUE%    = 1% for single density
              2% for double density
 
Re-format a Flexible Diskette (not on RX01)
  (Note that any data already on the diskette is lost)
  FUNCTION% = 2%
  PARM      = 1. for single density
              2. for double density
  VALUE%    is meaningless

For more information on SPEC% for flexible diskettes, see the RSTS/E
Programming Manual.  

*Magtapes
@HELP$:MAGTAP.HLP 

*PEEK
The PEEK function allows you to examine words in the Monitor part of
memory.  You must have RDMEM privilege to execute this function.

Format:

     Y%=PEEK(A%)

where A% is the word address to be examined, and Y% returns the
contents of that word.

Some common PEEK locations are:
 
    36  IDATE    Date when system was last started by START.
    38  ITIME    Time when system was last started by START.
   512  DATE     Current system date.
   514  TIME     Current system time.
   518  JOB      Low byte contains current job number times 2.
   520  JOBDA    Address of current job data block (JDB).
   522  JOBF     Address of the JDFLG word in current JDB.
   524  IOSTS    Address of the JDIOST (low) byte and JDPOST
                 (high) byte in the current job's JDB.

The current ppn can be found by:
 
   A%    = PEEK(PEEK(PEEK(520%)+8%)+24%)
   PROJ% = SWAP%(A%) AND 255%
   PROG% = A% AND 255%

For more information on the PEEK function, see the RSTS/E Programming
Manual.  

*Pseudo-keyboard
*|PSEUDO KEYBOARD
*|PK
*|PSUEDO KEYBOARD
*|PSUDO KEYBOARD
Pseudo Keyboard    0 Any job at PK is killed when PK is closed.
OPEN modes are:    1 Any job at PK detaches when PK is closed.
 
Pseudo Keyboard    1 Put regardless of job state at PK.
PUT RECORD         2 Put only if PK job in CTRL/C state.
values are:        4 Do not actually put data (status test).
                   8 Wait for buffer space if necessary.
                  16 Kill the job at the PK.
                  32 Reset keyboard position pointer.
 
Errors returned    3 Job at PK not ready for input.
from PUT are:      4 No buffer space available.
                   5 No job exists at PK.
                  28 Job at PK not in CTRL/C state.

For more information on pseudo keyboards, see the RSTS/E Programming
Manual.  

*|SPIKE
>> Grrrrowl...  Woof!  Woof!  <<

Spike is the RSTS/E mascot.  He is a bulldog:  a stocky, short-haired
dog with a large, square-jawed head.  Spike loves to chase Cheshire
cats, and his favorite delicacy is Cheshire cat tails.

Spike can frequently be seen at DECUS gatherings.  

*STATUS word
The BASIC-PLUS STATUS variable contains status of program's most
recently executed OPEN statement or filename string scan call.

Format:

     Y%=STATUS

where Y% is the current status word returned.

The low-order byte of STATUS contains the handler index of the device
last opened or FSS'd.  To isolate the handler index byte from the
STATUS word, use the statment:

     HANDLER% = STATUS AND 255%

The following table lists the device handler indexes:
      
     Index  Device               Index  Device
     -----  ------               -----  ------
       0    Disk                  20    RJ: device
       2    Keyboard              22    NL: Null device
       6    Line Printer          24    DMC11/DMV11/DDCMP
      12    Card reader           32    KMC
      14    Magnetic tape         34    IBM interconnect
      16    Pseudo-keyboard       38    DMP11/DMV11
      18    Flexible diskette     40    Ethernet device

The high-order byte of the STATUS word contains flag bits that provide
information about the device's characteristics and current access
mode, as listed in the table below:
 
(STATUS AND 256%) <> 0%    device is non-file structured
(STATUS AND 256%)  = 0%    device is file structured
 
(STATUS AND 512%) <> 0%    no read access to device
(STATUS AND 512%)  = 0%    read access to device
 
(STATUS AND 1024%) <> 0%   no write access to device
(STATUS AND 1024%)  = 0%   write access to device
 
(STATUS AND 2048%) <> 0%   device maintains horizontal position
(STATUS AND 2048%)  = 0%   device does not maintain horizontal
 position
 
(STATUS AND 4096%) <> 0%   device accepts modifiers
(STATUS AND 4096%)  = 0%   device does not accept modifiers
 
(STATUS AND 8192%) <> 0%   character device
(STATUS AND 8192%)  = 0%   not a character device
 
(STATUS AND 16384%) <> 0%  interactive device
(STATUS AND 16384%)  = 0%  not an interactive device
 
(STATUS <  0%)             random access blocked device
(STATUS >= 0%)             sequential device

For more information on the STATUS variable, see the BASIC-PLUS
Language Manual.  

*SYS calls
The BASIC SYS function has the form:

     A$=SYS(B$)

The ASCII value of the first byte in B$ determines the system function
performed.  The rest of B$ may contain parameters for the function, as
described in the RSTS/E Programming manual.  The possible values for
the first byte are:
 
  0 Cancel CTRL/O      5 Exit no prompt      10 Special reserved
  1 Enter Tape mode    6 FIP call            11 Cancel Type-ahead
  2 Enable Echo        7 Get Core Common     12 Last opened file
  3 Disable Echo       8 Put Core Common     13 Special reserved
  4 ODT Submode        9 Exit to RTS         14 Execute CCL Command

For more information SYS calls, see the RSTS/E Programming Manual.  

*Terminals
*|KEYBOARDS
*|TTYS
*|KBS
@HELP$:TERMNL.HLP
