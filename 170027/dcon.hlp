! DCON.HLP - HELP file for ON command
!
!            Copyright (c) 1985 by
! Digital Equipment Corportation, Maynard, Mass.
!
The ON command specifies what action DCL should take when it encounters
a warning, error or severe error while processing a command file.

The ON command is also used to specify what action DCL should take when
it detects that a CONTROL/C interrupt has occurred.  See the sub-topic
CONTROL_C for futher information.

The ON command is only meaningful within a command procedure and is not
allowed at the interactive level.

Format:

     ON severity-level THEN [$]command

Severity-level can be any one of the keywords WARNING, ERROR or
SEVERE_ERROR.  Command can be any valid DCL command, optionally
preceeded by the dollar sign ($) prefix.

The severity level keyword defines the error level at which DCL will
execute the command you specify;  errors at a less severe level are
ignored.

For example, the default error setting, ON ERROR THEN _EXIT, tells DCL
to exit a command procedure whenever an error or severe error occurs.
DCL continues processing if a warning occurs.

Each command level can define its own error handling.  When a command
procedure exits, its exit status is passed to the next higher level
command procedure.  The action that occurs next depends on the severity
code passed and the next command level's ON setting.

You can use the SET NOON command to temporarily disable DCL error
handling, and SET ON to re-enable it.

DCL maintains its current error status in the global symbols $SEVERITY
and $STATUS.  You can obtain additional on-line information about these
symbols under the SYMBOLS sub-topics $SEVERITY and $STATUS.

Privileges required:

     None

For complete information on DCL error handling in command procedures,
see the RSTS/E Guide to Writing Command Procedures.  

*CONTROL_C
*|CONTROL=C
@HELP$:DCONCC.HLP 

*ERROR
  ERROR messages are displayed with a single question mark (?) prefix
  and usually means that the command or operation you specified was
  not completed.  For example, if you issue the command:

       $ PRINT TEST.DAT

  and the file TEST.DAT does not exist, DCL issues the ERROR message:

       ?File _SY:[1,10]TEST.DAT does not exist

  Whenever DCL encounters an ERROR, it stores the value 2 in the
  global symbols $SEVERITY and $STATUS.  

*Examples

  $ ON WARNING THEN GOTO CLEAN_UP

       Indicates that DCL should branch to the line beginning with the
       label $CLEAN_UP: whenever a warning, error or severe error
       occurs.

  $ ON SEVERE_ERROR THEN STOP

       Indicates that DCL should stop whenever a severe error occurs,
       but to continue processing if a warning or error occurs.

  $ ON ERROR THEN $GOTO RE_PROMPT

       Indicates that DCL should branch to the line beginning with the
       label $RE_PROMPT: whenever an error or severe error occurs, but
       to continue processing if a warning occurs.

*SEVERE_ERROR
  SEVERE_ERROR messages are displayed with a double question mark (??)
  prefix and usually indicates a hardware or software (program)
  failure.  Generally, any program running when a severe error occurs
  is aborted.  Some programs may issue severe errors for other
  reasons.

  For example, if RSTS encounters a corrupted directory structure
  while processing a directory command, it issues the error message:

       ??Bad directory on device

  Whenever DCL encounters a SEVERE_ERROR, it stores the value 4 in the
  global symbols $SEVERITY and $STATUS.  

*WARNING
  WARNING messages are displayed with a single percent sign (%) prefix
  and usually means that the command or operation you specified was
  completed, but alerts you to some condition.  For example, if you
  issue the command:

       $ MOUNT _DM1:  TSTDSK

  and the disk was initialized to be mounted read-only by default, DCL
  displays the warning message:

       %Disk mounted read-only

  Whenever DCL encounters a WARNING, it stores the value 0 in the
  global symbols $SEVERITY and $STATUS.
