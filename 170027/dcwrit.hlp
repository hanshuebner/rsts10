! DCWRIT.HLP - HELP file for WRITE command
!
!            Copyright (C) 1985 by
! Digital Equipment Corporation, Maynard, Mass.
!
The WRITE command writes records to a file that you open for writing or
appending with an OPEN command.  

Format:

     WRITE channel-number data[,...] 

You must specify a channel-number in the range 0 to 13 that identifies
the file to be written.  You can specify channel-number either as a
literal or as a symbol that evaluates to a number.  If you specify
channel 0, the data is written to the terminal.

You must specify the data to write to the file.  The data list can
contain one or more string expressions separated by commas.  If you
include integer expressions in the data list, DCL automatically converts
them to string expressions before writing to the file.

DCL writes each data item to the file as a string with no intervening
characters between each item.  You must include spaces if you want to
separate data strings written to the file.

For more information on using the WRITE command, see the RSTS/E Guide to
Writing Command Procedures.  

Privileges required:

     None

*/DELIMITER
*|/NODELIMITER
  /DELIMITER
  /NODELIMITER

  Specifies whether to write the string with trailing carriage
  return/line feed (CR/LF) characters.  The default is /DELIMITER.
  The /NODELIMITER qualifier is useful when you need several WRITE
  commands to write a single record, or when you want a record
  delimiter other than CR/LF, such as form feed (FF).  

  You specify an alternate record delimiter in the data list.  

*Examples

  The following example defines and uses form feed as an alternate
  record delimiter:

  $ FF = F$CHR(12)
  $ WRITE/NODELIMITER 0 TEXT,FF


  In the following command procedure, INQUIRE commands prompt for
  symbol values and WRITE commands perform automatic symbol
  substitution when processing the expressions, displaying the result
  at the terminal:

  $ LOOP:
  $ INQUIRE/EXIT=END VAL1 "1st number"
  $ VAL1 = F$INTEGER(VAL1)
  $ INQUIRE VAL2 "2nd number"
  $ VAL2 = F$INTEGER(VAL2)
  $ WRITE 0 VAL1," + ",VAL2," = ",VAL1+VAL2
  $ WRITE 0 VAL1," * ",VAL2," = ",VAL1*VAL2
  $ GOTO LOOP
  $ END:
  $ EXIT


  The following example shows how to read the records from one file
  and how to write those records selectively to a new file in a
  command procedure:

  $ INQUIRE IN_FILE "Specify the file to read"
  $ INQUIRE OUT_FILE "Specify the file to write"
  $ OPEN 1 'IN_FILE'
  $ OPEN/WRITE 2 'OUT_FILE'
  $ LOOP:
  $  READ/END_OF_FILE=DONE 1 RECORD
  $  IF RECORD .EQS. "" THEN GOTO LOOP
  $  WRITE 2 RECORD
  $ GOTO LOOP
  $ DONE:
  $ CLOSE 1
  $ CLOSE 2
  $ EXIT
