! FILES.HLP - HELP file for FILES topic
!
!            Copyright (c) 1985 by
! Digital Equipment Corportation, Maynard, Mass.
!
A RSTS/E file specification contains some or all of the following:

     node::device:[proj,prog]filename.type/qualifier(s)

Where the parts of the file specification are as follows:
 
    node::       node name on DECnet/E network 
    device:      name of device where the file is stored
    [proj,prog]  number of the account where the file is stored
    filename     name of the file
    .type        type of file
    /qualifiers  cluster size, position, data mode, protection code,
                 and/or file size (depending on the command)

For more information on RSTS/E file specifications, see the RSTS/E
System User's Guide.  

*Device
A device consists of a two-character device name, an optional unit
number, and an ending colon (:) character.  Devices can also be
specified using locical names defined with the ASSIGN command.  To
ensure that the device you specify is not translated as a logical
name, place an underscore (_) character in front of the device name.

Some examples of devices are:
 
     SY0:     The system disk
     SY:      The public disk structure
     LP0:     Line printer unit 0
     LP:      Also line printer unit 0
     MM1:     Magtape unit 1
     MS0:     TS-11 type magtape unit 0
     KB15:    Keyboard unit 15
     KB:      Your current keyboard
     TEST:    The device assigned the logical name TEST
     _DL0:    The RL-type disk unit 0.  The underscore ensures
               that the actual disk is referenced, not a device
               assigned the logical name DL0:.

For more on-line information about devices, see the help topic
DEVICES.  

*Name
File names are one to six characters long consisting of numbers or
letters.  You should select file names that help to describe the
purpose or use of a file.  For example, a BASIC-PLUS program that
computes averages could be called AVERGE.BAS, while a document file
desribing RSTS V9.0 could be called RSTSV9.DOC.

If you specify a file name longer than six characters, RSTS will
truncate the name to the first six characters.  

*Node
Node names allow you to reference files on remote systems using
DECnet/E.  A complete node name consists of:

     node"user password account"::

The node name consists of one to six characters and can be letters or
numbers.  The "user password account" field contains information
necessary to access remote systems.  The meanings of each field within
the quotes is system dependent;  on RSTS, the first field is a user
ppn (project,programmer number), the second field is the user's
password, and the third field is the system password, if one is
required.  The node spec is always ended with two colon (::)
characters.

Most RSTS utilities that support network file specifications will
prompt you for the User, Password, and Account fields if you do not
include them with the node spec.  

*PPN
*|Project,programmer number
*|Account number
*|Programmer number
The project,programmer number (PPN) specifies the account where the
file is located.  The format of a PPN is:

     [project,programmer]

where project is the file's group (project) number, and programmer is
the file's programmer number within the group.  Each number is in the
range 0 to 254 and describes a single account on the system.  Account
[0,0] is not a valid account.

Some sample PPNs are:
      
     [0,1]     The system files account
     [1,2]     The system library ($ account)
     [1,1]     The default LB: location

Files in group 0 require special privileges to write.  In addition to
write access to a group 0 file, you must also have SYSIO privilege to
write, delete or rename a file in the 0 group.  

*Protection codes
A file's protection code defines who has read, write or execute access
to it.  A protection code is a value between 0 and 255 consisting of
the following binary bit values added together:

For non-executable files (bit value 64 off):
 
+-----+----+----+----+----+----+----+----+
| 128 | 64 | 32 | 16 |  8 |  4 |  2 |  1 |
+-----+----+----+----+----+----+----+----+
    |    |    |    |    |    |    |    |
    |    |    |    |    |    |    |    Read protect against owner
    |    |    |    |    |    |    Write protect against owner
    |    |    |    |    |    Read protect against group
    |    |    |    |    Write protect against group
    |    |    |    Read protect against world
    |    |    Write protect against world
    |    Executable program (off)
    Erase file upon deletion (requires SYSIO privilege)

For executable files (bit value 64 on):
 
+-----+----+----+----+----+----+----+----+
| 128 | 64 | 32 | 16 |  8 |  4 |  2 |  1 |
+-----+----+----+----+----+----+----+----+
    |    |    |    |    |    |    |    |
    |    |    |    |    |    |    |    Execute protect against owner
    |    |    |    |    |    |    Read/write protect against owner
    |    |    |    |    |    Execute protect against group
    |    |    |    |    Read/write protect against group
    |    |    |    Execute protect against world
    |    |    Read/write protect against world
    |    Executable program (on)
    Temporary privileged program (requires TMPPRV privilege)

The following are common file protection codes:
 
 /PROTECTION=60   Read and write protected against all but owner
 /PROTECTION=56   Owner's group may read, only owner may write
 /PROTECTION=40   Anyone may read, only owner may write
 /PROTECTION=0    Anyone may read or write
 
 /PROTECTION=104  Only owner may read or write; all may execute
 /PROTECTION=124  Only owner may read, write, or execute
 /PROTECTION=232  Program with temporary privilege; owner may
                  read or write; all may execute
 /PROTECTION=252  Program with temporary privilege; owner may
                  read or write; group may execute

The GREAD, GWRITE, WREAD and WRITE privileges allow access to files
regardless of a file's protection code.

Users with WREAD privilege can read or execute any file on the system,
regardless of the file's protection code.  Users with WWRITE privilege
can write, rename or delete any file on the system, regardless of the
file's protection code.

Users with GREAD privilege can execute or read any file in their
group, regardless of the file's protection code.  Users with GWRITE
privilege can write, rename or delete any file in their group,
regardless of the file's protection code.  

*Type
File types are zero to three characters long consisting of numbers or
letters.  If you specify a file type longer than three characters,
RSTS will truncate the type to the first three characters.  You can
specify a null file type by entering a file name followed by the
period (.) character.

A file's type helps to describe its format or use.  Generally, you
should try to use the standard file types defined below:
      
     .B2S   BASIC-PLUS-2 source file
     .BAC   BASIC-PLUS compiled program
     .BAS   BASIC-PLUS source file
     .BAK   Backup file created by an editing program
     .BCK   Backup container file created by BACKUP command
     .CBL   COBOL source file
     .CMD   TKB command file or ATPK command file
     .COM   DCL or batch command file
     .CRF   Cross-reference listing file
     .CTL   OPSER BATCH control file or BUILD control file
     .DAT   Data file
     .DBL   DIBOL source file
     .DIF   Output file created by DIFFERENCES command
     .DIR   Directory file
     .DOC   RUNOFF output file
     .EDT   EDT initialization file
     .FLB   FMS-11 form library file
     .FOR   FORTRAN-IV source file
     .FTN   FORTRAN-77 source file 
     .HLP   System program help text file
     .LIB   Resident library file
     .LNK   Input file used by LINK command 
     .LOG   BATCH or DCL output log file
     .LST   Listing file created by a system program
     .MAC   MACRO source file
     .MAI   DECmail/RSTS mailbox file
     .MAP   MAP file
     .MLB   Macro library file used by the MACRO assembler
     .OBJ   Compiled program
     .ODL   TKB overlay description language file
     .OLB   TKB object module library
     .PMD   Post-mortem dump file
     .RNO   RUNOFF source file
     .RTS   Run-time system file
     .SAV   Executable program under RT11 run-time system
     .SIL   Monitor save image library
     .SKL   Skeleton file produced by COBOL-81 compiler
     .SRT   SORT-11 file
     .STB   TKB symbol table file
     .SYS   System file
     .TMP   Temporary file
     .TSK   Executable program under RSX run-time system
     .TXT   ASCII text file

*Wildcards
The wildcard characters * and ?  are allowed in file-specs by some
system commands and programs.
 
   *   Any filename, file type, or both; also, any project number,
       programmer number, or both.
 
   ?   Any alphanumeric character in same position in filename or
       file type.

The following examples illustrate the use of wildcards in file-specs:
 
   FILE.*       All files with filename FILE and any file type
   *.TYP        All files with .TYP file type
   FILE.TY?     FILE.TY1, FILE.TY2, FILE.TY3, FILE.TYA, etc.
   FILE??.TYP   FILE00.TYP, FILE01.TYP, FILEAB.TYP, etc.
   FILE??.*     FILE00.DAT, FILE00.TXT, FILEAB.123, etc.
