.INCLUDE	/CMN:COMMON.MAC/
.LIBRARY	/CUI:CUIMAC.MLB/
.LIBRARY	/DCL:DCLMAC.MLB/
.NLIST
.INCLUDE	/DCL:DCLPFX.MAC/
.LIST
TITLE	AUXDVS,<DCL Working with Devices Commands>,0A,10-MAY-91,CEK/JFM/SDL/GMB/FRL/BGN/BTB

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR AUXDVS
;+
;
;			[RSTS V10.0]
;  000  BTB  05-Nov-89	Created from DCLDVS
;
;-

	.PSECT	AUXDVS,RO,REL,CON
	DEFORG	AUXDVS

	$CUI	TABLE			;Include macros for CUI tables

.MCALL	PUTCCL,PUTSPA,PUTSTR,PUTDEV,PUTLINE,$DISALLOW

.SBTTL DISMOUNT Command

DIS.QL:	DEFQUAL	UNL.Q,QF.NEG,CONF=PUB.Q		;/[NO]UNLOAD
	DEFQUAL	PUB.Q,CONF=UNL.Q		;/PUBLIC
	ENDQUAL

DIS.CMD::$THR
	$DEFCMD	QUAL=DIS.QL
	$PARM	PARM1,U$DEV,PROMPT=DEV$P	;Parse device 
	$PARM	PARM2,U$LBL,PF.OPT!PF.SEP	;The pack-id is optional
	$ENDCMD					;  

	$FETP	PARM1				;Fetch device
	$IFDEV	DSK				;If device is disk
	$DISALL	<UNL.Q>,DISK.E			;  Disallow /UNLOAD
	PUTCCL	...ONC				;  ONLCLN
	PUTLINE					;  Put entire command line
	$ELSE					;Else
	$IFDEV	MTA				;  If the device is magtape
	$DISALL	<PUB.Q>,TAPE.E			;    Disallow /PUBLIC
	PUTCCL	..DCLU				;    DCL utility program
	PUTSTR	"DISMOUNT"			;    "DISMOUNT"
	PUTSPA					;    " "
	$FETP	PARM1				;    Fetch the device
	PUTDEV					;    "device"
	$FETP	PARM2				;    Fetch the label
	$IF	PRESENT				;    If one was specified then
	PUTSTR					;      "label"
	$ENDIF					;    Endif

	$FETCQ	UNL.Q				;    Did he specify/[NO]UNLOAD?
	$IF	PRESENT				;    If so then
	$IF	YES				;      If /UNLOAD then
	PUTSTR	"/UNLO"				;        "/UNLO"
	$ELSE					;      Else
	PUTSTR	"/NOUNLO"			;        "/NOUNLO"
	$ENDIF					;      End
	$ENDIF					;    End
	$ELSE					;  Else
	$DO					;
	MOV	U.POS(R4),LX.ERP		;    Set up arrow.
	$ENDDO					;
	$RETURN	NODEVC				;    Return ?Not a valid device
	$ENDIF					;  Endif
	$ENDIF					;Endif

	$ENDTHR

GLOBAL	<NODEVC,LX.ERP,TAPE.E,DISK.E>
GLOBAL	<...ONC,..DCLU,DEV$P>

.SBTTL INITIALIZE Command

; Qualifier list

INI.QL:	DEFQUAL	CLU.Q,ARG=REQ,CLASS=DK.TG;	/CLUSTER_SIZE=n
	 DEFARG	TYPE=U$U8,MINVAL=1,MAXVAL=64;	 = 1-to-64 (RA82/RA90 support)
								
	 ENDARG
	DEFQUAL	DEN.Q,ARG=REQ,CLASS=TP.TG;	/DENSITY=nnn
	 DEFARG	MAX.K			;	 =MAXIMUM
	 DEFARG	MIN.K			;	 =MINIMUM
	 DEFARG	TYPE=U$INT
	 ENDARG
	DEFQUAL	DAT.Q,ARG=REQ,CLASS=DK.TG;	/DATE=option
	 DEFARG	ACC.K			;	 =ACCESSED
	 DEFARG	MOD.K			;	 =MODIFIED
	 ENDARG
	DEFQUAL	ERA.Q,QF.NEG,CLASS=DK.TG;	/[NO]ERASE
	DEFQUAL	EXER.Q,QF.NEG,ARG=OPT,CLASS=DK.TG
					;	/[NO]EXERCISE[=option]
	 DEFARG	FUL.K			;	 = FULL
	 DEFARG	TYPE=U$U8,MAXVAL=3	;	 = 0-to-3
	 ENDARG
	DEFQUAL	FMT.Q,ARG=REQ,CLASS=TP.TG;	/FORMAT=option
	 DEFARG	ANS.K			;	 =ANSI
	 DEFARG	DOS.K			;	 =DOS
	 ENDARG
	DEFQUAL	IND.Q,ARG=REQ,,CLASS=DK.TG;	/INDEX=option
	 DEFARG MID.K			;	 =MIDDLE
	 DEFARG	BEG.K			;	 =BEGINNING
	 DEFARG	TYPE=U$INT		;	 =n	
	 ENDARG
	DEFQUAL	MFD.Q,ARG=REQ,CLASS=DK.TG;	/MFD_CLUSTER_SIZE=n
	 DEFARG	TYPE=U$U8,MINVAL=4,MAXVAL=16;	 = 4-to-16
	 ENDARG
	DEFQUAL NFF.Q,ARG=REQ,CLASS=DK.TG;	/NEW_FILES=option	
	 DEFARG FST.K			;	 =FIRST			
	 DEFARG LST.K			;	 =LAST			
	 ENDARG				;				
	DEFQUAL	PRIV.Q,CONF=<PUB.Q>,CLASS=DK.TG
					;	/PRIVATE
	DEFQUAL	PUB.Q,CONF=<PRIV.Q>,CLASS=DK.TG
					;	/PUBLIC
	DEFQUAL	QUER.Q,QF.NEG,CLASS=DK.TG;	/[NO]QUERY
	DEFQUAL	RET.Q,QF.NEG,CLASS=DK.TG;	/[NO]RETAIN
	DEFQUAL	WRI.Q,QF.NEG,CLASS=DK.TG;	/[NO]WRITE
	ENDQUAL

INI.CMD::$THR
	$DEFCMD	QUAL=INI.QL		
	$PARM	PARM1,U$DEV,PROMPT=DEV$P;Prompt for and parse device

	$FETP	PARM1			;Fetch the device name
	$IFDEV	MTA			;If the device is TAPE
	$PARM	PARM2,U$LBL,PF.OPT!PF.SEP;  Parse optional label
	$ENDCMD
	$DISALLOW <DK.TG>,TAPE.E	;  Don't allow any disk qualifiers.

	PUTCCL	..DCLU			;  DCL utility program
	PUTSTR	"INITIALIZE"		;  "INITIALIZE"
	PUTSPA				;
	$FETP	PARM1			;
	PUTDEV				;  "device:"
	$FETP	PARM2			;  Did he specify a label?
	$IF	PRESENT			;  If so then
	PUTSTR				;    "label"
	$ENDIF

	$FETCQ	DEN.Q			;  Did he specify /DENSITY?
	$IF	PRESENT			;  If so then
	PUTSTR	"/DEN:"			;    "/DEN:"
	$FETKA	MAX.K			;    Is it =MAXIMUM?
	$IF	PRESENT			;    If so then
	PUTSTR	"MAX"			;      "MAX"
	$ELSE				;    Else
	$FETKA	MIN.K			;      Is it =MINIMUM?
	$IF	PRESENT			;      If so then
	PUTSTR	"MIN"			;         "MIN"
	$ELSE				;      Else
	$FETA				;         Get number
	PUTSTR				;         "nnn"
	$ENDIF				;      Endif
	$ENDIF				;    Endif
	$ENDIF				;  Endif

	$FETCQ	FMT.Q			;  Did he specify /FORMAT?
	$IF	PRESENT			;  If so then
	PUTSTR	"/FORM:"		;    "/FORM:"
	$FETKA	ANS.K			;    Is it =ANSI?
	$IF	PRESENT			;    If so then
	PUTSTR	"ANSI"			;      "ANSI"
	$ELSE				;    Else
	PUTSTR	"DOS"			;      "DOS"
	$ENDIF				;    End
	$ENDIF				;  End

	$ELSE				;Else the device is not magtape
	$IFDEV	DSK			;  If the device is DISK then
	$PARM	PARM2,U$LBL,PF.SEP,PROMPT=PKID$P
					;    Packid label is not optional
	$ENDCMD				;    End of command parsing
	$DISALLOW <TP.TG>,DISK.E	;    Don't allow any tape qualifiers.
	PUTCCL	...INI			;    DSKINT
	PUTLINE				;    Put entire command line
	$ELSE				;  Else device is not tape or disk.
	$DO				;    We must mannually
	MOV	U.POS(R4),LX.ERP	;    Set up arrow.
	$ENDDO				;    May not be correct if CUI changes.
	$RETURN	NODEVC			;    Return error - ?Not a valid device
	$ENDIF				;  Endif
	$ENDIF				;End of the $IFDEV expression.
	$ENDTHR

GLOBAL	<..DCLU,...INI,NODEVC,TAPE.E,DISK.E>
GLOBAL	<DEV$P,PKID$P,LX.ERP>

.SBTTL MOUNT Command

; Qualifier list

MOU.QL:	DEFQUAL	DEN.Q,CLASS=TP.TG,CONF=DK.TG,ARG=REQ	;/DENSITY=nnn
	 DEFARG	MAX.K					; =MAXIMUM
	 DEFARG	MIN.K					; =MINIMUM
	 DEFARG	TYPE=U$INT				; =nnn
	 ENDARG
	DEFQUAL	FMT.Q,CLASS=TP.TG,CONF=DK.TG,ARG=REQ	;/FORMAT=option
	 DEFARG	ANS.K					; =ANSI
	 DEFARG	DOS.K					; =DOS
	 DEFARG FORE.K					; =FOREIGN
	 ENDARG
	DEFQUAL	OVR.Q,QF.NEG,ARG=OPT			;/OVERRIDE=option
	 DEFARG	ID.K					; =IDENTIFICATION
	 ENDARG
	DEFQUAL	PRIV.Q,CLASS=DK.TG,CONF=TP.TG		;/PRIVATE
	DEFQUAL	PUB.Q,CLASS=DK.TG,CONF=TP.TG		;/PUBLIC
	DEFQUAL	SHAR.Q,CLASS=DK.TG,CONF=<NOSH.Q,TP.TG>	;/SHAREABLE
	DEFQUAL	NOSH.Q,CLASS=DK.TG,ARG=OPT,CONF=<SHAR.Q,PUB.Q,PRIV.Q,TP.TG> 
							;/NOSHAREABLE 
 	 DEFARG	TYPE=U$U8,MINVAL=1,MAXVAL=63		; = nnn
	 ENDARG	
	DEFQUAL	RES.Q,CLASS=DK.TG,FLAGS=QF.NEG,CONF=TP.TG;/[NO]RESTRICT
	DEFQUAL	QUO.Q,CLASS=DK.TG,FLAGS=QF.NEG,CONF=TP.TG;/[NO]QUOTA
	DEFQUAL	REB.Q,CLASS=DK.TG,FLAGS=QF.NEG,CONF=TP.TG;/[NO]REBUILD 
	DEFQUAL	WRI.Q,FLAGS=QF.NEG 			;/[NO]WRITE   
	ENDQUAL	

MOU.CMD::$THR
	$DEFCMD	QUAL=MOU.QL
	$PARM	PARM1,U$DEV,PROMPT=DEV$P	;Parse device
	$PARM	PARM2,U$LBL,PF.OPT!PF.SEP	;Label is optional
	$FETP	PARM1				;Fetch device
	$IFDEV	DSK				;If device is disk
	$PARM	PARM3,U$LOGNAME,PF.OPT		;  Parse optional logical name
	$ENDIF					;Endif
	$ENDCMD					;

	$FETP	PARM1				;Fetch device
	$IFDEV	DSK				;If device is disk then
	$DISALL	<TP.TG>,DISK.E			;  Disallow tape qualifiers
	PUTCCL	...ONC				;  ONLCLN
	PUTLINE					;  Put entire command line
	$ELSE					;Else
	$IFDEV	MTA				;  If device is tape then
	$DISALL	<DK.TG>,TAPE.E			;    Disallow disk qualifiers
	PUTCCL	..DCLU				;    DCL utility program
	PUTSTR	"MOUNT" 			;    "MOUNT" 
	PUTSPA					;    " "
	$FETP	PARM1				;    Fetch the device.	
	PUTDEV					;    "device"
	$FETP	PARM2				;    Fetch the label
	$IF	PRESENT				;    If one was specified,
	PUTSTR					;      "label"
	$ENDIF					;    Endif
	
	$FETCQ	DEN.Q				;    Is it /DENSITY?
	$IF	PRESENT				;    If so then
	PUTSTR	"/DEN:"				;      "/DEN:"
	$FETKA	MAX.K				;      Is it =MAXIMUM?
	$IF	PRESENT				;      If so then
	PUTSTR	"MAX"				;        "MAX"
	$ELSE					;      Else
	$FETKA	MIN.K				;        Is it =MINIMUM?
	$IF	PRESENT				;        If so then
	PUTSTR	"MIN"				;           "MIN"
	$ELSE					;        Else
	$FETA					;           Get number
	PUTSTR					;           "nnn"
	$ENDIF					;        Endif
	$ENDIF					;      Endif
	$ENDIF					;    Endif

	$FETCQ	WRI.Q				;    Did he specify /[NO]WRITE?
	$IF	PRESENT				;    If so then
	$IF	YES				;      If /WRITE then
	PUTSTR	"/WRIT"				;        "/WRIT"
	$ELSE					;      Else
	PUTSTR	"/NOWRIT"			;        "/NOWRIT"
	$ENDIF					;      Endif
	$ENDIF					;    Endif

	$FETCQ	OVR.Q				;    Did he specify /OVERRIDE?
	$IF	PRESENT				;    If so then
	PUTSTR	"/OVER"				;      "/OVER"
	$ENDIF					;    Endif

	$FETCQ	FMT.Q				;    Did he specify /FORMAT?
	$IF	PRESENT				;    If so then
	PUTSTR	"/FORM:"			;      "/FORM:"
	$FETKA	ANS.K				;      Is it =ANSI?
	$IF	PRESENT				;      If so then
	PUTSTR	"ANSI"				;        "ANSI"
	$ELSE					;      Else
	$FETKA	DOS.K				;        Is it =DOS?
	$IF	PRESENT				;        If so then
	PUTSTR	"DOS"				;          "DOS"
	$ELSE					;        Else
	PUTSTR	"FORE"				;          "FORE"
	$ENDIF					;        Endif
	$ENDIF					;      Endif
	$ENDIF					;    Endif

	$ELSE					;  Else
	$DO					;   
	MOV	U.POS(R4),LX.ERP		;    Set up arrow.
	$ENDDO					;
	$RETURN	NODEVC				;    Return ?Not a valid device
	$ENDIF					;  Endif
	$ENDIF					;Endif
	$ENDTHR

GLOBAL	<NODEVC,DISK.E,TAPE.E>
GLOBAL	<..DCLU,...ONC,DEV$P,LX.ERP>
.END
