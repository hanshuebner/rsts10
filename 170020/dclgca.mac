.INCLUDE	/CMN:COMMON.MAC/
.INCLUDE	/CMN:KERNEL.MAC/
.LIBRARY	/CUI:CUIMAC.MLB/
.LIBRARY	/DCL:DCLMAC.MLB/
.NLIST
.INCLUDE	/CMN:PFBDEF.MAC/
.INCLUDE	/DCL:DCLPFX.MAC/
.LIST
TITLE	DCLGCA,<DCL Global Context Area Definitions>,0C,19-JUL-91,GMB/DLS

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR DCLGCA

;+
;
;			[V9.3]
;
;  001 GMB 10-Jan-86	Created this file out of necessity.
;  002 GMB 23-May-86	Moved some constants to DCLPFX.MAC
;
;			[V9.4]
;  003 GMB 22-Feb-87	Moved list table offsets to DCLPFX
;  004 GMB 23-Feb-87	Moved DCLPMT, LOGPMT to DCLSYM
;  005 GMB 27-Feb-87	Allowed for STFLBN & STFNBL overflow
;
;			[V10.1]
;  006 DLS 19-Jun-91	Carve out space to store logfile's filespec.
;
;-

.SBTTL	The Symbol Table Layout in Memory
;+
;-

; ***************************
; *   GLOBAL CONTEXT AREA   *
; ***************************

.SBTTL	Define the Global Context Area locations

	.DSECT
FREPTR:	.BLKW			;Pointer to free pool
FRESIZ:	.BLKW			;Size (in bytes) of free pool
STBSIZ:	.BLKW			;Size (in bytes) of context area plus all
				;... symbol entries
CASIZ:	.BLKW			;Size (in bytes) of context area only
STFNFG:	.BLKW			;Symbol table on file is no good flag
SLOTNM:	.BLKW			;Number of lists in the list table
SLOTTB:	.BLKW			;The list table

	UNORG

	TMPORG	IMPURE

;%
;% BEGIN ORDERED SECTION.  These locations must have the same offset from the
;% beginning of the context area as their counterparts in the local table.
;% If you make any changes to this section, be sure to update DCLSYM.MAC as
;% well.
;%

GCA::

.ASSUME .-GCA EQ FREPTR
	.BLKW			;Pointer to global free pool
.ASSUME .-GCA EQ FRESIZ
	.BLKW			;Size (in bytes) of global free pool
.ASSUME .-GCA EQ STBSIZ
	.BLKW			;Size (in bytes) of global context area plus all
				;... global symbol entries
.ASSUME .-GCA EQ CASIZ
	.BLKW			;Size (in bytes) of global context area only
.ASSUME .-GCA EQ STFNFG
	.BLKW			;Symbol table on file is no good flag
.ASSUME .-GCA EQ SLOTNM
	.BLKW			;Number of lists in the list table
.ASSUME .-GCA EQ SLOTTB
	.BLKW	GLISNM		;The list table

;%
;% END ORDERED SECTION.
;%

CMDLVL::.BLKW			;Current command procedure level 
				;... 0    = interactive level, 
				;... 1-14 = an Indirect Command Procedure level

; The following 2 cells contain the bit masks for allocating PFB channels.  Bits
; that are set in the cells indicate channels currently being used, and bits
; that are clear indicate available channels. 

PFBCHN::.BLKW			;PFB channels bit mask

F$SCHN::.BLKW			;Bit mask of all currently open PFB channels
				;... being used by F$SEARCH function in ICFs to
				;... store the open file on so they can be
				;... closed upon EXITing or STOPping (a subset
				;... of PFBCHN) (not those opened at the
				;... interactive level)

WATFLG::.BLKB			;Flag for watching command string, also for
				;... suppressing command execution
	.EVEN

;gmb // We probably could get rid of ICFSTK by keeping the channel number
;gmb // of the previous ICF in the current local context area...

; The ICF stack ICFSTK contains information that is needed when working with 
; nested Indirect Command Files so that the calling ICF can be returned to.
; This includes the @ position within the ICF and the ICF's PFB channel # of 
; where it is being stored for safe keeping.  As nested ICFs are invoked, the
; entry is set up for level 1, then level 2, etc. starting at location ICFSTK-2.

;% Note that NXISTK is a pointer... If you allow the global context area and
;% global symbol table to float, you must make this an offset into ICFSTK.

NXISTK::.BLKW			;Pointer to the top of the ICF stack
	.BLKB	ICFSTL*1	;Allocate space for the ICF stack
ICFSTK::			;The beginning of the stack
	.EVEN

; The STF block tables keep track of the positions of local symbol tables in
; the symbol table file.  These tables are indexed by the CMDLVL.
; The @ command saves the symbol table before it knows that it has run out
; of channels.  This means that the block tables require one more entry
; to hold this "overflow" until the @ command detects the lack of channels.

STFBLN::.BLKB	ICFSTL+1	;Offset to block # of saved symbol table
STFNBL::.BLKB	ICFSTL+1	;Offset to # of blocks in symbol table

;gmb // This is not a bloody stack!  Please change it's name and the comments!
; The open data files stack FILSTK contains information that is needed when 
; working with files opened via the OPEN command.  The format of the table 
; entries that make up the stack is defined on a later page.  This stack is not
; used like the ICF stack.  When the user specifies a channel # (ex. channel 3
; on his first OPEN), then the first entry on the stack is not set up, but 
; rather the 3rd entry.  The entries are kept sequentially on the stack 
; according to the user-specified channel #, regardless of the order that the 
; user opened or closed them (some channels may never be used at all).

	.EVEN
FILSTK::.BLKW	FILSTL/2	;Allocate space for the data files stack
				; (files opened via $OPEN). This stack consists
				;  of table entries, 1 for each open file.

DCLPMT::.BLKW			;Pointer to pointer to $PROMPT string value
LOGPMT::.BLKW			;Pointer to pointer to $LOGFILE_PROMPT " "

LOGFIL::.BLKW			;Log file filespec (PPN)		;006
	.BLKW	2		;Log file filespec (file NAME in RAD50)	;006
	.BLKW			;Log file filespec (file EXT in RAD50)	;006
	.BLKW			;LOG file filespec (DEVICE in ASCII)	;006
	.BLKB			;Log file filespec (UNIT number)	;006
	.BLKB			;Log file filespec (UNIT REAL flag)	;006
	.BLKW	10.		;Reserved for future expansion		;006

GCASIZ	== .-GCA		;End of global context area.  Compute it's
				;... length.

	UNORG

	.END
