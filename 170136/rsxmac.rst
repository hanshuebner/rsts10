;  DEC/CMS REPLACEMENT HISTORY, Element RSXMAC.RST
;  *1    28-MAR-1986 02:44:17 SYSTEM "Load MACRO-11 sources from V5.3"
;  DEC/CMS REPLACEMENT HISTORY, Element RSXMAC.RST
	.MACRO	ABRT$	TSK
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	83.,3
	R50$	TSK
	.ENDC
	.IF NDF	A.BTTN
	.NLIST
	OFF$
	OFF$	A.BTTN,4
	.LIST
	.ENDC
	.ENDM	ABRT$
	.MACRO	ABRT$C	TSK,PSCT,ERR
	.MCALL	ABRT$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ABRT$	TSK
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ABRT$C
	.MACRO	ABRT$S	NADR,ERR
	.MCALL	RFA$,DIR$
	RFA$	NADR
	MOV	(PC)+,-(SP)
	.BYTE	83.,3
	DIR$	,ERR
	.ENDM	ABRT$S
	.MACRO	AFF$
CPA=1
CPB=2
CPC=4
CPD=10
UBE=20
UBF=40
UBH=100
UBJ=200
UBK=400
UBL=1000
UBM=2000
UBN=4000
UBP=10000
UBR=20000
UBS=40000
UBT=100000
	.ENDM 	AFF$
	.MACRO	ALTP$	NAME,PRI
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	9.,4
	R50$	NAME
	.WORD	PRI
	.ENDC
	.IF NDF	A.LTTN
	.NLIST
	OFF$
	OFF$	A.LTTN,4
	OFF$	A.LTPR,2
	.LIST
	.ENDC
	.ENDM	ALTP$
	.MACRO	ALTP$C	TTASK,NPRIO,PSCT,ERR
	.MCALL	ALTP$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ALTP$	TTASK,NPRIO
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ALTP$C
	.MACRO	ALTP$S	NAME,PRI,ERR
	.MCALL	MOV$,RFA$,DIR$
	MOV$	PRI
	RFA$	NAME
	MOV	(PC)+,-(SP)
	.BYTE	9.,4
	DIR$	,ERR
	.ENDM	ALTP$S
	.MACRO	ALUN$	LUN,DA,DU
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	7,4
	.WORD	LUN
	.IF B	<DA>
	.WORD	0
	.IFF
	.NCHR	$$$T1,<DA>
$$$T2=.
	.ASCII	/DA/
.=$$$T2+2
	.ENDC
	.WORD	DU
	.ENDC
	.IF NDF	A.LULU
	.NLIST
	.IRP	X,<,<A.LULU,2>,<A.LUNA,2>,<A.LUNU,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	ALUN$
	.MACRO	ALUN$C	LUN,DA,DU,CS,ERR
	.MCALL	ALUN$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ALUN$	LUN,DA,DU
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ALUN$C
	.MACRO	ALUN$S	LUN,DA,DU,ERR
	.MCALL	MOV$,DIR$
	MOV$	DU
	MOV$	DA
	MOV$	LUN
	MOV	(PC)+,-(SP)
	.BYTE	7,4
	DIR$	,ERR
	.ENDM	ALUN$S
	.MACRO	ASTX$
	.IF NDF $$$GLB
	.BYTE	115.,1
	.ENDC
	.ENDM	ASTX$
	.MACRO	ASTX$C	PSCT,ERR
	.MCALL	ASTX$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ASTX$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ASTX$C
	.MACRO	ASTX$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	115.,1
	DIR$
	.IIF NB	<ERR>,	JSR	PC,ERR
	.ENDM	ASTX$S
	.MACRO	ATRG$	RDB
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	57.,2
	.WORD	RDB
	.ENDC
	.IF NDF	A.TRBA
	OFF$
	OFF$	A.TRBA,2
	.ENDC
	.ENDM	ATRG$
	.MACRO	ATRG$C	RDB,CS,ERR
	.MCALL	ATRG$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ATRG$	RDB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ATRG$C
	.MACRO	ATRG$S	RDB,ERR
	.MCALL	DIR$,MOV$
	MOV$	RDB
	MOV	(PC)+,-(SP)
	.BYTE	57.,2
	DIR$	,ERR
	.ENDM	ATRG$S
	.MACRO	BDOFF$ OFFSET
	.MCALL	OFFSET,DEF$I
	DEF$I	0
	OFFSET	,4
	OFFSET	B.VBN,4
	OFFSET	B.BBFS,2
	OFFSET	B.NXBD,2
	OFFSET	,1
	OFFSET	B.BFST,1
	OFFSET	,2
	OFFSET	S.BFHD
	.IIF	IDN,<DEF$N>,<OFFSET>,.MEXIT
	.MACRO	BDOFF$	ARG
	.ENDM	BDOFF$
	.ENDM	BDOFF$
	.MACRO	CALL	ADR
	JSR	PC,ADR
	.ENDM	CALL
	.MACRO	CALLR	ADR
	JMP	ADR
	.ENDM	CALLR
	.MACRO	CBYTE$ VAR,OFFSET
	.IF	NB,VAR
	...PC2=.
	.=...PC1+OFFSET
	.BYTE	VAR
	.=...PC2
	.ENDC
	.ENDM	CBYTE$
	.MACRO	CCML$	BLK
	.MCALL	LDR0$
	LDR0$	BLK
	.GLOBL	.GCML3
	JSR	PC,.GCML3
	.ENDM	CCML$
	.MACRO	CGET$B	OFFSET,VAR
	.IIF NB <VAR>	MOVB	OFFSET(R0),VAR
	.ENDM
	.MACRO	CGET$W	OFFSET,VAR
	.IIF NB <VAR>	MOV	OFFSET(R0),VAR
	.ENDM
	.MACRO	CINT$	VEC,BASE,ISR,DSI,PSW,AST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	129.,7
	.WORD	VEC
	.WORD	BASE
	.WORD	ISR
	.WORD	DSI
	.WORD	PSW
	.WORD	AST
	.ENDC
	.IF NDF	C.INVE
	OFF$
	OFF$	C.INVE,2
	OFF$	C.INBA,2
	OFF$	C.INIS,2
	OFF$	C.INDI,2
	OFF$	C.INPS,2
	OFF$	C.INAS,2
	.ENDC
	.ENDM	CINT$
	.MACRO	CINT$C	VEC,BASE,ISR,DSI,PSW,AST,PSCT,ERR
	.MCALL	CINT$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CINT$	VEC,BASE,ISR,DSI,PSW,AST
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CINT$C
	.MACRO	CINT$S	VEC,BASE,ISR,DSI,PSW,AST,ERR
	.MCALL	RVP$,DIR$
	RVP$	VEC,BASE,ISR,DSI,PSW,AST
	MOV	(PC)+,-(SP)
	.BYTE	129.,7
	DIR$	,ERR
	.ENDM	CINT$S
	.MACRO	CLEF$	EFN
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	31.,2
	.WORD	EFN
	.ENDC
	.IF NDF	C.LEEF
	.NLIST
	OFF$
	OFF$	C.LEEF,2
	.LIST
	.ENDC
	.ENDM	CLEF$
	.MACRO	CLEF$C	EFN,CS,ERR
	.MCALL	CLEF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CLEF$	EFN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CLEF$C
	.MACRO	CLEF$S	EFN,ERR
	.MCALL	MOV$,DIR$
	MOV$	EFN
	MOV	(PC)+,-(SP)
	.BYTE	31.,2
	DIR$	,ERR
	.ENDM	CLEF$S
	.MACRO	CLOSE$ FDB,ERR
	.MCALL	LDFDB$,ERR$
	LDFDB$	FDB
	.GLOBL	.CLOSE
	JSR	PC,.CLOSE
	ERR$	ERR
	.ENDM	CLOSE$
	.MACRO	CMKT$	EFN,AST
	.MCALL	OFF$
	.IF NDF $$$GLB
	$$$T1=0
	.IIF NB EFN $$$T1=1
	.IIF NB AST $$$T1=1
	.IF EQ	$$$T1
	.BYTE	27.,1
	.IFF
	.BYTE	27.,3
	.WORD	EFN
	.WORD	AST
	.ENDC
	.ENDC
	.IF NDF	C.MKEF
	.NLIST
	OFF$
	OFF$	C.MKEF,2
	OFF$	C.MKAE,2
	.LIST
	.ENDC
	.ENDM	CMKT$
	.MACRO	CMKT$C	EFN,AST,PSCT,ERR
	.MCALL	CMKT$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CMKT$	EFN,AST
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CMKT$C
	.MACRO	CMKT$S	EFN,AST,ERR
	.MCALL	DIR$,RVP$
	$$$T1=0
	.IIF NB EFN $$$T1=1
	.IIF NB AST $$$T1=1
	.IF EQ	$$$T1
	MOV	(PC)+,-(SP)
	.BYTE	27.,1
	.IFF
	RVP$	EFN,AST
	MOV	(PC)+,-(SP)
	.BYTE	27.,3
	.ENDC
	DIR$	,ERR
	.ENDM	CMKT$S
	.MACRO	CMOV$B VAR,OFFSET
	.IF	IDN,<#0>,<VAR>
	CLRB	OFFSET(R0)
	.MEXIT
	.ENDC
	.IIF	NB,VAR,	MOVB VAR,OFFSET(R0)
	.ENDM	CMOV$B
	.MACRO	CMOV$W VAR,OFFSET
	.IF	IDN,<#0>,<VAR>
	CLR	OFFSET(R0)
	.MEXIT
	.ENDC
	.IIF	NB,VAR,	MOV	VAR,OFFSET(R0)
	.ENDM	CMOV$W
	.MACRO	CMOV$2 VAR,OFFSET
	.IIF	B,VAR,.MEXIT
	MOV	VAR,-(SP)
	MOV	@(SP),OFFSET(R0)
	ADD	#2,(SP)
	MOV	@(SP)+,OFFSET+2(R0)
	.ENDM	CMOV$2
	.MACRO	CNCT$	TNAME,EFN,EAST,ESB
	.MCALL 	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	143.,6
	R50$	TNAME
	.WORD	EFN
	.WORD	EAST
	.WORD	ESB
	.ENDC
	.IF	NDF	C.NCTN
	.IRP	X,<,<C.NCTN,4>,<C.NCEF,2>,<C.NCEA,2>,<C.NCES,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	CNCT$
	.MACRO	CNCT$C	TNAME,EFN,EAST,ESB,CS,ERR
	.MCALL	CNCT$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CNCT$	TNAME,EFN,EAST,ESB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CNCT$C
	.MACRO	CNCT$S	TNAME,EFN,EAST,ESB,ERR
	.MCALL	DIR$,MOV$,RFA$,MVB$
	MOV$	ESB
	MOV$	EAST
	MOV$	EFN
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	143.,6
	DIR$	,ERR
	.ENDM	CNCT$S
	.MACRO	CPCR$	NAME
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	205.,3
	R50$	NAME
	.ENDC
	.IF NDF	S.RETN
	OFF$
	OFF$	C.PCNM,2
	.ENDC
	.ENDM	CPCR$
	.MACRO	CPCR$C	NAME,CS,ERR
	.MCALL	CPCR$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CPCR$	NAME
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CPCR$C
	.MACRO	CPCR$S	NAME,ERR
	.MCALL	DIR$,MOV$,RFA$
	RFA$	NAME
	MOV	(PC)+,-(SP)
	.BYTE	205.,3
	DIR$	,ERR
	.ENDM	CPCR$S
	.MACRO	CRAW$	WDB
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	117.,2
	.WORD	WDB
	.ENDC
	.IF NDF	C.RABA
	OFF$
	OFF$	C.RABA,2
	.ENDC
	.ENDM	CRAW$
	.MACRO	CRAW$C	WDB,CS,ERR
	.MCALL	CRAW$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CRAW$	WDB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CRAW$C
	.MACRO	CRAW$S	WDB,ERR
	.MCALL	DIR$,MOV$
	MOV$	WDB
	MOV	(PC)+,-(SP)
	.BYTE	117.,2
	DIR$	,ERR
	.ENDM	CRAW$S
	.MACRO	CRGF$	GROUP
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	157.,2
	.WORD	GROUP
	.ENDC
	.IF NDF	C.RGRP
	.NLIST
	OFF$
	OFF$	C.RGRP,2
	.LIST
	.ENDC
	.ENDM	CRGF$
	.MACRO	CRGF$C	GROUP,CS,ERR
	.MCALL	CRGF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CRGF$	GROUP
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CRGF$C
	.MACRO	CRGF$S	GROUP,ERR
	.MCALL	MOV$,DIR$
	MOV$	GROUP
	MOV	(PC)+,-(SP)
	.BYTE	157.,2
	DIR$	,ERR
	.ENDM	CRGF$S
	.MACRO	CRRG$	RDB
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	55.,2
	.WORD	RDB
	.ENDC
	.IF NDF	C.RRBA
	OFF$
	OFF$	C.RRBA,2
	.ENDC
	.ENDM	CRRG$
	.MACRO	CRRG$C	RDB,CS,ERR
	.MCALL	CRRG$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CRRG$	RDB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CRRG$C
	.MACRO	CRRG$S	RDB,ERR
	.MCALL	DIR$,MOV$
	MOV$	RDB
	MOV	(PC)+,-(SP)
	.BYTE	55.,2
	DIR$	,ERR
	.ENDM	CRRG$S
	.MACRO	CRVT$	IAST,OAST,AAST,MLEN
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	149.,5
	.WORD	IAST
	.WORD	OAST
	.WORD	AAST
	.WORD	MLEN
	.ENDC
	.IF	NDF	C.RVIA
	.IRP X,<,<C.RVIA,2>,<C.RVOA,2>,<C.RVAA,2>,<C.RVML,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	CRVT$
	.MACRO	CRVT$C	IAST,OAST,AAST,MLEN,CS,ERR
	.MCALL	CRVT$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CRVT$	IAST,OAST,AAST,MLEN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CRVT$C
	.MACRO	CRVT$S	IAST,OAST,AAST,MLEN,ERR
	.MCALL	DIR$,MOV$
	MOV$	MLEN
	MOV$	AAST
	MOV$	OAST
	MOV$	IAST
	MOV	(PC)+,-(SP)
	.BYTE	149.,5
	DIR$	,ERR
	.ENDM	CRVT$S
	.MACRO	CSI$	GBL
	.IF IDN <GBL>,<DEF$G>
.GLOBL	C.TYPR,C.STAT,C.CMLD,C.DEVD,C.DIRD,C.FILD,C.SWAD,C.MKW1,C.MKW2
.GLOBL	C.SIZE,C.DSDS,CS.INP,CS.OUT
.GLOBL	CS.NMF,CS.DIF,CS.DVF,CS.WLD,CS.MOR,CS.EQU
	.ENDC
C.TYPR	=0
C.STAT	=1
C.CMLD	=2
C.DEVD	=6
C.DIRD	=^O<12>
C.FILD	=^O<16>
C.SWAD	=^O<22>
C.MKW1	=^O<24>
C.MKW2	=^O<26>
C.SIZE	=^O<54>
C.DSDS	=C.DEVD
CS.INP	=1
CS.OUT	=2
CS.NMF	=1
CS.DIF	=2
CS.DVF	=4
CS.WLD	=^O<10>
CS.MOR	=^O<20>
CS.EQU	=^O<40>
	.MACRO	CSI$	X
	.ENDM	CSI$
	.ENDM	CSI$
	.MACRO	CSI$ND
	.WORD	0
	.ENDM
	.MACRO	CSI$SV	TYPE,ADDR,LEN,VALTAB
	.IF	NB	VALTAB
VALTAB:
	.ENDC
	.IF	NB	TYPE
	.IF	IDN	<ASCII>,<TYPE>
	.BYTE	1
	.IFF
	.IF	IDN	<NUMERIC>,<TYPE>
	.BYTE	2
	.IFF
	.IF	IDN	<OCTAL>,<TYPE>
	.BYTE	2
	.IFF
	.IF	IDN	<DECIMAL>,<TYPE>
	.BYTE	3
	.IFF
	.ERROR
	.ENDC
	.ENDC
	.ENDC
	.ENDC
	.IFF
	.BYTE	1
	.ENDC
	.IF	NB	LEN
	.BYTE	LEN
	.IFF
	.ERROR
	.BYTE	0
	.ENDC
	.IF	NB	ADDR
	.WORD	ADDR
	.IFF
	.ERROR
	.WORD	0
	.ENDC
	.ENDM
	.MACRO	CSI$SW	SW,MK,MKW,CLR,NEGS,VALTAB,LNG
	.IF	B,SW
	.ERROR
	.IFF
	.EVEN
	.NCHR	SIZ$$,SW
	.IF	GT,SIZ$$-2
	.IF	B,LNG
	SIZ$$=2
	.ENDC
	.ENDC
	CNT$$=0
	.IRPC	CHR$$$,SW
	CHR$$=''CHR$$$
	CNT$$=CNT$$+1
	.IF	GE,<CHR$$-<'A+^O40>>
	.IF	LE,<CHR$$-<'Z+^O40>>
	CHR$$=CHR$$-^O40
	.ENDC
	.ENDC
	.IF	LE,CNT$$-SIZ$$
	$$=0
	.IF	NB,LNG
	.IF	IDN,<LNG>,<EXACT>
	.IF	GT,CNT$$&1
	.IF	GE,CNT$$+1-SIZ$$
	$$=^O200
	.ENDC
	.IFF
	.IF	LT,CNT$$-SIZ$$
	$$=^O200
	.ENDC
	.ENDC
	.IFF
	.IF	IDN,<LNG>,<LONG>
	.IF	EQ,CNT$$&1
	.IF	LT,CNT$$-SIZ$$
	$$=^O200
	.ENDC
	.ENDC
	.IFF
	.ERROR
	.ENDC
	.ENDC
	.ENDC
	.BYTE	CHR$$!$$
	.ENDC
	.ENDM
	.EVEN
	.ENDC
	.IF	NB	MK
	.WORD	MK
	.IFF
	.WORD	0
	.ENDC
$$=0
	.IF	NB	CLR
	.IF	IDN	<CLEAR>,<CLR>
$$=1
	.IFF
	.IF	IDN	<SET>,<CLR>
	.IFF
	.ERROR
	.ENDC
	.ENDC
	.ENDC
	.WORD	MKW+$$
$$=0
	.IF	NB	NEGS
	.IF	IDN	<NEG>,<NEGS>
$$=1
	.IFF
	.ERROR
	.ENDC
	.ENDC
	.WORD	VALTAB+$$
	.ENDM
	.MACRO	CSI$1 CSBLK,BUFF,LEN
	.GLOBL	.CSI1
	.MCALL	CSI$,LDR0$
	.IF NDF C.SIZE
	CSI$
	.ENDC
	LDR0$	CSBLK
	.IF NB	<BUFF>
	MOV	BUFF,C.CMLD+2(R0)
	.ENDC
	.IF NB	<LEN>
	MOV	LEN,C.CMLD(R0)
	.ENDC
	JSR	PC,.CSI1
	.ENDM
	.MACRO	CSI$2 CSBLK,IO,SWTAB
	.GLOBL	.CSI2
	.MCALL	CSI$,LDR0$
	.IF NDF C.SIZE
	CSI$
	.ENDC
	LDR0$	CSBLK
	.IF NB	<IO>
	.IF IDN	<INPUT>,<IO>
	MOVB	#CS.INP,(R0)
	.IFF
	.IF IDN	<OUTPUT>,<IO>
	MOVB	#CS.OUT,(R0)
	.IFF
	.ERROR
	.ENDC
	.ENDC
	.ENDC
	.IF NB	<SWTAB>
	MOV	SWTAB,C.SWAD(R0)
	.ENDC
	JSR	PC,.CSI2
	.ENDM
	.MACRO	CSI$4 CSBLK,IO,SWTAB
	.GLOBL	.CSI2
	.MCALL	CSI$,LDR0$
	.IF NDF C.SIZE
	CSI$
	.ENDC
	LDR0$	CSBLK
	.IF NB	<IO>
	.IF IDN	<INPUT>,<IO>
	MOVB	#CS.INP,(R0)
	.IFF
	.IF IDN	<OUTPUT>,<IO>
	MOVB	#CS.OUT,(R0)
	.IFF
	.ERROR	;INCORRECT REQUEST TO .CSI4
	.ENDC
	.ENDC
	.ENDC
	.IF NB	<SWTAB>
	MOV	SWTAB,C.SWAD(R0)
	.ENDC
	JSR	PC,.CSI2
	.ENDM
	.MACRO	CSM$	SUPVR
	.IF IDN	<(SP)+>,<SUPVR>
	.WORD	007026
	.IFF
	MOV	SUPVR,-(SP)
	.WORD	007026
	.ENDC
	.ENDM	CSM$
	.MACRO	CSRQ$	TT,RT
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	25.,3
	R50$	TT
	.ENDC
	.IF NDF	C.SRTN
	.NLIST
	OFF$
	OFF$	C.SRTN,4
	OFF$	C.SRRN,4
	.LIST
	.ENDC
	.ENDM	CSRQ$
	.MACRO	CSRQ$C	TT,RT,CS,ERR
	.MCALL	CSRQ$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CSRQ$	TT,RT
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CSRQ$C
	.MACRO	CSRQ$S	TN,RN,ERR
	.MCALL	RFA$,DIR$
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	25.,3
	DIR$	,ERR
	.ENDM	CSRQ$S
	.MACRO CSTRG$ VAR,OFFSET,MAXLG,FILL=0
	.IF NB,<VAR>
	 .NCHR ...PC3,<VAR>
	 .IF GE MAXLG-...PC3
	  ...PC2=.
	  .=...PC1+OFFSET
	  .ASCII ^VAR^
	  .REPT MAXLG-...PC3
	  .BYTE FILL
	  .ENDR
	  .=...PC2
	 .IFF
	  .ERROR
	 .ENDC
	.ENDC
	.ENDM	CSTRG$
	.MACRO	CWORD$ VAR,OFFSET
	.IF NB,VAR
	...PC2=.
	.=...PC1+OFFSET
	.WORD	VAR
	.=...PC2
	.ENDC
	.ENDM	CWORD$
	.MACRO	DECL$	EFN
	.IF NDF $$$GLB
	.BYTE	35.,1
	.ENDC
	.ENDM	DECL$
	.MACRO	DECL$C	EFN,PSCT,ERR
	.MCALL	DECL$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	DECL$	EFN
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	DECL$C
	.MACRO	DECL$S	EFN,ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	35.,1
	DIR$	,ERR
	.ENDM	DECL$S
	.MACRO	DEFIN$	SYM,VAL
	.IIF	EQ,...GBL-1,.GLOBL SYM
	SYM=^O<VAL>
	.ENDM	DEFIN$
	.MACRO	DEF$G VAR,SIZ
	.MCALL	DEF$L
	.IIF	NB,VAR,.GLOBL VAR
	DEF$L	VAR,SIZ
	.ENDM	DEF$G
	.MACRO	DEF$I IVAL
	...TPC=^O<IVAL>
	.ENDM	DEF$I
	.MACRO	DEF$L SYM,SIZ
	.IF NB,SYM
	SYM=^O<...TPC>
	.ENDC
	.IF NB,SIZ
	...TPC=^O<...TPC+SIZ>
	.ENDC
	.ENDM	DEF$L
	.MACRO	DEF$N VAR,SIZ
	.MCALL	DEF$L
	DEF$L	,SIZ
	.ENDM	DEF$N
	.MACRO	DELET$	FDB,ERR
	.MCALL	LDFDB$,ERR$
	LDFDB$	FDB
	.GLOBL	.DELET
	JSR	PC,.DELET
	ERR$	ERR
	.ENDM	DELET$
	.MACRO	DIR$	ADR,ERR
	.IF NB	<ADR>
	MOV	ADR,-(SP)
	.ENDC
	EMT	^O<377>
	.IIF NB	<ERR>,	.MCALL	ERR$
	.IIF NB	<ERR>,	ERR$	ERR
	.ENDM	DIR$
	.MACRO	DRERR$	$$$GBL
	.MCALL	.QIOE.,DEFIN$
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.IFF
	...GBL=0
	.ENDC
	.IIF	NDF,$$MSG,$$MSG=0
	.QIOE.	IE.UPN,-01.,<Insufficient dynamic storage>
	.QIOE.	IE.INS,-02.,<Specified task not installed>
	.QIOE.	IE.PTS,-03.,<Partition too small for task>
	.QIOE.	IE.UNS,-04.,<Insufficient dynamic storage for send>
	.QIOE.	IE.ULN,-05.,<Un-assigned LUN>
	.QIOE.	IE.HWR,-06.,<Device handler not resident>
	.QIOE.	IE.ACT,-07.,<Task not active>
	.QIOE.	IE.ITS,-08.,<Directive inconsistent with task state>
	.QIOE.	IE.FIX,-09.,<Task already fixed/unfixed>
	.QIOE.	IE.CKP,-10.,<Issuing task not checkpointable>
	.QIOE.	IE.TCH,-11.,<Task is checkpointable>
	.QIOE.	IE.RBS,-15.,<Receive buffer is too small>
	.QIOE.	IE.PRI,-16.,<Privilege violation>
	.QIOE.	IE.RSU,-17.,<Resource in use>
	.QIOE.	IE.NSW,-18.,<No swap space available>
	.QIOE.	IE.ILV,-19.,<Illegal vector specified>
	.QIOE.	IE.AST,-80.,<Directive issued/not issued from AST>
	.QIOE.	IE.MAP,-81.,<Illegal mapping specified>
	.QIOE.	IE.IOP,-83.,<Window has I/O in progress>
	.QIOE.	IE.ALG,-84.,<Alignment error>
	.QIOE.	IE.WOV,-85.,<Address window allocation overflow>
	.QIOE.	IE.NVR,-86.,<Invalid region ID>
	.QIOE.	IE.NVW,-87.,<Invalid address window ID>
	.QIOE.	IE.ITP,-88.,<Invalid TI parameter>
	.QIOE.	IE.IBS,-89.,<Invalid send buffer size ( .GT. 255.)>
	.QIOE.	IE.LNL,-90.,<LUN locked in use>
	.QIOE.	IE.IUI,-91.,<Invalid UIC>
	.QIOE.	IE.IDU,-92.,<Invalid device or unit>
	.QIOE.	IE.ITI,-93.,<Invalid time parameters>
	.QIOE.	IE.PNS,-94.,<Partition/region not in system>
	.QIOE.	IE.IPR,-95.,<Invalid priority ( .GT. 250.)>
	.QIOE.	IE.ILU,-96.,<Invalid LUN>
	.QIOE.	IE.IEF,-97.,<Invalid event flag ( .GT. 64.)>
	.QIOE.	IE.ADP,-98.,<Part of DPB out of user's space>
	.QIOE.	IE.SDP,-99.,<DIC or DPB size invalid>
	DEFIN$	IS.CLR,0
	DEFIN$	IS.SET,2
	DEFIN$	IS.SPD,2
	.IF	EQ,$$MSG
	.MACRO	DRERR$	A
	.ENDM	DRERR$
	.ENDC
	.ENDM	DRERR$
	.MACRO	DSAR$
	.IF NDF $$$GLB
	.BYTE	99.,1
	.ENDC
	.ENDM	DSAR$
	.MACRO	DSAR$C	PSCT,ERR
	.MCALL	DSAR$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	DSAR$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	DSAR$C
	.MACRO	DSAR$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	99.,1
	DIR$	,ERR
	.ENDM	DSAR$S
	.MACRO	DSCP$
	.IF NDF $$$GLB
	.BYTE	95.,1
	.ENDC
	.ENDM	DSCP$
	.MACRO	DSCP$C	PSCT,ERR
	.MCALL	DSCP$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	DSCP$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	DSCP$C
	.MACRO	DSCP$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	95.,1
	DIR$	,ERR
	.ENDM	DSCP$S
	.MACRO	DTRG$	RDB
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	59.,2
	.WORD	RDB
	.ENDC
	.IF NDF	D.TRBA
	OFF$
	OFF$	D.TRBA,2
	.ENDC
	.ENDM	DTRG$
	.MACRO	DTRG$C	RDB,CS,ERR
	.MCALL	DTRG$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	DTRG$	RDB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	DTRG$C
	.MACRO	DTRG$S	RDB,ERR
	.MCALL	DIR$,MOV$
	MOV$	RDB
	MOV	(PC)+,-(SP)
	.BYTE	59.,2
	DIR$	,ERR
	.ENDM	DTRG$S
	.MACRO EGCMI$
	.MACRO GCMLD$ GLOB
	.ASECT
	.=0
G.MODE:	.BLKW	2
	GE.COM = 1
	GE.IND = 2
	GE.CLO = 4
	GE.LC  = 10
	GE.CON = 20
	GE.XXX = 40
	GE.MUL = 100
	GE.LIB = 200
	GE.MCR = 400
	GE.IEF = 1000
	GE.RWD = 2000
	GE.FOP = 4000
	GE.RPR = 10000
	GE.SDE = 20000
	GE.SER = 40000
	GE.SLB = 100000
G.IMPS:	.BLKB	1
G.OVBC:	.BLKB	1
G.FILE:	.BLKW	1
G.ERR:	.BLKB	1
	GE.IOR = -1
	GE.OPR = -2
	GE.BIF = -3
	GE.MDE = -4
	GE.CMD = -5
	GE.VRS = -6
	GE.EOF = -10.
	GE.RBG = -40.
G.CDEP:	.BLKB	1
G.FUNC:	.BLKB	1
G.MAXD:	.BLKB	1
G.TERM:	.BLKB	1
G.TIOS:	.BLKB	1
G.TIOP:	.BLKW	1
G.PRMP:	.BLKW	2
G.CMLD:	.BLKW	2
G.FRAG:	.BLKW	2
G.BUFF:	.BLKW	2
G.DFPR:	.BLKB	6
G.CSIB:	.BLKW	1
G.PPTR:	.BLKW	1
G.SWIT:	.BLKW	1
G.LBMN:	.BLKB	6
G.FQFN:	.BLKW	1
G.DDIR:	.BLKW	2
G.ISIZ:
	.ASECT
	.=0
G.SUSR:	.BLKW	1
G.SDID:	.BLKW	5
G.SFID:	.BLKW	3
G.SRAT:	.BLKB	16.
G.SPOS:	.BLKW	3
G.SBST:	.BLKW	1
G.SRWP:	.BLKW	3
G.PLFS:
	.PSECT
	.MACRO GCMLD$ X
	.ENDM
	.ENDM
	.MACRO ECMLB$ FILE,LUN=1,MAXD=3,PRMP=<   >,BFAD,BFSZ=80.,PDL,SWIT,?GF,?GB,?GS
	.MCALL GCMLD$,CWORD$,CBYTE$,CSTRG$
	.MCALL CSI$SW,CSI$SV,CSI$ND
	.IIF NDF FCS$$ FCS$$=1
	GCMLD$
	...PC1=.
	.BLKB	G.ISIZ
	CBYTE$	<G.ISIZ>,G.IMPS
	CWORD$	<GE.CON!GE.IND!GE.CLO!GE.COM>,G.MODE
	CBYTE$	<MAXD>,G.MAXD
	CBYTE$	<15>,G.DFPR
	CBYTE$	<12>,G.DFPR+1
	CSTRG$	<PRMP>,G.DFPR+2,3
	CBYTE$	<-1>,G.CDEP
	CBYTE$	<TF.CCO>,G.TIOS
	CWORD$	<0>,G.TIOP
	CWORD$	<0>,G.FQFN
	CBYTE$	<0>,G.OVBC
	.IF B <PDL>
	...TMP = <<MAXD+1>*G.PLFS>
...PDL:	.BLKB	...TMP
	CWORD$	<...PDL+...TMP>,G.PPTR
	.IFF
	.ENDC
	.IF B <BFAD>
GB:	.BLKB	BFSZ+2
	CWORD$	<GB>,G.BUFF+2
	.IFF
	CWORD$	<BFAD>,G.BUFF+2
	.ENDC
	CWORD$	<BFSZ>,G.BUFF+0
	.IF B <SWIT>
...SWI:	GCMSW$	...PC1,GS
	CWORD$	<...SWI>,G.SWIT
	.IFF
	CWORD$	<SWIT>,G.SWIT
	.ENDC
	.IF NB <FILE>
	CWORD$	<FILE>,G.FILE
	.IFF
	CWORD$	<GF>,G.FILE
	.IF DF FCS$$
	.MCALL FDBDF$,FDAT$A,FDOP$A,NMBLK$,FDBF$A
GF:	FDBDF$
	FDAT$A	2
	FDOP$A	LUN,,...FNA
	FDBF$A	,,1
	CBYTE$	<FD.TTY!FD.REC!FD.CCL>,F.RCTL
...FNA:	NMBLK$	CMI,CMD
	.IFF
	.IF DF RMS$$
	.MCALL FAB$B,RAB$B,NAM$B
GF:	.WORD	1,...RAB
	.WORD	1,...FAB
...RAB:	RAB$B
	R$FAB	...FAB
	R$RAC	RB$SEQ
	RAB$E
...FAB:	FAB$B
	F$DNA	...DNA+3
	F$DNS	7
	F$FNA	...FNA
	F$FAC	FB$GET
	F$LCH	LUN
	F$NAM	...NAM
	F$ORG	FB$SEQ
	F$RAT	0
	F$RFM	FB$VAR
	FAB$E
...NAM:	NAM$B
	N$ESS	34.
	NAM$E
...DNA:	.ASCII	/SY:CMI.CMD/
...FNA:	.ASCII	/CMI/
	.BLKB	29.
	.IFF
	.ERROR
	.ENDC
	.ENDC
	.ENDC
	.ENDM
	.MACRO GCMLB$ MAXD=1,PRMP=<   >,UBUF,LUN,PDL,SIZE=80.
	.MCALL ECMLB$
	ECMLB$ ,LUN,MAXD,PRMP,UBUF,SIZE,PDL
	.ENDM
	.MACRO GCMSW$ GCMB,?VAL
	.MCALL CSI$SW,CSI$SV,CSI$ND
	CSI$SW	LB,GE.SLB,,SET,,VAL
	CSI$SW	ER,GE.SER,,SET,NEG
	CSI$SW	DE,GE.SDE,,CLEAR,NEG
	CSI$ND
VAL:	CSI$SV	ASCII,GCMB+G.LBMN,6
	CSI$ND
	.ENDM
	.MACRO GCML$  GCMB,PRAD,PRLN
	.MCALL	GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	CLRB	G.FUNC(R0)
	.IF NB	<PRLN>
	MOV	PRLN,G.PRMP(R0)
	.IF B	<PRAD>
	.ERROR
	.IFF
	MOV	PRAD,G.PRMP+2(R0)
	.ENDC
	.IFF
	CLR	G.PRMP(R0)
	.ENDC
	.GLOBL	$GCML
	JSR	PC,$GCML
	.ENDM
	.MACRO	RCML$	GCMB
	.MCALL	GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOVB	#1,G.FUNC(R0)
	.GLOBL	$GCML
	JSR	PC,$GCML
	.ENDM
	.MACRO	CCML$ GCMB
	.MCALL	GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOVB	#2,G.FUNC(R0)
	.GLOBL	$GCML
	JSR	PC,$GCML
	.ENDM
	.MACRO MCML$ GCMB
	.MCALL GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOVB	#3,G.FUNC(R0)
	.GLOBL	$GCML
	JSR	PC,$GCML
	.ENDM
	.MACRO FCML$ GCMB
	.MCALL GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOVB	#4,G.FUNC(R0)
	.GLOBL	$GCML
	JSR	PC,$GCML
	.ENDM
	.MACRO LCML$ GCMB
	.MCALL GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOVB	#5,G.FUNC(R0)
	.GLOBL	$GCML
	JSR	PC,$GCML
	.ENDM
	.MACRO ECML$ GCMB
	.MCALL GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOVB	#6,G.FUNC(R0)
	.GLOBL	$GCML
	JSR	PC,$GCML
	.ENDM
	.MACRO	DCML$ GCMB
	.MCALL GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOVB	#7,G.FUNC(R0)
	.GLOBL	$GCML
	JSR	PC,$GCML
	.ENDM
	.MACRO GCMM$	GCMB
	.MCALL GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOV	G.FILE(R0),R0
	.GLOBL	.MARK
	JSR	PC,.MARK
	.ENDM
	.MACRO	GCMP$	GCMB
	.MCALL	GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	GCMB
	MOV	G.FILE(R0),R0
	.GLOBL	.POINT
	JSR	PC,.POINT
	.ENDM
	.MACRO CMSET$ GCMB,TSUB,TVFC,FQFN,TTMO,OVBC
	.MCALL LDR0$,CMOV$B,CMOV$W,GCMLD$
	GCMLD$	DEF$L
	LDR0$	GCMB
	CMOV$B	TSUB,G.TIOS
	CMOV$B	TVFC,G.TIOP+1
	CMOV$B	TTMO,G.TIOP+0
	CMOV$W	FQFN,G.FQFN
	CMOV$B	OVBC,G.OVBC
	.ENDM
	.MACRO CMGET$	GCMB,TERM,FILE,FQFN,OVBC,ERR
	.MCALL LDR0$,CGET$B,CGET$W,GCMLD$
	GCMLD$	DEF$L
	LDR0$	GCMB
	CGET$B	G.TERM,TERM
	CGET$W	G.FILE,FILE
	CGET$B	G.ERR,ERR
	CGET$W	G.FQFN,FQFN
	CGET$B	G.OVBC,OVBC
	.ENDM
	.MACRO EGCMI$
	.ENDM
	.ENDM
	.MACRO	ELAW$	WDB
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	119.,2
	.WORD	WDB
	.ENDC
	.IF NDF	E.LABA
	OFF$
	OFF$	E.LABA,2
	.ENDC
	.ENDM	ELAW$
	.MACRO	ELAW$C	WDB,CS,ERR
	.MCALL	ELAW$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ELAW$	WDB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ELAW$C
	.MACRO	ELAW$S	WDB,ERR
	.MCALL	DIR$,MOV$
	MOV$	WDB
	MOV	(PC)+,-(SP)
	.BYTE	119.,2
	DIR$	,ERR
	.ENDM	ELAW$S
	.MACRO	ELGF$	GROUP
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	159.,2
	.WORD	GROUP
	.ENDC
	.IF NDF	E.LGRP
	.NLIST
	OFF$
	OFF$	E.LGRP,2
	.LIST
	.ENDC
	.ENDM	ELGF$
	.MACRO	ELGF$C	GROUP,CS,ERR
	.MCALL	ELGF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ELGF$	GROUP
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ELGF$C
	.MACRO	ELGF$S	GROUP,ERR
	.MCALL	MOV$,DIR$
	MOV$	GROUP
	MOV	(PC)+,-(SP)
	.BYTE	159.,2
	DIR$	,ERR
	.ENDM	ELGF$S
	.MACRO	ELVT$	UNUM
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	151.,2
	.WORD	UNUM
	.ENDC
	.IF	NDF	E.LVNM
	OFF$
	OFF$	E.LVNM,2
	.ENDC
	.ENDM	ELVT$
	.MACRO	ELVT$C	UNUM,CS,ERR
	.MCALL	ELVT$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ELVT$	UNUM
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ELVT$C
	.MACRO	ELVT$S	UNUM,ERR
	.MCALL	DIR$,MOV$
	MOV$	UNUM
	MOV	(PC)+,-(SP)
	.BYTE	151.,2
	DIR$	,ERR
	.ENDM	ELVT$S
	.MACRO	EMST$	TNAME,STATUS
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	147.,4
	R50$	TNAME
	.WORD	STATUS
	.ENDC
	.IF	NDF	E.MSTN
	OFF$
	OFF$	E.MSTN,4
	OFF$	E.MSST,2
	.ENDC
	.ENDM	EMST$
	.MACRO	EMST$C	TNAME,STATUS,CS,ERR
	.MCALL	EMST$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	EMST$	TNAME,STATUS
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	EMST$C
	.MACRO	EMST$S	TNAME,STATUS,ERR
	.MCALL	DIR$,MOV$,RFA$
	MOV$	STATUS
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	147.,4
	DIR$	,ERR
	.ENDM	EMST$S
	.MACRO	ENAR$
	.IF NDF $$$GLB
	.BYTE	101.,1
	.ENDC
	.ENDM	ENAR$
	.MACRO	ENAR$C	PSCT,ERR
	.MCALL	ENAR$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ENAR$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ENAR$C
	.MACRO	ENAR$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	101.,1
	DIR$	,ERR
	.ENDM	ENAR$S
	.MACRO	ENCP$
	.IF NDF $$$GLB
	.BYTE	97.,1
	.ENDC
	.ENDM	ENCP$
	.MACRO	ENCP$C	PSCT,ERR
	.MCALL	ENCP$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ENCP$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ENCP$C
	.MACRO	ENCP$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	97.,1
	DIR$	,ERR
	.ENDM	ENCP$S
	.MACRO	ERR$	ERR
	.IF NB	<ERR>
	.NLIST
	.NTYPE	$$$T1,ERR
	.LIST
	.IIF EQ	^O<$$$T1-27>,	BCC	.+6
	.IIF EQ	^O<$$$T1-37>,	BCC	.+6
	.IF GE	^O<$$$T1-60>
	BCC	.+6
	.IFF
	.IF NE	^O<$$$T1-27>
	.IIF NE	^O<$$$T1-37>,	BCC	.+4
	.ENDC
	.ENDC
	CALL	ERR
	.ENDC
	.ENDM	ERR$
	.MACRO	EXIF$	EFN
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	53.,2
	.WORD	EFN
	.ENDC
	.IF NDF	E.XFEF
	.NLIST
	OFF$
	OFF$	E.XFEF,2
	.LIST
	.ENDC
	.ENDM	EXIF$
	.MACRO	EXIF$C	EFN,CS,ERR
	.MCALL	EXIF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	EXIF$	EFN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	EXIF$C
	.MACRO	EXIF$S	EFN,ERR
	.MCALL	MOV$,DIR$
	MOV$	EFN
	MOV	(PC)+,-(SP)
	.BYTE	53.,2
	DIR$	,ERR
	.ENDM	EXIF$S
	.MACRO	EXIT$
	.IF NDF $$$GLB
	.BYTE	51.,1
	.ENDC
	.ENDM	EXIT$
	.MACRO	EXIT$C	PSCT,ERR
	.MCALL	EXIT$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	EXIT$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	EXIT$C
	.MACRO	EXIT$S ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	51.,1
	DIR$
	.IIF NB	<ERR>,	CALL	ERR
	.ENDM	EXIT$S
	.MACRO	EXST$	STS
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	29.,2
	.WORD	STS
	.ENDC
	.IF NDF	E.XSTS
	.NLIST
	OFF$
	OFF$	E.XSTS,2
$$$OST=0
	.IRP	X,<<EX$WAR,1>,<EX$SUC,1>,<EX$ERR,2>,<EX$SEV,1>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	EXST$
	.MACRO	EXST$C	STS,CS,ERR
	.MCALL	EXST$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	EXST$	STS
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	EXST$C
	.MACRO	EXST$S	STS,ERR
	.MCALL	MOV$,DIR$,OFF$
	MOV$	STS
	MOV	(PC)+,-(SP)
	.BYTE	29.,2
	DIR$	,ERR
	.NLIST
$$$OST=0
	.IRP	X,<<EX$WAR,1>,<EX$SUC,1>,<EX$ERR,2>,<EX$SEV,1>>
	OFF$	X
	.ENDM
	.LIST
	.ENDM	EXST$S
	.MACRO	EXTK$	INC
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	89.,3
	.WORD	INC
	.WORD	0
	.ENDC
	.IF NDF	E.XTIN
	.NLIST
	OFF$
	OFF$	E.XTIN,2
	.LIST
	.ENDC
	.ENDM	EXTK$
	.MACRO	EXTK$C	INC,CS,ERR
	.MCALL	EXTK$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	EXTK$	INC
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	EXTK$C
	.MACRO	EXTK$S	INC,ERR
	.MCALL	MOV$,DIR$
	CLR	-(SP)
	MOV$	INC
	MOV	(PC)+,-(SP)
	.BYTE	89.,3
	DIR$	,ERR
	.ENDM	EXTK$S
	.MACRO	FCSBT$	GLOBL
	.MCALL	DEFIN$
	...GBL=0
	.IIF	IDN,<GLOBL>,<DEF$G>,...GBL=1
	DEFIN$	FD.FTN,1
	DEFIN$	FD.CR,2
	DEFIN$	FD.PRN,4
	DEFIN$	FD.BLK,10
	DEFIN$	FD.RWM,1
	DEFIN$	FD.RAN,2
	DEFIN$	FD.PLC,4
	DEFIN$	FD.INS,10
	DEFIN$	FD.REC,1
	DEFIN$	FD.CCL,2
	DEFIN$	FD.TTY,4
	DEFIN$	FD.DIR,10
	DEFIN$	FD.SDI,20
	DEFIN$	FD.SQD,40
	DEFIN$	FD.ISP,2000
	DEFIN$	FD.OSP,4000
	DEFIN$	FD.PSE,10000
	DEFIN$	FD.COM,20000
	DEFIN$	FD.F11,40000
	DEFIN$	FD.MNT,100000
	DEFIN$	NB.VER,1
	DEFIN$	NB.TYP,2
	DEFIN$	NB.NAM,4
	DEFIN$	NB.SVR,10
	DEFIN$	NB.STP,20
	DEFIN$	NB.SNM,40
	DEFIN$	NB.DIR,100
	DEFIN$	NB.DEV,200
	DEFIN$	NB.SD1,400
	DEFIN$	NB.SD2,1000
	DEFIN$	NB.ANS,2000
	DEFIN$	NB.WCH,4000
	DEFIN$	R.FIX,1
	DEFIN$	R.VAR,2
	DEFIN$	R.SEQ,3
	DEFIN$	R.STM,4
	DEFIN$	FA.RD,1
	DEFIN$	FA.WRT,2
	DEFIN$	FA.EXT,4
	DEFIN$	FA.CRE,10
	DEFIN$	FA.TMP,20
	DEFIN$	FA.SHR,40
	DEFIN$	FA.APD,100
	DEFIN$	FA.NSP,100
	DEFIN$	FO.RD,FA.RD
	DEFIN$	FO.WRT,FA.WRT!FA.EXT!FA.CRE
	DEFIN$	FO.APD,FA.WRT!FA.EXT!FA.APD
	DEFIN$	FO.MFY,FA.WRT
	DEFIN$	FO.UPD,FA.WRT!FA.EXT
	DEFIN$	FO.TSK,200
	DEFIN$	FA.ENB,100000
	DEFIN$	FA.SEQ,40000
	DEFIN$	FA.WCK,20000
	DEFIN$	FA.POS,10000
	DEFIN$	FA.RWD,4000
	DEFIN$	FA.EXL,4000
	DEFIN$	FA.LKL,2000
	DEFIN$	FA.EXC,2000
	DEFIN$	FA.DLK,1000
	DEFIN$	CH.AND,1
	DEFIN$	FD.RAH,1
	DEFIN$	FD.WBH,2
	DEFIN$	FF.RWD,1
	DEFIN$	FF.POE,2
	DEFIN$	FF.NV,3
	DEFIN$	FF.SPC,4
	DEFIN$	FF.CHR,5
	DEFIN$	FF.RWF,6
	DEFIN$	FT.ANI,1
	DEFIN$	FT.BBF,2
	DEFIN$	FT.MBF,4
	.MACRO	FCSBT$	ARG
	.ENDM	FCSBT$
	.ENDM	FCSBT$
	.MACRO	FCSMC$
	.MCALL	OPEN$R,OPEN$W,OPEN$M,OPEN$U,OPEN$A,CLOSE$
	.MCALL	OPNS$R,OPNS$W,OPNS$M,OPNS$U,OPNS$A
	.MCALL	READ$,WRITE$,WAIT$,GET$,PUT$,DELET$,FINIT$
	.MCALL	FSRSZ$,FDBDF$,FDAT$A,FDRC$A,FDOP$A,FDBF$A,FDBK$A
	.MCALL	FDAT$R,FDRC$R,FDOP$R,FDBF$R,FDBK$R,NMBLK$
	.MACRO	FCSMC$
	.ENDM	FCSMC$
	.ENDM	FCSMC$
	.MACRO	FDAT$A RTYP,RATT,RSIZ,CNTG,ALOC
	.MCALL	FDOFF$,CBYTE$,CWORD$
	FDOFF$	DEF$L
	CBYTE$	<RTYP>,F.RTYP
	CBYTE$	<RATT>,F.RATT
	CWORD$	<RSIZ>,F.RSIZ
	CWORD$	<CNTG>,F.CNTG
	CWORD$	<ALOC>,F.ALOC
	.ENDM	FDAT$A
	.MACRO	FDAT$R FDB,RTYP,RATT,RSIZ,CNTG,ALOC
	.MCALL	LDFDB$,CMOV$W,CMOV$B
	LDFDB$	FDB
	CMOV$B	RTYP,F.RTYP
	CMOV$B	RATT,F.RATT
	CMOV$W	RSIZ,F.RSIZ
	CMOV$W	CNTG,F.CNTG
	CMOV$W	ALOC,F.ALOC
	.ENDM	FDAT$R
	.MACRO	FDBDF$
	.MCALL	FDBSZ$
	FDBSZ$
	...PC1=.
	.BLKB	S.FDB
	.ENDM	FDBDF$
	.MACRO	FDBF$A EFN,OVBS,MBCT,MBFG
	.MCALL	FDOFF$,CBYTE$,CWORD$
	FDOFF$	DEF$L
	CBYTE$	<EFN>,F.EFN
	CWORD$	<OVBS>,F.OVBS
	CBYTE$	<MBCT>,F.MBCT
	CBYTE$	<MBFG>,F.MBFG
	.ENDM	FDBF$A
	.MACRO	FDBF$R FDB,EFN,OVBS,MBCT,MBFG
	.MCALL	LDFDB$,CMOV$W,CMOV$B
	LDFDB$	FDB
	CMOV$B	EFN,F.EFN
	CMOV$W	OVBS,F.OVBS
	CMOV$B	MBCT,F.MBCT
	CMOV$B	MBFG,F.MBFG
	.ENDM	FDBF$R
	.MACRO	FDBK$A BKAD,BKSZ,BKVB,BKEF,BKST,BKDN
	.MCALL	FDOFF$,CBYTE$,CWORD$
	FDOFF$	DEF$L
	CWORD$	<BKAD>,F.BKDS+2
	CWORD$	<BKSZ>,F.BKDS
	CWORD$	<BKVB>,F.BKVB+2
	CBYTE$	<BKEF>,F.BKEF
	CWORD$	<BKST>,F.BKST
	CWORD$	<BKDN>,F.BKDN
	.ENDM	FDBK$A
	.MACRO	FDBK$R FDB,BKAD,BKSZ,BKVB,BKEF,BKST,BKDN
	.MCALL	LDFDB$,CMOV$B,CMOV$W,CMOV$2
	LDFDB$	FDB
	CMOV$W	BKAD,F.BKDS+2
	CMOV$W	BKSZ,F.BKDS
	CMOV$2	BKVB,F.BKVB
	CMOV$B	BKEF,F.BKEF
	CMOV$W	BKST,F.BKST
	CMOV$W	BKDN,F.BKDN
	.ENDM	FDBK$R
	.MACRO	FDBSZ$
	.IIF	DF,S.FDB,.MEXIT
	.MCALL	FDOFF$,DEF$L
	FDOFF$	DEF$N
	DEF$L	S.FDB
	.ENDM	FDBSZ$
	.MACRO	FDOFF$ OFFSET
	.MCALL	OFFSET,DEF$I,NBOFF$
	NBOFF$	OFFSET
	DEF$I	0
	OFFSET	F.RTYP,1
	OFFSET	F.RATT,1
	OFFSET	F.RSIZ,2
	OFFSET	F.HIBK,4
	OFFSET	F.EFBK,4
	OFFSET	F.FFBY,2
	OFFSET	S.FATT
	OFFSET	F.RACC,1
	OFFSET	F.RCTL,1
	OFFSET	F.BKDS
	OFFSET	F.URBD,4
	OFFSET	F.BKST
	OFFSET	F.NRBD,2
	OFFSET	F.BKDN
	OFFSET	,2
	OFFSET	F.OVBS
	OFFSET	F.NREC,2
	OFFSET	F.EOBB,2
	OFFSET	F.CNTG
	OFFSET	F.RCNM,2
	OFFSET	F.STBK
	OFFSET	,2
	OFFSET	F.ALOC,2
	OFFSET	F.LUN,1
	OFFSET	F.FACC,1
	OFFSET	F.DSPT,2
	OFFSET	F.DFNB,2
	OFFSET	F.BKEF
	OFFSET	F.EFN,1
	OFFSET	F.BKP1,1
	OFFSET	F.ERR,2
	OFFSET	F.MBCT,1
	OFFSET	F.MBC1,1
	OFFSET	F.MBFG,1
	OFFSET	F.BGBC,1
	OFFSET	F.VBSZ,2
	OFFSET	F.BBFS,2
	OFFSET	F.BKVB
	OFFSET	F.VBN,4
	OFFSET	F.BDB,2
	OFFSET	F.SPDV,2
	OFFSET	F.SPUN,1
	OFFSET	F.CHR,1
	OFFSET	F.ACTL,2
	OFFSET	F.SEQN,2
	OFFSET	F.FNB,S.FNB
	.IIF	IDN,<OFFSET>,<DEF$N>,.MEXIT
	.IF	IDN,<OFFSET>,<DEF$G>
	.GLOBL	F.FNAM,F.FTYP,F.FVER,F.DVNM,F.UNIT
	.ENDC
	F.FNAM=N.FNAM+F.FNB
	F.FTYP=N.FTYP+F.FNB
	F.FVER=N.FVER+F.FNB
	F.DVNM=N.DVNM+F.FNB
	F.UNIT=N.UNIT+F.FNB
	OFFSET	S.FDB
	.MACRO	FDOFF$	ARG
	.ENDM	FDOFF$
	.ENDM	FDOFF$
	.MACRO	FDOF$L
	.MCALL	FDOFF$
	FDOFF$	DEF$L
	.ENDM	FDOF$L
	.MACRO	FDOP$A LUN,FNPT,DFNB,FACC,FACTRL
	.MCALL	FDOFF$,CBYTE$,CWORD$
	FDOFF$	DEF$L
	CBYTE$	<LUN>,F.LUN
	CWORD$	<FNPT>,F.DSPT
	CWORD$	<DFNB>,F.DFNB
	CBYTE$	<FACC>,F.FACC
	CWORD$	<FACTRL>,F.ACTL
	.ENDM	FDOP$A
	.MACRO	FDOP$R FDB,LUN,FNPT,DFNB,FACC,FACTRL
	.MCALL	LDFDB$,CMOV$W,CMOV$B
	LDFDB$	FDB
	CMOV$B	LUN,F.LUN
	CMOV$W	FNPT,F.DSPT
	CMOV$W	DFNB,F.DFNB
	CMOV$B	FACC,F.FACC
	CMOV$W	FACTRL,F.ACTL
	.ENDM	FDOP$R
	.MACRO	FDRC$A RACC,URBA,URBS
	.MCALL	FDOFF$,CBYTE$,CWORD$
	FDOFF$	DEF$L
	CBYTE$	<RACC>,F.RACC
	CWORD$	<URBA>,F.URBD+2
	CWORD$	<URBS>,F.URBD
	.ENDM	FDRC$A
	.MACRO	FDRC$R FDB,RACC,URBA,URBS
	.MCALL	LDFDB$,CMOV$W,CMOV$B
	LDFDB$	FDB
	CMOV$B	RACC,F.RACC
	CMOV$W	URBA,F.URBD+2
	CMOV$W	URBS,F.URBD
	.ENDM	FDRC$R
	.MACRO	FDSOF$	OFFSET
	.MCALL	OFFSET,DEF$I,DEF$L
	DEF$I	0
	OFFSET	N.DEVD,4
	OFFSET	N.DIRD,4
	OFFSET	N.FNMD,4
	OFFSET	S.FIDS
	.IF	IDN,<DEF$N>,<OFFSET>
	DEF$L	S.FIDS
	.MEXIT
	.ENDC
	.MACRO	FDSOF$	ARG
	.ENDM	FDSOF$
	.ENDM	FDSOF$
	.MACRO	FILIO$	$$$GBL
	.MCALL	.WORD.,DEFIN$
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.IFF
	...GBL=0
	.ENDC
	.WORD.	IQ.X,001,000
	.WORD.	IQ.Q,002,000
	.WORD.	IQ.S,004,000
	.WORD.	IQ.UMD,004,000
	.WORD.	IQ.LCK,200,000
	.WORD.	IO.KIL,012,000
	.WORD.	IO.RDN,022,000
	.WORD.	IO.UNL,042,000
	.WORD.	IO.LTK,050,000
	.WORD.	IO.RTK,060,000
	.WORD.	IO.SET,030,000
	.WORD.	IO.WLB,000,001
	.WORD.	IO.RLB,000,002
	.WORD.	IO.LOV,010,002
	.WORD.	IO.LDO,110,002
	.WORD.	IO.ATT,000,003
	.WORD.	IO.DET,000,004
	.WORD.	IO.FNA,000,011
	.WORD.	IO.RNA,000,013
	.WORD.	IO.ENA,000,014
	.WORD.	IO.CLN,000,007
	.WORD.	IO.ULK,000,012
	.WORD.	IO.ACR,000,015
	.WORD.	IO.ACW,000,016
	.WORD.	IO.ACE,000,017
	.WORD.	IO.DAC,000,020
	.WORD.	IO.RVB,000,021
	.WORD.	IO.WVB,000,022
	.WORD.	IO.EXT,000,023
	.WORD.	IO.CRE,000,024
	.WORD.	IO.DEL,000,025
	.WORD.	IO.RAT,000,026
	.WORD.	IO.WAT,000,027
	.WORD.	IO.APV,010,030
	.WORD.	IO.APC,000,030
	.MACRO	FILIO$	A
	.ENDM	FILIO$
	.ENDM	FILIO$
	.MACRO	FINIT$
	.GLOBL	.FINIT
	JSR	PC,.FINIT
	.ENDM	FINIT$
	.MACRO	FSROF$	OFFSET
	.MCALL	OFFSET,DEF$I,DEF$L
	DEF$I	0
	OFFSET	,4
	OFFSET	A.BFSR,2
	OFFSET	A.EFSR,2
	OFFSET	A.OWUI,2
	OFFSET	A.FIPR,2
	OFFSET	A.DPB,24.
	OFFSET	A.IOST,4
	OFFSET	A.DFDR,26.
	OFFSET	A.DFBC,2
	OFFSET	A.DFUI,2
	OFFSET	A.JUMP,4
	OFFSET	A.MODE,2
	OFFSET	S.FSR2
	DEF$L	S.FSR2
	DEF$I	0
	OFFSET	,16.
	OFFSET	D.DFID,6
	OFFSET	D.DFDV,2
	OFFSET	D.DFUN,2
	.IIF	IDN,<DEF$N>,<OFFSET>,.MEXIT
	.MACRO	FSROF$	ARG
	.ENDM	FSROF$
	.ENDM	FSROF$
	.MACRO	FSRSZ$ NFILES,BFSPAC,PSECT
	.MCALL	BDOFF$,DEF$L
	.IF	NDF,S.BFHD
	BDOFF$	DEF$N
	DEF$L	S.BFHD
	.ENDC
	.GLOBL	.FSRCB
	.PSECT	$$FSR1,GBL,OVR,D
	.IF	NB,<BFSPAC>
	.BLKB	NFILES*S.BFHD+<BFSPAC>
	.IFF
	.BLKB	NFILES*<S.BFHD+512.>
	.ENDC
	.PSECT	PSECT
	.ENDM	FSRSZ$
	.MACRO	GCCI$	CBUF,CBFL,IBUF,IBFL,ADDR,NCP
	.MCALL	OFF$
	.IF	NDF $$$GLB
	.BYTE	127.,7.
	.BYTE	NCP
	.BYTE	0
	.WORD	ADDR
	.WORD	CBUF
	.WORD	CBFL
	.WORD	IBUF
	.WORD	IBFL
	.ENDC
	.IF	NDF G.CCNC
	.IRP	X,<,<G.CCNC,2>,<G.CCAD,2>,<G.CCBA,2>,<G.CCBL,2>,<G.CCIA,2>>
	OFF$	X
	.ENDM
	OFF$	G.CCIL,2
$$$OST=0
	.IRP	X,<<G.CCW2,2>,<G.CCPT,4>,<G.CCOA,2>,<G.CCPU,2>,<G.CCCU,2>,<G.CCCA,2>>
	OFF$	X
	.ENDM
$$$OST=0
	.IRP	X,<<G.CCDV,2>,<G.CCUN,1>,<G.CCCT,1>,<G.CCCL,2>,<G.CCTC,1>>
	OFF$	X
	.ENDM
	.IRP	X,<<G.CCFL,1>,<G.CCBF,>>
	OFF$	X
	.ENDM
	.IF DF $$$GLB
	.GLOBL	GC.CND,GC.CST,GC.CEX,GC.CCS
	.ENDC
GC.CND=200
GC.CST=002
GC.CEX=001
GC.CCS=000
	.ENDC
	.ENDM	GCCI$
	.MACRO	GCCI$C	CBUF,CBFL,IBUF,IBFL,ADDR,NCP,CS,ERR
	.MCALL	GCCI$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GCCI$	CBUF,CBFL,IBUF,IBFL,ADDR,NCP
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM
	.MACRO GCCI$S	CBUF,CBFL,IBUF,IBFL,ADDR,NCP,ERR
	.MCALL	MOV$,MVB$,DIR$
	MOV$	IBFL
	MOV$	IBUF
	MOV$	CBFL
	MOV$	CBUF
	MOV$	ADDR
	MVB$	NCP,0
	MOV	(PC)+,-(SP)
	.BYTE	127.,7.
	DIR$	,ERR
	.ENDM
	.MACRO	GCII$	BUF,BUFL,CLI,DEV,UNIT
	.MCALL	OFF$,R50$
	.IF	NDF $$$GLB
	.BYTE	173.,7.
	.WORD	BUF
	.WORD	BUFL
	R50$	CLI
$$$T2=.
	.ASCII	/DEV/
.=$$$T2+2
	.BYTE	UNIT,0
	.ENDC
	.IF	NDF G.BUF
	.IRP	X,<,<G.CIBF,2>,<G.CIBL,2>,<G.CICN,4>,<G.CIDV,2>,<G.CIUN>>
	OFF$	X
	.ENDM
$$$OST=0
	.IRP	X,<<G.CICL,4>,<G.CICS,2>,<G.CITK,4>,<G.CIW2,2>,<G.CIPU,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<G.CICU,2>,<G.CIDP,16.>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	GCII$
	.MACRO	GCII$C	BUF,BUFL,CLI,DEV,UNIT,CS,ERR
	.MCALL	GCII$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPB$$
	.IFTF
$$$=.
	GCII$	BUF,BUFL,CLI,DEV,UNIT
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM
	.MACRO	GCII$S	BUF,BUFL,CLI,DEV,UNIT,ERR
	.MCALL	MOV$,MVB$,DIR$,RFA$
	MVB$	UNIT,0
	MOV$	DEV
	RFA$	CLI
	MOV$	BUFL
	MOV$	BUF
	MOV	(PC)+,-(SP)
	.BYTE	173.,7.
	DIR$	,ERR
	.ENDM	GCII$S
	.MACRO	GCMLB$	MAXD,PRMPT,UBUF,LUN,PDL,SIZE=80.,?PDL1,?DFNB,?BUF
	.MCALL	FDBDF$,FDAT$A,FDOP$A,NMBLK$,FDBF$A,CBYTE$
	FDBDF$
	FDAT$A	2
	.IF NB	<LUN>
	FDOP$A	LUN,,DFNB
	.IFF
	FDOP$A	1,,DFNB
	.ENDC
	FDBF$A	,,1
	CBYTE$	<FD.TTY!FD.REC!FD.CCL>,F.RCTL
	.MCALL	GCMLD$
	GCMLD$
	.BYTE	0
	.IF LE	<SIZE-80.>
	.BYTE	GE.COM!GE.IND!GE.CLO!GE.SIZ
	.IFF
	.BYTE	GE.COM!GE.IND!GE.CLO!GE.CON!GE.SIZ
	.ENDC
	.BLKW	4
	.BYTE	-1,MAXD
	.IF B	<PDL>
	.WORD	PDL1
	.IFF
	.WORD	PDL
	.ENDC
	.IF NB <UBUF>
	.WORD	UBUF
	.IFF
	.WORD	BUF
	.ENDC
$$$=.
	.ASCII	<15><12>
	.IF NB	<PRMPT>
	.ASCII	/PRMPT>/
	.IFF
	.ASCII	/   >/
	.ENDC
.=$$$+6
DFNB:	NMBLK$	CMI,CMD
	.WORD	SIZE
G.LPDL=<MAXD+1>*<6+<5*2>>
	.IF B	<PDL>
PDL1:	.BLKB	G.LPDL
	.ENDC
	.IF B	<UBUF>
BUF:	.BLKB	SIZE+2.
	.ENDC
	.ENDM	GCMLB$
	.MACRO	GCMLD$	GBL
	.IF NDF	S.FDB
	.MCALL	FDBSZ$
	FDBSZ$
	.ENDC
	.MCALL	GCML$D
	GCML$D	GBL
	.MACRO	GCMLD$	X
	.ENDM
	.ENDM	GCMLD$
	.MACRO	GCML$	NAME,ADPR,LNPR
	.MCALL	GCMLD$,LDR0$
	GCMLD$	DEF$L
	LDR0$	NAME
	.IF NB	<LNPR>
	MOV	LNPR,G.PSDS(R0)
	.IIF B	<ADPR>, .ERROR
	.IIF NB	<ADPR>,	MOV	ADPR,G.PSDS+2(R0)
	.ENDC
	.IIF B	<LNPR>,	CLR	G.PSDS(R0)
	.GLOBL	.GCML1
	JSR	PC,.GCML1
	.ENDM	GCML$
	.MACRO	GCML$D	GBL
	.IF IDN	<GBL>,<DEF$G>
	.GLOBL	G.ERR,G.MODE,G.PSDS,G.CMLD
	.GLOBL	GE.COM,GE.IND,GE.CLO,GE.LC,GE.CON,GE.SIZ
	.GLOBL	GE.IOR,GE.OPR,GE.BIF,GE.MDE,GE.EOF
	.ENDC
G.ERR	= S.FDB
G.MODE	= G.ERR+1
G.PSDS	= G.ERR+2
G.CMLD	= G.ERR+6
G.ISIZ	= 16.
G.DPRM	= G.ERR+G.ISIZ
G.SIZE	= G.DPRM+6+S.FNB
GE.COM	= 1
GE.IND	= 2
GE.CLO	= 4
GE.LC	= 10
GE.CON	= 20
GE.SIZ	= 40
GE.IOR	= -1
GE.OPR	= -2
GE.BIF	= -3
GE.MDE	= -4
GE.EOF	= -10.
GE.RBG	= -40.
	.MACRO	GCML$D	X
	.ENDM
	.ENDM	GCML$D
	.MACRO	GET$ FDB,INADR,MAXCNT,ERR
	.MCALL	LDFDB$,CMOV$W,ERR$
	LDFDB$	FDB
	CMOV$W	INADR,F.URBD+2
	CMOV$W	MAXCNT,F.URBD
	.GLOBL	.GET
	JSR	PC,.GET
	ERR$	ERR
	.ENDM	GET$
	.MACRO	GET$R FDB,INADR,MAXCNT,LRCNM,HRCNM,ERR
	.MCALL	LDFDB$,CMOV$W,ERR$
	LDFDB$	FDB
	CMOV$W	INADR,F.URBD+2
	CMOV$W	MAXCNT,F.URBD
	CMOV$W	LRCNM,F.RCNM+2
	CMOV$W	HRCNM,F.RCNM
	.GLOBL	.GET
	JSR	PC,.GET
	ERR$	ERR
	.ENDM	GET$R
	.MACRO	GET$S FDB,INADR,MAXCNT,ERR
	.MCALL	LDFDB$,CMOV$W,ERR$
	LDFDB$	FDB
	CMOV$W	INADR,F.URBD+2
	CMOV$W	MAXCNT,F.URBD
	.GLOBL	.GETSQ
	JSR	PC,.GETSQ
	ERR$	ERR
	.ENDM	GET$S
	.MACRO	GFN$
GI.GAS=0
GI.UIC=1
GI.DEF=2
GI.FMK=3
GI.QMC=4
GI.UAB=5
GI.DEV=6
GI.SPR=7.
GI.REN=8.
GI.APR=9.
GI.TSK=10.
	.ENDM
	.MACRO	GIN$	SFCN,P1,P2,P3,P4,P5,P6,P7,P8,P9
	.MCALL	OFF$,GFN$
	.IF NDF	$$$GLB
	GFN$
	.NARG	$$$N
$$$I=$$$N
	.BYTE	169.,$$$N+1
	.IRP	$$$PRM,<SFCN,P1,P2,P3,P4,P5,P6,P7,P8,P9>
	.IF EQ	$$$I
	.MEXIT
	.IFF
$$$I=$$$I-1
	.ENDC
	.WORD	$$$PRM
	.ENDR
	.ENDC
	.IF NDF	G.INSF
	.NLIST
	.IRP	X,<,<G.INSF,2>,<G.IP01,2>,<G.IP02,2>,<G.IP03,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<G.IP04,2>,<G.IP05,2>,<G.IP06,2>>
	OFF$	X
	.ENDR
	.IRP	X,<<G.IP07,2>,<G.IP08,2>,<G.IP09,2>>
	OFF$	X
	.ENDR
	.ENDC
	.ENDM	GIN$
	.MACRO	GIN$C	SFCN,P1,P2,P3,P4,P5,P6,P7,P8,P9
	.MCALL	GIN$,DIR$,GFN$,OFF$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GFN$
	.NARG	$$$N
$$$I=$$$N
	.BYTE	169.,$$$N+1
	.IRP	$$$PRM,<SFCN,P1,P2,P3,P4,P5,P6,P7,P8,P9>
	.IF EQ	$$$I
	.MEXIT
	.IFF
$$$I=$$$I-1
	.ENDC
	.WORD	$$$PRM
	.ENDR
	.IF NDF	G.INSF
	.NLIST
	.IRP	X,<,<G.INSF,2>,<G.IP01,2>,<G.IP02,2>,<G.IP03,2>>
	OFF$	X
	.ENDR
	.IRP	X,<<G.IP04,2>,<G.IP05,2>,<G.IP06,2>>
	OFF$	X
	.ENDR
	.IRP	X,<<G.IP07,2>,<G.IP08,2>,<G.IP09,2>>
	OFF$	X
	.ENDR
	.ENDC
	.IFT
	.PSECT	CS
	DIR$	#$$$
	.ENDC
	.ENDM	GIN$C
	.MACRO	GIN$S	SFCN,P1,P2,P3,P4,P5,P6,P7,P8,P9
	.MCALL	MOV$,DIR$,OFF$,MVB$,GFN$
	GFN$
	.NARG	$$$N
$$$I=$$$N
$$$K=9.
	.IRP	$$$PRM,<P9,P8,P7,P6,P5,P4,P3,P2,P1,SFCN>
	.IF GT $$$I-$$$K
	MOV$	$$$PRM
	.ENDC
$$$K=$$$K-1
	.ENDR
	MOV	(PC)+,-(SP)
	.BYTE	169.,$$$N+1
	DIR$
	.ENDM	GIN$S
	.MACRO	GLUN$	LUN,BUFA
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	5,3
	.WORD	LUN
	.WORD	BUFA
	.ENDC
	.IF NDF	G.LULU
	.NLIST
	.IRP	X,<,<G.LULU,2>,<G.LUBA,2>,<G.LUBL,2>>
	OFF$	X
	.ENDM
	.IF NDF	G.LUNA
$$$OST=0
	.IRP	X,<<G.LUNA,2>,<G.LUNU,1>,<G.LUFB,1>,<G.LUCW,8.>>
	OFF$	X
	.ENDM
	.ENDC
	.LIST
	.ENDC
	.ENDM	GLUN$
	.MACRO 	GLUN$C	LUN,BUFA,CS,ERR
	.MCALL	GLUN$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GLUN$	LUN,BUFA
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	GLUN$C
	.MACRO	GLUN$S	LUN,BUFA,ERR
	.MCALL	MOV$,DIR$,OFF$
	MOV$	BUFA
	MOV$	LUN
	MOV	(PC)+,-(SP)
	.BYTE	5,3
	DIR$	,ERR
	.IF NDF	G.LUNA
	.NLIST
$$$OST=0
	.IRP	X,<<G.LUNA,2>,<G.LUNU,1>,<G.LUFB,1>,<G.LUCW,8.>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	GLUN$S
	.MACRO	GMCR$
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	127.,41.
	.BLKW	40.
	.ENDC
	.IF NDF	G.MCRB
	.NLIST
	OFF$
	OFF$	G.MCRB,80.
	.LIST
	.ENDC
	.ENDM	GMCR$
	.MACRO	GMCR$C	CS,ERR
	.MCALL	GMCR$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GMCR$
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	GMCR$C
	.MACRO	GMCX$	WVEC
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	113.,2
	.WORD	WVEC
	.ENDC
	.IF NDF	G.MCVA
	OFF$
	OFF$	G.MCVA,2
	.ENDC
	.ENDM	GMCX$
	.MACRO	GMCX$C	WVEC,CS,ERR
	.MCALL	GMCX$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GMCX$	WVEC
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	GMCX$C
	.MACRO	GMCX$S	WVEC,ERR
	.MCALL	DIR$,MOV$
	MOV$	WVEC
	MOV	(PC)+,-(SP)
	.BYTE	113.,2
	DIR$	,ERR
	.ENDM	GMCX$S
	.MACRO	GPRT$	PRT,BUF
	.MCALL	OFF$,R50$
	.IF NDF	$$$GLB
	.BYTE	65.,4
	R50$	PRT
	.WORD	BUF
	.ENDC
	.IF NDF	G.PRPN
	.NLIST
	OFF$
	OFF$	G.PRPN,4
	OFF$	G.PRBA,2
	.IF NDF	G.PRPB
$$$OST=0
	.IRP	X,<<G.PRPB,2>,<G.PRPS,2>,<G.PRFW,2>>
	OFF$	X
	.ENDM
	.ENDC
	.LIST
	.ENDC
	.ENDM	GPRT$
	.MACRO	GPRT$C	PRT,BUF,CS,ERR
	.MCALL	GPRT$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GPRT$	PRT,BUF
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	GPRT$C
	.MACRO	GPRT$S	PRT,BUF,ERR
	.MCALL	MOV$,RFA$,DIR$,OFF$
	MOV$	BUF
	RFA$	PRT
	MOV	(PC)+,-(SP)
	.BYTE	65.,4
	DIR$	,ERR
	.IF NDF	G.PRPB
	.NLIST
$$$OST=0
	.IRP	X,<<G.PRPB,2>,<G.PRPS,2>,<G.PRFW,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	GPRT$S
	.MACRO	GREG$	RID,BUF
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	65.,4
	.WORD	0,RID
	.WORD	BUF
	.ENDC
	.IF NDF	G.RGID
	.NLIST
	OFF$
	OFF$	,2
	OFF$	G.RGID,2
	OFF$	G.RGBA,2
	.IF NDF	G.RGRB
$$$OST=0
	.IRP	X,<<G.RGRB,2>,<G.RGRS,2>,<G.RGFW,2>>
	OFF$	X
	.ENDM
	.ENDC
	.LIST
	.ENDC
	.ENDM	GREG$
	.MACRO	GREG$C	RID,BUF,CS,ERR
	.MCALL	GREG$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GREG$	RID,BUF
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	GREG$C
	.MACRO	GREG$S	RID,BUF,ERR
	.MCALL	MOV$,DIR$,OFF$
	MOV$	BUF
	MOV$	RID
	CLR	-(SP)
	MOV	(PC)+,-(SP)
	.BYTE	65.,4
	DIR$	,ERR
	.IF NDF	G.RGRB
	.NLIST
$$$OST=0
	.IRP	X,<<G.RGRB,2>,<G.RGRS,2>,<G.RGFW,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	GREG$S
	.MACRO	GSSW$
	.IF NDF $$$GLB
	.BYTE	125.,1
	.ENDC
	.ENDM	GSSW$
	.MACRO	GSSW$C	PSCT,ERR
	.MCALL	GSSW$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GSSW$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	GSSW$C
	.MACRO	GSSW$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	125.,1
	DIR$	,ERR
	.ENDM	GSSW$S
	.MACRO	GTIM$	BUFA
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	61.,2
	.WORD	BUFA
	.ENDC
	.IF NDF	G.TIBA
	.NLIST
	OFF$
	OFF$	G.TIBA,2
	.IF NDF	G.TIYR
$$$OST=0
	.IRP	X,<<G.TIYR,2>,<G.TIMO,2>,<G.TIDA,2>,<G.TIHR,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<G.TIMI,2>,<G.TISC,2>,<G.TICT,2>,<G.TICP,2>>
	OFF$	X
	.ENDM
	.ENDC
	.LIST
	.ENDC
	.ENDM	GTIM$
	.MACRO	GTIM$C	BUFA,CS ERR
	.MCALL	GTIM$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	GTIM$	BUFA
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	GTIM$C
	.MACRO	GTIM$S	BUFA,ERR
	.MCALL	MOV$,DIR$,OFF$
	MOV$	BUFA
	MOV	(PC)+,-(SP)
	.BYTE	61.,2
	DIR$	,ERR
	.IF NDF	G.TIYR
	.NLIST
$$$OST=0
	.IRP	X,<<G.TIYR,2>,<G.TIMO,2>,<G.TIDA,2>,<G.TIHR,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<G.TIMI,2>,<G.TISC,2>,<G.TICT,2>,<G.TICP,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	GTIM$S
	.MACRO	GTSK$	BUFA
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	63.,2
	.WORD	BUFA
	.ENDC
	.IF NDF	G.TSBA
	.NLIST
	OFF$
	OFF$	G.TSBA,2
	.IF NDF	G.TSTN
$$$OST=0
	.IRP	X,<<G.TSTN,4>,<G.TSPN,4>,<G.TSRN,4>,<G.TSPR,2>,<G.TSPC,1>>
	OFF$	X
	.ENDM
	.IRP	X,<<G.TSGC,1>,<G.TSNL,2>,<G.TSMT,2>,<G.TSFW,2>,<G.TSVA,2>>
	OFF$	X
	.ENDM
	OFF$	G.TSVL,2
	OFF$	G.TSTS,2
	OFF$	G.TSSY,2
	OFF$	G.TSDU,2
$$$OST=0
	.IRP	X,<<RX$11D,1>,<RX$11M,1>,<RX$11S,1>,<RX$IAS,1>>
	OFF$	X
	.ENDM
	.ENDC
	.LIST
	.ENDC
	.ENDM	GTSK$
	.MACRO	GTSK$C	BUFA,CS,ERR
	.MCALL	GTSK$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFT
	GTSK$	BUFA
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	GTSK$C
	.MACRO	GTSK$S	BUFA,ERR
	.MCALL	MOV$,DIR$,OFF$
	MOV$	BUFA
	MOV	(PC)+,-(SP)
	.BYTE	63.,2
	DIR$	,ERR
	.IF NDF	G.TSTN
	.NLIST
$$$OST=0
	.IRP	X,<<G.TSTN,4>,<G.TSPN,4>,<G.TSRN,4>,<G.TSPR,2>,<G.TSPC,1>>
	OFF$	X
	.ENDM
	.IRP	X,<<G.TSGC,1>,<G.TSNL,2>,<G.TSMT,2>,<G.TSFW,2>,<G.TSVA,2>>
	OFF$	X
	.ENDM
	OFF$	G.TSVL,2
	OFF$	G.TSTS,2
	OFF$	G.TSSY,2
	OFF$	G.TSDU,2
$$$OST=0
	.IRP	X,<<RX$11D,1>,<RX$11M,1>,<RX$11S,1>,<RX$IAS,1>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	GTSK$S
	.MACRO	HDRDF$,L,B
	.ASECT
.=0
H.CSP:'L'.BLKW	1
H.HDLN:'L'.BLKW	1
H.EFLM:'L'.BLKW	2
H.CUIC:'L'.BLKW	1
H.DUIC:'L'.BLKW	1
H.IPS:'L'.BLKW	1
H.IPC:'L'.BLKW	1
H.ISP:'L'.BLKW	1
H.ODVA:'L'.BLKW	1
H.ODVL:'L'.BLKW	1
H.TKVA:'L'.BLKW	1
H.TKVL:'L'.BLKW	1
H.PFVA:'L'.BLKW	1
H.FPVA:'L'.BLKW	1
H.RCVA:'L'.BLKW	1
H.EFSV:'L'.BLKW	1
H.FPSA:'L'.BLKW	1
H.WND:'L'.BLKW	1
H.DSW:'L'.BLKW	1
H.FCS:'L'.BLKW	1
H.FORT:'L'.BLKW	1
H.OVLY:'L'.BLKW	1
H.VEXT:'L'.BLKW	1
H.SPRI:'L'.BLKB	1
H.NML:'L'.BLKB	1
H.RRVA:'L'.BLKW	1
	.BLKW	3
H.GARD:'L'.BLKW	1
H.NLUN:'L'.BLKW	1
H.LUN:'L'.BLKW	2
.=0
W.BPCB:'L'.BLKW	1
W.BLVR:'L'.BLKW	1
W.BHVR:'L'.BLKW	1
W.BATT:'L'.BLKW	1
W.BSIZ:'L'.BLKW	1
W.BOFF:'L'.BLKW	1
W.BFPD:'L'.BLKB	1
W.BNPD:'L'.BLKB	1
W.BLPD:'L'.BLKW	1
W.BLGH:'L'
	.PSECT
	.MACRO	HDRDF$	X,Y
	.ENDM
	.ENDM
	.MACRO	HLPDF$ FILLUN,TILUN,EFN,NAME,FDBIN,DSP,MODULE,FDBOUT
$HFDB::	.WORD	FDBIN
	.IF NB FDBOUT
	.WORD	FDBOUT
	.IFF
	.WORD	0
	.ENDC
$HLUN1	== FILLUN
$HLUN2	== TILUN
$HEFN	== EFN
$HDSP::	.WORD	DSP
$HMOD::	.RAD50	/MODULE/
$HNAME::.ASCII	/NAME/
	.EVEN
	.ENDM	HLPDF$
	.MACRO	IHAR$
	.MCALL	DSAR$
	DSAR$
	.ENDM	IHAR$
	.MACRO	IHAR$C	PSCT,ERR
	.MCALL	DSAR$C
	DSAR$C	PSCT,ERR
	.ENDM	IHAR$C
	.MACRO	IHAR$S	ERR
	.MCALL	DSAR$S
	DSAR$S	ERR
	.ENDM	IHAR$S
	.MACRO	IOERR$	$$$GBL
	.MCALL	.IOER.,DEFIN$
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.IFF
	...GBL=0
	.ENDC
	.IIF	NDF,$$MSG,$$MSG=0
	.IOER.	IE.BAD,-01.,<Bad parameters>
	.IOER.	IE.IFC,-02.,<Invalid function code>
	.IOER.	IE.DNR,-03.,<Device not ready>
	.IOER.	IE.VER,-04.,<Parity error on device>
	.IOER.	IE.ONP,-05.,<Hardware option not present>
	.IOER.	IE.SPC,-06.,<Illegal user buffer>
	.IOER.	IE.DNA,-07.,<Device not attached>
	.IOER.	IE.DAA,-08.,<Device already attached>
	.IOER.	IE.DUN,-09.,<Device not attachable>
	.IOER.	IE.EOF,-10.,<End of file detected>
	.IOER.	IE.EOV,-11.,<End of volume detected>
	.IOER.	IE.WLK,-12.,<Write attempted to locked unit>
	.IOER.	IE.DAO,-13.,<Data overrun>
	.IOER.	IE.SRE,-14.,<Send/receive failure>
	.IOER.	IE.ABO,-15.,<Request terminated>
	.IOER.	IE.PRI,-16.,<Privilege violation>
	.IOER.	IE.RSU,-17.,<Sharable resource in use>
	.IOER.	IE.OVR,-18.,<Illegal overlay request>
	.IOER.	IE.BYT,-19.,<Odd byte count (or virtual address)>
	.IOER.	IE.BLK,-20.,<Logical block number too large>
	.IOER.	IE.MOD,-21.,<Invalid UDC module #>
	.IOER.	IE.CON,-22.,<UDC connect error>
	.IOER.	IE.BBE,-56.,<Bad block on device>
	.IOER.	IE.STK,-58.,<Not enough stack space (FCS or FCP)>
	.IOER.	IE.FHE,-59.,<Fatal hardware error on device>
	.IOER.	IE.EOT,-62.,<End of tape detected>
	.IOER.	IE.OFL,-65.,<Device off line>
	.IOER.	IE.BCC,-66.,<Block check, CRC, or framing error>
	.IOER.	IE.NFW,-69.,<Path lost to partner>
	.IOER.	IE.DIS,-69.,<Path lost to partner>
	.IOER.	IE.NDR,-72.,<No dynamic space available>
	.IOER.	IE.TMO,-95.,<Timeout on request>
	.IOER.	IE.CNR,-96.,<Connection rejected>
	.IOER.	IE.NOD,-23.,<Caller's nodes exhausted>
	.IOER.	IE.DFU,-24.,<Device full>
	.IOER.	IE.IFU,-25.,<Index file full>
	.IOER.	IE.NSF,-26.,<No such file>
	.IOER.	IE.LCK,-27.,<Locked from read/write access>
	.IOER.	IE.HFU,-28.,<File header full>
	.IOER.	IE.WAC,-29.,<Accessed for write>
	.IOER.	IE.CKS,-30.,<File header checksum failure>
	.IOER.	IE.WAT,-31.,<Attribute control list format error>
	.IOER.	IE.RER,-32.,<File processor device read error>
	.IOER.	IE.WER,-33.,<File processor device write error>
	.IOER.	IE.ALN,-34.,<File already accessed on LUN>
	.IOER.	IE.SNC,-35.,<File ID, file number check>
	.IOER.	IE.SQC,-36.,<File ID, sequence number check>
	.IOER.	IE.NLN,-37.,<No file accessed on LUN>
	.IOER.	IE.CLO,-38.,<File was not properly closed>
	.IOER.	IE.DUP,-57.,<ENTER - duplicate entry in directory>
	.IOER.	IE.BVR,-63.,<Bad version number>
	.IOER.	IE.BHD,-64.,<Bad file header>
	.IOER.	IE.EXP,-75.,<File expiration date not reached>
	.IOER.	IE.BTF,-76.,<Bad tape format>
	.IOER.	IE.ALC,-84.,<Allocation failure>
	.IOER.	IE.ULK,-85.,<Unlock error>
	.IOER.	IE.WCK,-86.,<Write check failure>
	.IOER.	IE.DSQ,-90.,<Disk quota exceeded>
	.IOER.	IE.NBF,-39.,<OPEN - no buffer space available for file>
	.IOER.	IE.RBG,-40.,<Illegal record size>
	.IOER.	IE.NBK,-41.,<File exceeds space allocated, no blocks>
	.IOER.	IE.ILL,-42.,<Illegal operation on file descriptor block>
	.IOER.	IE.BTP,-43.,<Bad record type>
	.IOER.	IE.RAC,-44.,<Illegal record access bits set>
	.IOER.	IE.RAT,-45.,<Illegal record attributes bits set>
	.IOER.	IE.RCN,-46.,<Illegal record number - too large>
	.IOER.	IE.2DV,-48.,<Rename - 2 different devices>
	.IOER.	IE.FEX,-49.,<Rename - new file name already in use>
	.IOER.	IE.BDR,-50.,<Bad directory file>
	.IOER.	IE.RNM,-51.,<Can't rename old file system>
	.IOER.	IE.BDI,-52.,<Bad directory syntax>
	.IOER.	IE.FOP,-53.,<File already open>
	.IOER.	IE.BNM,-54.,<Bad file name>
	.IOER.	IE.BDV,-55.,<Bad device name>
	.IOER.	IE.NFI,-60.,<File ID was not specified>
	.IOER.	IE.ISQ,-61.,<Illegal sequential operation>
	.IOER.	IE.NNC,-77.,<Not ANSI 'D' format byte count>
	.IOER.	IE.NNN,-68.,<No such node>
	.IOER.	IE.BLB,-70.,<Bad logical buffer>
	.IOER.	IE.URJ,-73.,<Connection rejected by user>
	.IOER.	IE.NRJ,-74.,<Connection rejected by network>
	.IOER.	IE.NDA,-78.,<No data available>
	.IOER.	IE.IQU,-91.,<Inconsistent qualifier usage>
	.IOER.	IE.RES,-92.,<Circuit reset during operation>
	.IOER.	IE.TML,-93.,<Too many links to task>
	.IOER.	IE.NNT,-94.,<Not a network task>
	.IOER.	IE.UKN,-97.,<Unknown name>
	.IOER.	IE.NLK,-79.,<Task not linked to specified ICS/ICR interrupts>
	.IOER.	IE.NST,-80.,<Specified task not installed>
	.IOER.	IE.FLN,-81.,<Device offline when offline request was issued>
	.IOER.	IE.IES,-82.,<Invalid escape sequence>
	.IOER.	IE.PES,-83.,<Partial escape sequence>
	.IOER.	IE.ICE,-47.,<Internal consistancy error>
	.IOER.	IE.ONL,-67.,<Device online>
	.IOER.	IE.SZE,-98.,<Unable to size device>
	.IOER.	IE.NTR,-87.,<Task not triggered>
	.IOER.	IE.REJ,-88.,<Transfer rejected by receiving CPU>
	.IOER.	IE.FLG,-89.,<Event flag already specified>
	DEFIN$	IS.PND,+00.
	DEFIN$	IS.SUC,+01.
	DEFIN$	IS.RDD,+02.
	DEFIN$	IS.TNC,+02.
	DEFIN$	IS.BV,+05.
	DEFIN$	IS.DAO,+02.
	DEFIN$	IS.CR,<15*400+1>
	DEFIN$	IS.ESC,<33*400+1>
	DEFIN$	IS.CC,<3*400+1>
	DEFIN$	IS.ESQ,<233*400+1>
	DEFIN$	IS.PES,<200*400+1>
	DEFIN$	IS.EOT,<4*400+1>
	DEFIN$	IS.TAB,<11*400+1>
	DEFIN$	IS.TMO,+2.
	.IF	EQ,$$MSG
	.MACRO	IOERR$	A
	.ENDM	IOERR$
	.ENDC
	.ENDM	IOERR$
.MACRO	ISTAT$	STTBL,KEYTBL,DEBUG
	.MCALL	MTRAN$
	.IF	DF	$RONLY
	.PSECT	$STATE,D,RO
	.IFF
	.PSECT	$STATE,D
	.ENDC
STTBL::
	.IF	DF	$RONLY
	.PSECT	$KTAB,D,RO
	.IFF
	.PSECT	$KTAB,D
	.ENDC
KEYTBL::
	.IF	DF	$RONLY
	.PSECT	$KSTR,D,RO
	.IFF
	.PSECT	$KSTR,D
	.ENDC
	.IF IDN <DEBUG>,<$DEBUG>
	.MACRO DBGTP$
	.LIST
							.=.
	.NLIST
	.ENDM
	.IFF
	.MACRO DBGTP$
	.ENDM
	.ENDC
	$$$KEY = -1
	$$$FLG = -1
	$EXIT = 0
	$LAMDA = 300
	$NUMBR = 302
	$STRNG = 304
	$BLANK = 306
	$SUBXP = 310
	$EOS   = 312
	$DNUMB = 314
	$RAD50 = 316
	$ANY   = 320
	$ALPHA = 322
	$DIGIT = 324
	.PSECT
.ENDM	ISTAT$
	.MACRO	LBLDF$	L,B
	.ASECT
.=0
R$LNAM:'L'.BLKW	2
R$LSA:'L' .BLKW	1
R$LHGV:'L'.BLKW	1
R$LMXV:'L'.BLKW	1
R$LLDZ:'L'.BLKW	1
R$LMXZ:'L'.BLKW	1
R$LOFF:'L'.BLKW	1
R$LWND:'L'.BLKW	1
R$LSEG:'L'.BLKW	1
R$LFLG:'L'.BLKW	1
R$LDAT:'L'.BLKW	3
R$LSIZ:'L'.BLKW	0
LD$ACC='B'100000
LD$RSV='B'040000
LD$REL='B'000004
.=0
L$BTSK:'L'.BLKW	2
L$BPAR:'L'.BLKW	2
L$BSA:'L' .BLKW	1
L$BHGV:'L'.BLKW	1
L$BMXV:'L'.BLKW	1
L$BLDZ:'L'.BLKW	1
L$BMXZ:'L'.BLKW	1
L$BOFF:'L'.BLKW	1
L$BWND:'L'.BLKW	1
L$BSEG:'L'.BLKW	1
L$BFLG:'L'.BLKW	1
L$BDAT:'L'.BLKW	3
L$BLIB:'L'.BLKW	<7.*<R$LSIZ/2>>+1
L$BPRI:'L'.BLKW	1
L$BXFR:'L'.BLKW	1
L$BEXT:'L'.BLKW	1
L$BSGL:'L'.BLKW	1
L$BHRB:'L'.BLKW	1
L$BBLK:'L'.BLKW	1
L$BLUN:'L'.BLKW	1
	.BLKW	<512.-.>/2
L$BASG:'L'.BLKW	0
TS$PIC='B'100000
TS$NHD='B'040000
TS$ACP='B'020000
TS$PMD='B'010000
TS$SLV='B'004000
TS$NSD='B'002000
TS$NET='B'001000
TS$PRV='B'000400
TS$CMP='B'000200
TS$CHK='B'000100
TS$RES='B'000040
	.PSECT
	.MACRO	LBLDF$	X,Y
	.ENDM
	.ENDM
	.MACRO	LDFDB$ FDB
	.IIF	B,FDB,.MEXIT
	.NTYPE	PAR$$$,FDB
	.IIF	EQ,PAR$$$,.MEXIT
	MOV	FDB,R0
	.ENDM	LDFDB$
	.MACRO	LDR0$	ARG
	.IIF	B,ARG,.MEXIT
	.NTYPE	PAR$$$,ARG
	.IIF	EQ,PAR$$$,.MEXIT
	MOV	ARG,R0
	.ENDM
	.MACRO	MAP$	WDB
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	121.,2
	.WORD	WDB
	.ENDC
	.IF NDF	M.APBA
	OFF$
	OFF$	M.APBA,2
	.ENDC
	.ENDM	MAP$
	.MACRO	MAP$C	WDB,CS,ERR
	.MCALL	MAP$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	MAP$	WDB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	MAP$C
	.MACRO	MAP$S	WDB,ERR
	.MCALL	DIR$,MOV$
	MOV$	WDB
	MOV	(PC)+,-(SP)
	.BYTE	121.,2
	DIR$	,ERR
	.ENDM	MAP$S
	.MACRO	MOV$	ARG
	.IF NB	<ARG>
	.IF DIF	<ARG>,<#0>
	MOV	ARG,-(SP)
	.MEXIT
	.ENDC
	.ENDC
	CLR	-(SP)
	.ENDM	MOV$
	.MACRO	MRKT$	EFN,TM,TU,AST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	23.,5
	.WORD	EFN
	.WORD	TM
	.WORD	TU
	.WORD	AST
	.ENDC
	.IF NDF	M.KTEF
	.NLIST
	.IRP	X,<,<M.KTEF,2>,<M.KTMG,2>,<M.KTUN,2>,<M.KTAE,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	MRKT$
	.MACRO	MRKT$C	EF,TM,TU,AST,CS,ERR
	.MCALL	MRKT$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	MRKT$	EF,TM,TU,AST
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	MRKT$C
	.MACRO	MRKT$S	EF,TM,TU,AST,ERR
	.MCALL	RVP$,DIR$
	RVP$	EF,TM,TU,AST
	MOV	(PC)+,-(SP)
	.BYTE	23.,5
	DIR$	,ERR
	.ENDM	MRKT$S
	.MACRO	MSDS$	MASK
	.MCALL	OFF$
	.IF	NDF $$$GLB
	.BYTE	201.,2.
	.WORD	MASK
	.ENDC
	.IF	NDF M.SDMA
	.IRP	X,<,<M.SDMA,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	MSDS$
	.MACRO	MSDS$C	MASK,CS,ERR
	.MCALL	MSDS$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPBD$	D
$$$=.
	.IFTF
	MSDS$	MASK
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM
	.MACRO MSDS$S	MASK,ERR
	.MCALL	MOV$,DIR$
	MOV$	MASK
	MOV	(PC)+,-(SP)
	.BYTE	201.,2.
	DIR$	,ERR
	.ENDM
.MACRO	MTRAN$
	.PSECT	$STATE
	.IF	EQ	$$$FLG+1
	$$$FLG = 0
	.MEXIT
	.ENDC
	$$$TYP
	.BYTE	$$$FLG
	.IF	NE	$$$FLG&1
	$$$EXT
	.ENDC
	.IF	NE	$$$FLG&2
	$$$ACT
	.ENDC
	.IF	NE	$$$FLG&10
	$$$BIT
	.ENDC
	.IF	NE	$$$FLG&4
	.WORD	$$$STA
	.IFF
	.IF	EQ	$$$FLG&200
	.ERROR	"BAD DEFAULT TRANSITION"
	.ENDC
	.ENDC
	$$$FLG = 0
.ENDM	MTRAN$
	.MACRO	MVB$	LOW,HIGH
	.IF B	<LOW>
	.IF B	<HIGH>
	CLR	-(SP)
	.IFF
	CLRB	-(SP)
	MOVB	HIGH,1(SP)
	.ENDC
	.IFF
	.IF B	<HIGH>
	CLR	-(SP)
	MOVB	LOW,(SP)
	.IFF
	MOVB	LOW,-(SP)
	MOVB	HIGH,1(SP)
	.ENDC
	.ENDC
	.ENDM	MVB$
	.MACRO	MVTS$	ACTION,ADDR,VAL
	.MCALL	OFF$
	.IF	NDF $$$GLB
	.BYTE	203.,4.
	.WORD	ACTION
	.WORD	ADDR
	.WORD	VAL
	.ENDC
	.IF	NDF M.VTAC
	.IRP	X,<,<M.VTAC,2>,<M.VTAD,2>,<M.VTVA,0>,<M.VTBF,2>>
	OFF$	X
	.ENDM
	$$$=0
	.IRP	X,<<MV.FUI,1>,<MV.FSI,1>,<MV.FUD,1>,<MV.FSD,1>>
	OFF$	X
	.ENDM
	.IRP	X,<<MV.TUI,1>,<MV.TSI,1>,<MV.TUD,1>,<MV.TSD,1>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	MVTS$
	.MACRO	MVTS$C	ACTION,ADDR,VAL,CS,ERR
	.MCALL	MVTS$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPBD$	D
$$$=.
	.IFTF
	MVTS$	ACTION,ADDR,VAL
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM
	.MACRO MVTS$S	ACTION,ADDR,VAL,ERR
	.MCALL	MOV$,DIR$
	MOV$	VAL
	MOV$	ADDR
	MOV$	ACTION
	MOV	(PC)+,-(SP)
	.BYTE	203.,4.
	DIR$	,ERR
	.ENDM
	.MACRO	NBOFF$	OFFSET
	.MCALL	OFFSET,DEF$I,DEF$L
	DEF$I	0
	OFFSET	S.FNAM
	OFFSET	S.FTYP
	OFFSET	S.FNTY
	OFFSET	S.FNBW
	OFFSET	S.ANM1
	OFFSET	S.ANM2
	S.FNAM=6
	S.FTYP=2
	S.ANM1=12.
	S.ANM2=5.
	S.FNTY=<S.FNAM+S.FTYP>/2
	OFFSET	N.FID,2
	OFFSET	N.ANM1,4
	OFFSET	N.FNAM,S.FNAM
	OFFSET	N.FTYP,S.FTYP
	OFFSET	N.FVER,2
	OFFSET	S.NFEN
	DEF$L	S.NFEN
	OFFSET	N.STAT,2
	OFFSET	N.NEXT,2
	OFFSET	N.ANM2
	OFFSET	N.DID,6
	OFFSET	N.DVNM,2
	OFFSET	N.UNIT,2
	OFFSET	S.FNB
	DEF$L	S.FNB
	S.FNBW=S.FNB/2
	.IIF	IDN,<DEF$N>,<OFFSET>,.MEXIT
	.MACRO	NBOFF$	ARG
	.ENDM	NBOFF$
	.ENDM	NBOFF$
	.MACRO	NBOF$L
	.MCALL	NBOFF$
	NBOFF$	DEF$L
	.ENDM	NBOF$L
	.MACRO	NMBLK$	FNAME,FTYPE,VERS,DEVNAM,UNIT
	.MCALL	RAD50$,CWORD$,NBOFF$
	NBOFF$	DEF$L
	.IIF	NDF,...PC1,...PC1=0
	...PC3=...PC1
	...PC1=.
	.=...PC1+N.FNAM
	RAD50$	<FNAME>,S.FNAM/2
	.=...PC1+N.FTYP
	RAD50$	<FTYPE>,S.FTYP/2
	CWORD$	<VERS>,N.FVER
	.IF	NB,DEVNAM
	.=...PC1+N.DVNM
	.WORD	"DEVNAM
	.ENDC
	CWORD$	<UNIT>,N.UNIT
	.=...PC1+S.FNB
	...PC1=...PC3
	.ENDM	NMBLK$
	.MACRO	OFF$	SYMB,LEN
	.IF B	<'SYMB'LEN>
$$$OST=2
	.MEXIT
	.ENDC
	.IF NB	<SYMB>
	.IF NDF	$$$GLB
SYMB=$$$OST
	.IFF
SYMB==$$$OST
	.ENDC
	.ENDC
	.IF NB	<LEN>
$$$OST = ^O<$$$OST+LEN>
	.ENDC
	.ENDM	OFF$
	.MACRO	OFID$ FDB,FACC,LUN,FNPT,DFNB,RACC,URBA,URBS,ERR
	.MCALL	FDOP$R,FDRC$R,ERR$,CMOV$B
	FDOP$R	FDB,LUN,FNPT,DFNB,FACC
	FDRC$R	,RACC,URBA,URBS
	.GLOBL	.OPFID
	JSR	PC,.OPFID
	ERR$	ERR
	.ENDM	OFID$
	.MACRO	OFID$A FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFID$
	OFID$	FDB,#FO.APD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFID$A
	.MACRO	OFID$M FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFID$
	OFID$	FDB,#FO.MFY,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFID$M
	.MACRO	OFID$R FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFID$
	OFID$	FDB,#FO.RD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFID$R
	.MACRO	OFID$U FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFID$
	OFID$	FDB,#FO.UPD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFID$U
	.MACRO	OFID$W FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFID$
	OFID$	FDB,#FO.UPD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFID$W
	.MACRO	OFNB$ FDB,FACC,LUN,FNPT,DFNB,RACC,URBA,URBS,ERR
	.MCALL	FDOP$R,FDRC$R,ERR$,CMOV$B
	FDOP$R	FDB,LUN,FNPT,DFNB,FACC
	FDRC$R	,RACC,URBA,URBS
	.GLOBL	.OPFNB
	JSR	PC,.OPFNB
	ERR$	ERR
	.ENDM	OFNB$
	.MACRO	OFNB$A FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFNB$
	OFNB$	FDB,#FO.APD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFNB$A
	.MACRO	OFNB$M FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFNB$
	OFNB$	FDB,#FO.MFY,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFNB$M
	.MACRO	OFNB$R FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFNB$
	OFNB$	FDB,#FO.RD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFNB$R
	.MACRO	OFNB$T FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFNB$
	OFNB$	FDB,#<FO.WRT!FO.TSK>,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFNB$T
	.MACRO	OFNB$U FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFNB$
	OFNB$	FDB,#FO.UPD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFNB$U
	.MACRO	OFNB$W FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OFNB$
	OFNB$	FDB,#FO.WRT,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OFNB$W
	.MACRO	OPEN$ FDB,FACC,LUN,FNPT,DFNB,RACC,URBA,URBS,ERR
	.MCALL	FDOP$R,FDRC$R,ERR$,CMOV$B
	FDOP$R	FDB,LUN,FNPT,DFNB,FACC
	FDRC$R	,RACC,URBA,URBS
	.GLOBL	.OPEN
	JSR	PC,.OPEN
	ERR$	ERR
	.ENDM	OPEN$
	.MACRO	OPEN$A FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FO.APD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPEN$A
	.MACRO	OPEN$M FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FO.MFY,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPEN$M
	.MACRO	OPEN$R FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FO.RD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPEN$R
	.MACRO	OPEN$U FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FO.UPD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPEN$U
	.MACRO	OPEN$W FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FO.WRT,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPEN$W
	.MACRO	OPNS$A FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FA.SHR!FO.APD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPNS$A
	.MACRO	OPNS$M FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FA.SHR!FO.MFY,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPNS$M
	.MACRO	OPNS$R FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FA.SHR!FO.RD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPNS$R
	.MACRO	OPNS$U FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FA.SHR!FO.UPD,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPNS$U
	.MACRO	OPNS$W FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FA.SHR!FO.WRT,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPNS$W
	.MACRO	OPNT$D	FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPNT$W
	OPNT$W	FDB,LUN,FNPT,RACC,URBA,URBS
	BCS	.+6
	JSR	PC,.MRKDL
	ERR$	ERR
	.ENDM	OPNT$D
	.MACRO	OPNT$W FDB,LUN,FNPT,RACC,URBA,URBS,ERR
	.MCALL	OPEN$
	OPEN$	FDB,#FA.TMP!FO.WRT,LUN,FNPT,,RACC,URBA,URBS,ERR
	.ENDM	OPNT$W
	.MACRO	PRINT$ FDB,ERR,?LBL,A,B,C,D,E,F,?LBL2
	.MCALL	CALL,CLOSE$,LDR0$,GLUN$S
	LDR0$	FDB
	TST	F.BDB(R0)
	BEQ	LBL
	.IF	NE,0
	MOV	R1,-(SP)
	MOV	R2,-(SP)
	MOV	R3,-(SP)
	MOV	SP,R1
	SUB	#<8.*2>,SP
	MOV	SP,R2
	MOVB	F.LUN(R0),R3
	GLUN$S	R3,R2
	MOV	G.LUCW(R2),R3
	MOV	R0,R2
	ADD	#F.FNB+N.DID+6,R2
	MOV	-(R2),-(R1)
	MOV	-(R2),-(R1)
	MOV	-(R2),-(R1)
	ADD	#N.FID+6-N.DID,R2
	MOV	-(R2),-(R1)
	MOV	-(R2),-(R1)
	MOV	-(R2),-(R1)
	CLRB	-(R1)
	ADD	#N.FVER+2-N.FID,R2
	MOV	-(R2),-(SP)
	MOV	-(R2),-(SP)
	MOV	-(R2),-(SP)
	MOV	-(R2),-(SP)
	MOV	-(R2),-(SP)
	MOV	SP,R1
	CLOSE$	R0
	BCS	LBL2
	BIT	#FD.REC!FD.OSP,R3
	BNE	LBL2
	MOV	R0,R2
	MOV	#^RPRT,R0
	CALL	$DSPAT
	MOV	R0,F.ERR(R2)
	MOV	R2,R0
LBL2:	ROR	R1
	ADD	#<13.*2>,SP
	ROL	R1
	MOV	(SP)+,R3
	MOV	(SP)+,R2
	MOV	(SP)+,R1
	.IFF
	CALL	.PRINT
	.GLOBL	.PRINT
	.ENDC
	.IF NB	ERR
	BCC	LBL
	CALL	ERR
	.ENDC
LBL:
	.ENDM	PRINT$
	.MACRO	PUT$ FDB,OUTADR,OUTCNT,ERR
	.MCALL	LDFDB$,CMOV$W,ERR$
	LDFDB$	FDB
	CMOV$W	OUTADR,F.NRBD+2
	CMOV$W	OUTCNT,F.NRBD
	.GLOBL	.PUT
	JSR	PC,.PUT
	ERR$	ERR
	.ENDM	PUT$
	.MACRO	PUT$R FDB,OUTADR,OUTCNT,LRCNM,HRCNM,ERR
	.MCALL	LDFDB$,CMOV$W,ERR$
	LDFDB$	FDB
	CMOV$W	OUTADR,F.NRBD+2
	CMOV$W	OUTCNT,F.NRBD
	CMOV$W	LRCNM,F.RCNM+2
	CMOV$W	HRCNM,F.RCNM
	.GLOBL	.PUT
	JSR	PC,.PUT
	ERR$	ERR
	.ENDM	PUT$R
	.MACRO	PUT$S FDB,OUTADR,OUTCNT,ERR
	.MCALL	LDFDB$,CMOV$W,ERR$
	LDFDB$	FDB
	CMOV$W	OUTADR,F.NRBD+2
	CMOV$W	OUTCNT,F.NRBD
	.GLOBL	.PUTSQ
	JSR	PC,.PUTSQ
	ERR$	ERR
	.ENDM	PUT$S
	.MACRO	QDPB$	DIC,FNC,LUN,EFN,PRI,IOST,AST,PRMLST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	DIC,12.
	.WORD	FNC
	.WORD	LUN
	.BYTE	EFN,0
	.WORD	IOST
	.WORD	AST
	.NLIST
$$$ARG=0
	.LIST
	.IRP	X,<PRMLST>
	.WORD	X
	.NLIST
$$$ARG=$$$ARG+1
	.LIST
	.ENDM
	.IF GT	6-$$$ARG
	.REPT	<6-$$$ARG>
	.WORD	0
	.ENDR
	.ENDC
	.ENDC
	.IF NDF	Q.IOFN
	.NLIST
	.IRP	X,<,<Q.IOFN,2>,<Q.IOLU,2>,<Q.IOEF,1>,<Q.IOPR,1>>
	OFF$	X
	.ENDM
	.IRP	X,<<Q.IOSB,2>,<Q.IOAE,2>,<Q.IOPL>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	QDPB$
	.MACRO	QDPB$S	DIC,FNC,LUN,EFN,PRI,IOST,AST,PRMLST,ERR
	.MCALL	RVP$,MVB$,DIR$
	.NLIST
$$$ARG=0
	.IRP	X,<PRMLST>
$$$ARG=$$$ARG+1
	.ENDM
	.LIST
	.IF GT	6-$$$ARG
	.REPT	<6-$$$ARG>
	CLR	-(SP)
	.ENDR
	.ENDC
	.IIF NB	<PRMLST>,	RVP$	PRMLST
	RVP$	IOST,AST
	MVB$	EFN,
	RVP$	FNC,LUN
	MOV	(PC)+,-(SP)
	.BYTE	DIC,12.
	DIR$	,ERR
	.ENDM	QDPB$S
	.MACRO	QIOSY$	$$$GBL,$$$MSG
	.IIF	IDN,<$$$GBL>,<DEF$G>,	.GLOBL	QI.VER
	.IF	IDN,<$$$MSG>,<DEF$S>
	$$$MAX=0
	$$MSG=1
	.IFF
	$$MSG=0
	.ENDC
	.MCALL	IOERR$
	IOERR$	$$$GBL
	.MCALL	DRERR$
	DRERR$	$$$GBL
	.IF	DIF,<$$$MSG>,<DEF$S>
	.MCALL	FILIO$
	FILIO$	$$$GBL
	.MCALL	SPCIO$
	SPCIO$	$$$GBL
	.MACRO	QIOSY$	ARG,ARG1,ARG2
	.ENDM	QIOSY$
	.ENDC
	.ENDM	QIOSY$
	.MACRO	QIOW$	FNC,LUN,EFN,PRI,IOST,AST,PRMLST
	.MCALL	QDPB$
	QDPB$	3,FNC,LUN,EFN,PRI,IOST,AST,<PRMLST>
	.ENDM	QIOW$
	.MACRO	QIOW$C	FNC,LUN,EFN,PRI,IOST,AST,PRMLST,PSCT,ERR
	.MCALL	QDPB$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	QDPB$	3,FNC,LUN,EFN,PRI,IOST,AST,<PRMLST>
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	QIOW$C
	.MACRO	QIOW$S	FNC,LUN,EFN,PRI,IOST,AST,PRMLST,ERR
	.MCALL	QDPB$S
	QDPB$S	3,FNC,LUN,EFN,PRI,IOST,AST,<PRMLST>,ERR
	.ENDM	QIOW$S
	.MACRO	QIO$	FNC,LUN,EFN,PRI,IOST,AST,PRMLST
	.MCALL	QDPB$
	QDPB$	1,FNC,LUN,EFN,PRI,IOST,AST,<PRMLST>
	.ENDM	QIO$
	.MACRO	QIO$C	FNC,LUN,EFN,PRI,IOST,AST,PRMLST,PSCT,ERR
	.MCALL	QDPB$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	QDPB$	1,FNC,LUN,EFN,PRI,IOST,AST,<PRMLST>
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	QIO$C
	.MACRO	QIO$S	FNC,LUN,EFN,PRI,IOST,AST,PRMLST,ERR
	.MCALL	QDPB$S
	QDPB$S	1,FNC,LUN,EFN,PRI,IOST,AST,<PRMLST>,ERR
	.ENDM	QIO$S
	.MACRO	RAD50$	STRING,MAXWRD
	...PC2=.
	.RAD50	/STRING/
	.IF	GT,<.-...PC2>-^O<2*MAXWRD>
	.ERROR
	.=^O<...PC2+<2*MAXWRD>>
	.MEXIT
	.ENDC
	.REPT	^O<MAXWRD-<<.-...PC2>/2>>
	.WORD	0
	.ENDR
	.ENDM	RAD50$
	.MACRO	RCML$	NAME
	.MCALL	LDR0$
	LDR0$	NAME
	.GLOBL	.GCML2
	JSR	PC,.GCML2
	.ENDM	RCML$
	.MACRO	RCST$	TNAME,BUF
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	139.,4
	R50$	TNAME
	.WORD	BUF
	.ENDC
	.IF	NDF	R.CSTN
	OFF$
	OFF$	R.CSTN,4
	OFF$	R.CSBF,2
	.ENDC
	.ENDM	RCST$
	.MACRO	RCST$C	TNAME,BUF,CS,ERR
	.MCALL	RCST$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RCST$	TNAME,BUF
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RCST$C
	.MACRO	RCST$S	TNAME,BUF,ERR
	.MCALL	DIR$,MOV$,RFA$
	MOV$	BUF
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	139.,4
	DIR$	,ERR
	.ENDM	RCST$S
	.MACRO	RCVD$	TN,BA
	.MCALL	OFF$, R50$
	.IF NDF	$$$GLB
	.BYTE	75.,4
	R50$	TN
	.WORD	BA
	.ENDC
	.IF NDF	R.VDTN
	.NLIST
	.IRP	X,<,<R.VDTN,4>,<R.VDBA,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	RCVD$
	.MACRO	RCVD$C	TN,BA,CS,ERR
	.MCALL	RCVD$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RCVD$	TN,BA
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RCVD$C
	.MACRO	RCVD$S	TN,BA,ERR
	.MCALL	MOV$,DIR$, RFA$
	MOV$	BA
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	75.,4
	DIR$	,ERR
	.ENDM	RCVD$S
	.MACRO	RCVX$	TN,BA
	.MCALL	OFF$, R50$
	.IF NDF	$$$GLB
	.BYTE	77.,4
	R50$	TN
	.WORD	BA
	.ENDC
	.IF NDF	R.VXTN
	.NLIST
	.IRP	X,<,<R.VXTN,4>,<R.VXBA,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	RCVX$
	.MACRO	RCVX$C	TN,BA,CS,ERR
	.MCALL	RCVX$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RCVX$	TN,BA
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RCVX$C
	.MACRO	RCVX$S	TN,BA,ERR
	.MCALL	MOV$,DIR$, RFA$
	MOV$	BA
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	77.,4
	DIR$	,ERR
	.ENDM	RCVX$S
	.MACRO	RDAF$	BA
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	39.,2
	.WORD	BA
	.ENDC
	.IF NDF	R.DABA
	.NLIST
	OFF$
	OFF$	R.DABA,2.
	.LIST
	.ENDC
	.ENDM	RDAF$
	.MACRO	RDAF$C	BA,CS,ERR
	.MCALL	RDAF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RDAF$	BA
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RDAF$C
	.MACRO	RDAF$S	BA,ERR
	.MCALL	MOV$,DIR$
	MOV$	BA
	MOV	(PC)+,-(SP)
	.BYTE	39.,2
	DIR$	,ERR
	.ENDM	RDAF$S
	.MACRO	RDBBK$	SIZ,NAM,PAR,STS,PRO
	.MCALL	RDBDF$,R50$
	RDBDF$
	.WORD	0
	.WORD	SIZ
	R50$	NAM
	R50$	PAR
	.WORD	STS
	.WORD	PRO
	.ENDM	RDBBK$
	.MACRO	RDBDF$	GBL
	.MCALL	.BLKW.,.BLK.
	.BLK.
	.BLKW.	1,R.GID,GBL
	.BLKW.	1,R.GSIZ,GBL
	.BLKW.	2,R.GNAM,GBL
	.BLKW.	2,R.GPAR,GBL
	.BLKW.	1,R.GSTS,GBL
	.BLKW.	1,R.GPRO,GBL
	.BLKW.	0,R.GLGH,GBL
	.IF IDN	<DEF$G>,<GBL>
	.GLOBL	RS.CRR,RS.UNM,RS.MDL,RS.NDL,RS.ATT,RS.NEX
	.GLOBL	RS.DEL,RS.EXT,RS.WRT,RS.RED
	.ENDC
RS.CRR=^O<100000>
RS.UNM=^O<40000>
RS.MDL=^O<200>
RS.NDL=^O<100>
RS.ATT=^O<40>
RS.NEX=^O<20>
RS.DEL=^O<10>
RS.EXT=^O<4>
RS.WRT=^O<2>
RS.RED=^O<1>
	.MACRO	RDBDF$	X
	.ENDM
	.ENDM	RDBDF$
	.MACRO	RDEF$	EFN
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	37.,2
	.WORD	EFN
	.ENDC
	.IF NDF	R.DEEF
	.NLIST
	OFF$
	OFF$	R.DEEF,2.
	.LIST
	.ENDC
	.ENDM	RDEF$
	.MACRO	RDEF$C	EFN,CS,ERR
	.MCALL	RDEF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RDEF$	EFN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RDEF$C
	.MACRO	RDEF$S	EFN,ERR
	.MCALL	MOV$,DIR$
	MOV$	EFN
	MOV	(PC)+,-(SP)
	.BYTE	37.,2
	DIR$	,ERR
	.ENDM	RDEF$S
	.MACRO	RDXF$	BA
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	39.,3.
	.WORD	BA
	.WORD	0
	.ENDC
	.IF NDF	R.DABA
	.NLIST
	OFF$
	OFF$	R.DABA,2.
	.LIST
	.ENDC
	.ENDM	RDXF$
	.MACRO	RDXF$C	BA,CS,ERR
	.MCALL	RDXF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RDXF$	BA
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RDXF$C
	.MACRO	RDXF$S	BA,ERR
	.MCALL	MOV$,DIR$
	CLR	-(SP)
	MOV$	BA
	MOV	(PC)+,-(SP)
	.BYTE	39.,3.
	DIR$	,ERR
	.ENDM	RDXF$S
	.MACRO	READ$ FDB,BKAD,BKSZ,BKVB,BKEF,BKST,BKDN,ERR
	.MCALL	FDBK$R,ERR$
	FDBK$R	FDB,BKAD,BKSZ,BKVB,BKEF,BKST,BKDN
	.GLOBL	.READ
	JSR	PC,.READ
	ERR$	ERR
	.ENDM	READ$
	.MACRO	RETURN
	RTS	PC
	.ENDM	RETURN
	.MACRO	RFA$	ADR
	.IF NB	<ADR>
	.NLIST
	.NTYPE	$$$T2,ADR
	.LIST
	.IF LT	$$$T2-6
	MOV	2(ADR),-(SP)
	MOV	(ADR),-(SP)
	.IFF
	MOV	ADR,-(SP)
	MOV	@(SP),-(SP)
	ADD	#2,2(SP)
	MOV	@2(SP),2(SP)
	.ENDC
	.IFF
	CLR	-(SP)
	CLR	-(SP)
	.ENDC
	.ENDM	RFA$
	.MACRO	RMAF$S	ERR
	MOV	(PC)+,-(SP)
	.BYTE	163.,1
	DIR$	,ERR
	.ENDM	RMAF$S
	.MACRO RPOI$ TNAME,PN,PR,UGC,UMC,PARENT,BUFADR,BUFLEN,SC,DNAM,UNIT,TASK,OCBAD
	.MCALL	R50$,OFF$
	.IF	NDF $$$GLB
	.BYTE	11.,16.
	R50$	TNAME
	.BLKW	3
	.BYTE	UMC,UGC
	R50$	PARENT
	.WORD	OCBAD
	.WORD	BUFADR
	.WORD	BUFLEN
	.BYTE	UNIT
	.BYTE	SC
	.IF	NB DNAM
$$$T2=.
	.ASCII	/DNAM/
.=$$$T2+2
	.IFF
	.WORD
	.ENDC
	R50$	TASK
	.ENDC
	.IF	NDF R.POTK
	.IRP	X,<,<R.POTK,12>,<R.POUM,1>,<R.POUG,1>,<R.POPT,4>,<R.POOA,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<R.POBF,2>,<R.POBL,2>,<R.POUN,1>,<R.POSC,1>,<R.PODV,2>>
	OFF$	X
	.ENDM
	OFF$	R.POTN,2
	.IF DF $$$GLB
	.GLOBL	RP.OEX,RP.OAL,RP.ONX
	.ENDC
RP.OEX=200
RP.OAL=001
RP.ONX=002
	.ENDC
	.ENDM	RPOI$
	.MACRO	RPOI$C	TNAME,PN,PR,UGC,UMC,PARENT,BUFADR,BUFLEN,SC,DNAM,UNIT,TASK,OCBAD,CS,ERR
	.MCALL	RPOI$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RPOI$	TNAME,PN,PR,UGC,UMC,PARENT,BUFADR,BUFLEN,SC,DNAM,UNIT,TASK,OCBAD
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RPOI$C
	.MACRO	RPOI$S TNAME,PN,PR,UGC,UMC,PARENT,BUFADR,BUFLEN,SC,DNAM,UNIT,TASK,OCBAD,ERR
	.MCALL	MVB$,MOV$,RFA$,DIR$
	RFA$	TASK
	MOV$	DNAM
	MVB$	UNIT,SC
	MOV$	BUFLEN
	MOV$	BUFADR
	MOV$	OCBAD
	RFA$	PARENT
	MVB$	UMC,UGC
	CLR	-(SP)
	CLR	-(SP)
	CLR	-(SP)
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	11.,16.
	DIR$	,ERR
	.ENDM	RPOI$S
	.MACRO	RQST$	TN,PN,PR,GC,P
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	11.,7
	R50$	TN
	.WORD	0,0
	.WORD	0
	.BYTE	P,GC
	.ENDC
	.IF NDF	R.QSTN
	.NLIST
	.IRP	X,<,<R.QSTN,4>,<R.QSPN,4>,<R.QSPR,2>,<R.QSPC,1>,<R.QSGC,1>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	RQST$
	.MACRO	RQST$C	TN,PN,PR,GC,P,CS,ERR
	.MCALL	RQST$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RQST$	TN,PN,PR,GC,P
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM
	.MACRO	RQST$S	TN,PN,PR,GC,P,ERR
	.MCALL	MVB$,RFA$,DIR$
	MVB$	P,GC
	CLR	-(SP)
	RFA$
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	11.,7
	DIR$	,ERR
	.ENDM	RQST$S
	.MACRO	RREF$	WDB
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	81.,2
	.WORD	WDB
	.ENDC
	.IF NDF	R.REBA
	OFF$
	OFF$	R.REBA,2
	.ENDC
	.ENDM	RREF$
	.MACRO	RREF$C	WDB,CS,ERR
	.MCALL	RREF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RREF$	WDB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RREF$C
	.MACRO	RREF$S	WDB,ERR
	.MCALL	DIR$,MOV$
	MOV$	WDB
	MOV	(PC)+,-(SP)
	.BYTE	81.,2
	DIR$	,ERR
	.ENDM	RREF$S
	.MACRO	RSUM$	TN
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	47.,3
	R50$	TN
	.ENDC
	.IF NDF	R.SUTN
	.NLIST
	OFF$
	OFF$	R.SUTN,4
	.LIST
	.ENDC
	.ENDM	RSUM$
	.MACRO	RSUM$C	TN,CS,ERR
	.MCALL	RSUM$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RSUM$	TN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RSUM$C
	.MACRO	RSUM$S	TN,ERR
	.MCALL	RFA$,DIR$
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	47.,3
	DIR$	,ERR
	.ENDM	RSUM$S
	.MACRO	RUN$	TN,PN,PR,GC,P,SM,SU,RM,RU
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	17.,11.
	R50$	TN
	.WORD	0,0
	.WORD	0
	.BYTE	P,GC
	.WORD	SM
	.WORD	SU
	.WORD	RM
	.WORD	RU
	.ENDC
	.IF NDF	R.UNTN
	.NLIST
	.IRP	X,<,<R.UNTN,4>,<R.UNPN,4>,<R.UNPR,2>,<R.UNPC,1>,<R.UNGC,1>>
	OFF$	X
	.ENDM
	.IRP	X,<<R.UNSM,2>,<R.UNSU,2>,<R.UNRM,2>,<R.UNRU,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	RUN$
	.MACRO	RUN$C	TN,PN,PR,UG,UP,SM,SU,RM,RU,CS,ERR
	.MCALL	RUN$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RUN$	TN,PN,PR,UG,UP,SM,SU,RM,RU
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RUN$C
	.MACRO	RUN$S	TN,PN,PR,UG,UP,SM,SU,RM,RU,ERR
	.MCALL	RVP$,MVB$,RFA$,DIR$
	RVP$	SM,SU,RM,RU
	MVB$	UP,UG
	CLR	-(SP)
	RFA$
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	17.,11.
	DIR$	,ERR
	.ENDM	RUN$S
	.MACRO	RVP$	P0,P1,P2,P3,P4,P5,P6,P7,P8,P9
	.MCALL	MOV$
	.NLIST
	.NARG	$$$ARG
	.LIST
	.IIF GT	$$$ARG-9.,	MOV$	<P9>
	.IIF GT	$$$ARG-8.,	MOV$	<P8>
	.IIF GT	$$$ARG-7,	MOV$	<P7>
	.IIF GT	$$$ARG-6,	MOV$	<P6>
	.IIF GT	$$$ARG-5,	MOV$	<P5>
	.IIF GT	$$$ARG-4,	MOV$	<P4>
	.IIF GT	$$$ARG-3,	MOV$	<P3>
	.IIF GT	$$$ARG-2,	MOV$	<P2>
	.IIF GT	$$$ARG-1,	MOV$	<P1>
	.IIF GT	$$$ARG,	MOV$	<P0>
	.ENDM	RVP$
	.MACRO	R50$	NAME
	.NLIST
	.NCHR	$$$T1,NAME
	.LIST
	.IF EQ	$$$T1
	.WORD	0,0
	.IFF
	.IF GT	$$$T1-6
$$$T4=.+4
	.IFTF
	.RAD50	/NAME/
	.IFT
.=$$$T4
	.ENDC
	.IIF LT	$$$T1-4,	.WORD	0
	.ENDC
	.ENDM	R50$
	.MACRO	SCAA$	AST
	.MCALL	OFF$
	.IF	NDF $$$GLB
	.BYTE	173.,2.
	.WORD	AST
	.ENDC
	.IF	NDF S.CAAE
	OFF$
	OFF$	S.CAAE,2
	.ENDC
	.ENDM
	.MACRO	SCAA$C	AST,CS,ERR
	.MCALL	SCAA$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SCAA$	AST
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SCAA$C
	.MACRO	SCAA$S	AST,ERR
	.MCALL	MOV$,DIR$
	MOV$	AST
	MOV	(PC)+,-(SP)
	.BYTE	173.,2.
	DIR$	,ERR
	.ENDM	SCAA$S
	.MACRO	SCAL$S	SRAD,CRAD
	.MCALL	DIR$,MOV$
	MOV$	CRAD
	MOV$	SRAD
	MOV	(PC)+,-(SP)
	.BYTE	155.,3
	DIR$	,ERR
	.ENDM	SCAL$S
	.MACRO	SCCA$S	AST
	.IF	NB	<AST>
	MOV	AST,@#24
	.IFF
	CLR	@#24
	.ENDC
	.ENDM	SCCA$S
	.MACRO	SCLI$	CLI,DEV,UNIT
	.MCALL	R50$,OFF$
	.IF	NDF $$$GLB
	.BYTE	173.,5.
$$$T2=.
	.ASCII	/DEV/
.=$$$T2+2
	.BYTE	UNIT,0
	R50$	CLI
	.ENDC
	.IF	NDF S.CIDV
	.IRP	X,<,<S.CIDV,2>,<S.CIUN,2>,<S.CICN,4>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	SCLI$
	.MACRO	SCLI$C	CLI,DEV,UNIT,CS,ERR
	.MCALL	SCLI$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SCLI$	CLI,DEV,UNIT
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SCLI$C
	.MACRO	SCLI$S	CLI,DEV,UNIT,ERR
	.MCALL	MOV$,RFA$,DIR$
	RFA$	CLI
	MVB$	UNIT,0
	MOV$	DEV
	MOV	(PC)+,-(SP)
	.BYTE	173.,5.
	DIR$	,ERR
	.ENDM
	.MACRO	SDAT$	TN,BA,EFN
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	71.,5
	R50$	TN
	.WORD	BA
	.WORD	EFN
	.ENDC
	.IF NDF	S.DATN
	.NLIST
	.IRP	X,<,<S.DATN,4>,<S.DABA,2>,<S.DAEF,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	SDAT$
	.MACRO	SDAT$C	TN,BA,EFN,CS,ERR
	.MCALL	SDAT$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SDAT$	TN,BA,EFN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SDAT$C
	.MACRO	SDAT$S	TN,BA,EFN,ERR
	.MCALL	MOV$,RFA$,DIR$
	MOV$	EFN
	MOV$	BA
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	71.,5
	DIR$	,ERR
	.ENDM	SDAT$S
	.MACRO	SDRC$	TNAME,BUF,EFN,EAST,ESB
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	141.,7
	R50$	TNAME
	.WORD	BUF
	.WORD	EFN
	.WORD	EAST
	.WORD	ESB
	.ENDC
	.IF	NDF	S.DRTN
	.IRP	X,<,<S.DRTN,4>,<S.DRBF,2>,<S.DREF,2>,<S.DREA,2>,<S.DRES,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	SDRC$
	.MACRO	SDRC$C	TNAME,BUF,EFN,EAST,ESB,CS,ERR
	.MCALL	SDRC$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SDRC$	TNAME,BUF,EFN,EAST,ESB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SDRC$C
	.MACRO	SDRC$S	TNAME,BUF,EFN,EAST,ESB,ERR
	.MCALL	DIR$,MOV$,RFA$,MVB$
	MOV$	ESB
	MOV$	EAST
	MOV$	EFN
	MOV$	BUF
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	141.,7
	DIR$	,ERR
	.ENDM	SDRC$S
	.MACRO	SDRP$	TASK,BUFADR,BUFLEN,EFN,FLAG,PARENT,OCBAD
	.MCALL	R50$,OFF$
	.IF	NDF $$$GLB
	.BYTE	141.,9.
	R50$	TASK
	.WORD	BUFADR
	.BYTE	EFN,FLAG
	.IF	NB BUFLEN
	.WORD	BUFLEN
	.IFF
	.WORD	13.
	.ENDC
	R50$	PARENT
	.WORD	OCBAD
	.ENDC
	.IF	NDF S.DRTK
	.IRP	X,<,<S.DRTK,4>,<S.DRAD,2>,<S.DREF,1>,<S.DRFL,1>,<S.DRBL,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<S.DRPT,4>,<S.DROA,2>>
	OFF$	X
	.ENDM
	.IF DF $$$GLB
	.GLOBL	SD.REX,SD.RAL,SD.RNX
	.ENDC
SD.REX=200
SD.RAL=001
SD.RNX=002
	.ENDC
	.ENDM	SDRP$
	.MACRO	SDRP$C	TASK,BUFADR,BUFLEN,EFN,FLAG,PARENT,OCBAD,CS,ERR
	.MCALL	SDRP$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SDRP$	TASK,BUFADR,BUFLEN,EFN,FLAG,PARENT,OCBAD
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SDRP$C
	.MACRO	SDRP$S	TASK,BUFADR,BUFLEN,EFN,FLAG,PARENT,OCBAD,ERR
	.MCALL	MVB$,MOV$,RFA$,DIR$
	MOV$	OCBAD
	RFA$	PARENT
	MOV$	BUFLEN
	MVB$	EFN,FLAG
	MOV$	BUFADR
	RFA$	TASK
	MOV	(PC)+,-(SP)
	.BYTE	11.,16.
	DIR$	,ERR
	.ENDM	SDRP$S
	.MACRO	SETF$	EFN
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	33.,2
	.WORD	EFN
	.ENDC
	.IF NDF	S.ETEF
	.NLIST
	OFF$
	OFF$	S.ETEF,2
	.LIST
	.ENDC
	.ENDM	SETF$
	.MACRO	SETF$C	EFN,CS,ERR
	.MCALL	SETF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SETF$	EFN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SETF$C
	.MACRO	SETF$S	EFN,ERR
	.MCALL	MOV$,DIR$
	MOV$	EFN
	MOV	(PC)+,-(SP)
	.BYTE	33.,2
	DIR$	,ERR
	.ENDM	SETF$S
	.MACRO	SFPA$	AST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	111.,2
	.WORD	AST
	.ENDC
	.IF NDF	S.FPAE
	.NLIST
	OFF$
	OFF$	S.FPAE,2
	.LIST
	.ENDC
	.ENDM	SFPA$
	.MACRO	SFPA$C	AST,CS,ERR
	.MCALL	SFPA$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SFPA$	AST
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SFPA$C
	.MACRO	SFPA$S	AST,ERR
	.MCALL	MOV$,DIR$
	MOV$	AST
	MOV	(PC)+,-(SP)
	.BYTE	111.,2
	DIR$	,ERR
	.ENDM	SFPA$S
	.MACRO	SMSG$	TGT,BUF,LEN,PRMLST
	.MCALL	OFF$
	.NLIST
	.IF	NDF S.MTGT
	OFF$
	.IRP	X,<<S.MTGT,2>,<S.MDBA,2>,<S.MDBL,2>,<S.MPRL>>
	OFF$	X
	.ENDM
	.IF DF $$$GLB
	.GLOBL	SM.SER
	.ENDC
SM.SER=1
	.ENDC
	.IF	NDF $$$GLB
$$$ARG=0
	.IRP	X,<PRMLST>
$$$ARG=$$$ARG+1
	.ENDM
	.IF	NB TGT
	.IF	IDN TGT SM.SER
	.IF	LT,$$$ARG-4
	$$$ARG=4
	.ENDC
	.ENDC
	.ENDC
	.LIST
	.BYTE	171.,4+$$$ARG
	.BYTE	TGT
	.BYTE	0
	.WORD	BUF
	.WORD	LEN
	.IRP	X,<PRMLST>
$$$ARG=$$$ARG-1
	.WORD	X
	.ENDM
	.REPT	$$$ARG
	.WORD
	.ENDR
	.ENDC
	.ENDM
	.MACRO	SMSG$C	TGT,BUF,LEN,PRMLST,CS,ERR
	.MCALL	SMSG$,DIR$
	.IF	NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SMSG$	TGT,BUF,LEN,<PRMLST>
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM
	.MACRO	SMSG$S	TGT,BUF,LEN,PRMLST,ERR
	.MCALL	MVB$,MOV$,RVP$,DIR$
$$$ARG=0
$$$=0
	.IRP	X,<PRMLST>
$$$ARG=$$$ARG+1
	.ENDM
	.IF	NB TGT
	.IF	IDN TGT #SM.SER
	.IF	LT,$$$ARG-4
$$$=4-$$$ARG
	.REPT	$$$
	CLR	-(SP)
	.ENDR
	.ENDC
	.ENDC
	.ENDC
	RVP$	PRMLST
	MOV$	LEN
	MOV$	BUF
	MVB$	TGT
	MOV	(PC)+,-(SP)
	.BYTE	171.,4+$$$ARG+$$$
	DIR$	,ERR
	.ENDM
	.MACRO	SNAP$	CTL,EFN,ID,L1,H1,L2,H2,L3,H3,L4,H4,?LBL1,?LBL2
	.MCALL	SNPDF$,WTSE$S,SDAT$S,RQST$S,CLEF$S
	SNPDF$
	.IIF NB	<CTL>,	MOV	CTL,..SPBK+SB.CTL
	.IIF NB	<EFN>,	MOV	EFN,..SPBK+SB.EFN
	.IIF NB	<ID>,	MOV	ID,..SPBK+SB.ID
	MOVB	@#$DSW,..SPBK+SB.DSW
...SNP = SB.LM1
	.IRP	X,<L1,H1,L2,H2,L3,H3,L4,H4>
	.IF NB	<X>
	MOV	X,..SPBK+...SNP
	.ENDC
...SNP = ...SNP+2
	.ENDM
	CLEF$S	..SPBK+SB.EFN
	BCS	LBL2
	SDAT$S	#..SPBK+SB.PMD,#..SPBK
	BCS	LBL2
	RQST$S	#..SPBK+SB.PMD
	BCC	LBL1
	CMP	#IE.ACT,@#$DSW
	BEQ	LBL1
	SEC
	BR	LBL2
LBL1:	WTSE$S	..SPBK+SB.EFN
LBL2:
	.ENDM	SNAP$
	.MACRO	SNPBK$	DEV,UNIT,CTL,EFN,ID,L1,H1,L2,H2,L3,H3,L4,H4
	.IF DF	..SPBK
	.IIF NE	<..SPBK-.>,	.MEXIT
	.ENDC
	.MCALL	SNPDF$
	SNPDF$
..SPBK::.WORD	CTL
	.ASCII	/DEV/
	.IF NE	.-<..SPBK+SB.DEV+2>
	.ERROR
	.MEXIT
	.ENDC
	.BYTE	UNIT,0
	.WORD	EFN
	.WORD	ID
	.WORD	L1,H1
	.WORD	L2,H2
	.WORD	L3,H3
	.WORD	L4,H4
	.RAD50	/PMD.../
	.ENDM	SNPBK$
	.MACRO	SNPDF$	GBL
	.IF IDN	<GBL>,<DEF$G>
	.GLOBL	SB.CTL,SB.DEV,SB.UNT,SB.EFN,SB.ID,SB.LM1,SB.PMD
	.GLOBL	SC.HDR,SC.LUN,SC.OVL,SC.STK,SC.WRD,SC.BYT
	.ENDC
SB.CTL = 0
SB.DEV = 2
SB.UNT = 4
SB.DSW = 5
SB.EFN = 6
SB.ID  = ^O<10>
SB.LM1 = ^O<12>
SB.PMD = ^O<32>
SC.HDR = 1
SC.LUN = 2
SC.OVL = 4
SC.STK = ^O<10>
SC.WRD = ^O<20>
SC.BYT = ^O<40>
	.MACRO	SNPDF$	X
	.ENDM
	.ENDM	SNPDF$
	.MACRO	SNXC$	DEVICE,UNIT
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	127.,3.
	.WORD	DEVICE
	.BYTE	UNIT
	.BYTE	0
	.ENDC
	.IF	NDF	S.NXDV
	.IRP	X,<,<S.NXDV,2>,<S.NXUN,1>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	SNXC$
	.MACRO	SNXC$C	DEVICE,UNIT,CS,ERR
	.MCALL	SNXC$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SNXC$	DEVICE,UNIT
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SNXC$C
	.MACRO	SNXC$S	DEVICE,UNIT,ERR
	.MCALL	DIR$,MOV$
	MOV$	UNIT
	MOV$	DEVICE
	MOV	(PC)+,-(SP)
	.BYTE	127.,3.
	DIR$	,ERR
	.ENDM	SNXC$S
	.MACRO	SPCIO$	$$$GBL
	.MCALL	.WORD.,DEFIN$
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.IFF
	...GBL=0
	.ENDC
	.WORD.	IO.WLV,100,001
	.WORD.	IO.WLS,010,001
	.WORD.	IO.WNS,020,001
	.WORD.	IO.WAL,010,001
	.WORD.	IO.WMS,020,001
	.WORD.	IO.CCO,040,001
	.WORD.	IO.WBT,100,001
	.WORD.	IO.WLT,010,001
	.WORD.	IO.WLC,020,001
	.WORD.	IO.WPB,040,001
	.WORD.	IO.WDD,140,001
	.WORD.	IO.RSN,140,002
	.WORD.	IO.RLV,100,002
	.WORD.	IO.RST,001,002
	.WORD.	IO.RAL,010,002
	.WORD.	IO.RNE,020,002
	.WORD.	IO.RNC,040,002
	.WORD.	IO.RTM,200,002
	.WORD.	IO.RDB,200,002
	.WORD.	IO.SCF,200,002
	.WORD.	IO.RHD,010,002
	.WORD.	IO.RNS,020,002
	.WORD.	IO.CRC,040,002
	.WORD.	IO.RPB,040,002
	.WORD.	IO.RLC,020,002
	.WORD.	IO.ATA,010,003
	.WORD.	IO.GTS,000,005
	.WORD.	IO.R1C,000,005
	.WORD.	IO.INL,000,005
	.WORD.	IO.TRM,010,005
	.WORD.	IO.RWD,000,005
	.WORD.	IO.SPB,020,005
	.WORD.	IO.RPL,020,005
	.WORD.	IO.SPF,040,005
	.WORD.	IO.STC,100,005
	.WORD.	IO.SMD,110,005
	.WORD.	IO.SEC,120,005
	.WORD.	IO.RWU,140,005
	.WORD.	IO.SMO,160,005
	.WORD.	IO.HNG,000,006
	.WORD.	IO.RBC,000,006
	.WORD.	IO.MOD,000,006
	.WORD.	IO.HDX,010,006
	.WORD.	IO.FDX,020,006
	.WORD.	IO.SYN,040,006
	.WORD.	IO.EOF,000,006
	.WORD.	IO.ERS,020,006
	.WORD.	IO.DSE,040,006
	.WORD.	IO.RTC,000,007
	.WORD.	IO.SAO,000,010
	.WORD.	IO.SSO,000,011
	.WORD.	IO.RPR,000,011
	.WORD.	IO.MSO,000,012
	.WORD.	IO.RTT,001,012
	.WORD.	IO.SLO,000,013
	.WORD.	IO.MLO,000,014
	.WORD.	IO.LED,000,024
	.WORD.	IO.SDO,000,025
	.WORD.	IO.SDI,000,026
	.WORD.	IO.SCS,000,026
	.WORD.	IO.REL,000,027
	.WORD.	IO.MCS,000,027
	.WORD.	IO.ADS,000,030
	.WORD.	IO.CCI,000,030
	.WORD.	IO.LOD,000,030
	.WORD.	IO.MDI,000,031
	.WORD.	IO.DCI,000,031
	.WORD.	IO.PAD,000,031
	.WORD.	HT.RPP,010,000
	.WORD.	IO.XMT,000,031
	.WORD.	IO.XNA,010,031
	.WORD.	IO.INI,000,031
	.WORD.	IO.HIS,000,032
	.WORD.	IO.RCI,000,032
	.WORD.	IO.RCV,000,032
	.WORD.	IO.CLK,000,032
	.WORD.	IO.CSR,000,032
	.WORD.	IO.MDO,000,033
	.WORD.	IO.CTI,000,033
	.WORD.	IO.CON,000,033
	.WORD.	IO.STA,000,033
	.WORD.	IO.DTI,000,034
	.WORD.	IO.DIS,000,034
	.WORD.	IO.MDA,000,034
	.WORD.	IO.DPT,010,034
	.WORD.	IO.RTI,000,035
	.WORD.	IO.CTL,000,035
	.WORD.	IO.STP,000,035
	.WORD.	IO.SWI,000,035
	.WORD.	IO.CNT,000,036
	.WORD.	IO.ITI,000,036
	.WORD.	IO.CPR,010,033
	.WORD.	IO.CAS,020,033
	.WORD.	IO.CRJ,040,033
	.WORD.	IO.CBO,110,033
	.WORD.	IO.CTR,210,033
	.WORD.	IO.GNI,010,035
	.WORD.	IO.GLI,020,035
	.WORD.	IO.GLC,030,035
	.WORD.	IO.GRI,040,035
	.WORD.	IO.GRC,050,035
	.WORD.	IO.GRN,060,035
	.WORD.	IO.CSM,070,035
	.WORD.	IO.CIN,100,035
	.WORD.	IO.SPW,110,035
	.WORD.	IO.CPW,120,035
	.WORD.	IO.NLB,130,035
	.WORD.	IO.DLB,140,035
	.WORD.	IO.CTY,000,007
	.WORD.	IO.DTY,000,015
	.WORD.	IO.LDI,000,016
	.WORD.	IO.UDI,010,023
	.WORD.	IO.LTI,000,017
	.WORD.	IO.UTI,020,023
	.WORD.	IO.LTY,000,020
	.WORD.	IO.UTY,030,023
	.WORD.	IO.LKE,000,024
	.WORD.	IO.UER,040,023
	.WORD.	IO.NLK,000,023
	.WORD.	IO.ONL,000,037
	.WORD.	IO.FLN,000,025
	.WORD.	IO.RAD,000,021
	.WORD.	IO.MAO,010,007
	.WORD.	IO.LEI,010,017
	.WORD.	IO.RDD,010,020
	.WORD.	IO.RMT,020,020
	.WORD.	IO.LSI,000,022
	.WORD.	IO.UEI,050,023
	.WORD.	IO.USI,060,023
	.WORD.	IO.CSI,000,026
	.WORD.	IO.DSI,000,027
	.WORD.	IO.ATX,000,001
	.WORD.	IO.ATF,000,002
	.WORD.	IO.CRX,000,031
	.WORD.	IO.DRX,000,032
	.WORD.	IO.RTF,000,033
	.MACRO	SPCIO$	A
	.ENDM	SPCIO$
	.ENDM	SPCIO$
	.MACRO	SPEA$	AST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	165.,2
	.WORD	AST
	.ENDC
	.IF NDF	S.PEAE
	.NLIST
	OFF$
	OFF$	S.PEAE,2
	.LIST
	.ENDC
	.ENDM	SPEA$
	.MACRO	SPEA$C	AST,CS,ERR
	.MCALL	SPEA$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SPEA$	AST
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SPEA$C
	.MACRO	SPEA$S	AST,ERR
	.MCALL	MOV$,DIR$
	MOV$	AST
	MOV	(PC)+,-(SP)
	.BYTE	165.,2
	DIR$	,ERR
	.ENDM	SPEA$S
	.MACRO	SPND$
	.IF NDF $$$GLB
	.BYTE	45.,1
	.ENDC
	.ENDM	SPND$
	.MACRO	SPND$C	PSCT,ERR
	.MCALL	SPND$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SPND$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SPND$C
	.MACRO	SPND$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	45.,1
	DIR$	,ERR
	.ENDM	SPND$S
	.MACRO	SPRA$	AST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	109.,2
	.WORD	AST
	.ENDC
	.IF NDF	S.PRAE
	.NLIST
	OFF$
	OFF$	S.PRAE,2
	.LIST
	.ENDC
	.ENDM	SPRA$
	.MACRO	SPRA$C	AST,CS,ERR
	.MCALL	SPRA$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SPRA$	AST
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SPRA$C
	.MACRO	SPRA$S	AST,ERR
	.MCALL	MOV$,DIR$
	MOV$	AST
	MOV	(PC)+,-(SP)
	.BYTE	109.,2
	DIR$	,ERR
	.ENDM	SPRA$S
	.MACRO	SPWN$	TNAME,PN,PR,UGC,UMC,EFN,EAST,ESB,CMDLIN,CMDLEN,UNIT,DNAM
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.IF B	DNAM
	.BYTE	11.,13.
	.IFF
	.BYTE	11.,14.
	.ENDC
	R50$	TNAME
	.BLKW	3
	.BYTE	UMC,UGC
	.WORD	EFN
	.WORD	EAST
	.WORD	ESB
	.WORD	CMDLIN
	.WORD	CMDLEN
	.WORD	UNIT
	.IF NB	DNAM
$$$T2=.
	.ASCII	/DNAM/
.=$$$T2+2
	.ENDC
	.ENDC
	.IF	NDF	S.PWTN
	.IRP X,<,<S.PWTN,4>,<S.PWXX,6>,<S.PWUM,1>,<S.PWUG,1>,<S.PWEF,2>>
	OFF$	X
	.ENDM
	.IRP X,<<S.PWEA,2>,<S.PWES,2>,<S.PWCA,2>,<S.PWCL,2>,<S.PWVT,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<S.PWDN,2>>
	OFF$	X
	.ENDR
	$$$OST=8.
	OFF$	SP.WX8
	.ENDC
	.ENDM	SPWN$
 .MACRO	SPWN$C TNAME,PN,PR,UGC,UMC,EFN,EAST,ESB,CMDLIN,CMDLEN,UNIT,DNAM,CS,ERR
	.MCALL	SPWN$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SPWN$	TNAME,,,UGC,UMC,EFN,EAST,ESB,CMDLIN,CMDLEN,UNIT,DNAM
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SPWN$C
 .MACRO SPWN$S TNAME,PN,PR,UGC,UMC,EFN,EAST,ESB,CMDLIN,CMDLEN,UNIT,DNAM,ERR
	.MCALL	DIR$,MOV$,MVB$,RFA$
	.IF NB	DNAM
	MOV$	DNAM
	.ENDC
	MOV$	UNIT
	MOV$	CMDLEN
	MOV$	CMDLIN
	MOV$	ESB
	MOV$	EAST
	MOV$	EFN
	MVB$	UMC,UGC
	CLR	-(SP)
	CLR	-(SP)
	CLR	-(SP)
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.IF B	DNAM
	.BYTE	11.,13.
	.IFF
	.BYTE	11.,14.
	.ENDC
	DIR$	,ERR
	.ENDM	SPWN$S
	.MACRO	SRDA$	AST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	107.,2
	.WORD	AST
	.ENDC
	.IF NDF	S.RDAE
	.NLIST
	OFF$
	OFF$	S.RDAE,2
	.LIST
	.ENDC
	.ENDM	SRDA$
	.MACRO	SRDA$C	AST,CS,ERR
	.MCALL	SRDA$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SRDA$	AST
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SRDA$C
	.MACRO	SRDA$S	AST,ERR
	.MCALL	MOV$,DIR$
	MOV$	AST
	MOV	(PC)+,-(SP)
	.BYTE	107.,2
	DIR$	,ERR
	.ENDM	SRDA$S
	.MACRO	SREA$	AST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	167.,2
	.WORD	AST
	.ENDC
	.IF NDF	S.REAE
	.NLIST
	OFF$
	OFF$	S.REAE,2
	.LIST
	.ENDC
	.ENDM	SREA$
	.MACRO	SREA$C	AST,CS,ERR
	.MCALL	SREA$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SREA$	AST
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SREA$C
	.MACRO	SREA$S	AST,ERR
	.MCALL	MOV$,DIR$
	MOV$	AST
	MOV	(PC)+,-(SP)
	.BYTE	167.,2
	DIR$	,ERR
	.ENDM	SREA$S
	.MACRO	SREF$	TASK,WDB,EFN
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	69.,5
	R50$	TASK
	.WORD	EFN
	.WORD	WDB
	.ENDC
	.IF NDF	S.RETN
	.IRP	X,<,<S.RETN,4>,<S.REEF,2>,<S.REBA,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	SREF$
	.MACRO	SREF$C	TASK,WDB,EFN,CS,ERR
	.MCALL	SREF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SREF$	TASK,WDB,EFN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SREF$C
	.MACRO	SREF$S	TSKADR,WDB,EFN,ERR
	.MCALL	DIR$,MOV$,RFA$
	MOV$	WDB
	MOV$	EFN
	RFA$	TSKADR
	MOV	(PC)+,-(SP)
	.BYTE	69.,5
	DIR$	,ERR
	.ENDM	SREF$S
	.MACRO	SREX$	AST,BUF
	.MCALL	OFF$
	.IF NDF $$$GLB
	.BYTE	167.,3
	.WORD	AST
	.WORD	0
	.ENDC
	.IF NDF	S.REAE
	.NLIST
	OFF$
	OFF$	S.REAE,2
	.LIST
	.ENDC
	.ENDM	SREX$
	.MACRO	SREX$C	AST,BUF,CS,ERR
	.MCALL	SREX$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SREX$	AST,BUF
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SREX$C
	.MACRO	SREX$S	AST,BUF,ERR
	.MCALL	MOV$,DIR$
	CLR	-(SP)
	MOV$	AST
	MOV	(PC)+,-(SP)
	.BYTE	167.,3
	DIR$	,ERR
	.ENDM	SREX$S
	.MACRO	SRRA$	AST
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	21.,2
	.WORD	AST
	.ENDC
	.IF NDF	S.RRAE
	.NLIST
	OFF$
	OFF$	S.RRAE,2
	.LIST
	.ENDC
	.ENDM	SRRA$
	.MACRO	SRRA$C	AST,CS,ERR
	.MCALL	SRRA$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SRRA$	AST
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SRRA$C
	.MACRO	SRRA$S	AST,ERR
	.MCALL	MOV$,DIR$
	MOV$	AST
	MOV	(PC)+,-(SP)
	.BYTE	21.,2
	DIR$	,ERR
	.ENDM	SRRA$S
	.MACRO	STAF$	AFF
	.MCALL	AFF$,OFF$
	.IF NDF	$$$GBL
	AFF$
	.BYTE	161.,2.
	.WORD	AFF
	.ENDC
	.IF NDF S.AFAF
	.NLIST
	OFF$
	OFF$	S.AFAF,2
	.LIST
	.ENDC
	.ENDM	STAF$
	.MACRO	STAF$C	AFF,CS,ERR
	.MCALL	STAF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	STAF$	AFF
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	STAF$C
	.MACRO	STAF$S	AFF,ERR
	.MCALL	DIR$,MOV$,AFF$
	AFF$
	MOV$	AFF
	MOV	(PC)+,-(SP)
	.BYTE	161.,2.
	DIR$	,ERR
	.ENDM	STAF$S
.MACRO	STATE$	LABEL
	.PSECT	$STATE
	$$$FLG = $$$FLG!200
	MTRAN$
	.IF	NB	LABEL
LABEL:
	.ENDC
	$$$FLG = -1
	.PSECT
.ENDM	STATE$
	.MACRO	STIM$	NBUF,OBUF
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	61.,3
	.WORD	NBUF
	.WORD	OBUF
	.ENDC
	.IF NDF	S.TIBA
	.NLIST
	OFF$
	OFF$	S.TIBA,2
	OFF$	S.TIBO,2
	.IF NDF	S.TIYR
$$$OST=0
	.IRP	X,<<S.TIYR,2>,<S.TIMO,2>,<S.TIDA,2>,<S.TIHR,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<S.TIMI,2>,<S.TISC,2>,<S.TICT,2>,<S.TICP,2>>
	OFF$	X
	.ENDM
	.ENDC
	.LIST
	.ENDC
	.ENDM	STIM$
	.MACRO	STIM$C	NBUF,OBUF,CS,ERR
	.MCALL	STIM$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	STIM$	NBUF,OBUF
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	STIM$C
	.MACRO	STIM$S	NBUF,OBUF,ERR
	.MCALL	MOV$,DIR$,OFF$
	MOV$	OBUF
	MOV$	NBUF
	MOV	(PC)+,-(SP)
	.BYTE	61.,3
	DIR$	,ERR
	.IF NDF	S.TIYR
	.NLIST
$$$OST=0
	.IRP	X,<<S.TIYR,2>,<S.TIMO,2>,<S.TIDA,2>,<S.TIHR,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<S.TIMI,2>,<S.TISC,2>,<S.TICT,2>,<S.TICP,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	STIM$S
	.MACRO	STLO$	GRP,MSK
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	137.,3
	.WORD	GRP
	.WORD	MSK
	.ENDC
	.IF	NDF	S.TLGR
	OFF$
	OFF$	S.TLGR,2
	OFF$	S.TLMS,2
	.ENDC
	.ENDM	STLO$
	.MACRO	STLO$C	GRP,MSK,CS,ERR
	.MCALL	STLO$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	STLO$	GRP,MSK
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	STLO$C
	.MACRO	STLO$S	GRP,MSK,ERR
	.MCALL	DIR$,MOV$
	MOV$	MSK
	.IF NB GRP
	MOV	#GRP,-(SP)
	.IFF
	CLR	-(SP)
	.ENDC
	MOV	(PC)+,-(SP)
	.BYTE	137.,3
	DIR$	,ERR
	.ENDM	STLO$S
	.MACRO	STOP$
	.IF	NDF	$$$GLB
	.BYTE	131.,1
	.ENDC
	.ENDM	STOP$
	.MACRO	STOP$C	CS,ERR
	.MCALL	STOP$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	STOP$
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	STOP$C
	.MACRO	STOP$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	131.,1
	DIR$	,ERR
	.ENDM	STOP$S
	.MACRO	STSE$	EFN
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	135.,2
	.WORD	EFN
	.ENDC
	.IF	NDF	S.TSEF
	OFF$
	OFF$	S.TSEF,2
	.ENDC
	.ENDM	STSE$
	.MACRO	STSE$C	EFN,CS,ERR
	.MCALL	STSE$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	STSE$	EFN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	STSE$C
	.MACRO	STSE$S	EFN,ERR
	.MCALL	DIR$,MOV$
	MOV$	EFN
	MOV	(PC)+,-(SP)
	.BYTE	135.,2
	DIR$	,ERR
	.ENDM	STSE$S
	.MACRO	SVDB$	A,L
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	103.,3
	.WORD	A
	.WORD	L
	.ENDC
	.IF NDF	S.VDTA
	.NLIST
	.IRP	X,<,<S.VDTA,2>,<S.VDTL,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	SVDB$
	.MACRO	SVDB$C	AD,LN,CS,ERR
	.MCALL	SVDB$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SVDB$	AD,LN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SVDB$C
	.MACRO	SVDB$S	AD,LN,ERR
	.MCALL	MOV$,DIR$
	MOV$	LN
	MOV$	AD
	MOV	(PC)+,-(SP)
	.BYTE	103.,3
	DIR$	,ERR
	.ENDM	SVDB$S
	.MACRO	SVTK$	TA,TL
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	105.,3
	.WORD	TA
	.WORD	TL
	.ENDC
	.IF NDF	S.VTTA
	.NLIST
	.IRP	X,<,<S.VTTA,2>,<S.VTTL,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	SVTK$
	.MACRO	SVTK$C	ADR,LEN,CS,ERR
	.MCALL	SVTK$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SVTK$	ADR,LEN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SVTK$C
	.MACRO	SVTK$S	ADR,LEN,ERR
	.MCALL	MOV$,DIR$
	MOV$	LEN
	MOV$	ADR
	MOV	(PC)+,-(SP)
	.BYTE	105.,3
	DIR$	,ERR
	.ENDM	SVTK$S
.MACRO	TRAN$	TYPE,LABEL,ACTION,MASK,ADDR
	.PSECT	$STATE
	MTRAN$
	DBGTP$
	.IF	NB	ACTION
	$$$FLG = $$$FLG!2
	.MACRO	$$$ACT
	.WORD	ACTION
	.ENDM	$$$ACT
	.ENDC
	.IF	NB	MASK
	$$$FLG = $$$FLG!30
	.IF	B	ADDR
	.ERROR	"MASK ADDRESS NOT PRESENT"
	.ENDC
	.MACRO	$$$BIT
	.WORD	MASK,ADDR
	.ENDM	$$$BIT
	.ENDC
	.IF	NB	LABEL
	$$$FLG = $$$FLG!4
	$$$STA = LABEL
	.ENDC
	.IRPC	$$$$$X,<TYPE>
	.IF	IDN	<$$$$$X>,<">
	.PSECT	$KSTR
	$$$TMP = .
	.ASCII	TYPE<377>
	.PSECT	$KTAB
	.WORD	$$$TMP
	.MACRO	$$$TYP
	.BYTE	$$$KEY!200
	.ENDM	$$$TYP
	$$$KEY = $$$KEY+1
	.IF	GT	$$$KEY-63.
	.ERROR	"TOO MANY KEYWORDS"
	.ENDC
	.MEXIT
	.ENDC
	.IF	IDN	<$$$$$X>,<!>
	$$$FLG = $$$FLG!1
	.MACRO	$$$EXT
	.WORD	0'TYPE
	.ENDM	$$$EXT
	.MACRO	$$$TYP
	.BYTE	$SUBXP
	.ENDM	$$$TYP
	.MEXIT
	.ENDC
	.MACRO	$$$TYP
	.BYTE	TYPE
	.ENDM	$$$TYP
	.MEXIT
	.ENDM
	.PSECT
.ENDM	TRAN$
	.MACRO	TRUNC$	FDB,ERR
	.MCALL	LDFDB$,ERR$
	LDFDB$	FDB
	.GLOBL	.TRUNC
	JSR	PC,.TRUNC
	ERR$	ERR
	.ENDM	TRUNC$
	.MACRO	TTSYM$	$$$GBL
	.MCALL	DEFIN$
	...GBL=0
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.ENDC
	DEFIN$	TC.WID,1.
	DEFIN$	TC.LPP,2.
	DEFIN$	TC.RSP,3.
	DEFIN$	TC.XSP,4.
	DEFIN$	TC.STB,5.
	DEFIN$	TC.ISL,6.
	DEFIN$	TC.RAT,7.
	DEFIN$	TC.TTP,8.
	DEFIN$	TC.SCR,9.
	DEFIN$	TC.SCP,10.
	DEFIN$	TC.HFL,11.
	DEFIN$	TC.VFL,12.
	DEFIN$	TC.NL ,13.
	DEFIN$	TC.SFF,14.
	DEFIN$	TC.HFF,15.
	DEFIN$	TC.LVF,16.
	DEFIN$	TC.HHT,17.
	DEFIN$	TC.NST,18.
	DEFIN$	TC.BSP,19.
	DEFIN$	TC.ACR,20.
	DEFIN$	TC.SMR,21.
	DEFIN$	TC.SMP,22.
	DEFIN$	TC.SMO,23.
	DEFIN$	TC.CCF,24.
	DEFIN$	TC.ALT,25.
	DEFIN$	TC.IMG,26.
	DEFIN$	TC.NKB,27.
	DEFIN$	TC.NPR,28.
	DEFIN$	TC.ESQ,29.
	DEFIN$	TC.LCP,30.
	DEFIN$	TC.PAR,31.
	DEFIN$	TC.EPA,32.
	DEFIN$	TC.DLU,33.
	DEFIN$	TC.BLK,34.
	DEFIN$	TC.FRM,35.
	DEFIN$	TC.HLD,36.
	DEFIN$	TC.TAP,37.
	DEFIN$	TC.CEQ,38.
	DEFIN$	TC.NEC,39.
	DEFIN$	TC.SLV,40.
	DEFIN$	TC.PRI,41.
	DEFIN$	TC.UC0,42.
	DEFIN$	TC.UC1,43.
	DEFIN$	TC.UC2,44.
	DEFIN$	TC.UC3,45.
	DEFIN$	TC.UC4,46.
	DEFIN$	TC.UC5,47.
	DEFIN$	TC.UC6,48.
	DEFIN$	TC.UC7,49.
	DEFIN$	TC.UC8,50.
	DEFIN$	TC.UC9,51.
	DEFIN$	TC.FDX,52.
	DEFIN$	TC.BIN,53.
	DEFIN$	TC.REM,54.
	DEFIN$	TC.8BC,55.
	DEFIN$	TC.P8B,56.
	DEFIN$	TC.TBF,57.
	DEFIN$	TC.CTS,58.
	DEFIN$	TC.ANS,59.
	DEFIN$	TC.CSQ,60.
	DEFIN$	TC.CTC,61.
	DEFIN$	TC.ASP,62.
	DEFIN$	TC.ABD,63.
	DEFIN$	TC.TBS,64.
	DEFIN$	TC.TBM,65.
	DEFIN$	TC.NBR,66.
	DEFIN$	TC.ACD,67.
	DEFIN$	TC.MAX,68.
	DEFIN$	SE.ICN,1.
	DEFIN$	SE.FIX,2.
	DEFIN$	SE.BIN,3.
	DEFIN$	SE.VAL,4.
	DEFIN$	SE.TER,5.
	DEFIN$	SE.SPD,6.
	DEFIN$	SE.SPL,7.
	DEFIN$	SE.PAR,8.
	DEFIN$	SE.LPR,9.
	DEFIN$	SE.NSC,10.
	DEFIN$	SE.UPN,11.
	DEFIN$	SE.NIH,12.
	DEFIN$	SF.SSC, 2400!020
	DEFIN$	SF.SMC, 2400!040
	DEFIN$	SF.RDF, 2400!060
	DEFIN$	SF.STT, 2400!100
	DEFIN$	SF.STS, 2400!120
	DEFIN$	SF.GSC, 2400!140
	DEFIN$	SF.GMC, 2400!160
	DEFIN$	SF.GAC, 2400!200
	DEFIN$	SF.SAC, 2400!220
	DEFIN$	SF.DEF, 010
	DEFIN$	S.0   ,1.
	DEFIN$	S.50  ,2.
	DEFIN$	S.75  ,3.
	DEFIN$	S.100 ,4.
	DEFIN$	S.110 ,5.
	DEFIN$	S.134 ,6.
	DEFIN$	S.150 ,7.
	DEFIN$	S.200 ,8.
	DEFIN$	S.300 ,9.
	DEFIN$	S.600 ,10.
	DEFIN$	S.1200,11.
	DEFIN$	S.1800,12.
	DEFIN$	S.2000,13.
	DEFIN$	S.2400,14.
	DEFIN$	S.3600,15.
	DEFIN$	S.4800,16.
	DEFIN$	S.7200,17.
	DEFIN$	S.9600,18.
	DEFIN$	S.EXTA,19.
	DEFIN$	S.EXTB,20.
	DEFIN$	T.UNK0,0.
	DEFIN$	T.AS33,1.
	DEFIN$	T.KS33,2.
	DEFIN$	T.AS35,3.
	DEFIN$	T.L30S,4.
	DEFIN$	T.L30P,5.
	DEFIN$	T.LA36,6.
	DEFIN$	T.VT05,7.
	DEFIN$	T.VT50,8.
	DEFIN$	T.VT52,9.
	DEFIN$	T.VT55,10.
	DEFIN$	T.VT61,11.
	DEFIN$	T.L180,12.
	DEFIN$	T.V100,13.
	DEFIN$	T.L120,14.
	DEFIN$	T.SCR0,15.
	DEFIN$	T.LA12,16.
	DEFIN$	T.L100,17.
	DEFIN$	T.LA34,18.
	DEFIN$	T.LA38,19.
	DEFIN$	T.V101,20.
	DEFIN$	T.V102,21.
	DEFIN$	T.V105,22.
	DEFIN$	T.V125,23.
	DEFIN$	T.V131,24.
	DEFIN$	T.V132,25.
	DEFIN$	T.USR0,27.
	DEFIN$	T.USR1,T.USR0+1
	DEFIN$	T.USR2,T.USR1+1
	DEFIN$	T.USR3,T.USR2+1
	DEFIN$	T.USR4,T.USR3+1
	DEFIN$	F1.ACR,000001
	DEFIN$	F1.BTW,000002
	DEFIN$	F1.BUF,000004
	DEFIN$	F1.UIA,000010
	DEFIN$	F1.CCO,000020
	DEFIN$	F1.ESQ,000040
	DEFIN$	F1.HLD,000100
	DEFIN$	F1.LWC,000200
	DEFIN$	F1.RNE,000400
	DEFIN$	F1.RPR,001000
	DEFIN$	F1.RST,002000
	DEFIN$	F1.RUB,004000
	DEFIN$	F1.SYN,010000
	DEFIN$	F1.TRW,020000
	DEFIN$	F1.UTB,040000
	DEFIN$	F1.VBF,100000
	DEFIN$	F2.SCH,000001
	DEFIN$	F2.GCH,000002
	DEFIN$	F2.DCH,000004
	DEFIN$	F2.DKL,000010
	DEFIN$	F2.ALT,000020
	DEFIN$	F2.SFF,000040
	DEFIN$	F2.CUP,000100
	DEFIN$	F2.FDX,000200
	DEFIN$	TF.RST,001
	DEFIN$	TF.BIN,002
	DEFIN$	TF.RAL,010
	DEFIN$	TF.RNE,020
	DEFIN$	TF.RNC,040
	DEFIN$	TF.XOF,100
	DEFIN$	TF.TMO,200
	DEFIN$	TF.RCU,001
	DEFIN$	TF.WAL,010
	DEFIN$	TF.WMS,020
	DEFIN$	TF.CCO,040
	DEFIN$	TF.WBT,100
	DEFIN$	TF.SYN,200
	DEFIN$	TF.XCC,001
	DEFIN$	TF.NOT,002
	DEFIN$	TF.AST,010
	DEFIN$	TF.ESQ,020
	DEFIN$	TF.UCH,040
	.MACRO	TTSYM$	NULL
	.ENDM
	.ENDM	TTSYM$
	.MACRO	ULGF$
	.IF NDF	$$$GLB
	.BYTE	159.,1
	.ENDC
	.ENDM	ULGF$
	.MACRO	ULGF$C	CS,ERR
	.MCALL	ULGF$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$$
$$$=.
	.IFTF
	ULGF$
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ULGF$C
	.MACRO	ULGF$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	159.,1
	DIR$	,ERR
	.ENDM	ULGF$S
	.MACRO	UMAP$	WDB
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	123.,2
	.WORD	WDB
	.ENDC
	.IF NDF	U.MABA
	OFF$
	OFF$	U.MABA,2
	.ENDC
	.ENDM	UMAP$
	.MACRO	UMAP$C	WDB,CS,ERR
	.MCALL	UMAP$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	UMAP$	WDB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	UMAP$C
	.MACRO	UMAP$S	WDB,ERR
	.MCALL	DIR$,MOV$
	MOV$	WDB
	MOV	(PC)+,-(SP)
	.BYTE	123.,2
	DIR$	,ERR
	.ENDM	UMAP$S
	.MACRO	UMDIO$	$$$GBL
	.MCALL	.WORD.,DEFIN$
	.IF IDN	<$$$GBL>,<DEF$G>
...GBL=1
	.IFF
...GBL=0
	.ENDC
	.WORD.	IQ.UMD,004,000
	.WORD.	IO.HMS,000,010
	.WORD.	IO.BLS,010,010
	.WORD.	IO.OFF,020,010
	.WORD.	IO.RDH,030,010
	.WORD.	IO.WDH,040,010
	.WORD.	IO.WCK,050,010
	.WORD.	IO.RNF,060,010
	.WORD.	IO.RNR,070,010
	.WORD.	IO.LPC,100,010
	.WORD.	IO.RTD,120,010
	.WORD.	IO.WTD,130,010
	.WORD.	IO.TDD,140,010
	.WORD.	IO.DGN,150,010
	.WORD.	IO.WPD,160,010
	.WORD.	IO.RPD,170,010
	.WORD.	IO.CER,200,010
	.WORD.	IO.CEW,210,010
	.MACRO	UMDIO$	A
	.ENDM
	.ENDM	UMDIO$
	.MACRO	USTP$	TNAME
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	133.,3
	R50$	TNAME
	.ENDC
	.IF	NDF	U.STTN
	OFF$
	OFF$	U.STTN,2
	.ENDC
	.ENDM	USTP$
	.MACRO	USTP$C	TNAME,CS,ERR
	.MCALL	USTP$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	USTP$	TNAME
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	USTP$C
	.MACRO	USTP$S	TNAME,ERR
	.MCALL	DIR$,RFA$
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	133.,3
	DIR$	,ERR
	.ENDM	USTP$S
	.MACRO	VRCD$	TN,BA,BL=13.,TI
	.MCALL	OFF$, R50$
	.IF NDF	$$$GLB
	.BYTE	75.,6.
	R50$	TN
	.WORD	BA
	.WORD	BL
	.WORD	TI
	.ENDC
	.IF NDF	R.VDTN
	.NLIST
	.IRP	X,<,<R.VDTN,4>,<R.VDBA,2>,<R.VDBL,2>,<R.VDTI,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	VRCD$
	.MACRO	VRCD$C	TN,BA,BL=13.,TI,CS,ERR
	.MCALL	VRCD$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	VRCD$	TN,BA,BL,TI
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	VRCD$C
	.MACRO	VRCD$S	TN,BA,BL=#13.,TI,ERR
	.MCALL	MOV$,DIR$, RFA$
	MOV$	TI
	MOV$	BL
	MOV$	BA
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	75.,6.
	DIR$	,ERR
	.ENDM	VRCD$S
	.MACRO	VRCS$	TN,BA,BL=13.,TI
	.MCALL	OFF$, R50$
	.IF NDF	$$$GLB
	.BYTE	139.,6.
	R50$	TN
	.WORD	BA
	.WORD	BL
	.WORD	TI
	.ENDC
	.IF NDF	R.VSTN
	.NLIST
	.IRP	X,<,<R.VSTN,4>,<R.VSBA,2>,<R.VSBL,2>,<R.VSTI,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	VRCS$
	.MACRO	VRCS$C	TN,BA,BL=13.,TI,CS,ERR
	.MCALL	VRCS$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	VRCS$	TN,BA,BL,TI
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	VRCS$C
	.MACRO	VRCS$S	TN,BA,BL=#13.,TI,ERR
	.MCALL	MOV$,DIR$, RFA$
	MOV$	TI
	MOV$	BL
	MOV$	BA
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	139.,6.
	DIR$	,ERR
	.ENDM	VRCS$S
	.MACRO	VRCX$	TN,BA,BL=13.,TI
	.MCALL	OFF$, R50$
	.IF NDF	$$$GLB
	.BYTE	77.,6.
	R50$	TN
	.WORD	BA
	.WORD	BL
	.WORD	TI
	.ENDC
	.IF NDF	R.VXTN
	.NLIST
	.IRP	X,<,<R.VXTN,4>,<R.VXBA,2>,<R.VXBL,2>,<R.VXTI,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	VRCX$
	.MACRO	VRCX$C	TN,BA,BL=13.,TI,CS,ERR
	.MCALL	VRCX$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	VRCX$	TN,BA,BL,TI
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	VRCX$C
	.MACRO	VRCX$S	TN,BA,BL=#13.,TI,ERR
	.MCALL	MOV$,DIR$, RFA$
	MOV$	TI
	MOV$	BL
	MOV$	BA
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	77.,6.
	DIR$	,ERR
	.ENDM	VRCX$S
	.MACRO	VSDA$	TN,BA,BL=13.,EFN,SPRI,TI
	.MCALL	R50$,OFF$
	.IF NDF	$$$GLB
	.BYTE	71.,8.
	R50$	TN
	.WORD	BA
	.WORD	EFN
	.WORD	BL
	.WORD	SPRI
	.WORD	TI
	.ENDC
	.IF NDF	S.DATN
	.NLIST
	.IRP	X,<,<S.DATN,4>,<S.DABA,2>,<S.DAEF,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<S.DABL,2>,<S.DASP,2>,<S.DATI,2>>
	OFF$	X
	.ENDM
	.LIST
	.ENDC
	.ENDM	VSDA$
	.MACRO	VSDA$C	TN,BA,BL=13.,EFN,SPRI,TI,CS,ERR
	.MCALL	VSDA$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	VSDA$	TN,BA,BL,EFN,SPRI,TI
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	VSDA$C
	.MACRO	VSDA$S	TN,BA,BL=#13.,EFN,SPRI,TI,ERR
	.MCALL	MOV$,RFA$,DIR$
	MOV$	TI
	MOV$	SPRI
	MOV$	BL
	MOV$	EFN
	MOV$	BA
	RFA$	TN
	MOV	(PC)+,-(SP)
	.BYTE	71.,8.
	DIR$	,ERR
	.ENDM	VSDA$S
	.MACRO	VSRC$	TNAME,BUF,BUFLEN,EFN,EAST,ESB
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	141.,8.
	R50$	TNAME
	.WORD	BUF
	.WORD	EFN
	.WORD	BUFLEN
	.WORD	EAST
	.WORD	ESB
	.ENDC
	.IF	NDF	V.SRTN
	.IRP	X,<,<V.SRTN,4>,<V.SRBF,2>,<V.SRBL,2>,<V.SREF,2>,<V.SREA,2>,<V.SRES,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	VSRC$
	.MACRO	VSRC$C	TNAME,BUF,BUFLEN,EFN,EAST,ESB,CS,ERR
	.MCALL	VSRC$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	VSRC$	TNAME,BUF,BUFLEN,EFN,EAST,ESB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	VSRC$C
	.MACRO	VSRC$S	TNAME,BUF,BUFLEN,EFN,EAST,ESB,ERR
	.MCALL	DIR$,MOV$,RFA$,MVB$
	MOV$	ESB
	MOV$	EAST
	MOV$	BUFLEN
	MOV$	EFN
	MOV$	BUF
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	141.,7
	DIR$	,ERR
	.ENDM	VSRC$S
	.MACRO	WAIT$	FDB,EFN,BKST,ERR
	.MCALL	LDFDB$,CMOV$W,CMOV$B,ERR$
	LDFDB$	FDB
	CMOV$B	EFN,F.EFN
	CMOV$W	BKST,F.BKST
	.GLOBL	.WAIT
	JSR	PC,.WAIT
	ERR$	ERR
	.ENDM	WAIT$
	.MACRO	WDBBK$	APR,SIZ,RID,OFF,LEN,STS,SRB
	.MCALL	WDBDF$
	WDBDF$
	.BYTE	0,APR
	.WORD	0
	.WORD	SIZ
	.WORD	RID
	.WORD	OFF
	.WORD	LEN
	.WORD	STS
	.WORD	SRB
	.ENDM	WDBBK$
	.MACRO	WDBDF$	GBL
	.MCALL	.BLKW.,.BLKB.,.BLK.
	.BLK.
	.BLKB.	1,W.NID,GBL
	.BLKB.	1,W.NAPR,GBL
	.BLKW.	1,W.NBAS,GBL
	.BLKW.	1,W.NSIZ,GBL
	.BLKW.	1,W.NRID,GBL
	.BLKW.	1,W.NOFF,GBL
	.BLKW.	1,W.NLEN,GBL
	.BLKW.	1,W.NSTS,GBL
	.BLKW.	1,W.NSRB,GBL
	.BLKW.	0,W.NLGH,GBL
	.IF IDN	<DEF$G>,<GBL>
	.GLOBL	WS.CRW,WS.UNM,WS.ELW,WS.RRF,WS.64B,WS.SIS
	.GLOBL	WS.MAP,WS.RCX,WS.DEL,WS.EXT,WS.WRT,WS.RED
	.GLOBL	WS.BPS,WS.NBP,WS.UDS,WS.NAT,WS.RES
	.ENDC
WS.CRW=^O<100000>
WS.UNM=^O<40000>
WS.ELW=^O<20000>
WS.RRF=^O<10000>
WS.BPS=^O<4000>
WS.NBP=^O<4000>
WS.RES=^O<2000>
WS.NAT=^O<1000>
WS.64B=^O<400>
WS.MAP=^O<200>
WS.RCX=^O<100>
WS.SIS=^O<40>
WS.UDS=^O<20>
WS.DEL=^O<10>
WS.EXT=^O<4>
WS.WRT=^O<2>
WS.RED=^O<1>
WS.EDS=WS.SIS!WS.UDS
	.MACRO	WDBDF$	X
	.ENDM
	.ENDM	WDBDF$
	.MACRO	WRITE$ FDB,BKAD,BKSZ,BKVB,BKEF,BKST,BKDN,ERR
	.MCALL	FDBK$R,ERR$
	FDBK$R	FDB,BKAD,BKSZ,BKVB,BKEF,BKST,BKDN
	.GLOBL	.WRITE
	JSR	PC,.WRITE
	ERR$	ERR
	.ENDM	WRITE$
	.MACRO	WSIG$
	.IF NDF $$$GLB
	.BYTE	49.,1
	.ENDC
	.ENDM	WSIG$
	.MACRO	WSIG$C	PSCT,ERR
	.MCALL	WSIG$,DIR$
	.IF NDF $$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	WSIG$
	.IFT
	.PSECT	PSCT
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	WSIG$C
	.MACRO	WSIG$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	49.,1
	DIR$	,ERR
	.ENDM	WSIG$S
	.MACRO	WTLO$	SET,MASK
	.IF NDF	$$$GLB
$$$T1=1
	.IF EQ	SET-4
$$$T1=0
	.IRP	X,<MASK>
$$$T1=$$$T1+1
	.ENDM
	.IF NE $$$T1-1
	.ERROR	SET
	.ENDC
	.ENDC
	.IF EQ	$$$T1-1
	.BYTE	43.,3
	.WORD	SET
	.WORD	MASK
	.ENDC
	.ENDC
	.ENDM	WTLO$
	.MACRO	WTLO$C	SET,MASK,CS,ERR
	.MCALL	WTLO$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	WTLO$	SET,<MASK>
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	WTLO$C
	.MACRO	WTLO$S	SET,MSK,ERR
	.MCALL	MOV$,DIR$
$$$T1=1
	.IF EQ	SET-4
$$$T1=0
	.IRP	X,<MSK>
$$$T1=$$$T1+1
	.ENDM
	.IF NE $$$T1-1
	.ERROR	SET
	.ENDC
	.ENDC
	.IF EQ	$$$T1-1
	MOV$	MSK
	.IF NE	SET
	MOV	#SET,-(SP)
	.IFF
	CLR	-(SP)
	.ENDC
	MOV	(PC)+,-(SP)
	.BYTE	43.,3
	.ENDC
	DIR$	,ERR
	.ENDM	WTLO$S
	.MACRO	WTSE$	EFN
	.MCALL	OFF$
	.IF NDF	$$$GLB
	.BYTE	41.,2
	.WORD	EFN
	.ENDC
	.IF NDF	W.TSEF
	.NLIST
	OFF$
	OFF$	W.TSEF,2
	.LIST
	.ENDC
	.ENDM	WTSE$
	.MACRO	WTSE$C	EF,CS,ERR
	.MCALL	WTSE$,DIR$
	.IF NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	WTSE$	EF
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	WTSE$C
	.MACRO	WTSE$S	EF,ERR
	.MCALL	MOV$,DIR$
	MOV$	EF
	MOV	(PC)+,-(SP)
	.BYTE	41.,2
	DIR$	,ERR
	.ENDM	WTSE$S
	.MACRO	.BLKB.	NUM,SYM,GBL
	.IF NB	<SYM>
	.IF IDN	<DEF$G>,<GBL>
SYM==$$$
	.IFF
SYM=$$$
	.ENDC
	.ENDC
$$$=$$$+NUM
	.ENDM	.BLKB.
	.MACRO	.BLKW.	NUM,SYM,GBL
	.IF NB	<SYM>
	.IF IDN	<DEF$G>,<GBL>
SYM==$$$
	.IFF
SYM=$$$
	.ENDC
	.ENDC
$$$=$$$+<2*NUM>
	.ENDM	.BLKW.
	.MACRO	.BLK.
$$$=0
	.ENDM	.BLK.
	.MACRO .IDATA NAME=IMP$D
	.PSECT NAME RW,D,LCL,REL,CON
	.ENDM
	.MACRO	.IOER.	SYM,LO,MSG
	DEFIN$	SYM,LO
	.IF	GT,$$MSG
	.MCALL	.IOMG.
	.IOMG.	SYM,LO,<MSG>
	.ENDC
	.ENDM	.IOER.
	.MACRO	.IOMG.	SYM,LO,MSG
	.WORD	-^O<LO>
	.ENABL	LC
	.ASCIZ	^MSG^
	.DSABL	LC
	.EVEN
	.IIF	LT,^O<$$$MAX+<LO>>,$$$MAX=-^O<LO>
	.ENDM	.IOMG.
	.MACRO	.ODATA NAME=IMP$DO
	.PSECT	NAME	RW,D,LCL,REL,OVR
	.ENDM
	.MACRO .PCODE NAME=PUR$I
	.PSECT NAME RO,I,LCL,REL,CON
	.ENDM
	.MACRO .PDATA NAME=PUR$D
	.PSECT NAME RO,D,LCL,REL,CON
	.ENDM
	.MACRO .PICOD NAME=PIC$I
	.PSECT NAME RO,I,LCL,REL,CON
	.ENDM
	.MACRO	.QIOE.	SYM,LO,MSG
	DEFIN$	SYM,LO
	.IF	GT,$$MSG
	.MCALL	.IOMG.
	.IOMG.	SYM,<LO-128.>,<MSG>
	.ENDC
	.ENDM	.QIOE.
	.MACRO	.WORD.	SYM,LO,HI
	DEFIN$	SYM,<HI*400+LO>
	.ENDM	.WORD.
