;  DEC/CMS REPLACEMENT HISTORY, Element MLIBS.RSX
;  *3    18-AUG-1986 11:24:24 WORRALL "Complete HEX listing support for version 5.5 fieldtest"
;  *2    14-APR-1986 23:34:48 SYSTEM "Update 5.4 of MACRO-11"
;  *1    28-MAR-1986 02:40:58 SYSTEM "Load MACRO-11 sources from V5.3"
;  DEC/CMS REPLACEMENT HISTORY, Element MLIBS.RSX
	.NLIST							;Edit Level 00
	.ENABL	LC,GBL
	.LIST
	.TITLE	MLIBS - Macro library processing
	.SBTTL	MLIBS - Macro library processing
	.SBTTL
	.SBTTL		.IDENT	/V05.05/
	.SBTTL
	.IDENT	/V05.05/
;****************************************************************************
;*									    *
;*                   COPYRIGHT (c)  1983, 1986                              *
;*          BY DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.                *
;*                   ALL RIGHTS RESERVED.                                   *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED  *
;*  ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE  *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER  *
;*  COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY  *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY  *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE  *
;*  AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT  *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS  *
;*  SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.		    *
;*									    *
;****************************************************************************


;++
;  Facility:	MACRO-11  The PDP-11 macro assembler for RT/RSX/VMS and RSTS/E
;
;    Author:	Too many people to list here
;
;   Created:	From the dust and dirt
;
;  Abstract:	MLIBS - Macro library processing
;
;     Externals	 Description
;     ---------	 -----------
;
;      Edit	Who	Date		Description of modification
;      ----	---	----		---------------------------
;--


;	System Library "MCALLS"

	.MCALL	FDOFF$,CLOSE$,FDBDF$,FDRC$A,FDOP$A
	.MCALL	NMBLK$,FDAT$R

	FDOFF$	DEF$L



.IF NDF	RSX11M


	.MCALL	OPEN$R

.IFF

	.MCALL	OFNB$R


.ENDC



	.PSECT	SMLFDB,D,GBL,OVR  ;++018

;
; MACRO FILE FDB
;

	FDBDF$			;++018
	FDRC$A	0,LINBUF,LINLEN
	FDOP$A	6,SMLDS,SMLNAM

;
; SYSTEM MACRO FILE DEFAULT NAME BLOCK
;

	PURE	DPURE,D		;++017

SMLNAM:	NMBLK$	RSXMAC,SML,,LB

; System macro file data set descriptor

.IF	NDF,R$RSTS	;IF NOT RSTS

SMLDS:	.WORD	0		;NO DEVICE NAME
	.WORD	0		;

.IFF;	NDF,R$RSTS	;IF NOT RSTS/E

SMLDS:	.WORD	SMLDRE-SMLDV	;LENGTH OF RSTS DEVICE NAME
	.WORD	SMLDV		;LOCATION OF RSTS DEVICE NAME

.IFTF;	NDF,R$RSTS	;IF NOT RSTS/E

	.WORD	SMLDRE-SMLDR	;DIRECTORY NAME
	.WORD	SMLDR		;
	.WORD	0		;NO FILENAME
	.WORD	0		;

.IFT;	NDF,R$RSTS	;IF NOT RSTS/E

SMLDR:	.ASCII	/[1,1]/		;DIRECTORY NAME

.IFF;	NDF,R$RSTS	;IF NOT RSTS/E

SMLDV:	.ASCII	/LB/		;RSTS DEVICE NAME
SMLDR:	.ASCII	//		;NO SPECIAL RSTS ACCOUNT

.ENDC;	NDF,R$RSTS	;IF NOT RSTS/E

SMLDRE:				;
.EVEN

	PURE	PUREI,I		;++017

	.ENABL	LSB		;++007

10$:	CALL	20$		;++007 CLOSE CURRENT LIBRARY FILE
INISML::			;++014
	MOVB	IOFTBL+SMLCHN,R1  ;++014 PUT FILE STATUS IN R1
	BLT	30$		;++007 LEAVE IF FILE ERROR
	BNE	10$		;++007 BRANCH IF FILE IS OPEN
	MOVB	LIBNUM,R2	;++013 GET LIBRARY NUMBER
	BEQ	30$		;++007 LEAVE IF NONE LEFT
	BGT	12$		;++007 SKIP IF IN MIDDLE OF SEARCH
	MOV	$LSCNT+LIBLST,R2  ;++021 1ST TIME--GET LAST FILE NUMBER
12$:	DEC	R2		;++010 DECREMENT LIBRARY NUMBER
	MOVB	R2,LIBNUM	;++013 AND STORE IT
	CALL	OPNLIB		;++010 OPEN THE DESIRED MACRO LIBRARY
	BCS	INISML		;++010 ERROR--TRY TO OPEN NEXT ONE
	MOV	#SYMBOL,R2	;++021 GET ADDR OF SYMBOL AREA
	TST	(R2)		;++021 CHECK THE FILE ID
	BNE	15$		;++021 IF NE IT IS ALREADY KNOWN
	MOV	#SMLFDB+F.FNB+N.FID,R1  ;++021 ELSE, POINT R1 INTO FDB
	MOV	(R1)+,(R2)+	;++021 TRANSFER FILE ID INTO SYMBOL AREA
	MOV	(R1)+,(R2)+	;++021
	MOV	(R1)+,(R2)+	;++021
	MOV	N.DVNM-<N.FID+6>(R1),(R2)+  ;++021 COPY DEVICE NAME
	MOV	N.UNIT-<N.FID+6>(R1),(R2)+  ;++021 AND UNIT NUMBER, TOO
	CALL	INSERT		;++021 REPLACE ENTRY IN LIBRARY FILE ...
				;++021 INFORMATION LIST
15$:				;++021
	MOV	#IO.OPN,R1	;++007 SPECIFY FILE OPEN STATUS
	CLR	ENDFLG		;++007 CLEAR PENDING END-OF-FILE STATUS
	BR	40$		;++007 LEAVE WITH SUCCESSFUL RETURN STATUS



FINSML::MOVB	#-1,LIBNUM	;++013 SET CURRENT LIBRARY # NEGATIVE
	MOVB	IOFTBL+SMLCHN,R1  ;++014 PUT FILE STATUS IN R1
	BLE	30$		;++007 LEAVE IF FILE CLOSED OR IN ERROR
20$:	CLR	R1		;++007 SPECIFY FILE CLOSED STATUS
	CLOSE$	#SMLFDB		;++007 CLOSE CURRENT LIBRARY FILE
	BCC	30$		;++007 O.K. -- LEAVE
	COM	R1		;++007 ERROR -- SET FILE ERROR STATUS
30$:	CLR	R0		;++007 SET RETURN STATUS TO FILE NOT OPEN
40$:	MOVB	R1,IOFTBL+SMLCHN  ;++014 STORE FILE STATUS
	TST	R0		;++007 SET RETURN STATUS
	RETURN			;++007



	.DSABL	LSB		;++007





;++013
;
; **-OPNLIB--OPEN FILE FROM INFO IN 'LIBLST'
;
; INPUTS:
;	R2=LIST ENTRY NUMBER
;
; OUTPUTS:
;	R0=ADDRESS OF FDB USED IN FILE OPEN
;	R1-R4=LOST
;
;--013

OPNLIB:	MOV	#SMLCHN,R4	;++021 GET MACRO LIBRARY SOFTWARE CHAN #
	CLR	$LSPNT		;++021 INIT POINTER TO START OF LIST
1$:	MOV	#LIBLST,R0	;++021 PUT LIST NUMBER IN R0
	CALL	NEXT		;++021 RETRIEVE NEXT ENTRY
	DEC	R2		;++021 DECREMENT LIBRARY NUMBER
	BGE	1$		;++021 IF GE NOT THE DESIRED ONE
	MOV	FDBTBL(R4),R0	;++014 PUT ADDR OF PROPER FDB IN R0
	MOV	R0,R1		;++013 COPY IT INTO R1
	ADD	#F.FNB+N.FID,R1	;++013 PNT R1 TO FILE ID IN THE FDB
	MOV	#SYMBOL,R2	;++021 POINT TO SYMBOL AREA
	MOV	(R2)+,(R1)+	;++021 MOVE FILE ID INTO FDB
	MOV	(R2)+,(R1)+	;++021
	MOV	(R2)+,(R1)+	;++021
	MOV	(R2)+,N.DVNM-<N.FID+6>(R1)  ;++021 MOVE DEVICE NAME
	MOV	(R2)+,N.UNIT-<N.FID+6>(R1)  ;++021 AND UNIT NUMBER


	.IF NDF	RSX11M		;++014


	OPEN$R			;++013 OPEN THE FILE FOR READ

	.IFF			;++014

	TST	F.FNB+N.FID(R0)	;++014 LOOK FOR A FILE ID
	BNE	10$		;++014 SKIP IF ONE IS THERE
	SUB	#N.FID+6,R1	;++014 ELSE, POINT R1 TO FILENAME BLOCK
	MOV	#SMLDS,R2	;++014 POINT R2 TO DATASET DESCRIPTOR
	MOV	#SMLNAM,R3	;++014 POINT R3 TO DEFAULT FNB
	CALL	.PARSE		;++014 PARSE THE FILENAME
	BCS	2$		;++014 SKIP ON ERROR
10$:	OFNB$R			;++014 OPEN FOR READ (VIA FILENAME BLK)


	.ENDC			;++014 (RSX11M)


	BCS	2$		;++013 SKIP ON OPEN FAILURE
	MOVB	#IO.OPN,IOFTBL(R4)  ;++014 SET FILE OPEN STATUS
	FDAT$R	R0,#R.VAR	;++018 SET VARIABLE LENGTH RECORDS ATTRIBUTE
2$:				;++013
	RETURN			;++010


	.END
