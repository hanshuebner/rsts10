;  DEC/CMS REPLACEMENT HISTORY, Element SECTR.MAC
;  *4    18-AUG-1986 11:27:13 WORRALL "Complete HEX listing support for version 5.5 fieldtest"
;  *3    19-MAY-1986 17:00:30 WORRALL "Allow .PSECT FOO,NOSAV to work - as documented"
;  *2    14-APR-1986 23:55:02 SYSTEM "Update 5.4 of MACRO-11"
;  *1    28-MAR-1986 02:45:32 SYSTEM "Load MACRO-11 sources from V5.3"
;  DEC/CMS REPLACEMENT HISTORY, Element SECTR.MAC
	.NLIST
	.ENABL	LC,GBL
	.LIST
	.TITLE	SECTR - Program section specifying directives
	.SBTTL	SECTR - Program section specifying directives
	.SBTTL
	.SBTTL		.IDENT	/V05.05/
	.SBTTL
	.IDENT	/V05.05/
;****************************************************************************
;*									    *
;*                   COPYRIGHT (c)  1983, 1986                              *
;*          BY DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.                *
;*                   ALL RIGHTS RESERVED.                                   *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED  *
;*  ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE  *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER  *
;*  COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY  *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY  *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE  *
;*  AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT  *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS  *
;*  SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.		    *
;*									    *
;****************************************************************************


;++
;  Facility:	MACRO-11  The PDP-11 macro assembler for RT/RSX/VMS and RSTS/E
;
;    Author:	Too many people to list here
;
;   Created:	From the dust and dirt
;
;  Abstract:	SECTR - Program section specifying directives
;
;     Externals	 Description
;     ---------	 -----------
;
;      Edit	Who	Date		Description of modification
;      ----	---	----		---------------------------
;	001	Jrw	27-Jul-83	Remove temp rt-11 linker code.
;	002	Jrw	19-May-86	Allow .PSECT FOO,NOSAV to work.
;--



;+
; LOCAL MACROS
;
; GENERATE SECTION ATTRIBUTE ROLL ENTRY
;
; GENSAT SAT,FLG,TYP
;
; WHERE:
;
;	SAT=A 1 TO 3 CHARACTER SECTION ATTRIBUTE NAME.
;	FLG=SECTION ENTRY FLAG BIT DEFINITION.
;	TYP=FLAG BIT DISPOSITION.
;		IF TYP GE 0, THEN CLEAR FLAG BIT.
;		IF TYP LT 0, THEN SET FLAG BIT.
;-

	.MACRO	GENSAT SAT,FLG,TYP
	.RAD50	/SAT/
	.BYTE	FLG,TYP
	.ENDM

	PURE	SATSEC,D,GBL	;++017
SATBAS::			;REF LABEL
	GENSAT	ABS,CSTREL,1
	GENSAT	CON,CSTALO,1
	GENSAT	D,CSTTYP,-1
	GENSAT	GBL,CSTGBL,-1
	GENSAT	I,CSTTYP,1
	GENSAT	LCL,CSTGBL,1
	GENSAT	OVR,CSTALO,-1
	GENSAT	REL,CSTREL,-1
	GENSAT	RO,CSTACC,-1
	GENSAT	RW,CSTACC,1
	GENSAT	SAV,CSTSAV,-1
	GENSAT	NOS,CSTSAV,1
SATTOP::			;REF LABEL

	PURE	PUREI,I

;+
; **-ASECT-ABSOLUTE P-SECTION
; **-CSECT-DEFAULTED ATTRIBUTE P-SECTION
; **-PSECT-PROGRAMMABLE ATTRIBUTE P-SECTION
; **-PHASE-PHASE P-SECTION LOCATION COUNTER
; **-DEPHA-DEPHASE P-SECTION LOCATION COUNTER
; **-SECINI-P-SECTION TABLE INITIALIZATION
; DIRECTIVES .SAVE AND .RESTORE
;-

;+
; DIRECTIVES .SAVE AND .RESTORE
; R3 = 0 IF .SAVE, R3 = 1 IF .RESTORE
;-

SAVE::	MOV	SECSP,R0	;GET SECTOR STACK POINTER
	BNE	1$		;BRANCH IF INITIALIZED
	MOV	#SECSTK,R0	;ELSE DO SO
1$:	TST	R3		;TEST IF .RESTORE
	BNE	2$		;BRANCH IF SO
	CMP	R0,#SECSTT	;TEST IF STACK FULL
	BEQ	4$		;ERROR IF YES
	MOVB	CLCSEC,(R0)+	;SET WORD IN STACK TO CURRENT SECTOR NUMBER
	CLRB	(R0)+
	MOV	CLCLOC,(R0)+	;STACK THE CURRENT LOCATION COUNTER
	MOV	R0,SECSP	;UPDATE STACK POINTER
	RETURN			;DONE, EXIT STMNT ROUTINE

2$:	CMP	R0,#SECSTK	;ANYTHING IN STACK?
	BEQ	PSECTE		;NO, ERROR
	MOV	-(R0),R3	;PICK UP OLD LOCATION COUNTER
	MOV	-(R0),R4	;GET PREV SECTOR NUMBER
	MOV	R0,SECSP	;UPDATE STACK POINTER
	CALL	SETMAX		;CLOSE OUT CURRENT PSECT
	CLR	$LSPNT		;START AT BEGINNING OF SECTOR LIST
3$:	NEXT	SECLST		;GET NEXT SECTOR
	DEC	R4		;TEST IF HAVE THE SECTOR
	BPL	3$		;ITERATE IF NO
	MOV	R3,VALUE	;NOW SET THE TO THE OLD LOC COUNTER
	BR	PSECTG		;SET TO THE FORMER PSECT NOW

4$:	BR	PSECTE

	.PSECT	IMPPAS,D,GBL,RW
SECSP:	.BLKW	1		;SECTOR .SAVE/.RESTORE STACK POINTER
SECSTK:	.BLKW	20*2		;SECTOR STACK (16. ENTRIES)
SECSTT:				;REF LABEL FOR SECTOR STACK LIMIT

	PURE	PUREI,I

	.IF NDF	XREL
ASECT::	CALL	SETMAX		;CLOSE OUT CURRENT P-SECTION
ASECTF:	MOV	#<^R. A>,SYMBOL	;SET DEFAULT ABS SECTION NAME
	MOV	#<^RBS.>,SYMBOL+2;
	MOV	#ASTFLG,R2	;++021 GET .ASECT FLAGS
	BR	CSECTF		;

CSECT::	CALL	SETMAX		;CLOSE OUT CURRENT P-SECTION
	MOV	#CSTFLG,R2	;++021 GET DEFAULT .CSECT FLAGS
	TSTARG			;ANY NAME?
	BEQ	10$		;IF EQ NO
	BIS	#CSTALO!CSTGBL,R2  ;++021 SET OVERLAID AND GLOBAL FLAGS
10$:	GETSYM			;GET SECTION NAME
CSECTF:	CALL	$FNDSC		;++021 LOOK FOR A MATCHING PSECT NAME
	BNE	PSECTF		;IF NE MATCH FOUND
	MOVB	R2,(R3)+	;++021 SET MODE FLAGS
	MOVB	$LSCNT+SECLST,(R3)+  ;++021 AND SECTION NUMBER
	BR	PSECTF		;

PSECT::	CALL	SETMAX		;CLOSE OUT CURRENT P-SECTION
	TSTARG			;TEST FOR ARGUMENT (SET UP)
	INC	ARGCNT		;INCREMENT ARGUMENT COUNT
	GETSYM			;GET SECTION NAME
	CALL	$FNDSC		;++021 LOOK FOR A MATCHING PSECT NAME
	BNE	10$		;IF NE FOUND MATCH
	MOVB	#PSTFLG,(R3)+	;++021 SET DEFAULT .PSECT FLAGS
	MOVB	$LSCNT+SECLST,(R3)+  ;++021 AND SECTION NUMBER
10$:	MOV	#SYMBOL+12,R3	;GET SET TO STACK SECTION
	.REPT	5
	MOV	-(R3),-(SP)	;STACK SECTION
	.ENDR
20$:	TSTARG			;ANY MORE ARGUMENTS?
	BEQ	30$		;IF EQ NO
	GETSYM			;GET ATTRIBUTE SYMBOL

;;;.IF	DF,RT11			;Temporary inclusion for RT-11		;JR+
;;;	MOV	#SATROL,R0	;Set up table addr for RT-11 LINKER
;;;	MOV	#SATBAS,ROLBAS(R0) ;
;;;	MOV	#SATTOP,ROLTOP(R0) ;
;;;.ENDC;	DF,RT11			;					;JR-

	SCANW	SATROL		;SCAN FOR A MATCH
	BEQ	PSECTA		;IF EQ ERROR
	MOV	#SYMBOL+2,R0	;GET ADDRESS OF ARGUMENT WORD
	BICB	(R0),4(SP)	;ASSUME BIT IS TO BE CLEARED
	TST	(R0)		;CLEAR OR SET?
	BPL	20$		;IF PL CLEAR
	BISB	(R0),4(SP)	;SET BIT
	BR	20$		;GO AGAIN
30$:	MOV	(SP)+,(R3)+	;RESTORE SECTION NAME
	MOV	(SP)+,(R3)+	;
	MOV	(SP)+,(R3)+	;RESTORE SECTION ATTRIBUTES
	MOV	(SP)+,(R3)+	;
	MOV	(SP)+,(R3)+	;
	MOV	#SECLST,$LSNDX	;++021 RESPECIFY USE OF PSECT LIST
PSECTF:	INSERT			;INSERT SECTION

;.IF	DF,RT11			;					;JR+
	CALL	CRFREF			;Under RT-11, CREF the PSECT
;.ENDC;	DF,RT11			;					;JR-

PSECTG:	MOV	#SYMBOL,R1	;GET ADDRESS OF SYMBOL
	MOV	#CLCNAM,R2	;GET LOCATION COUNTER ADDRESS
	CALL	XMIT5		;++015 UPDATE LOCATION COUNTER

	.IF NDF	XEDLSB
	BIT	#ED.LSB,EDMASK	;++017 IS .ENABL LSB IN EFFECT?
	BEQ	40$		;++017 YES, DON'T CHANGE BLOCK NUMBER
	CLR	LSFLAG		;++017 CLEAR AUTO-GENERATED SYMBOL BASE
				;++017 ... AND INDICATE NEED NEW BLOCK
40$:				;++017
	.ENDC

	JMP	SETPF0		;++015 LIST NEW LOCATION COUNTER

PSECTA:	ADD	#5*2,SP		;CLEAN STACK
PSECTE:	ERROR	A		;SET ERROR FLAG
SECRTN:	RETURN			;++019


	.ENDC	;XREL

SECINI::
	.IF NDF	XREL

	.IF NDF	XEDABS		;++019

	TST	EXMFLG		;++019 SERVICING  /EN:ABS  OR  /DS:ABS?
	BEQ	10$		;++019 IF EQ FALSE--CONTINUE
	TSTB	CLCSEC		;++019 CHECK CURRENT PROGRAM SECTION
	BMI	SECRTN		;++019 IF MI RETURN--INDICATES THAT ...
10$:				;++019 THIS IS SERVICING A CMD LINE ...
				;++019 SWITCH FOR OBJ FILE IN FIRST ....
				;++019 PASS--ROLLS AREN'T INITIALIZED.

	.IFTF			;++019

	CALL	ASECTF		;MOVE ONTO ROLL
	CLR	SYMBOL		;DITTO FOR BLANK CSECT
	CLR	SYMBOL+2
	MOV	#CSTFLG,R2	;++021 SET DEFAULT .CSECT FLAGS

	.IFT			;++019

	BIT	#ED.ABS,EDMASK	;ABS MODE?
	BNE	CSECTF		;  NO
	RETURN

	.IFF

	BR	CSECTF

	.ENDC			;XEDABS

	.IFF
	BIT	#ED.ABS,EDMASK
	BEQ	1$
	ERROR	A
	BIC	#ED.ABS,EDMASK
1$:	RETURN

;+
; **-LIMIT-PROGRAM LIMITS
;-

	.IFT
LIMIT::	CALL	OBJDMP		;DUMP OBJECT BUFFER
	CLR	(R4)		;CLEAR VALUE
	MOV	#RLDT11*400,-(R4) ;SET RLD TYPE
	STCODE
	CLR	(R4)
	JMP	STCODE
	.ENDC


	.END
