;  DEC/CMS REPLACEMENT HISTORY, Element MACROD.MAC
;  *3    18-AUG-1986 11:23:58 WORRALL "Complete HEX listing support for version 5.5 fieldtest"
;  *2    14-APR-1986 23:32:40 SYSTEM "Update 5.4 of MACRO-11"
;  *1    28-MAR-1986 02:40:21 SYSTEM "Load MACRO-11 sources from V5.3"
;  DEC/CMS REPLACEMENT HISTORY, Element MACROD.MAC
	.NLIST							;Edit Level 00
	.ENABL	LC,GBL
	.LIST
	.TITLE	MACROD - Macro definition processing
	.SBTTL	MACROD - Macro definition processing
	.SBTTL
	.SBTTL		.IDENT	/V05.05/
	.SBTTL
	.IDENT	/V05.05/
;****************************************************************************
;*									    *
;*                   COPYRIGHT (c)  1983, 1986                              *
;*          BY DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.                *
;*                   ALL RIGHTS RESERVED.                                   *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED  *
;*  ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE  *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER  *
;*  COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY  *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY  *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE  *
;*  AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT  *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS  *
;*  SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.		    *
;*									    *
;****************************************************************************


;++
;  Facility:	MACRO-11  The PDP-11 macro assembler for RT/RSX/VMS and RSTS/E
;
;    Author:	Too many people to list here
;
;   Created:	From the dust and dirt
;
;  Abstract:	MACROD - Macro definition processing
;
;     Externals	 Description
;     ---------	 -----------
;
;      Edit	Who	Date		Description of modification
;      ----	---	----		---------------------------
;--


	PURE	PUREI,I

;+
; MACRO, MACROF
; HANDLE MACRO DEFINITIONS
;-

MACR::	GSARG			;GET THE MACRO NAME
	BEQ	OPCERR		;  ERROR IF NULL
MACROF::TSTARG			;++017 BYPASS OPTIONAL COMMA
	MOV	SYMBOL,MACNAM
	MOV	SYMBOL+2,MACNAM+2
	OSRCH			;SEARCH THE TABLE
	BEQ	101$		;BRANCH IF NOT CURRENTLY DEFINED
	BIT	#M$FLAG,MODE	;TEST IF FORMER MACRO
	BNE	101$		;BRANCH IF YES

	CLR	FLAGS		;***TEMPORARY***
	CLR	VALUE		;***TEMPORARY*** DELETE OPCODE REF

101$:	MOV	VALUE,R1	;GET VIRT LOCN OF BASIC TEXT BLOCK
	BEQ	1$		;BRANCH IF NULL
	CALL	DECMAC		;DECREMENT THE REFERENCE
1$:	CALL	GETBLK		;GET A STORAGE BLOCK
	MOV	R0,MACWRT	;SAVE REAL ADDR OF BASIC TEXT ...
				; BLOCK AS BLOCK BEING WRITTEN
	MOV	R1,MACWTV	;AND SAVE ITS VIRTUAL LOCN
	MOV	R1,VALUE	;SET VIRTUAL POINTER TO BLOCK IN SYMBOL
	MOV	#M$FLAG,MODE	;SET MACRO MODE BIT IN OPCODE
	CALL	VINSRT		;INSERT DEFINITION IN HASH TABLE
	MOV	#MACLST,ROLNDX	;SET FOR CREF REFERENCES
	CRFDEF
	CALL	PROMA		;PROCESS DUMMY ARGS
;
; STORE INFORMATION INTO THE MACRO BASIC TEXT BLOCK
;
	CLRB	(R2)+		;++013 CLEAR LEVEL COUNT
	MOVB	ARGCNT,(R2)+	;++013 SET NUMBER OF ARGUMENTS
	MOV	MACGSB,(R2)+	;  AND GENERATED SYMBOL BITS

;
; WRITE DUMMY ARGUMENTS AND DEFAULT ARGUMENTS INTO VIRTUAL MEMORY
;

	SUB	MACWRT,R2	;++025 CONVERT TO OFFSET IN BLOCK
	CLR	$LSPNT		;++025 CLEAR LIST POINTER
10$:	NEXT	DMALST		;++025 GET NEXT ENTRY IN DUMMY ARGUMENT ROLL
	BEQ	20$		;++025 IF EQ END OF ROLL
	MOV	#SYMBOL,R3	;++025 GET ADDRESS OF DUMMY ARGUMENT NAME
	MOV	#6,R4		;++025 SET NUMBER OF CHARACTERS TO WRITE
	CALL	40$		;++025 WRITE DUMMY ARGUMENT INTO MACRO TREE
	MOV	(R3),R3		;++025 GET ADDRESS OF DEFAULT ARGUMENT STRING
	MOVB	SECTOR,R4	;++025 GET LENGTH OF STRING IN BYTES
	CALL	40$		;++025 WRITE DEFAULT ARGUMENT INTO MACRO TREE
	BR	10$		;++025
20$:	SETCHR			;++025 RESTORE R5
	ADD	MACWRT,R2	;++025 CONVERT BACK TO REAL ADDRESS
	BIS	#LC.MD,LCFLAG
	CALL	ENDLIN		;POLISH OFF LINE
	CALL	PROMT		;PROCESS THE TEXT
	GETSYM
	BEQ	25$		;++029 IF EQ NAME NOT SEEN
	CMP	R0,MACNAM
	BNE	2$
	CMP	SYMBOL+2,MACNAM+2
	BEQ	3$
2$:	ERROR	A
25$:	MOV	MACNAM,SYMBOL	;++029 COPY MACRO NAME TO SYMBOL AREA
	MOV	MACNAM+2,SYMBOL+2  ;++029
3$:	MOV	#MT.MAC,R5	;++021 PUT '.MACRO' TERMINATOR CHAR IN R5
	CALL	WCIMT		;SET END MARKER
	MOV	MACWTV,R1	;++021 GET VIRT LOCN OF THIS TEXT BLOCK
	UNLPG			;++021 UNLOCK PAGE CONTAINING IT
	SETCHR
	RETURN			;ALL SET, EXIT STMNT ROUTINE

;
; WRITE STRING INTO MACRO TREE
;

40$:	DEC	R4		;++025 ANY MORE CHARACTERS TO WRITE?
	BLT	RTN		;++029 IF LT NO
	MOVB	(R3)+,R5	;++025 GET NEXT CHARACTER
	CALL	WCIMT		;++025 WRITE CHARACTER IN MACRO TREE
	BR	40$		;++025

OPCERR:	ERROR	O		;++017 DECLARE OPCODE ERROR
RTN:	RETURN


;+
; MDELE	Handle macro deletion
;-

MDELE::	GSARG			;Get another macro name
	BEQ	RTN		;Oh, none left
	OSRCH			;Look for it in the opcode/macro table
	BEQ	10$		;Not found, issue error
	BIT	#M$FLAG,MODE	;Is it a macro?
	BEQ	20$		;No, an opcode, error
	MOV	VALUE,R1	;Get text pointer
	BEQ	MDELE		;Already deleted before, ignore it
	CALL	DECMAC		;Mark for deletion
	CLR	VALUE		;Zero pointer to indicate deleted macro
	CALL	VINSRT		;Update the symbol table
	MOV	#MACLST,ROLNDX	;Set roll pointer for cref references
	CRFREF
	BR	MDELE		;Try for another one

10$:	ERROR	U		;Undefined macro being deleted
	BR	MDELE		;Keep on going

20$:	ERROR	O		;Can't MDELETE an opcode
	BR	MDELE		;Keep on going.


	.END
