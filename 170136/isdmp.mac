;  DEC/CMS REPLACEMENT HISTORY, Element ISDMP.MAC
;  *3    18-AUG-1986 11:23:13 WORRALL "Complete HEX listing support for version 5.5 fieldtest"
;  *2    14-APR-1986 23:27:40 SYSTEM "Update 5.4 of MACRO-11"
;  *1    28-MAR-1986 02:39:16 SYSTEM "Load MACRO-11 sources from V5.3"
;  DEC/CMS REPLACEMENT HISTORY, Element ISDMP.MAC
	.NLIST							;Edit Level 00
	.ENABL	LC,GBL
	.LIST
	.TITLE	ISDMP - ISD Record dumping routines
	.SBTTL	ISDMP - ISD Record dumping routines
	.SBTTL
	.SBTTL		.IDENT	/V05.05/
	.SBTTL
	.IDENT	/V05.05/
;****************************************************************************
;*									    *
;*                   COPYRIGHT (c)  1983, 1986                              *
;*          BY DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.                *
;*                   ALL RIGHTS RESERVED.                                   *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED  *
;*  ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE  *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER  *
;*  COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY  *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY  *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE  *
;*  AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT  *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS  *
;*  SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.		    *
;*									    *
;****************************************************************************


;++
;  Facility:	MACRO-11  The PDP-11 macro assembler for RT/RSX/VMS and RSTS/E
;
;    Author:	Too many people to list here
;
;   Created:	From the dust and dirt
;
;  Abstract:	ISDMP - ISD Record dumping routines
;
;     Externals	 Description
;     ---------	 -----------
;
;      Edit	Who	Date		Description of modification
;      ----	---	----		---------------------------
;--


	PURE	PUREI,I

.IF	NDF,XISD

;+
; ISD Record code defines for debug-16/Micro-power Pascal
;-

	IS.REL=	2		;RELOCATABLE RECORD TYPE
	IS.MAC=	128.		;MACRO-11 LITERAL RECORD TYPE

	IT.NAM=	1		;MODULE NAME ITEM
	IT.GLB=	2		;GLOBAL SYMBOL ITEM
	IT.SEC=	3		;PSECT ITEM
	IT.LIN=	4		;LINE NUMBER ITEM (UNUSED BY MACRO-11)
	IT.INT=	5		;INTERNAL (NON GLOBAL) RELOCATABLE SYMBOL

	LI.EOM=	5		;MACRO-11 LITERAL END OF MODULE ITEM
	LI.INT=	7		;MACRO-11 LITERAL INTERNAL ABSOLUTE SYMBOL

;+
; OUTISD
; OUTPUT ISD RECORDS FOR DEBUG-16
; THIS ROUTINE FIRST OUTPUTS A MODULE NAME ITEM
; THEN IT WRITES A PSECT ITEM FOLLOWED BY ALL SYMBOLS BOUND TO THAT
; SECTION. THE ISD RECORD TYPE IS SWITCHED FROM RELOCATABLE
; TO LITERAL AS APPROPRIATE FOR THE SYMBOL BEING PROCESSED.
;-

OUTISD::
	CALL	ISDDMP		;ENSURE FRESH ISD RECORD
	MOV	BUFTBL+RELCHN,R0 ;SET RECORD TYPE TO ISD
	MOV	#BLKT05,(R0)+
	MOV	R0,ISDMOD	;SAVE POINTER TO MODE WORD OF ISD RECORD
	MOV	#IS.REL,(R0)+	;START WITH RELOCATABLE TYPE ITEMS

	MOV	#ISDITM,R2	;INITIALIZE POINTER TO ITEM BUFFER
	MOV	#IT.NAM,(R2)+	;SET ITEM TO MODULE NAME
	MOV	#128.,(R2)+	;STORE MACRO-11 TYPE CODE
	MOV	PRGTTL,SYMBOL	;LOAD SYMBOL SCRATCHPAD WITH RAD50 MODULE NAME
	MOV	PRGTTL+2,SYMBOL+2
	CALL	ISDUNP		;UNPACK IT AS COUNTED ASCII STRING AND DUMP IT

	CLR	-(SP)		;NOW INITIALIZE FOR PSECT SCAN
	MOV	#ISDOUT,DOSYM	;SET ENTRY POINT FOR ISD SCAN PROCESSING

ISDLUP:	MOV	(SP)+,$LSPNT	;RESET PSECT LIST POINTER
	NEXT	SECLST		;GET THE NEXT PSECT
	BEQ	EOISD		;BRANCH IF NONE LEFT
	MOV	$LSPNT,-(SP)	;HAVE ONE, SAVE PSECT LIST ADDR ON STACK
	MOVB	SECTOR,THISEC	;PRESERVE PSECT NUMBER
	MOV	SYMBOL,PNAME	;COPY PSECT NAME FROM SYMBOL SCRATCHPAD
	MOV	SYMBOL+2,PNAME+2 ;
	CALL	SETREL		;BE SURE TYPE IS REL FOR PSECTS, SET R2
	MOV	#IT.SEC,(R2)+	;SET PSECT ITEM TYPE CODE
	MOV	SYMBOL,(R2)+	;MOVE IN PSECT NAME CODED AS RAD50
	MOV	SYMBOL+2,(R2)+	; 2 WORDS
	.REPT	5
	CLR	(R2)+		;CLEAR UNUSED FIELDS
	.ENDR
	CALL	ISDUNP		;FINISH PSECT ITEM OFF

	CALL	SCANSY		;SCAN THE HASH TABLE FOR MATCHING SYMBOLS
	BR	ISDLUP		;REPEAT FOR NEXT PSECT

;+
; ISDOUT
; COROUTINE CALLED BY SCANSY TO PROCESS A SYMBOL
; ENTER WITH SYMBOL SCRATCHPAD SETUP
;-

ISDOUT::CMPB	SECTOR,THISEC	;SEE IF THIS SYMBOL IS IN THE CURRENT PSECT
	BNE	20$		;TRY AGAIN IF NOT
	BIT	#DEFFLG,MODE	;NOW TEST IF DEFINED
	BEQ	20$		;BRANCH IF NO, DO NOT OUTPUT ISD FOR UNDEFINED
	BIT	#GLBFLG,MODE	;TEST IF GLOBAL
	BEQ	25$		;BRANCH IF NOT, HANDLE INTERNAL SYMBOL
	CALL	SETREL		;SET ISD RECORD MODE TO RELOCATABLE
	MOV	#2,(R2)+	;SET GLOBAL SYMBOL ITEM
	MOV	SYMBOL,(R2)+	;FILL IN RAD50 NAME FOR TKB
	MOV	SYMBOL+2,(R2)+
	MOV	VALUE,(R2)+	;NEXT FILL IN OUR VALUE
	CLR	(R2)+		;ZERO OUT NEXT 2 FIELDS
	CLR	(R2)+		; ASSUME RELOCATABLE SYMBOL
	BIT	#RELFLG,MODE	;NOW TEST IF RELOCATABLE OR ABSOLUTE
	BNE	40$		;BRANCH IF RELOCATABLE
	INC	-2(R2)		;ELSE CHANGE BIT 0 TO FLAG ABSOLUTE
	BR	40$		;DUMP SYMBOL AND CONTINUE

25$:	BIT	#RELFLG,MODE	;TEST IF RELOCATABLE INTERNAL
	BNE	30$		;BRANCH IF SO
	CALL	SETLIT		;CHANGE MODE TO LITERAL ITEMS NOW
	MOV	#LI.INT,(R2)+	;SET ISD LITERAL TYPE CODE
	MOV	VALUE,(R2)+	;SET VALUE OF OUR ABSOLUTE SYMBOL
	BR	40$		;DUMP SYMBOL AND CONTINUE

30$:	CALL	SETREL		;CHANGE MODE TO RELOCATABLE
	MOV	#IT.INT,(R2)+	;SET INTERNAL RELOCATABLE TYPE
	MOV	#14.*400+14.,(R2)+ ;SET INVARIANT OFFSETS
	MOV	#1,(R2)+
	MOV	PNAME,(R2)+	;NOW MOVE PSECT NAME SYMBOL IS BOUND TO
	MOV	PNAME+2,(R2)+
;	CLR	(R2)+		;MAKE ROOM FOR TKB
	MOV	VALUE,(R2)+	;STORE OFFSET FROM PSECT FOR DEBUGER...	;JR
	CLR	(R2)+		;ZERO OUT NEXT FIELD
40$:	CALL	ISDUNP		;NOW UNPACK AND DUMP THIS ITEM
20$:	RETURN			;REITERATE

EOISD:	CALL	SETLIT		;END OF ISD RECORDS, SET TO LITERAL
	MOV	#2*400+LI.EOM,(R2)+ ;SET END OF MODULE TYPE CODE AND LENGTH
	CALL	ISDWRT		;COPY ITEM INTO RLD BUFFER
	CALL	OBJDMP		;DUMP THE RLD BUFFER
	RETURN			;ALL SET, RETURN

;+
; SETREL
; INTERNAL ROUTINES TO SET ISD OUTPUT MODE TO RELOCABLE OR LITERAL
; AND SET R2 POINTING AT THE ITEM BUFFER
;-
	.ENABL	LSB

SETREL:	MOV	#IS.REL,-(SP)	;PUSH REL INDICATOR
	BR	10$		;DO COMMON STUFF

SETLIT:	MOV	#IS.MAC.,-(SP)	;PUSH MACRO'S PRIVATE LITERAL INDICATOR
10$:	CMP	(SP),@ISDMOD	;IS NEW MODE SAME AS CURRENT
	BEQ	20$		;BRANCH IF YES, JUST SET BUF POINTER
	CALL	ISDDMP		;ELSE DUMP CURRENT RECORD AT ONCE
20$:	MOV	(SP)+,@ISDMOD	;NOW SET THE NEW RECORD TYPE
	MOV	#ISDITM,R2	;LEAVE WITH R2 POINTING AT ITEM BUFFER
	RETURN

	.DSABL	LSB

;+
; ISDUNP
; COMMON END OF ITEM PROCESSING TO UNPACK RAD50 CODED NAME INTO BUFFER
; AS A COUNTED ASCII STRING AND FALL THROUGH TO WRITE THE ITEM OUT
;-

ISDUNP:	MOV	R2,R4		;COPY ITEM BUFFER POINTER
	MOVB	#6,(R2)+	;ASSUME SYMBOL IS MAX SIZE (6 CHARS)
	MOV	R3,-(SP)	;PRESERVE R3
	CALL	R50UNP		;UNPACK SYMBOL FROM SCRATCHPAD INTO ISD BUF
	MOV	(SP)+,R3	;RESTORE R3
1$:	CMPB	#40,-(R2)	;NOW TRIM TRAILING BLANKS
	BNE	2$		;BRANCH IF SIGNIFICANT CHAR
	DECB	(R4)		;ELSE DOWN THE EFFECTIVE SIZE
	BR	1$		;REITERATE
2$:	TSTB	(R2)+		;CORRECT THE BUFFER POINTER
	BIT	#1,R2		;ENSURE EVEN BOUNDRY AT END
	BEQ	ISDWRT		;BRANCH IF HAVE EVEN BOUNDRY
	CLRB	(R2)+		;PAD WITH NULL IF WASN'T
				;FALL IN TO WRITE ITEM AND RETURN
;+
; ISDWRT
; COPY CURRENT ISD ITEM INTO RLD BUFFER, WRITING PREV CONTENTS OF
; BUFFER IF BUFFER WOULD OVERFLOW
;-

ISDWRT:	MOV	#ISDITM,R1	;POINT AT ISD ITEM BUFFER
	MOV	R2,R0
	SUB	R1,R0		;CALCULATE SIZE OF ITEM
	TSTB	(R1)+		;BUMP PAST ITEM TYPE CODE
	MOVB	R0,(R1)+	;STORE SIZE OF ITEM IN HIGH BYTE
	MOV	R0,-(SP)	;SAVE OUR ITEM LENGTH
	CALL	TSTISD		;TEST IF ROOM FOR ITEM IN CURRENT RECORD
	MOV	(SP)+,R0	;RESTORE ITEM LENGTH
	MOV	#ISDITM,R1
5$:	MOVB	(R1)+,(R2)+	;NOW MOVE ITEM INTO CURRENT RECORD
	DEC	R0
	BNE	5$
	RETURN

;+
; TSTISD
; ROUTINE TO TEST IF ROOM IN CURRENT RLD RECORD FOR NEW ISD ITEM
; ITEM LENGTH IS PASSED IN R0
;-

TSTISD::MOV	R0,-(SP)	;SAVE PASSED ITEM SIZE
	ADD	RLDPNT,R0	;POINT PAST END OF ITEM
	SUB	BUFTBL+RELCHN,R0 ;CALC SIZE IF RECORD WITH NEW ITEM
	CMP	R0,#RLDLEN	;TEST IF WILL FIT
	BLOS	1$		;BRANCH IF HAVE ROOM
	CALL	ISDDMP		;ELSE DUMP CURRENT RECORD
1$:	MOV	RLDPNT,R2	;SET R2 TO RLD RECORD
	ADD	(SP)+,RLDPNT	;UPDATE RLD POINTER TO NEXT FREE BYTE
	RETURN

;+
; ISDDMP
; DUMP RLD RECORD CONTAINING ISD INFORMATION AND REINITIALIZE BUFFER
;-

ISDDMP:	CALL	OBJDMP		;CALL COMMON OBJ FILE RECORD DUMPER
	ADD	#2,RLDPNT	;MAKE ROOM FOR ISD RECORD TYPE CODE
	RETURN

;+
; LOCAL DATA USED BY ISD RECORD ROUTINES
;-


	.PSECT	MIXED,RW,D

PNAME::	.BLKW	2		;SAVED PSECT NAME WHILE SCANNING SYMBOLS
ISDMOD::.BLKW			;POINTS TO ISD RECORD TYPE WORD IN RLD BUFFER
ISDITM::.BLKB	RLDLEN-4	;BUFFER FOR CREATING CURRENT ISD RECORD ITEM

.ENDC;	NDF,XISD


	.END
