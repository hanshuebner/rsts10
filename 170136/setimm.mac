;  DEC/CMS REPLACEMENT HISTORY, Element SETIMM.MAC
;  *3    18-AUG-1986 11:27:34 WORRALL "Complete HEX listing support for version 5.5 fieldtest"
;  *2    14-APR-1986 23:56:10 SYSTEM "Update 5.4 of MACRO-11"
;  *1    28-MAR-1986 02:46:01 SYSTEM "Load MACRO-11 sources from V5.3"
;  DEC/CMS REPLACEMENT HISTORY, Element SETIMM.MAC
	.NLIST							;Edit Level 01
	.ENABL	LC,GBL
	.LIST
	.TITLE	SETIMM - Set type of reference for code generation
	.SBTTL	SETIMM - Set type of reference for code generation
	.SBTTL
	.SBTTL		.IDENT	/V05.05/
	.SBTTL
	.IDENT	/V05.05/
;****************************************************************************
;*									    *
;*                   COPYRIGHT (c)  1983, 1986                              *
;*          BY DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.                *
;*                   ALL RIGHTS RESERVED.                                   *
;* 									    *
;*  THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED  *
;*  ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE  *
;*  INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER  *
;*  COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY  *
;*  OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY  *
;*  TRANSFERRED.							    *
;* 									    *
;*  THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE  *
;*  AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT  *
;*  CORPORATION.							    *
;* 									    *
;*  DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR  RELIABILITY  OF  ITS  *
;*  SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.		    *
;*									    *
;****************************************************************************


;++
;  Facility:	MACRO-11  The PDP-11 macro assembler for RT/RSX/VMS and RSTS/E
;
;    Author:	Too many people to list here
;
;   Created:	From the dust and dirt
;
;  Abstract:	SETIMM - Set type of reference for code generation
;
;     Externals	 Description
;     ---------	 -----------
;
;      Edit	Who	Date		Description of modification
;      ----	---	----		---------------------------
;	001	Jrw	31-May-83	Set RELFLG if internal displaced
;					relocation for listing (ENDLN).
;--


	PURE	PUREI,I

;+
; **--SETIMM--CONVERT IMMEDIATE EXPRESSION TO CODE ROLL ENTRY
; **--SETDSP--CONVERT DISPLACED EXPRESSION TO CODE ROLL ENTRY
;-


SETIMM::			;SET IMMEDIATE MODE
	SAVREG			;SAVE REGISTERS
	SETXPR			;  AND SET "EXPRESSION" TYPE
	.IF NDF	XREL
	MOV	#IMMMOD,R1	;SET TABLE INDEX
	TST	ENDFLG		;SPECIAL FOR .END?
	BNE	SETDS1		;  YES
	BITB	#CPXFLG,(R3)	;++001 COMPLEX RELOCATION EXPRESSION?
	BEQ	1$		;++001 NO PROCEED NORMALLY
	CLR	(R4)		;++001 VALUE OF 0 MEANS IMMEDIATE MODE
	BR	GETCPX		;++001 GET COMPLEX RLD # & CONTINUE
1$:				;++001
	BITB	#GLBFLG,(R3)	;EXTERNAL?
	BNE	SETDS3		;IF NE YES-USE COMMON CODE
	CMPB	(R1)+,(R1)+	;MOVE INDEX
	.IF DF	RT11
	TSTB	(R2)		;TEST IF OTHER THAN . ABS. PSECT UNDER RT-11
	.IFF
	BITB	#RELFLG,(R3)	;TEST IF RELOCATABLE UNDER RSX-11
	.ENDC	;RT11
	BEQ	SETDSX		;BRANCH IF NO, ALL SET
	TSTB	(R1)+
	CMPB	(R2),CLCSEC	;YES, CURRENT SECTOR?
	BNE	SETDS1		;  NO
	.IFTF
	BR	SETDSX		;YES

SETDSP::			;++006 SET DISPLACED MODE
	SAVREG			;SAVE REGISTERS
	SETXPR			;  AND SET "EXPRESSION" TYPE
	.IFT
	MOV	#DSPMOD,R1	;SET INDEX
	BITB	#CPXFLG,(R3)	;++001 COMPLEX RELOCATION EXPRESSION?
	BEQ	SETDS0		;++001 NO, PROCEED NORMALLY
	MOV	#1,(R4)		;++001 VALUE OF 1 MEANS DISPLACED MODE
GETCPX:	MOV	#CPXRLD,R1	;++001 POINT R1 TO COMPLEX RLD #
	BR	SETDSX		;++001 PROCESS THRU COMMON CODE
SETDS0:				;++001
	BITB	#GLBFLG,(R3)	;EXTERNAL?
	BNE	SETDS3		;  YES, TEST FOR ADDITIVE
	CMPB	(R1)+,(R1)+
	CMPB	(R2),CLCSEC	;CURRENT SECTOR?
	BEQ	SETDS2		;  YES
	TSTB	(R1)+
	TSTB	(R2)		;LOOKING AT ABSOLUTE?
;;;	BEQ	SETDSX		;  YES
	BNE	SETDS1		;Branch if not internal displaced relocation
	BISB	#RELFLG,@R3	;Set relocatable for listing "0000nn'" (ENDLN)
	BR	SETDSX		;Handle it as RLDT03

SETDS1:	TSTB	(R1)+
	CLR	R0		;CLEAR HIGH ORDER
	BISB	(R2),R0		;SET SECTOR
	CMP	R0,#NU$SEC	;++021 COMP W/ PSECT NAME TABLE COUNT
	BGE	5$		;++021 IF GE NOT IN TABLE
	ASL	R0		;++021 ELSE, CONVERT NUMBER TO A
	ASL	R0		;++021 DOUBLE-WORD OFFSET
	ADD	#$NAMSC,R0	;++029 ADD START OF TABLE ADDR
	BR	15$		;++021 BRANCH INTO COMMON CODE
5$:	MOV	R2,-(SP)	;++021 SAVE R2 AND R1
	MOV	R1,-(SP)	;++021
	MOV	R0,-(SP)	;++021 STORE THE PSECT NUMBER
	MOV	#BASSEC,R0	;++021 GET ADDR OF LIST HEAD
10$:	MOV	(R0),R1		;++021 GET VIRT LOCN OF NEXT ENTRY
	CVRL			;++021 GET ITS REAL ADDRESS
	DEC	(SP)		;++021 DECREMENT SECTION NUMBER
	BGE	10$		;++021 IF GE IT'S NOT ONE WE WANT
	CMP	(R0)+,(SP)+	;++021 SKIP PAST LINK AND CLEAN STACK
	MOV	(SP)+,R1	;++021 RESTORE R1 AND R2
	MOV	(SP)+,R2	;++021
15$:				;++021
	MOV	(R0)+,SYMBOL	;XFER SECTOR NAME TO SYMBOL
	MOV	(R0)+,SYMBOL+2
	BR	SETDSX
SETDS2:	CLR	MODE
	.IFTF
	MOVB	INSIZE,R0	;++014 GET INSTR WORD COUNT IN R0
	INC	R0
	ASL	R0		;MAKE IT 4 OR 6
	ADD	CLCLOC,R0
	SUB	R0,(R4)
	.IFT
	BR	SETDSX

SETDS3:	TST	(R4)		;ANY OFFSET CONSTANT?
	BEQ	SETDSX		;IF EQ NO
	TSTB	(R1)+		;YES, ADVANCE INDEX
SETDSX:
	.IFT
	.IF NDF	XEDPIC
	BIT	#ED.PIC,EDMASK
	BNE	12$
	TSTB	(R1)
	BEQ	12$
	CMPB	(R2),CLCSEC
	BEQ	10$
	CMP	R1,#DSPMOD
	BHIS	11$
	BR	12$
10$:	CMP	R1,#DSPMOD
	BHIS	12$
11$:	ERROR	R
12$:
	.ENDC
	MOVB	(R1),(R2)	;FILL IN TYPE
	.IFTF
	TST	BYTMOD		;IN BYTE MODE?
	BEQ	4$		;  NO
	TSTB	(R4)+		;MOVE TO HIGH BYTE OF "VALUE"
	MOVB	(R4),R0		;ANY HIGH ORDER BITES?
	BEQ	3$		;++001 NO, O.K. TO BRANCH
	INC	R0		;YES, ALL ONES?
	BEQ	3$		;++001 YES, CONTINUE
	ABSERR			;++001 NO, FLAG ERROR
3$:	CLRB	(R4)
	BISB	#200,(R2)	;FLAG AS BYTE
4$:	RETURN
	.IFT

	PURE	TXTBYT,D
IMMMOD:	.BYTE	RLDT02,	RLDT05,	RLDT00,	RLDT01,	RLDT15,	0
DSPMOD:	.BYTE	RLDT04,RLDT06,RLDT00,RLDT03,RLDT16 ;+001
CPXRLD:	.BYTE	RLDT17		;++001
	.ENDC


	.END
