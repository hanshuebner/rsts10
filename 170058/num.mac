.INCLUDE	%CMN:COMMON%
TITLE	NUM,<NUMERIC CONVERSION ROUTINES>,0A,10-MAY-91,PRL

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	DEFINE LOCAL MACROS

; DEFINE LOCAL MACROS

	.MCALL	PUSH,POP

.SBTTL	DEFINE PSECT NAME FOR ROUTINES

; DEFINE PSECT NAME FOR ROUTINES

	.PSECT	PBSLIB,RO,CON

.SBTTL	BIN2D	- BINARY TO DECIMAL CONVERSION

;+
;BIN2D - BINARY TO DECIMAL CONVERSION
;
; INPUTS:
;	R3 =   NUMBER TO CONVERT
;	R4 =   AMOUNT OF SPACE LEFT IN BUFFER
;	R5 --> CURRENT BUFFER LOCATION
;
;	CALL	BIN2D
;
; OUTPUTS:
;	ASCII OF NUMBER IN BUFFER, R4,R5 UPDATED 
;	(NOTE: NO CHECK IF WILL FIT)
;-

BIN2D::	PUSH	<R0,R1,R2,R3>	;SAVE THE WORLD
	TST	R3		;IS THIS VALUE POS?
	BPL	10$		;NOPE NO '-' NEEDED
	NEG	R3		;CHANGE THE SIGN
	MOVB	#'-,(R5)+	;OUTPUT A '-' SIGN
	DEC	R4		;UPDATE COUNT
10$:	CLR	R0		;INIT FLAG ON CHAR OUTPUT
	MOV	#TENTBL,R1	;GET ADDRESS OF DIV TABLE
20$:	CLR	R2		;ZERO MSB
	DIV	(R1)+,R2	;GET NEXT DIGIT
	BNE	30$		;A CHAR AT LAST
	TST	R0		;ANY OUT YET
	BEQ	40$		;NOPE NO LEADING ZEROS
30$:	INC	R0		;FLAG IN NUMBER
	ADD	#'0,R2		;MAKE IT ASCII
	MOVB	R2,(R5)+	;PUT IT IN BUFFER
	DEC	R4		;UPDATE BUFFER
40$:	TST	(R1)		;AT END?
	BNE	20$		;NOPE
	MOV	R0,R2		;ANY DATA OUTPUT YET?
	BEQ	30$		;OUTPUT THE ZERO
	POP	<R3,R2,R1,R0>	;PUT THE WORLD BACK
	RETURN			;AND EXIT

;
; DEFINE DIGITS TABLE FOR BIN2D
;

TENTBL:	.WORD	10000.
	.WORD	 1000.
	.WORD	  100.
	.WORD	   10.
	.WORD	    1.
	.WORD	    0.

.SBTTL	BIN2BT - BINARY TO BIT CONVERSION

;+
; BIN2BT - BINARY TO BIT CONVERSION
;
; INPUTS:
;	R1 =   NUMBER IN THE RANGE 0-15
;		(BITS 15:4 MASKED OFF)
;
;	CALL	BIN2BT
;
; OUTPUTS:
;	R1 =	BIT SET CORRESPONDING TO VALUE (0-15)
;-

BIN2BT::PUSH	R0		;SAVE WORK REG
	MOV	#1,R0		;LOAD BIT 0
	BIC	#^C17,R1	;MASK OFF BITS 15:4
	BEQ	20$		;ALL DONE IF 0
10$:	ASL	R0		;SHIFT BIT LEFT
	SOB	R1,10$		;DO SHIFTS TILL 0 VALUE
20$:	MOV	R0,R1		;RETURN BIT VALUE
	POP	R0		;RESTORE WORK REG
	RETURN			;AND EXIT

.SBTTL	BT2BIN - BIT TO BINARY CONVERSION

;+
; BT2BIN -	BIT TO BINARY CONVERSION
;
; INPUTS:
;	R1 =   WORD CONTAINING SINGLE SET BIT
;
;	CALL	BT2BIN
;
; OUTPUTS:
;	R1 =	VALUE CORRESPONDING TO SET BIT (0-15)
;-

BT2BIN::PUSH	R0		;SAVE WORK REG
	CLR	R0		;INIT BINARY VALUE
10$:	ASR	R1		;SHIFT BIT RIGHT
	BEQ	20$		;EXIT IF BIT SHIFTED OUT
	INC	R0		;UP THE VALUE
	BR	10$		;AND DO AGAIN

20$:	MOV	R0,R1		;RETURN BINARY VALUE
	POP	R0		;RESTORE WORK REG
	RETURN			;AND EXIT

	.END
