.INCLUDE	%CMN:COMMON%
TITLE	MUTEXC,<MUTUALLY EXCLUSIVE COMPARISON>,0A,10-MAY-91,KCG

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	Edit history for MUTEXC

;+
;Edit	By   Date	Reason
;
;  000	KCG  26-Mar-84	Creation for Version 9.0
;  001	KCG  16-May-84	Fixed to not destructivly reference the
;			second mask.
;  002	PRL  22-May-84	Add .INCLUDE's
;
;-

.SBTTL	CALL IN NEEDED MACROS

.LIBRARY	%SYSTEM:PBSMAC%
	.MCALL	PUSH,POP,MOVSTR,SPLCMD,EVEN,MOVBYT,SAVREG

	SPLCMD

.SBTTL	MUTEXC	- TEST TO SEE IF ONE MASK IS A SUBSET OF ANOTHER

;+
;
; MUTEXC:
;
;	THE MASK POINTED TO BY R1 IS ANDED INTO THE MASK IN R2.  THIS ROUTINE 
;	WILL SUCCEED IF THE SECOND MASK IS EQUAL TO THE FIRST MASK AFTER THE 
;	AND OPERATION.
;
; INPUTS:
;
;		R1 -> FIRST MASK
;		R2 -> SECOND MASK
;		R3 =  MASK SIZE IN BYTES
;
; CALL:
;
;	JSR	PC,MUTEXC
;
; BACK:
;
;	THE SECOND MASK IS TRASHED.
;
;	C=0 ON SUCCESS, C=1 FAILURE
;
;	ALL REGS PRESERVED
;
;-

	.PSECT	PBSLIB,RO,CON

	.ENABL	LSB

MUTEXC::NOP
	SAVREG
	MOV	R2,R0				;GET COPY OF SECOND MASK PTR
	MOV	R3,R4				;GET COPY OF LENGTH
	EVEN	R4				;ROUND UP IF ODD
	SUB	R4,SP				;MAKE ROOM FOR IT ON STACK
	MOV	SP,R4				;GET A SECONDARY POINTER
	MOVSTR	R0,R4,R3			;MAKE A COPY OF THE MASK
	MOV	R4,R2				;R2 -> COPY OF MASK # 2
	MOV	R3,R0				;GET COPY OF LENGTH
	PUSH	<R1,R2>
10$:	MOVBYT	(R1)+,R4			;GET THE FIRST MASK BYTE
	COM	R4				;AND THE ONES COMPLEMENT
	BICB	R4,(R2)+			;AND LEAVE ONLY BITS WE WANT
	SOB	R0,10$				;  INTO THE SECOND MASK
	POP	<R2,R1>
	MOV	R3,R0				;GET COPY OF LENGTH AGAIN
20$:	CMPB	(R1)+,(R2)+			;ARE THEY THE SAME?
	BNE	30$				;NO, SO SAY SO
	SOB	R0,20$				;TEST ALL BYTES
30$:	MOV	R3,R4				;GET COPY OF LENGTH AGAIN
	EVEN	R4				;ROUND UP IF ODD AGAIN
	ADD	R4,SP				;RESET THE REAL SP VALUE
	TST	R0				;Did the masks match?
	BEQ	40$				;Yes, (C is cleared by TST)
	SEC					;No, failure
40$:	RETURN

	.DSABL	LSB

	.END
