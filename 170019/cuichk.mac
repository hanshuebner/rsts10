.INCLUDE	/CMN:COMMON.MAC/
.LIBRARY	/CUI:CUIMAC.MLB/
.INCLUDE	/CUI:CUIPFX.MAC/
TITLE	CUICHK,<CUI Error Checker>,0A,10-MAY-91,CEK/JFM/BTK

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR CUICHK
;+
;
;  001	CEK  01-JUN-82	Creation
;  002	CEK  17-Nov-82	Use modified message facility.
;  003	JFM  20-Apr-84	Use more modified message facility.
;
;		[RSTS/E V10.0]
;
;  004	BTK  22-Apr-90	Have U$CHKE print all registers instead of just R3
;-

	.PSECT	CUICHK,RO,REL,LCL,CON
	DEFORG	CUICHK
	.MCALL	$CUI,$FAP
	$CUI	MSG			;Include message facility.

.SBTTL	U$CHKE -- Check for unexpected error
;+
; U$CHKE -- Check for unexpected error
;
; INPUT:
;	First byte of FIRQB = 0 if no error, error code if error
;
; CALL	U$CHKE
;
; EFFECT:
;	If no error code in FIRQB, returns inline.  Otherwise,
;	Prints U.FAIL (??Program failure in <prog-name>).
;	(<prog-name> is the program name that SYSTAT or CTRL/T shows.)
;	Exits to job KBM.
;-

.ENABL	LSB

U$CHKE::TSTB	FIRQB		;Has an unexpected error occurred?
	IFZE			;If not then
	RETURN			;  Return.
	ENDIF			;Else
	MOV	R5,-(SP)	;Save the registers on the stack	;004
	MOV	R4,-(SP)	; *					;004
	MOV	R3,-(SP)	; *					;004
	MOV	R2,-(SP)	; *					;004
	MOV	R1,-(SP)	; *					;004
	MOV	R0,-(SP)	; *					;004
	MOV	SP,R1		;Save stack pointer			;004
	ADD	#7*2,R1		;Adjust to before U$CHKE was called	;004
	CLR	R2
	BISB	FIRQB,R2	;  Get message code.
	CALLX	CLRFQB		;  Clear FIRQB.
	MOVB	#UU.SYS,FIRQB+FQFUN;Function is UU.SYS (return job status).
	;CLRB	FIRQB+5		;  Subcode 0.
	;CLRB	FIRQB+4		;  Job number is 0 (ours).
	SYS	.UUO		;  Get our program name.
				;  (No error is possible.)
	CMESSAGE #U.FAIL <FIRQB+22,FIRQB+24>
				;  Print "??Program failure in <prog-name>"
	CMESSAGE R2		;  Print the message.
	$FAP <#10$,-6*2(R1),-5*2(R1),-4*2(R1),-3*2(R1),-2*2(R1),-1*2(R1),R1,(R1)> ;004
	MOV	R1,SP		;  restore Stack Pointer		;004
	 TMPORG	U$TEXT
10$:	  .ASCIC <"?R0=!OW R1=!OW R2=!OW R3=!OW R4=!OW R5=!OW SP=!OW PC=!OW"<CR><LF><CR><LF>> ;004
	 UNORG
	HALT			;  Get out of here in a very ugly way.

.DSABL	LSB
GLOBAL	<U.FAIL>
.END
