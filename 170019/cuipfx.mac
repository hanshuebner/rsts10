TITLE	CUIPFX,<CUI Prefix File>,0A,10-MAY-91,CEK/JFM

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

	.IIF	NDF	L$$IST,	.NLIST
	.IIF	NDF	L$$IST,	.DSABL	CRF

.SBTTL	EDIT HISTORY FOR CUIPFX
;+
;
;  001	CEK  25-MAY-82	Created from DCLPFX
;  002	CEK  23-Jul-82	Added SYS macro
;  003	CEK  25-Sep-82	Changed node structure
;  004	CEK  25-Sep-82	Eliminated N.TOKEN field.
;  005	CEK  25-Sep-82	Changed PSECT attributes
;  006	JFM  08-Mar-84	Added node words N.HIGH and N.LOW
;
;-

;+
; CUIPFX.MAC -- prefix file for Common User Interface modules
;-

	.MCALL	SYMMAC,.ASSERT,SAVREG
	.MCALL	IFMAC,.BSECT,CALB,CALBX,SUBR
	.MCALL	.ASCIC,$CUI
	.LIST	MEB
	.ENABL	LC

	IFMAC			;Define IF-ELSE-ENDIF macros.
	$CUI	COMMON		;Define CUI common.

; Constants.

YES	=:	-1
NO	=:	0

COMMA	=:	54
SPACE	=:	40
TAB	=:	11
CR	=:	15
LF	=:	12
SEMICOL	=:	73

.SBTTL	PSECTs
	.PSECT	IMPURE,RW,D,REL,GBL,CON;Impure data area.
	.PSECT	U$TEXT,RO,REL,LCL,CON;Core-resident text.

; Structures for CUITRE.
; Levels of parameter tree

	.DSECT
ROOT.LVL:.BLKB			;Root level.
PL.LVL:	.BLKB			;Parameter list level.
P.LVL:	.BLKB			;Parameter level.
PQ.LVL:	.BLKB			;Parameter qualifier level.
PQA.LVL:.BLKB			;Parameter qualifier argument level.
MAXLVL:				;Highest legal level.

; Levels of qualifier tree

	.DSECT
ROOT.LVL:.BLKB			;Root level.
CQ.LVL:	.BLKB			;Command qualifier level.
CQA.LVL:.BLKB			;Command qualifier argument level.
	.ASSUME	. LE MAXLVL	;(Qualifier tree is shorter than parameter 
				;tree.)

; NODE
	.DSECT
N.LSON:	.BLKW			;Pointer to left son.  0 if we're a leaf.
N.RBROTHER:.BLKW		;Pointer to right brother.  If we're the
				;rightmost brother, then low bit is set
				;and remaining bits point to node's parent.
N.TAG:	.BLKW			;Code for tag of this node.  0 if this 
				;node is untagged.
N.FLAG:	.BLKW			;Flag bits (see next .BSECT)
N.TXTPOS:.BLKW			;Position of text associated
				;with this node.  0 if no such text.
N.TXTLEN:.BLKW			;Length of text associated with this node.

; Remaining fields are optional.

N.LOW:				;Low value of 32-bit integer or 8,16-bit result
N.DATE:	.BLKW			;Date represented by this node, in RSTS 
				;format.
N.HIGH:				;High value of 32-bit result, 0 if 8 or 16-bit
N.TIME:	.BLKW			;Time represented by this node, in RSTS
				;format.
N.SIZ	=:	.		;Size of a node, in bytes.  

; Bits of N.FLAG word.

	.BSECT
NF.AFFIRM:.BLKB	.		;Does this node represent an affirmative
				;qualifier?  Bit is set if so.  Bit is
				;clear if negative qualifier or not
				;a qualifier at all.

; Bits of flag word 2 returned by .FSS
; //Should put these in $COMMON.MAC//

	.BSECT
F2NAM:	.BLKB	.		;There is a filename.
F2NAMS:	.BLKB	.		;The filename is a star ("*").
F2NAMQ:	.BLKB	.		;The filename contains at least one "?".
F2EXT:	.BLKB	.		;There is a filetype.
F2EXT1:	.BLKB	.		;There is a non-null filetype.
F2EXTS:	.BLKB	.		;The filetype is a star ("*").
F2EXTQ:	.BLKB	.		;The filetype contains at least one "?".
F2PPN:	.BLKB	.		;There is a PPN.
F2PRJW:	.BLKB	.		;The project number is wild (*).
F2PRGW:	.BLKB	.		;The programmer number is wild (*).
F2PRT:	.BLKB	.		;There is a protection code in <>.
F2UPRT:	.BLKB	.		;There is no protection code in the filespec,
				;the user assignable protection code was used.
F2DEV:	.BLKB	.		;There is a device name.
F2DEV1:	.BLKB	.		;There is a non-null device name.
F2DEVL:	.BLKB	.		;The device name is a logical name.
F2DEVI:	.BLKB	.		;The device name is currently invalid.

.SBTTL	SYS Macro
;+
; SYS Macro - for issuing system directives
; For example, SYS .READ
; This macro should be used for all system directives.
; It allows CUI to run under RT11 emulation.
; If the global symbol U$EMT is equated to the value EMT 377,
; then the special prefix EMT will be inserted before each EMT.
; Otherwise, the global symbol U$EMT should be equated to NOP,
; and a no-op instruction will be inserted before each EMT.
;-

.MACRO	SYS	EMT
	 .WORD	U$EMT
	.GLOBL	U$EMT
	 EMT
	.ENDM	SYS

	.PSECT
	.IIF	NDF	L$$IST,	.ENABL	CRF
	.IIF	NDF	L$$IST,	.LIST
