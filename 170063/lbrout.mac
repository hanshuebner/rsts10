	.TITLE	LBROUT
	.IDENT	/03/

;
; COPYRIGHT 1974, DIGITAL EQUIPMENT CORP., MAYNARD, MASS.  01754
; COPYRIGHT 1973, DIGITAL EQUIPMENT CORP., MAYNARD, MASS.  01754
;
;	DEC ASSUMES NO RESPONSIBLIITY FOR THE USE
;	OR RELIABILITY OF ITS SOFTWARE ON EQUIPMENT
;	WHICH IS NOT SUPPLIED BY DEC.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; VERSION 03
;
; WRITTEN BY:
;	GEORGE W. BERRY
;
; MODIFIED BY:
;	C.A. D'ELIA	07-JUL-74
;
;
 
;
; LOCAL ASSIGNMENTS
;
 
LF = 12				;LINE FEED CHARACTER CODE
 
;
; MACRO CALLS
;
 
	.MCALL	FDOFF$,PUT$
	FDOFF$	DEF$L
 
;+
;
; **-$OUT- INITIALIZE OUTPUT ROUTINE
; **-$OUT1- MESSAGE OUTPUT ROUTINE
;
; THIS ROUTINE CONVERTS AND OUTPUTS A FORMATTED TEXT LINE.
; FIRST CALL TO '$OUT', THEN CALLS TO '$OUT1'.  INITIALLY IT
; SETS UP "$LIPTR" TO POINT TO THE START OF THE OUTPUT BUFFER,
; AND "LIFDB" TO THE ADDRESS OF THE OUTPUT FDB.
;
; INPUTS:
;
;	FIRST CALL TO $OUT -- R0=FDB ADDRESS
;	CALLS TO $OUT1 -- R1, R2 SET UP FOR CALL TO $EDMSG
;
; OUTPUTS:
;
;	R0,R1,R2  ARE LOST
;
;-
 
 
	.PSECT	OUTBUF,D,GBL,OVR
 
;
; LOCAL DATA BASE:
;
LIFDB:	.BLKW	1		;POINTER TO OUTPUT FDB
$LIPTR::.BLKW	1		;LAST CHARACTER OUTPUT
LIBUF:	.BLKB	74.		;OUTPUT BUFFER
 

	.PSECT
 
	.ENABL	LSB
 
$OUT::	MOV	R0,LIFDB	;SET UP FDB POINTER
20$:	MOV	#LIBUF,$LIPTR	;SAVE BUFFER ADDRESS
10$:	RETURN			;
$OUT1::	MOV	$LIPTR,R0	;OUTPUT BUFFER ADDRESS
	BIT	#1,R2		;MUST FORCE R2 TO BE EVEN ...
	BEQ	15$		;... WHENEVER WE CALL '$EDMSG'
	MOV	PC,R2		;
15$:	CALL	$EDMSG		;FORMAT THE OUTPUT STRING
	MOV	R0,$LIPTR	;SAVE NEXT CHAR ADDR
	CMPB	#LF,-(R0)	;END OF LINE IN BUFFER?
	BNE	10$		;BRANCH IF NOT A FULL LINE
	SUB	#LIBUF-1,R0	;COMPUTE # OF CHARS TO OUTPUT
	MOV	R0,R1		;USE R1 FOR COUNT
 
 
	.IF DF	Q$$CMO
 
 
	TST	LIFDB		;DO WE HAVE A VALID FDB ADDRESS?
	BNE	30$		;SKIP IF TRUE
	MOV	#LIBUF,R0	;ELSE, PUT BUFFER ADDR IN R0
	CALL	$QIOMG		;SEND MESSAGE TO CMD OUTPUT (VIA QIO)
	BR	40$		;BRANCH INTO COMMON CODE
30$:
 
	.ENDC
 
 
	PUT$	LIFDB,#LIBUF,R1 ;OUTPUT THE STRING
40$:	BCC	20$
	MOV	R$NAME(R0),R2
	MOV	(PC)+,R1	;FATAL OUTPUT ERROR
	.BYTE	E$R02,S$V2
	JMP	$ERMSG		;FATAL -- ERROR EXIT

;
	.END
