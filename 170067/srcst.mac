	.TITLE	SRCST
	.IDENT	/00/

;
; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C.MONIA 30 DEC 74
;
; SEARCH BITMASK TABLE FOR STRING
;
;+
; **-$SRCST-SEARCH BITMASK TABLE FOR STRING DESCRIPTOR
;
; THIS SUBROUTINE IS CALLED TO SEARCH A BITMASK TABLE FOR
; A STRING TO BE GENERATED BASED ON SPECIFIED FLAG BITS SET
; OR CLEAR. THE TABLE TO BE SEARCHED HAS THE FOLLWING STR-
; UCTURE:
;
;	.WORD	100000!MASK	; BITS 14 - 0 =MASK
;	.BYTE	MTCHCD		; MATCH COND., 1=SET, 0=CLR
;	.BYTE	LGH		; LENGTH OF STRING IN BYTES
;	.WORD	ADDR		; ADDRESS OF STRING
;	.WORD	100000!MASK0	; NEXT ENTRY IN TABLE
;	.
;	.
;	.
;	.WORD	0		; END OF LIST
;
; THE TABLE IS SEARCHED FOR A MATCH DEFINED AS:
;
;	BIC	DATA,MASK=0  MATCH ON BITS SET
;
; OR:
;
;	BIC	-DATA,MASK=0  MATCH ON BITS CLEAR
;
; EACH ENTRY IN THE TABLE IS TESTED IN SEQUENCE. IF
; MORE THAN ONE MATCH IS POSSIBLE. THE STRING DESCRIPTOR
; CORRESPONDING TO THE LAST MATCHING ENTRY IS RETURNED.
;
; INPUTS:
;
;	R0=MASK
;	R1=ADDRESS OF TABLE
;
; OUTPUTS:
;
;	C-CLEAR: FOUND MATCH
;
;	R0=LENGTH OF STRING IN BYTES
;	R1=ADDRESS OF STRING
;
;	C-SET: NO MATCH
;
; R2 - R5 ARE PRESERVED
;
;-

$SRCST::			;
	MOV	R2,-(SP)	; SAVE R2
	MOV	R0,-(SP)	; COPY MASK
	CLR	R2		; ASSUME NO MATCH
10$:				;
	MOV	(R1),R0		; GET MASK
	BEQ	50$		; IF EQ END OF TABLE
	TSTB	S$FFLG(R1)	; MATCH ON BITS SET?
	BNE	20$		; IF NE YES
	COM	(SP)		; COMPLEMENT FLAGS
20$:				;
	BIC	#100000,R0	; CLEAR TABLE BIT
	BIC	(SP),R0		; CLEAR FLAG BITS
	BNE	30$		; IF NE NO MATCH
	MOV	R1,R2		; SAVE ADDRESS OF ENTRY
30$:				;
	TSTB	S$FFLG(R1)	; MATCH ON BITS SET?
	BNE	40$		; IF NE YES
	COM	(SP)		; RESTORE FLAGS
40$:				;
	ADD	#S$FLTH,R1	; POINT TO NEXT ENTRY
	BR	10$		; GO AGAIN
50$:				;
	SEC			; ASSUME NO MATCHING ENTRIES
	MOV	R2,R1		; COPY LAST MATCHING ENTRY
	BEQ	60$		; IF EQ NONE FOUND
	CLC			; SET SUCCESS
	MOVB	S$FLGH(R1),R0	; GET LENGTH OF STRING
	MOV	S$FSTR(R1),R1	; GET ADDRESS OF STRING
60$:				;
	INC	(SP)+		; CLEAN STACK
	MOV	(SP)+,R2	; RESTORE R2
	RETURN			;

	.END
