	.TITLE	CRFER
	.IDENT	/03/

;
; COPYRIGHT (C) 1977
; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
; IN DEC.
;
; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;         
;
; VERSION 03
;
; C. MONIA 03-JAN-75
;
; MODIFICATIONS:
;
;		CM001 -- 05-NOV-75
;
;			 ADD MACRO CREF
;
; MODIFICATIONS:
;
;	JAK001	24-AUG-77	ADD EXIT WITH STATUS
;	JAK002	30-NOV-77	FIX SEVERITY CHECK
;
;
;
; CREF ERROR OUTPUT ROUTINE
;
; MACRO LIBRARY CALLS
;

	.IF NDF	R$$11M
 
	.MCALL	PUT$S
 
	.IFF
 
	.MCALL	DIR$,QIO$,WTSE$S
 
	.ENDC
 

;
; LOCAL MACROS
;
; GENERATE ERROR MESSAGE FORMAT STRING
;
; ERM	NUM,TXT
;
; WHERE:
;
;	NUM=DECIMAL ERROR NUMBER
;	TXT=FORMAT STRING
;

	.MACRO	ERM	NUM,TXT
	.PSECT	$$ETXT,D,GBL
$$$TP0=.
	.ASCIZ	"TXT"
	.PSECT	$$EPTR,D,GBL
E$R'NUM==NUM'.
.=.-2
	.WORD	100000!E$R'NUM
	.WORD	$$$TP0
	.WORD	0
	.PSECT
	.ENDM

;
; EQUATED SYMBOLS
;

S$V0==0				; SEVERITY CODE 0 (NON-FATAL)
S$V1==1				; SEVERITY CODE 1 (FATAL FOR CREF)
S$V2==2				; SEVERITY CODE 2 (FATAL)

;
; LOCAL DATA
;
; MESSAGE TEXT PREFIX FORMAT STRINGS
;

ERFMT:	.WORD	DIAG		; SEVERITY 0 PREFIX
	.WORD	FATAL		; SEVERITY 1 PREFIX
	.WORD	FATAL		; SEVERITY 2 PREFIX
 
	.IF DF	R$$11M
 
;
; ERROR MESSAGE OUTPUT QIO DPB
;
 
MGDPB:	QIO$	IO.WVB,2,3,,MGSTS,,<$ERBF,,40>
 
;
; I/O STATUS DOUBLE WORD
;
 
MGSTS:	.BLKW	2		;
 
	.ENDC
 

;
; PREFIX FORMAT STRINGS
;


	.IF	NDF,RSTS	;++RSTS V7.1
PRFIX:	.ASCIZ	/CRF -- */	;
DIAG:	.ASCIZ	/DIAG/		;
FATAL:	.ASCIZ	/FATAL/		;

	.IFF			;++RSTS V7.1
PRFIX:	.ASCIZ	/%N/		;++RSTS V7.1
DIAG:	.ASCIZ	<245>/CRF -- *DIAG/		;++RSTS V7.1
FATAL:	.ASCIZ	<077>/CRF -- *FATAL/		;++RSTS V7.1
	.ENDC			;++RSTS V7.1


SUFFIX:	.ASCIZ	/*- < %2R > -/

	.EVEN

;
; START OF TEXT POINTERS
;

	.PSECT	$$EPTR,D,GBL

EPTR:	.WORD	0		; DUMMY ZERO AT END OF LIST

	.PSECT

;
; ERROR MESSAGES
;

	ERM	0,^\ILLEGAL ERROR-SEVERITY CODE %P %P %P %P %2N\
	ERM	1,^\FILE %X NOT FOUND %2N\
	ERM	2,^\OPEN FAILURE ON FILE %X%2N\
	ERM	3,^\I/O ERROR ON FILE %X%2N\
	ERM	4,^\NO DYNAMIC STORAGE AVAILABLE%2N\
	ERM	5,^\INPUT FROM UNKNOWN TASK%2N\
	ERM	6,^\INVALID OUTPUT FORMAT SPECIFIED%2N\
	ERM	7,^\CREF INPUT FILE %X HAS ILLEGAL FORMAT%2N\
	ERM	8,^\FAILED TO DELETE FILE %X%2N\
	ERM	73,^\WORK FILE I/O ERROR%2N\
	ERM	75,^\UNABLE TO OPEN WORK FILE%2N\
	ERM	76,^\NO VIRTUAL MEMORY STORAGE AVALABLE%2N\
	ERM	85,^\SYMBOL TABLE SEARCH STACK OVERFLOW%2N\

;+
; **-$ERMSG-CREF ERROR MESSAGE OUTPUT ROUTINE
; **-$ERTRP-TRAP ENTRY POINT FOR ERROR MESSAGE HANDLER
;
; THIS ROUTINE IS ENTERED THROUGH ONE OF THE ABOVE ENTRY
; POINTS TO OUTPUT ERROR MESSAGES. THE SEVERITY IS USED TO
; SELECT A PREFIX THAT IS TO BE OUTPUT ALONG WITH
; THE MESSAGE. THE ERROR NUMBER SPECIFIES AN ERROR FOR-
; MAT WHICH IS PASSED TO $EDMSG TO EDIT THE OUTPUT STRING.
; SEVERITY 1 OR 2 ERRORS CAUSE CONTROL TO BE PASSED TO $EXIT
;
; INPUTS:
;
;	R1=ERROR/SEVERITY
;	R2=ARGUMENT BLOCK ADDRESS
;
; OUTPUTS:
;
;	SEVERITY 1 OR 2 ERRORS ABORT CREF PROCESSING
;	VIA A JUMP TO $EXIT
;
;-

$ERTRP::			;
	CALL	$ERMSG		; CALL ERROR MESSAGE PROCESSOR
	RTI			; EXIT SST

$ERMSG::			;
	SAVRG			; SAVE NON-VOLATILE REGISTERS
10$:				;
	MOV	R2,R5		; COPY ARGUMENT POINTER
	MOV	R1,R4		; COPY ERROR/SEVERITY
	MOV	#EPTR-4,R0	; GET ADDRESS OF ERROR DES. MINUS OFFSET
20$:				;
	ADD	#4,R0		; POINT TO NEXT STRING DESCRIPTOR
	TST	(R0)		; AT END OF LIST?
	BEQ	40$		; IF EQ YES
	CMPB	(R0),R4		; ERROR NUMBER AGREE?
	BNE	20$		; IF NE NO
	MOV	R0,R3		; SAVE R0
	CLRB	R1		; CLEAR ERROR NUMBER
	SWAB	R1		; POSITION SEVERITY TO LOW BYTE
	CMPB	R1,#S$V2	; LEGAL SEVERITY?
	BHI	40$		; IF HI NO
	ASL	R1		; CONVERT SEVERITY TO WORD OFFSET
	MOV	R1,-(SP)	; SAVE OFFSET
	MOV	#$ERBF,R0	; GET ADDRESS OF ERROR MESSAGE BUFFER
	MOV	#PRFIX,R1	; GET ADDRESS OF PREFIX STRING
	CALL	$EDMSG		; EDIT PREFIX STRING
	MOV	(SP)+,R2	; GET SEVERITY-DEPENDANT OFFSET
	MOV	ERFMT(R2),R1	; GET ADDRESS OF FORMAT STRING
	CALL	$EDMSG		; EDIT PREFIX STRING
	MOV	#$RCVBF,R2	; POINT TO RECEIVE BUFFER
	MOV	#SUFFIX,R1	; POINT TO SUFFIX STRING
	CALL	$EDMSG		; EDIT SUFFIX STRING
	MOV	2(R3),R1	; GET ADDRESS OF TEXT STRING
	MOV	R5,R2		; GET PARAMETER LIST ADDRESS
	CALL	$EDMSG		; EDIT ERROR MESSAGE TEXT
	MOV	R0,R2		; COPY ADDRESS OF NEXT BYTE
	MOV	#$ERBF,R1	; GET ADDRESS OF BUFFER
	SUB	R1,R2		; COMPUTE LENGTH OF OUTPUT STRING
 
	.IF DF	R$$11M
 
	MOV	R2,MGDPB+Q.IOPL+2 ; SET BYTE COUNT
	DIR$	#MGDPB,30$	; ISSUE ERROR MESSAGE
	WTSE$S	#3		; WAIT FOR COMPLETION
	TSTB	MGSTS		; TEST RESULT
	BMI	30$		; IF MI DEVICE ERROR
 
	.IFF
 
	PUT$S	#$CREDB,R1,R2	; OUTPUT ERROR MESSAGE
	BCS	30$		; IF C/S LEAVE QUIETLY
 
	.ENDC
 
	SWAB	R4		; GET ERROR SEVERITY
	CMPB	R4,#S$V1	; FATAL ERROR?
	BHIS	30$		; IF HIS YES
	CMP	#EX$ERR,$EXSTS	; WORSE ERROR OCCURED PREVIOUSLY?
	BLOS	25$		; IF LOS YES
	MOV	#EX$ERR,$EXSTS	; SET EXIT STATUS
25$:
	RETURN			;
30$:				;
	MOV	#EX$SEV,$EXSTS	; SET EXIT STATUS TO SEVERE
	JMP	$EXIT		; CLOSE ALL FILES, RESTART

;
; ILLEGAL ERROR/SEVERITY CODE
;

40$:				;
	MOV	R5,-(SP)	; PUSH PARAMETER LIST ADDRESS
	MOV	R4,-(SP)	; PUSH ERROR/SEVERITY
	MOV	SP,R2		; SET PARAMETER LIST ADDRESS
	MOV	#<S$V2*400!E$R0>,R1 ; SET NEW ERROR/SEVERITY
	BR	10$		; REPORT FATAL ERROR

	.END
