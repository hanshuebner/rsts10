	.TITLE	CRFRF
	.IDENT	/01/

;
; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,   MAYNARD,    MASS.
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C. MONIA 29-DEC-74
;
; MODIFICATIONS:
;
;		CM002 -- 31-OCT-75
;
;			 ADD MACRO CREF
;
;
; FORMAT CREF REFERENCE SUBFIELDS
;
; LOCAL DATA
;
; FORMAT STRING AND BUFFER FOR REFERENCE FIELD
;

RFMT:	.ASCII	/%VA/
RFVAR:	.BLKB	20.		; STORAGE FOR VARIABLE PART OF FORMAT STRING

	.EVEN

;
; PARAMETER LIST FOR REFERENCE FIELD
;

PREF:	.BLKW	10.		;

;+
; **-$CRFRF-FORMAT A SINGLE REFERENCE FIELD
;
; THIS SUBROUTINE IS CALLED TO INITIALIZE THE
; FORMAT STRING USED TO CONVERT A REFERENCE TO
; ASCII. THE SUBROUTINE TRANSMITS THE RESULTANT
; STRING TO THE RECORD BUFFER AND EXECUTES A CO-
; ROUTINE CALL TO THE CALLER. EACH SUCH CALL RESULTS
; IN THE CONVERSION OF A SINGLE REFERENCE.
; THE CALLER TERMINATES THE CONVERSION BY RE-
; MOVING THE RETURN ADDRESS FROM THE STACK.
;
; INPUTS:
;
;	R3=ADDRESS OF REFERENCE DESCRIPTOR
;	R4=ADDRESS OF TABLE DESCRIPTOR
;	R5=ADDRESS OF FORMAT CONTROL TABLE ENTRY
;	$NBYTE=ADDRESS OF NEXT AVAILABLE BYTE IN RECORD BUFFER
;
;OUTPUTS:
;
;	R0=ADDRESS OF NEXT BYTE IN OUTPUT STRING
;	R1=LENGTH OF STRING
;	THE REFERENCE IS CONVERTED TO ASCII AND STORED
;	IN THE OUTPUT FILE RECORD BUFFER.
;
;	A CO-ROUTINE CALL IS MADE TO THE CALLER. SUBSEQUENT
;	CO-ROUTINE CALLS RESULT IN THE CONVERSION OF ADDI-
;	TIONAL REFERNCES AS DESCRIBED ABOVE.
;
;-

$CRFRF::			;
	MOV	R$FLG(R3),R0	; GET REFERENCE SUBFIELD FLAGS
	MOV	T$DRS1(R4),R1	; GET ADDRESS OF REFERENCE SUBFIELD 1 LIST
	CALL	$SRCST		; SEARCH FOR FORMAT STRING
	MOV	#RFVAR,R2	; POINT TO VARIABLE PART OF  FORMAT STRING
10$:				;
	MOVB	(R1)+,(R2)+	; COPY FORMAT STRING
	SOB	R0,10$		; ...
	CLRB	(R2)+		; CONVERT TO ASCIZ STRING
20$:				;
	MOV	#PREF,R2	; POINT TO PARAMETER LIST
	MOV	R2,-(SP)	; SAVE LIST ADDRESS
	MOV	T$DRS0(R4),R1	; GET ADDRESS OF REFERENCE SUBFIELD 0 LIST
	MOV	R$FLG(R3),R0	; GET REFERENCE FLAGS
	CALL	$SRCST		; SEARCH FOR STRING
	MOV	R0,(R2)+	; COPY BYTE COUNT
	MOV	R1,(R2)+	; COPY ADDRESS OF STRING
	MOV	R$FSYM(R3),(R2)+ ; COPY VALUE FIELD
	MOV	R$FSYM+2(R3),(R2)+ ; ...
	MOV	#RFMT,R1	; GET ADDRESS OF FORMAT STRING
	MOV	$NBYTE,R0	; GET ADDRESS TO STORE NEXT BYTE
	MOV	(SP)+,R2	; GET ADDRESS OF PARAMETER LIST
	TST	(R2)		; ASCII STRING ZERO LENGTH?
	BNE	30$		; IF NE YES
	CMP	(R2)+,(R2)+	; SKIP STRING OUTPUT
	MOV	#RFVAR,R1	; OUTPUT ONLY VARIABLE PART OF STRING
30$:				;
	CALL	$EDMSG		; FORMAT STRING
	CALL	@(SP)+		; CALL THE CALLER
	BR 	20$		;

	.END
