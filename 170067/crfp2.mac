	.TITLE	CRFP2
	.IDENT	/00/

;
; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C. MONIA 27-DEC-74
;
; CREF PHASE 2
;
; MACRO LIBRARY CALLS
;

	.MCALL	CLOSE$,OFNB$R

;+
; **-$CRFP2-CREF PASS 2
;
; READ THE CREF INPUT FILE AND BUILD THE LIST OF REFERENCES
; FOR EACH SYMBOL
;
; INPUTS:
;
;	SYMBOL TABLES BUILT BY PHASE 1 OF CREF
;
; OUTPUTS:
;
;	A LIST OF REFERENCES TO EACH SYMBOL IS CONSTRUCTED
;	IN DYNAMIC MEMORY.
;
;-

$CRFP2::			;
	SAVRG			; SAVE THE NON-VOLATILE REGISTERS
	MOV	#$CRIFD,R1	; POINT TO CREF INPUT FILE I/D
	MOV	#$CRIDB,R0	; POINT TO INPUT FILE FDB
	MOV	R0,R2		; COPY FDB ADDRESS
	ADD	#<F.FNB+N.FID>,R2 ; POINT TO FILE I/D
	MOV	(R1)+,(R2)+	; RESTORE FILE I/D
	MOV	(R1)+,(R2)+	; ...
	MOV	(R1)+,(R2)+	; ...
	OFNB$R	R0		; OPEN CREF INPUT FILE
	BCS	35$		; IF C/S OPEN FAILURE
	CALL	$GTCRF		; READ HEADER RECORD
	BCS	40$		; IF C/S PREMATURE END-OF-FILE
	MOV	$FMTPT,R5	; GET ADDRESS OF FORMAT CONTROL TABLE
10$:				;
	CALL	@(SP)+		; READ NEXT RECORD
	BCS	20$		; IF C/S END-OF-FILE
	MOV	R1,R3		; SAVE ADDRESS OF RECORD
	CALL	$FNDTD		; GET ADDRESS OF TABLE LISTHEAD IN R0
	MOV	R0,R4		; SAVE LISTHEAD ADDRESS
	MOV	#R$FLTH,R1	; GET LENGTH OF REFERENCE LIST ENTRY
	CALL	$ALVRT		; ALLOCATE VIRTUAL MEMORY
	CALL	$LCKPG		; LOCK PAGE IN MEMORY
	MOV	D$SREF(R3),R$FSYM(R0) ; COPY REFERENCE DOUBLEWORD
	MOV	D$SREF+2(R3),R$FSYM+2(R0) ; ...
	MOVB	D$ATTR(R3),R$FLG(R0)	; COPY FLAGS WORD
	MOV	R1,-(SP)	; SAVE VIRTUAL ADDRESS OF REFERENCE
	MOV	R0,-(SP)	; SAVE REAL ADDRESS OF REFERENCE
	MOV	R3,R1		; GET ADDRESS OF RECORD
	SUB	#S$YM,R1	; CONVERT TO DESCRIPTOR FORMAT
	MOV	R4,R0		; GET LISTHEAD ADDRESS
	CALL	$SRCHV		; SEARCH FOR SYMBOL
	BCS	40$		; IF C/S SYMBOL NOT FOUND
	CALL	$WRMPG		; WRITE-MARK PAGE
	BISB	D$ATTR(R3),S$YFLG(R0) ; MERGE FLAGS
	MOV	D$SVAL(R3),S$YVAL(R0) ; SET VALUE
	MOV	S$YREF(R0),@(SP)+ ; SET LINK-NEXT OF NEW ENTRY
	MOV	(SP)+,R1	; RETRIEVE ADDRESS OF REFERENCE LIST ENTRY
	MOV	R1,S$YREF(R0)	; SET NEW FIRST IN LIST
	CALL	$UNLPG		; UNLOCK NEW ENTRY
	BR	10$		; PROCESS NEXT REFERENCE
20$:				;
	MOV	#$CRIDB,R0	; GET CREF INPUT FDB ADDRESS
	CALL	.DLFNB		; DELETE CREF FILE
	BCC	30$		; IF C/C DELETED OK
	ADD	#<F.FNB+N.FNAM>,R0 ; POINT TO FILENAME BLOCK
	MOV	R0,R2		; SET ADDRESS OF PARAMETER LIST
	ERROR$	E$R8,S$V2	; REPORT FAILURE TO DELETE
30$:				;
	CLOSE$	R0		; CLOSE CREF INPUT FILE
	RETURN			;

;
; OPEN ERROR ON CREF INPUT FILE
;

35$:				;
	ERROR$	E$R2,S$V2,#<$CRIDB+F.FNB+N.FNAM> ; FATAL, NO RETURN

;
; CREF INPUT FILE HAS ILLEGAL FORMAT
;

40$:				;
	ERROR$	E$R7,S$V2,#<$CRIDB+F.FNB+N.FNAM> ; FATAL, NO RETURN

	.END
