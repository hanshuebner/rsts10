	.TITLE	CRFIN
	.IDENT	/01.02/

;
; COPYRIGHT   1978,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 01.02
;
; C. MONIA 26-DEC-74
;
; MODIFICATIONS:
;
;		CM002 -- 31-OCT-75
;
;			 ADD MACRO CREF
;
;	J. H. MATTHEWS  11-SEP-78
;		JM019  IAS SEND/RECEIVE (FROM R. DRAY)
;
;	J. H. MATTHEWS	10-OCT-78
;		JM022	CORRECT EXIT STATUS REPORTING
;
; INITIALIZE CREF PROGRAM DATA
;
; MACRO LIBRARY CALLS
;

	.MCALL	DIR$,FINIT$,RCVX$

	.IF	DF,RSTS		;++RSTS V7.1
	.MCALL	OFNB$R,GET$S,GMCR$,CLOSE$,EXST$S  ;++RSTS V7.1
	.ENDC			;++RSTS V7.1

	.IIF DF IAS	.MCALL	QIOW$S

;
; LOCAL DATA
;
; CREF PROGRAM LIMITS
;

LIMIT:	.LIMIT			;

;
; CREF RECEIVE-OR-EXIT DPB
;

	.IF	NDF,RSTS	;++RSTS V7.1
CRFRCV:	RCVX$	,$RCVBF		;
	.IFF			;++RSTS V7.1
CRFPRM:	.ASCII	<12><15>/CRF>/	;++RSTS V7.1
PRMLGH==.-CRFPRM		;++RSTS V7.1
CRFCCL:	GMCR$			;++RSTS V7.1
	.ENDC			;++RSTS V7.1

;+
; **-$CRFIN-INITIALIZE CREF PROGRAM DATA
;
; INPUTS:
;
;	INITIAL REGISTER SET UPON TASK ACTIVATION
;
; OUTPUTS:
;
;	ALL CREF STORAGE AND I/O IS INITIALIZED
;
;-

$CRFIN::			;
	MOV	#$CRIDN+4,R0	; POINT TO CREF VERSION
	TST	(R0)		; VERSION ALREADY INITIALIZED?
	BNE	5$		; IF NE YES
	MOV	R3,(R0)+	; INITIALIZE VERSION
	MOV	R4,(R0)+	; ...



5$:				;
	.IF	DF	IAS	;++001
 
	QIOW$S	#PI.RCV,#8.,#2,,#CRFIOB,,<#$RCVBF+2,#28.>
	BCS	7$		;++001 BR ON DIRECTIVE FAILURE
	CMPB	#PS.SUC,CRFIOB	;++001 DID WE RECEIVE ANYTHING?
	BEQ	8$		;++001 BR IF YES
	CMPB	#PE.PRI,CRFIOB	;++001 DID WE FAIL BECAUSE OF PRIVILEGE?
	BNE	6$		;++001 GIVE UP IF NOT
	CMPB	#PE.NTS,CRFIOB+2;++001 YES -- ARE WE RUNNING IN REAL-TIME?
	BEQ	7$		;++001 GO INTO REAL TIME PATH
6$:
	MOV	$EXSTS,R0	; GIVE EXIT STATUS
	JMP	$EXST		;++001 GIVE UP
7$:
 
	.IFTF			;++001
 

	.IF 	NDF,RSTS	;++RSTS V7.1
	DIR$	#CRFRCV		; EXECUTE RECEIVE OR EXIT
 	.ENDC			;++RSTS V7.1

	.IFT			;++001
 
8$:
	.ENDC			;++001


	.ENABL	LSB			;++RSTS V7.1
10$:					;++RSTS V7.1
	.IF	DF,RSTS			;++RSTS V7.1
	TSTB	@#$CDLUN		;++RSTS V7.1 INDIRECT FILE OPEN?
	BEQ	30$			;++RSTS V7.1 NO, WRITE PROMPT
	MOV	#$CRCDB,R0		;++RSTS V7.1 GET ADDRESS OF COMMAND FDB
	GET$S	R0,#CRFCCL+G.MCRB,#80.	;++RSTS V7.1 GET A RECORD
	CMPB	#IE.EOF,F.ERR(R0)	;++RSTS V7.1 EOF DETECTED?
	BNE	20$			;++RSTS V7.1 NO, MUST BE A COMMAND
	CLOSE$	#$CRCDB			;++RSTS V7.1 EOF, CLOSE IT
	CLR	@#$CDLUN		;++RSTS V7.1 AND MARK IT CLOSED
	BR	10$			;++RSTS V7.1 GO BACK TO KEYBOARD

20$:	MOV	F.NRBD+2(R0),@#XRB+XRLOC;++RSTS V7.1 GET ADDRESS OF BUFFER
	MOV	F.NRBD(R0),@#XRB+XRBC	;++RSTS V7.1 AND NUMBER OF CHARACTERS
	BEQ	10$			;++RSTS V7.1 NULL LINE, TRY AGAIN
	CMPB	#';,@F.NRBD+2(R0)	;++RSTS V7.1 CHECK FOR COMMENTS
	BNE	110$			;++RSTS V7.1 GO PARSE A FILENAME
	BR	10$			;++RSTS V7.1 IGNORE ALL COMMENTS

30$:	TST	@#$CRFGM		;++RSTS V7.1 HAS A GMCR BEEN DONE?
	BMI	60$			;++RSTS V7.1 YES, BUT NOTHING THERE
	BGT	70$			;++RSTS V7.1 YES, WERE FINISHED
	DIR$	#CRFCCL			;++RSTS V7.1 WELL SEE WHAT'S THERE
	MOV	@#$DSW,@#$CRFGM		;++RSTS V7.1 SAVE THE RESULTS 
	DEC	@#$CRFGM		;++RSTS V7.1 MUST BE >0 TO BE VALID
	BMI	60$			;++RSTS V7.1 HAVE TO DO THE PROMPT
	MOV	#CRFCCL+G.MCRB,R1	;++RSTS V7.1 NOW WE HAVE TO STRIP CCL
40$:	CMPB	#<040>,(R1)+		;++RSTS V7.1 UNTIL WE FIND A SPACE
	BEQ	50$			;++RSTS V7.1 SUCCESS!
	DEC	@#$CRFGM		;++RSTS V7.1 DON'T COUNT THE CCL
	BMI	60$			;++RSTS V7.1 NONE LEFT IN BUFFER
	BR	40$			;++RSTS V7.1 DO UNTIL DONE

50$:	MOV	#XRB,R0			;++RSTS V7.1 INITIALIZE AS IF WE READ IT
	MOV	@#$CRFGM,(R0)+		;++RSTS V7.1 SAVE THE CHARACTER COUNT
	MOV	@#$CRFGM,(R0)+		;++RSTS V7.1    ...
	MOV	R1,(R0)			;++RSTS V7.1 INITIALZE THE ADDRESS
	BR	90$			;++RSTS V7.1 GO CHECK FIRST CHARACTER

60$:	MOV	#XRB,R0			;++RSTS V7.1 INITIALIZE XRB
	MOV	#PRMLGH,(R0)+		;++RSTS V7.1 XRB+XRLEN
	MOV	#PRMLGH,(R0)+		;++RSTS V7.1 XRB+XRBC
	MOV	#CRFPRM,(R0)+		;++RSTS V7.1 XRB+XRLOC
	CLR	(R0)+			;++RSTS V7.1 XRB+XRCI
	CLR	(R0)+			;++RSTS V7.1 XRB+XRBLK
	CLR	(R0)+			;++RSTS V7.1 XRB+XRTIME
	MOV	#3000,(R0)		;++RSTS V7.1 XRB+XRMOD (RSX I/O)
	.WRITE				;++RSTS V7.1
	MOV	#XRB,R0			;++RSTS V7.1 BACK TO START OF XRB
	MOV	#80.,(R0)+		;++RSTS V7.1 XRB+XRLEN
	CLR	(R0)+			;++RSTS V7.1 XRB+XRBC
	MOV	#CRFCCL+G.MCRB,(R0)	;++RSTS V7.1 XRB+XRLOC
	.READ				;++RSTS V7.1
	TSTB	@#IOSTS			;++RSTS V7.1 EOF? (CTRL/Z)
	BEQ	80$			;++RSTS V7.1 NO, CONTINUE
70$:	EXST$S	$EXSTS			;++RSTS V7.1 SET UP EXIT STATUS

80$:	TST	@#XRB+XRBC		;++RSTS V7.1 ANY CHARACTERS INPUT?
	BEQ	10$			;++RSTS V7.1 NULL LINE, TRY AGAIN
90$:	CMPB	#';,@(R0)+		;++RSTS V7.1 COMMENT LINE?
	BEQ	10$			;++RSTS V7.1 YES, IGNORE ALL COMMENTS
	CMPB	#'@,@-(R0)		;++RSTS V7.1 INDIRECT COMMAND?
	BNE	110$			;++RSTS V7.1 NO, PARSE FILENAME
	INC	(R0)			;++RSTS V7.1 BUMP BUFFER POINTER
	DEC	-(R0)			;++RSTS V7.1 SUBTRACT FOR "@"
	MOV	#^RCMD,@#FIRQB+FQEXT	;++RSTS V7.1 DEFAULT .CMD EXTENSION
	CALL	FSS			;++RSTS V7.1 PARSE COMMAND FILENAME
	BCS	100$			;++RSTS V7.1 NOTHING OF VALUE FOUND
	MOV	#$CRCDB,R0		;++RSTS V7.1 POINT TO COMMAND FDB
	CALL	SETNM			;++RSTS V7.1 SETUP NAME BLOCK FDB
	CALL	.ASLUN			;++RSTS V7.1 ASSIGN LUN TO CMD DEVICE
	BCS	INERR			;++RSTS V7.1 IF C/S UNABLE TO ASSIGN
	CALL	.FIND			;++RSTS V7.1 FIND SPECIFIED FILE
	BCS	INERR			;++RSTS V7.1 IF C/S FIND FAILED
	OFNB$R	#$CRCDB			;++RSTS V7.1 NOW TRY TO OPEN FILE
	BCS	INERR			;++RSTS V7.1 IF C/S OPEN ERROR
	MOVB	F.LUN(R0),@#$CDLUN	;++RSTS V7.1 SAVE COMMAND FILE LUN
100$:	JMP	10$			;++RSTS V7.1 GET KEYBOARD COMMAND

110$:	MOV	#^RLST,@#FIRQB+FQEXT	;++RSTS V7.1 DEFAULT .LST EXTENSION
	CALL	FSS			;++RSTS V7.1 PARSE A FILENAME
	BCS	100$			;++RSTS V7.1 NOTHING OF VALUE FOUND
	CMP	#"NL,@#FIRQB+FQDEV	;++RSTS V7.1 BUT IS THE DEVICE NL:?
	BEQ	100$			;++RSTS V7.1 YES, SO SKIP IT
	MOV	@#.FSRPT,R0		;++RSTS V7.1 CHECK TO SEE IF A .FINIT
	TST	A.DFUI(R0)		;++RSTS V7.1 ...HAS BEEN PERFORMED
	BNE	120$			;++RSTS V7.1 IF SO, THE SKIP
	.IFTF				;++RSTS V7.1

	FINIT$			; INITIALIZE FILE STORAGE REGION
120$:				;++RSTS V7.1
	.DSABL	LSB		;++RSTS V7.1
	.ENABL 	LSB		;++RSTS V7.1
	.DSABL	LSB		;++RSTS V7.1
	.ENDC			;++RSTS V7.1

	MOV	#$FRHD,R0	; POINT TO FREE CORE POOL LISTHEAD
	MOV	LIMIT+2,(R0)+	; SET FIRST WORD TO START OF FREE AREA
	CLR	(R0)		; CLEAR SECOND WORD
	CALL	$INIDM		; INITIALIZE DYNAMIC CORE POOL
 
	.IF NDF	R$$11M
 
	CALL	$INERR		; INITIALIZE ERROR MESSAGE FILE
 
	.ENDC
 
	CALL	$INIVM		; INITIALIZE VIRTUAL MEMORY
	BCS	40$		; IF C/S UNABLE TO INIT. WORK FILE
	CLR	$CRFLG		; SET CREF DEFAULTS
	BISB	$RCVBF+R$CFLG,$CRFLG ; GET CREF CONTROL FLAGS
	MOV	#$FMCT,R0	; GET ADDRESS OF FORMAT CONTROL TABLES
10$:				;
	TST	(R0)		; AT END OF FORMAT TABLE?
	BMI	30$		; IF MI YES
	MOV	F$MCTD(R0),R1	; GET ADDRESS OF FIRST TABLE DESCRIPTOR
	MOV	F$MCMF(R0),R2	; GET MAX. FORMAT VALUE
20$:				;
	CLR	(R1)		; CLEAR B-TREE LISTHEAD
	ADD	#T$DLTH,R1	; POINT TO NEXT TABLE DESCRIPTOR
	DEC	R2		; DECREMENT FORMAT VALUE
	BPL	20$		; IF PL GO AGAIN
	ADD	#F$MCLT,R0	; POINT TO NEXT FORMAT CONTROL ENTRY
	BR	10$		; LOOP FOR ALL ENTRIES IN FMCT.
30$:				;
	CALLR	$ICRIO		; INITIALIZE CREF I/O
 
;
; UNABLE TO OPEN WORKFILE
;
 
40$:				;
	ERROR$	E$R75,S$V2,$WRKPT ; FATAL, NO RETURN

	.IF	DF,RSTS			;++RSTS V7.1
;
; UNABLE TO OPEN COMMAND FILE
;

INERR:
	MOV	R1,R2			;++RSTS V7.1 COPY FNB ADDRESS
	ADD	#N.FNAM,R2		;++RSTS V7.1 POINT TO FILENAME
	ERROR$	E$R1,S$V2		;++RSTS V7.1 FATAL, NO RETURN

;
; DO A RSTS FILENAME STRING SCAN AND FILL IN $RCVBF BUFFER
;

FSS:
	MOV	@#XRB+XRBC,@#XRB+XRLEN	;++RSTS V7.1 SCAN CHARACTERS READ
	CLR	@#XRB+XRBLK		;++RSTS V7.1 USE DEFAULT LOGICALS
	MOV	#"SY,@#FIRQB+FQDEV	;++RSTS V7.1 DEFAULT DEVICE "SY"
	CLR	@#FIRQB+FQDEVN		;++RSTS V7.1 DEFAULT UNIT
	CLR	@#FIRQB+FQPPN		;++RSTS V7.1 DEFAULT USER'S PPN
	CLR	@#FIRQB+FQNAM1		;++RSTS V7.1 INDICATE NO FILENAME YET
	.FSS				;++RSTS V7.1 PARSE THE FILENAME
	TSTB	@#FIRQB			;++RSTS V7.1 ANY ERRORS TO REPORT?
	BEQ	10$			;++RSTS V7.1 NOPE
	ERROR$	E$R6,S$V2		;++RSTS V7.1 FATAL, NO RETURN

10$:	SEC				;++RSTS V7.1 EXPECT THE WORST
	MOV	@#FIRQB+FQNAM1,$RCVBF+R$CNAM;++RSTS V7.1 LST FILE NAME-1
	BEQ	40$			;++RSTS V7.1 NO NAME PRESENT, IGNORE
	MOV	@#FIRQB+FQNAM1+2,$RCVBF+R$CNAM+2;++RSTS V7.1 LST FILE NAME-2
	MOV	@#FIRQB+FQEXT,$RCVBF+R$CTYP	;++RSTS V7.1 LST FILE EXT
	MOV	@#FIRQB+FQPPN,$RCVBF+R$CDID	;++RSTS V7.1 LST FILE PPN
	MOV	@#FIRQB+FQDEV,$RCVBF+R$CDEV	;++RSTS V7.1 LST FILE DEV
	MOVB	@#FIRQB+FQDEVN,$RCVBF+R$CUNT	;++RSTS V7.1 LST FILE UNIT
	MOV	#^RMAC,$RCVBF		;++RSTS V7.1 DEFAULT TO MAC
	CMP	#^RMAP,$RCVBF+R$CTYP	;++RSTS V7.1 IS IT A TKB RUN?
	BNE	20$			;++RSTS V7.1 NOPE
	MOV	#^RTKB,$RCVBF		;++RSTS V7.1 MAKE IT TKB THEN
20$:	CLRB	$RCVBF+R$CFLG		;++RSTS V7.1 INSURE NO FLAGS SET
	TST	@#XRB+XRBC		;++RSTS V7.1 ANY SWITCHES SUPPLIED?
	BEQ	30$			;++RSTS V7.1 NOPE
	MOV	@#XRB+XRLOC,R0		;++RSTS V7.1 GET ADDRESS OF SWITCH
	CMPB	#'/,(R0)+		;++RSTS V7.1 IS IT A SWITCH?
	BNE	30$			;++RSTS V7.1 NOPE
	CMPB	#'S,(R0)+		;++RSTS V7.1 IS IT '/SP'?
	BNE	30$			;++RSTS V7.1 NOPE
	CMPB	#'P,(R0)		;++RSTS V7.1 IS IT REALLY '/SP'?
	BNE	30$			;++RSTS V7.1 NOPE
	BISB	#CS$POL,$RCVBF+R$CFLG	;++RSTS V7.1 ONLY IF '/SP '
30$:	CLC				;++RSTS V7.1 INDICATE GOODNESS
40$:	RETURN				;++RSTS V7.1 DONE

	.ENDC				;++RSTS V7.1 

	.END
