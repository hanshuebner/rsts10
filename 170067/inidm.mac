	.TITLE	INIDM
	.IDENT	/00/

;
; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C. MONIA 26-DEC-74
;
; INITIALIZE DYNAMIC MEMORY
;
; MACRO LIBRARY CALLS
;

	.MCALL	DIR$,GPRT$,GTSK$

;
; 'GET PARTITION PARAMTERS' DPB
;

PDPB:	GPRT$	,TBUF		;

;
; 'GET TASK PARAMTERS' DPB
;

TDPB:	GTSK$	TBUF		;

;
; PARAMETER BUFFER
;

TBUF:	.BLKW	16.		;

;+
; **-$INIDM-INITIALIZE DYNAMICALLY ALLOCATED STORAGE
;
; THIS SUBROUTINE IS CALLED TO ESTABLISH THE INITIAL STATE
; OF THE CORE POOL REFERENCED BY THE SUBROUTINES WHICH ALLO-
; CATE AND DEALLOCATE CORE BLOCKS. THE POOL CONSISTS OF ALL
; MEMORY EXTENDING FROM THE END OF THE TASK IMAGE TO THE LAST
; PHYSICAL LOCATION OWNED BY THE TASK.
;
; INPUTS:
;
;	$FRHD=CONTAINS ADDRESS OF FREE CORE POOL
;
; OUTPUTS:
;
;	FREE LIST IN DYNAMICALLY ALLOCATED MEMORY
;	IS INITIALIZED.
;-

$INIDM::			;
	DIR$	#PDPB		; GET PARTITION PARAMETERS
	MOV	$DSW,R0		; SAVE STARTING VIRTUAL ADDRESS OF PARTITION
	DIR$	#TDPB		; GET TASK PARAMETERS
	MOV	$FRHD,R1	; GET ADDRESS OF DYNAMIC STORAGE AREA
	MOV	R1,-(SP)	; SAVE ADDRESS
	CLR	(R1)+		; CLEAR FIRST WORD OF DYNAMIC STORE
	MOV	TBUF+32,(R1)	; SET PHYSICAL SIZE OF TASK
	SUB	R0,(SP)		; COMPUTE APPARENT TASK SIZE
	SUB	(SP)+,(R1)	; SET SIZE OF FREE POOL
	BIC	#3,(R1)		; TRUNCATE TO MULTIPLE OF 4 BYTES
	RETURN			;

	.END
