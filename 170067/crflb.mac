	.TITLE	CRFLB
	.IDENT	/01/

;
; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C. MONIA 30-DEC-74
;
; MODIFICATIONS:
;
;		CM002 -- 31-OCT-75
;
;			 ADD MACRO CREF
;
; FORMAT AND CONVERT CREF LABEL AND VALUE FIELDS
;
; LOCAL DATA
;
; OUTPUT TEMPLATE FOR LABEL AND VALUE FIELDS
;

LBL:	.ASCIZ	/%2R	/
VAL:	.ASCIZ	/%VA/

	.EVEN


;
; TOTAL LENGTH OF FORMATTED LABEL AND VALUE FIELDS
;
 
LGLBV:	.BLKW	1		;
 
;
; ADDRESS OF NEXT OUTPUT BYTE
;
 
NBYTE:	.BLKW	1		;
 
;
; PARAMETER LIST FOR LABEL AND VALUE FIELDS
;

PLBVL:	.BLKW	2		;

;+
; **-$CRFLB-FORMAT AND CONVERT LABEL AND VALUE FIELDS
;
; THIS SUBROUTINE IS CALLED TO  OUTPUT THE APPRORIATE
; ASCII STRINGS FOR THE CREF LABEL AND VALUE FIELDS.
; THE STRING IS STORED STARTING AT THE  LOCA-
; TION POINTED TO BY $NBYTE.
;
; INPUTS:
;
;	R3=ADDRESS OF LABEL SYMBOL DESCRIPTOR
;	R4=ADDRESS OF TABLE DESCRIPTOR
;	R5=ADDRESS OF FORMAT CONTROL TABLE ENTRY
;	$NBYTE =ADDRESS TO STORE OUTPUT STRING
;
; OUTPUTS:
;
;	R0=ADDRESS OF NEXT BYTE
;	R1=LENGTH OF STRING CONVERTED
;-

$CRFLB::			;
	MOV	#PLBVL,R2	; GET ADDRESS OF  PARAMTER LIST
	MOV	$NBYTE,NBYTE	; MARK CURRENT POSITION IN OUTPUT LINE
	CLR	LGLBV		; CLEAR TOTAL FIELD LENGTH
	MOV	S$YM(R3),(R2)+	; SET FIRST HALF OF SYMBOL NAME
	MOV	S$YM+2(R3),(R2) ; SET SECOND HALF OF NAME
	MOV	#LBL,R1		; POINT TO FORMAT STRING
	CALL	20$		; FORMAT OUTPUT LINE
	MOV	S$YFLG(R3),R0	; GET SYMBOL FLAGS
	MOV	T$DVS0(R4),R1	; GET ADDRESS OF VALUE SF. 0
	CALL	10$		; SEARCH AND FORMAT STRING
	MOV	T$DVS1(R4),R1	; GET ADDRESS OF VALUE SUBFIELD 1
	MOV	R1,-(SP)	; SAVE ADDRESS
	MOV	4(R1),R0	; GET ADDRESS OF STRING
	MOV	S$YVAL(R3),R1	 ; GET SYMBOL VALUE
	CALL	$CBOMG		; CONVERT VALUE TO OCTAL
	MOV	(SP)+,R1	; GET ADDRESS OF STRING DESCRIPTOR
	MOV	S$YFLG(R3),R0	; GET SYMBOL FLAGS
	CALL	10$		; SEARCH AND FORMAT STRING
	MOV	T$DVS2(R4),R1	; GET ADDRESS OF SF. 2 LIST
	MOV	S$YFLG(R3),R0	; GET FLAGS
10$:				;
	CALL	$SRCST		; SEARCH FOR STRING
	MOV	#PLBVL,R2	; GET ADDRESS OF PARAMETER BLOCK
	MOV	R0,(R2)+	; SET LENGTH
	BEQ	30$		; IF EQ ZERO LENGTH FIELD
	MOV	R1,(R2)		; SET ADDRESS OF DESCRIPTOR
	MOV	#VAL,R1		; SET ADDRESS OF FORMAT STRING
20$:				;
	MOV	NBYTE,R0	; GET ADDRESS TO STORE OUTPUT
	TST	-(R2)		; POINT TO FRONT OF PARAMETER BLOCK
	CALL	$EDMSG		; CONVERT AND FORMAT STRING
	MOV	R0,NBYTE	; MARK ADDRESS OF NEXT BYTE
	ADD	R1,LGLBV	; ACCUMULATE TOTAL LENGTH
30$:				;
	MOV	NBYTE,R0	; GET ADDRESS OF NEXT BYTE
	MOV	LGLBV,R1	; GET LENGTH
	RETURN			;

	.END
