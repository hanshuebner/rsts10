	$BEGIN	BIGBUF,<28.11>,<..INBB, ..RSEF - BIG BUFFER ROUTINES>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982, 1986 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 16-AUG-73
;
; PREVIOUSLY MODIFIED BY
;
;	G. H. KUENNING
;
; Last Modification Date :  29-JAN-86
; Modified for RSX-11M-PLUS Update C by :
;
; Todd Schoeller	28.11
;		TMS029 -- Make room in REST segment for csi changes.
;
	.PAGE
	.IF	GT,R$$BBF	;BUFFERS GREATER THAN 1 BLOCK
;+
; IS THE SPECIFIED VBN IN THE CURRENT BLOCK BUFFER
; CALLING SEQUENCE:
;	CALL	..INBB
; INPUTS:
;	R0=FDB
;	F.VBN(R0)=DESIRED VBN
; ALTERNATE ENTRY POINT:
;	CALL	..IBB1
; INPUTS:
;	R0=FDB
;	R4,R5=DESIRED VBN
; OUTPUTS:
;	R0-R3 PRESERVED R4-R5 ALTERED
;	C=0 IF VBN IS IN BLOCK BUFFER IN WHICH CASE
;	F.NREC F.EOBB SET TO POINT INTO BUFFER.
;	C=1 IF VBN IS NOT IN BLOCK BUFFER
;-
..INBB::MOV	F.VBN(R0),R4							; GK001
	MOV	F.VBN+2(R0),R5
; R4,R5=VBN TO CHECK TO SEE IF IT IS IN CURRENT BLOCK BUFFER
..IBB1::MOV	R1,-(SP)							; GK001
	.IF	GT,R$$ANI							; GK002
	BITB	#FD.SQD,F.RCTL(R0) ;SEQUENTIAL DEVICE?				; GK002
	BNE	40$		;IF NE YES, ALWAYS FAIL				; GK002
	.ENDC									; GK002
	MOV	F.BDB(R0),R1
	BITB	#BD.FRE,B.BFST(R1)	;DOES THE BUFFER CONTAIN VALID DATA?
	BNE	40$			;NO - RETURN FAILURE
	SUB	B.VBN+2(R1),R5		;YES- PROCEED WITH VBN RANGE TEST
	SBC	R4
	BLO	30$		; BRANCH IF NOT IN RANGE			; GK001
	SUB	B.VBN(R1),R4
	BNE	40$
	MOVB	F.BGBC(R0),R4
	CMP	R5,R4
	BHIS	40$
	.IF	GT,R$$EIS							; GK001
	MUL	F.VBSZ(R0),R5
	.IFF									; GK001
	MOV	R5,R4								; GK001
	CLR	R5								; GK001
10$:	DEC	R4								; GK001
	BLT	20$								; GK001
	ADD	F.VBSZ(R0),R5							; GK001
	BR	10$								; GK001
20$:										; GK001
	.ENDC									; GK001
	ADD	F.BDB(R0),R5
	ADD	#S.BFHD,R5
	MOV	R5,F.NREC(R0)
	ADD	F.VBSZ(R0),R5
	MOV	R5,F.EOBB(R0)
	CLC
30$:	MOV	(SP)+,R1
	RETURN
40$:	SEC
	BR	30$
;+
; RESET EOF ERROR
; CALLING SEQUENCE:
;	CALL	..RSEF								; GK001
; INPUTS:
;	R0=FDB
;	R1=I/O STATUS BLOCK ADDRESS
; OUTPUTS:
;	C=0 IF NO ERORR, C=1 IF ERROR
;	ALL REGISTERS PRESERVED
;	IF BIG-BUFFERED FDB AND I/O STATUS WAS IE.EOF, I/O STATUS
;	AND F.ERR(R0) HAVE BOTH BEEN RESET TO 1.
;-
..RSEF::									; GK001
	CMPB	#IE.EOF,@R1
	BNE	10$
	BITB	#FD.BGB,F.MBFG(R0)
	BEQ	10$
	MOVB	#1,@R1
	CALL	.SUCSS			;INDICATE SUCCESS
10$:	CALLR	..FCSX
	.ENDC
;
;
	$END	BIGBUF
;
;
	.END
