	$BEGIN	WRITE,<28.1>,<FCS WRITE VIRTUAL BLOCK>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 11-AUG-73
;
; PREVIOUSLY MODIFIED BY
;
;	ELLEN R SIMICH


;+
; ISSUE THE QI/O WRITE VIRTUAL BLOCK-READ/WRITE MODE
; CALLING SEQUENCE:
;	CALL	.WRITE
; INPUTS:
;	R0=FDB ADDRESS
;	F.BKVB(R0)F.BKVB+2(R0)=DESIRED VIRTUAL BLOCK NUMBER
;	F.BKDS(R0)=NO. OF BYTES TO WRITE
;	F.BKDS+2(R0)=ADDRESS TO WRITE DATA FROM
;	F.BKEF(R0)=EVENT FLAG - USE FCS DEFAULT IF 0.
;	F.BKST(R0)=ADDRESS OF I/O STATUS BLOCK OR 0
;	F.BKDN(R0)=ADDRESS OF I/O DONE AST ADDRESS OR 0
; OUTPUTS:
;	C=0 IF QI/O WAS ISSUED SUCCESSFULLY
;	C=1 IF ERROR, F.ERR(R0) SET TO ERRORS CODE
;	ALL REGISTERS PRESERCED
;	F.BKVB(R0),F.BKVB+2(R0) IS INCREMENTED AFTER QI/O
;
; OPERATION:
;	ALLOCATES SPACE TO THE FILE IF DESIRED VBN IS
; BEYOND THE CURRENTLY ALLOCATED SPACE. KEEPS TRADE OF THE
; HIGHEST VBN WRITTEN FOR EOF INFORMATION. RETURNS THE
; LOW BYTE OF THE DIRECTIVE STATUS WORD IN F.ERR(R0) IF
; THE QI/O FAILED. INCREMENTS THE VBN AFTER THE QI/O
; IS ISSUED FOR AUTOMATIC SEQUENTIAL WRITING. THE
; FOLLOWING RESTRICTIONS APPLY:
;	1) THIS ROUTINE ONLY WORKS FOR BLOCK ORIENTED BYTES,
; RECORD ORIENTED DEVIES ARE XPLICITLY EXCLUDED.
;-
.WRITE::.SAVR1
	CALL	..RWCK
	BCS	40$
	MOV	#IO.WVB,R4		;ERS SET UP FUNCTION CODE
	CMP	F.VBSZ(R0),F.BKDS(R0)	;ERS GREATER THAN ONE BLOCK
	BGE	10$			;ERS NO
	JMP	..RWLG			;ERS YES GO TO LONG ROUTINE
10$:	CALL	..SEFB			;END OF FILE CHECK
	BCC	20$

	;WRITING AT OR BEYOND EOF

	MOV	F.VBN(R0),R1
	MOV	F.VBN+2(R0),R2
	CALL	..ALC1			;CHECK IT ALLOCATED SPACE IS SUFFICIENT
	BCS	40$			;BRANCH IF COULDN'T ALLOCATE NEEDED SPACE

20$:	CALL	..WTRD			;ISSUE THE QI/O
	BITB	#FD.EFB,F.BKP1(R0)  	;WAITING NEW EOF?
	BEQ	30$			;BRANCH IF NO
	MOV	F.VBN(R0),F.EFBK(R0)  	;EFBK = INCREMENTED BLOCK NO.
	MOV	F.VBN+2(R0),F.EFBK+2(R0)
	CLR	F.FFBY(R0)		;AND INDICATE FIRST BYTE IN BLOCK
30$:	TSTB	F.ERR(R0)		;SEE IF ERROR - CLEARS CARRY
	BGT	40$			;BRANCH IF NO ERROR
	SEC
40$:	RETURN
	;
	$END	WRITE
	;
	;
	.END
