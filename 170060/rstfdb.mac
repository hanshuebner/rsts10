	$BEGIN	RSTFDB,<28.1>,<RESET FDB>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 13-JULY-73
;
; PREVIOUSLY MODIFIED BY
;
;	S. RUZICH
; 
; RESET THE FDB _ RELEASE THE BLOCK BUFFER IF NECESSARY, AND CLEAR THE
; FDB CELLS THAT ARE SUPPOSED TO BE REINITIALIZED
..RFDB::
	BITB	#FD.RWM,F.RACC(R0) ;IF READ/WRITE MODE, DON'T RELEASE BUFFER
	BNE	60$
40$:
	.IF	EQ,R$$MBF	;IF NO MULTIPLE BUFFERING
	MOV	F.BDB(R0),R2	;R2=ADDRESS OF BUFFER TO RELEASE
	BEQ	60$		;BRANCH IF NO BUFFER TO RELEASE
; RELEASE THE BLOCK BUFFER, R2=ADDRESS OF BUFFER
	MOV	F.BBFS(R0),R1	;SIZE OF BLOCK BUFFER
	ADD	#S.BFHD,R1	;ADD IN SIZE OF BUFFER HEADER
	MOV	R0,-(SP)	;SAVE FDB ADDRESS
	MOV	@#.FSRPT,R0	;ALLOCATION CONTROL BLOCK FOR FSR
	CALL	$RLCB		;RELEASE BUFFER
	MOV	(SP)+,R0	;RESTORE FDB POINTER
	.ENDC
;
	.IF	GT,R$$MBF	;IF MULTIPLE BUFFERING
	MOV	F.BDB(R0),R3
	BEQ	60$		;BRANCH IF NO BUFFERS TO RELEASE
	CLR	R5
	BISB	F.MBC1(R0),R5	;NO. OF BUFFERS TO RELEASE
	MOV	R0,R4		;PRESERVE FDB ADDRESS
50$:	MOV	@#.FSRPT,R0
	MOV	F.BBFS(R4),R1
	ADD	#S.BFHD,R1	;R1=NO OF BYTES TO RELEASE
	MOV	R3,R2		;R2=ADDRESS OF BUFFER TO RELEAE
	CALL	$RLCB
	MOV	B.NXBD(R3),R3
	SOB	R5,50$		;RELEASE ALL BUFFERS
	MOV	R4,R0		;RESTORE FDB ADDRESS
	.ENDC
;
; OPEN FOR RECORD I/O - CLEAR SOME RECORD ORIENTED CELLS
	CLR	F.NRBD(R0)
	CLR	F.NRBD+2(R0)
;
; OPEN FOR RECORD OR BLOCK ORIENTED I/O
60$:	CLR	F.BDB(R0)	;MARK FILE CLOSED
	CLR	F.FNB(R0)	;ZERO THE FILE ID
	CLR	F.OVBS(R0)	;ZERO THE OVERIDE BUF SIZE
	CLR	F.CNTG(R0)	;ZERO THE CONTIGUOUS SIZE
	CLR	F.STBK(R0)	;ZERO THE STATISTICS BLOCK ADDRESS
	CLRB	F.BKP1(R0)	; CLEAN OUT THE BOOKKEPPING BYTE
	BICB	#FA.TMP,F.FACC(R0) ;RESET THE TEMP BIT IN FACC
				;SO THAT PARSE WILL NOT BE CONFUSED
	CLRB	F.MBFG(R0)	;CLEAR MULTIPLE BUFFERING FLAG WORD
	RETURN
;
;
	$END	RSTFDB
;
;
	.END
