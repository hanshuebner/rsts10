	.TITLE	QIOMAC - QIOSYM MACRO DEFINITION
;
; DATE OF LAST MODIFICATION:
;
;	John R. Covert	13-Nov-81
;
;
; ***** ALWAYS UPDATE THE FOLLOWING TWO LINES TOGETHER
	.IDENT	/0356/
	QI.VER=0356
 
;
; COPYRIGHT (C) 1980
; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
; IN DEC.
;
; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;
;
; PETER H. LIPMAN 1-OCT-73
;
;+
; MACRO TO DEFINE STANDARD QUEUE I/O DIRECTIVE FUNCTION VALUES
; AND IOSB RETURN VALUES.  TO INVOKE AT ASSEMBLY TIME (WITH LOCAL
; DEFINITION) USE:
;
;	QIOSY$		;DEFINE SYMBOLS
;
; TO OBTAIN GLOBAL DEFINITION OF THESE SYMBOLS USE:
;
;	QIOSY$ DEF$G	;SYMBOLS DEFINED GLOBALLY
;
; THE MACRO CAN BE CALLED ONCE ONLY AND THEN
; REDEFINES ITSELF AS NULL.
;-

	.MACRO	QIOSY$	$$$GBL,$$$MSG
	.IIF	IDN,<$$$GBL>,<DEF$G>,	.GLOBL	QI.VER
	.IF	IDN,<$$$MSG>,<DEF$S>
	$$$MAX=0
	$$MSG=1
	.IFF
	$$MSG=0
	.ENDC
	.MCALL	IOERR$
	IOERR$	$$$GBL	 	;I/O ERROR CODES FROM HANDLERS, FCP, FCS
	.MCALL	DRERR$
	DRERR$	$$$GBL	 	;DIRECTIVE STATUS WORD ERROR CODES
	.IF	DIF,<$$$MSG>,<DEF$S>
	.MCALL	FILIO$
	FILIO$	$$$GBL		;DEFINE GENERAL I/O FUNCTION CODES
	.MCALL	SPCIO$
	SPCIO$	$$$GBL		;DEVICE DEPENDENT I/O FUNCTION CODES
	.MACRO	QIOSY$	ARG,ARG1,ARG2	;RECLAIM MACRO STORAGE
	.ENDM	QIOSY$
	.ENDC
	.ENDM	QIOSY$

;
; DEFINE THE ERROR CODES RETURNED BY DEVICE HANDLER AND FILE PRIMITIVES
; IN THE FIRST WORD OF THE I/O STATUS BLOCK
; THESE CODES ARE ALSO RETURNED BY FILE CONTROL SERVICES (FCS) IN THE
; BYTE F.ERR IN THE FILE DESCRIPTOR BLOCK (FDB)
;	THE BYTE F.ERR+1 IS 0 IF F.ERR CONTAINS A HANDLER OR FCP ERROR CODE.
;

	.ENABL	LC

	.MACRO	IOERR$	$$$GBL
	.MCALL	.IOER.,DEFIN$
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.IFF
	...GBL=0
	.ENDC
	.IIF	NDF,$$MSG,$$MSG=0
 
 
;
; SYSTEM STANDARD CODES, USED BY EXECUTIVE AND DRIVERS
;
 
	.IOER.	IE.BAD,-01.,<Bad parameters>
	.IOER.	IE.IFC,-02.,<Invalid function code>
	.IOER.	IE.DNR,-03.,<Device not ready>
	.IOER.	IE.VER,-04.,<Parity error on device>
	.IOER.	IE.ONP,-05.,<Hardware option not present>
	.IOER.	IE.SPC,-06.,<Illegal user buffer>
	.IOER.	IE.DNA,-07.,<Device not attached>
	.IOER.	IE.DAA,-08.,<Device already attached>
	.IOER.	IE.DUN,-09.,<Device not attachable>
	.IOER.	IE.EOF,-10.,<End of file detected>
	.IOER.	IE.EOV,-11.,<End of volume detected>
	.IOER.	IE.WLK,-12.,<Write attempted to locked unit>
	.IOER.	IE.DAO,-13.,<Data overrun>
	.IOER.	IE.SRE,-14.,<Send/receive failure>
	.IOER.	IE.ABO,-15.,<Request terminated>
	.IOER.	IE.PRI,-16.,<Privilege violation>
	.IOER.	IE.RSU,-17.,<Sharable resource in use>
	.IOER.	IE.OVR,-18.,<Illegal overlay request>
	.IOER.	IE.BYT,-19.,<Odd byte count (or virtual address)>
	.IOER.	IE.BLK,-20.,<Logical block number too large>
	.IOER.	IE.MOD,-21.,<Invalid UDC module #>
	.IOER.	IE.CON,-22.,<UDC connect error>
	.IOER.	IE.BBE,-56.,<Bad block on device>
	.IOER.	IE.STK,-58.,<Not enough stack space (FCS or FCP)>
	.IOER.	IE.FHE,-59.,<Fatal hardware error on device>
	.IOER.	IE.EOT,-62.,<End of tape detected>
	.IOER.	IE.OFL,-65.,<Device off line>
	.IOER.	IE.BCC,-66.,<Block check, CRC, or framing error>
	.IOER.	IE.NFW,-69.,<Path lost to partner> ;THIS CODE MUST BE ODD
	.IOER.	IE.DIS,-69.,<Path lost to partner> ;DISCONNECTED (SAME AS NFW)
	.IOER.	IE.NDR,-72.,<No dynamic space available> ; SEE ALSO IE.UPN
	.IOER.	IE.TMO,-95.,<Timeout on request>
	.IOER.	IE.CNR,-96.,<Connection rejected>


;
; FILE PRIMITIVE CODES 
;

	.IOER.	IE.NOD,-23.,<Caller's nodes exhausted>
	.IOER.	IE.DFU,-24.,<Device full>
	.IOER.	IE.IFU,-25.,<Index file full>
	.IOER.	IE.NSF,-26.,<No such file>
	.IOER.	IE.LCK,-27.,<Locked from read/write access>
	.IOER.	IE.HFU,-28.,<File header full>
	.IOER.	IE.WAC,-29.,<Accessed for write>
	.IOER.	IE.CKS,-30.,<File header checksum failure>
	.IOER.	IE.WAT,-31.,<Attribute control list format error>
	.IOER.	IE.RER,-32.,<File processor device read error>
	.IOER.	IE.WER,-33.,<File processor device write error>
	.IOER.	IE.ALN,-34.,<File already accessed on LUN>
	.IOER.	IE.SNC,-35.,<File ID, file number check>
	.IOER.	IE.SQC,-36.,<File ID, sequence number check>
	.IOER.	IE.NLN,-37.,<No file accessed on LUN>
	.IOER.	IE.CLO,-38.,<File was not properly closed>
	.IOER.	IE.DUP,-57.,<ENTER - duplicate entry in directory>
	.IOER.	IE.BVR,-63.,<Bad version number>
	.IOER.	IE.BHD,-64.,<Bad file header>
	.IOER.	IE.EXP,-75.,<File expiration date not reached>
	.IOER.	IE.BTF,-76.,<Bad tape format>
	.IOER.	IE.ALC,-84.,<Allocation failure>
	.IOER.	IE.ULK,-85.,<Unlock error>
	.IOER.	IE.WCK,-86.,<Write check failure>
	.IOER.	IE.DSQ,-90.,<Disk quota exceeded>

;
; FILE CONTROL SERVICES CODES
;

	.IOER.	IE.NBF,-39.,<OPEN - no buffer space available for file>
	.IOER.	IE.RBG,-40.,<Illegal record size>
	.IOER.	IE.NBK,-41.,<File exceeds space allocated, no blocks>
	.IOER.	IE.ILL,-42.,<Illegal operation on file descriptor block>
	.IOER.	IE.BTP,-43.,<Bad record type>
	.IOER.	IE.RAC,-44.,<Illegal record access bits set>
	.IOER.	IE.RAT,-45.,<Illegal record attributes bits set>
	.IOER.	IE.RCN,-46.,<Illegal record number - too large>
	.IOER.	IE.2DV,-48.,<Rename - 2 different devices>
	.IOER.	IE.FEX,-49.,<Rename - new file name already in use>
	.IOER.	IE.BDR,-50.,<Bad directory file>
	.IOER.	IE.RNM,-51.,<Can't rename old file system>
	.IOER.	IE.BDI,-52.,<Bad directory syntax>
	.IOER.	IE.FOP,-53.,<File already open>
	.IOER.	IE.BNM,-54.,<Bad file name>
	.IOER.	IE.BDV,-55.,<Bad device name>
	.IOER.	IE.NFI,-60.,<File ID was not specified>
	.IOER.	IE.ISQ,-61.,<Illegal sequential operation>
	.IOER.	IE.NNC,-77.,<Not ANSI 'D' format byte count>
 
;
; NETWORK ACP, PSI, AND DECDATAWAY CODES
;
 
	.IOER.	IE.NNN,-68.,<No such node>
	.IOER.	IE.BLB,-70.,<Bad logical buffer>
	.IOER.	IE.URJ,-73.,<Connection rejected by user>
	.IOER.	IE.NRJ,-74.,<Connection rejected by network>
	.IOER.	IE.NDA,-78.,<No data available>
	.IOER.	IE.IQU,-91.,<Inconsistent qualifier usage>
	.IOER.	IE.RES,-92.,<Circuit reset during operation>
	.IOER.	IE.TML,-93.,<Too many links to task>
	.IOER.	IE.NNT,-94.,<Not a network task>
	.IOER.	IE.UKN,-97.,<Unknown name>

;
; ICS/ICR ERROR CODES
;
	.IOER.	IE.NLK,-79.,<Task not linked to specified ICS/ICR interrupts>
	.IOER.	IE.NST,-80.,<Specified task not installed>
	.IOER.	IE.FLN,-81.,<Device offline when offline request was issued>
 
 
;
; TTY ERROR CODES
;
 
	.IOER.	IE.IES,-82.,<Invalid escape sequence>
	.IOER.	IE.PES,-83.,<Partial escape sequence>
 
 
;
; RECONFIGURATION CODES
;
 
	.IOER.	IE.ICE,-47.,<Internal consistancy error>
	.IOER.	IE.ONL,-67.,<Device online>
	.IOER.	IE.SZE,-98.,<Unable to size device>
 
;
; PCL ERROR CODES
;
 
	.IOER.	IE.NTR,-87.,<Task not triggered>
	.IOER.	IE.REJ,-88.,<Transfer rejected by receiving CPU>
	.IOER.	IE.FLG,-89.,<Event flag already specified>

 
;
; SUCCESSFUL RETURN CODES---
;

	DEFIN$	IS.PND,+00.	;OPERATION PENDING
	DEFIN$	IS.SUC,+01.	;OPERATION COMPLETE, SUCCESS
	DEFIN$	IS.RDD,+02.	;FLOPPY DISK SUCCESSFUL COMPLETION
				;OF A READ PHYSICAL, AND DELETED
				;DATA MARK WAS SEEN IN SECTOR HEADER
	DEFIN$	IS.TNC,+02.	;(PCL) SUCCESSFUL TRANSFER BUT MESSAGE
				;TRUNCATED (RECEIVE BUFFER TOO SMALL).
	DEFIN$	IS.BV,+05.	;(A/D READ) AT LEAST ONE BAD VALUE
				;WAS READ (REMAINDER MAY BE GOOD).
				;BAD CHANNEL IS INDICATED BY A
				;NEGATIVE VALUE IN THE BUFFER.
	DEFIN$	IS.DAO,+02.	;SUCCESSFUL BUT WITH DATA OVERRUN
				;(NOT TO BE CONFUSED WITH IE.DAO)


;
; TTY SUCCESS CODES
;

	DEFIN$	IS.CR,<15*400+1>  ;CARRIAGE RETURN WAS TERMINATOR
	DEFIN$	IS.ESC,<33*400+1> ;ESCAPE (ALTMODE) WAS TERMINATOR
	DEFIN$	IS.CC,<3*400+1>	;CONTROL-C WAS TERMINATOR
	DEFIN$	IS.ESQ,<233*400+1>  ;ESCAPE SEQUENCE WAS TERMINATOR
	DEFIN$	IS.PES,<200*400+1>  ;PARTIAL ESCAPE SEQUENCE TERMINATOR
	DEFIN$	IS.EOT,<4*400+1>  ;EOT WAS TERMINATOR (BLOCK MODE INPUT)
	DEFIN$	IS.TAB,<11*400+1> ;TAB WAS TERMINATOR (FORMS MODE INPUT)
	DEFIN$	IS.TMO,+2.	;REQUEST TIMED OUT


; ******
;
; THE NEXT AVAILABLE ERROR NUMBER IS: -99.
; NUMBER -71. IS AVAILABLE AND MAY BE REASSIGNED
; AFTER 11M V4.0 AND M-PLUS V2.0
;
; *****
	.IF	EQ,$$MSG
	.MACRO	IOERR$	A
	.ENDM	IOERR$
	.ENDC
	.ENDM	IOERR$

;
; DEFINE THE DIRECTIVE ERROR CODES RETURNED IN THE DIRECTIVE STATUS WORD
;
;	FILE CONTROL SERVICES (FCS) RETURNS THESE CODES IN THE BYTE F.ERR 
; OF THE FILE DESCRIPTOR BLOCK (FDB).  TO DISTINGUISH THEM FROM THE
; OVERLAPPING CODES FROM HANDLER AND FILE PRIMITIVES, THE BYTE
; F.ERR+1 IN THE FDB WILL BE NEGATIVE FOR A DIRECTIVE ERROR CODE.
;
	.MACRO	DRERR$	$$$GBL
	.MCALL	.QIOE.,DEFIN$
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.IFF
	...GBL=0
	.ENDC
	.IIF	NDF,$$MSG,$$MSG=0
;
; STANDARD ERROR CODES RETURNED BY DIRECTIVES IN THE DIRECTIVE STATUS WORD
;
	.QIOE.	IE.UPN,-01.,<Insufficient dynamic storage> ; SEE ALSO IE.NDR
	.QIOE.	IE.INS,-02.,<Specified task not installed>
	.QIOE.	IE.PTS,-03.,<Partition too small for task>
	.QIOE.	IE.UNS,-04.,<Insufficient dynamic storage for send>
	.QIOE.	IE.ULN,-05.,<Un-assigned LUN>
	.QIOE.	IE.HWR,-06.,<Device handler not resident>
	.QIOE.	IE.ACT,-07.,<Task not active>
	.QIOE.	IE.ITS,-08.,<Directive inconsistent with task state>
	.QIOE.	IE.FIX,-09.,<Task already fixed/unfixed>
	.QIOE.	IE.CKP,-10.,<Issuing task not checkpointable>
	.QIOE.	IE.TCH,-11.,<Task is checkpointable>
	.QIOE.	IE.RBS,-15.,<Receive buffer is too small>
	.QIOE.	IE.PRI,-16.,<Privilege violation>
	.QIOE.	IE.RSU,-17.,<Resource in use>
	.QIOE.	IE.NSW,-18.,<No swap space available>
	.QIOE.	IE.ILV,-19.,<Illegal vector specified>
;
;
;
	.QIOE.	IE.AST,-80.,<Directive issued/not issued from AST>
	.QIOE.	IE.MAP,-81.,<Illegal mapping specified>
	.QIOE.	IE.IOP,-83.,<Window has I/O in progress>
	.QIOE.	IE.ALG,-84.,<Alignment error>
	.QIOE.	IE.WOV,-85.,<Address window allocation overflow>
	.QIOE.	IE.NVR,-86.,<Invalid region ID>
	.QIOE.	IE.NVW,-87.,<Invalid address window ID>
	.QIOE.	IE.ITP,-88.,<Invalid TI parameter>
	.QIOE.	IE.IBS,-89.,<Invalid send buffer size ( .GT. 255.)>
	.QIOE.	IE.LNL,-90.,<LUN locked in use>
	.QIOE.	IE.IUI,-91.,<Invalid UIC>
	.QIOE.	IE.IDU,-92.,<Invalid device or unit>
	.QIOE.	IE.ITI,-93.,<Invalid time parameters>
	.QIOE.	IE.PNS,-94.,<Partition/region not in system>
	.QIOE.	IE.IPR,-95.,<Invalid priority ( .GT. 250.)>
	.QIOE.	IE.ILU,-96.,<Invalid LUN>
	.QIOE.	IE.IEF,-97.,<Invalid event flag ( .GT. 64.)>
	.QIOE.	IE.ADP,-98.,<Part of DPB out of user's space>
	.QIOE.	IE.SDP,-99.,<DIC or DPB size invalid>
;
; SUCCESS CODES FROM DIRECTIVES - PLACED IN THE DIRECTIVE STATUS WORD
;
	DEFIN$	IS.CLR,0	;EVENT FLAG WAS CLEAR
				;FROM CLEAR EVENT FLAG DIRECTIVE
	DEFIN$	IS.SET,2	;EVENT FLAG WAS SET
				;FROM SET EVENT FLAG DIRECTIVE
	DEFIN$	IS.SPD,2	;TASK WAS SUSPENDED
;
;
	.IF	EQ,$$MSG
	.MACRO	DRERR$	A
	.ENDM	DRERR$
	.ENDC
	.ENDM	DRERR$

;
; DEFINE THE GENERAL I/O FUNCTION CODES - DEVICE INDEPENDENT
;
	.MACRO	FILIO$	$$$GBL
	.MCALL	.WORD.,DEFIN$
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.IFF
	...GBL=0
	.ENDC
;
; GENERAL I/O QUALIFIER BYTE DEFINITIONS
;
	.WORD.	IQ.X,001,000	;NO ERROR RECOVERY
	.WORD.	IQ.Q,002,000	;QUEUE REQUEST IN EXPRESS QUEUE
	.WORD.	IQ.S,004,000	;SYNONYM FOR IQ.UMD
	.WORD.	IQ.UMD,004,000	;USER MODE DIAGNOSTIC STATUS REQUIRED
	.WORD.	IQ.LCK,200,000	;MODIFY IMPLIED LOCK FUNCTION
;
; EXPRESS QUEUE COMMANDS 
;

	.WORD.	IO.KIL,012,000	;KILL CURRENT REQUEST
	.WORD.	IO.RDN,022,000	;I/O RUNDOWN
	.WORD.	IO.UNL,042,000	;UNLOAD I/O HANDLER TASK
	.WORD.	IO.LTK,050,000	;LOAD A TASK IMAGE FILE
	.WORD.	IO.RTK,060,000	;RECORD A TASK IMAGE FILE
	.WORD.	IO.SET,030,000	;SET CHARACTERISTICS FUNCTION
;
; GENERAL DEVICE HANDLER CODES
;
	.WORD.	IO.WLB,000,001	;WRITE LOGICAL BLOCK
	.WORD.	IO.RLB,000,002	;READ LOGICAL BLOCK
	.WORD.	IO.LOV,010,002	;LOAD OVERLAY (DISK DRIVER)
	.WORD.	IO.LDO,110,002	;LOAD D-SPACE OVERLAY (DISK)
	.WORD.	IO.ATT,000,003	;ATTACH A DEVICE TO A TASK
	.WORD.	IO.DET,000,004	;DETACH A DEVICE FROM A TASK
;
; DIRECTORY PRIMITIVE CODES 
;
	.WORD.	IO.FNA,000,011	;FIND FILE NAME IN DIRECTORY
	.WORD.	IO.RNA,000,013	;REMOVE FILE NAME FROM DIRECTORY
	.WORD.	IO.ENA,000,014	;ENTER FILE NAME IN DIRECTORY
;
; FILE PRIMITIVE CODES 
;
	.WORD.	IO.CLN,000,007	;CLOSE OUT LUN
	.WORD.	IO.ULK,000,012	;UNLOCK BLOCK
	.WORD.	IO.ACR,000,015	;ACCESS FOR READ
	.WORD.	IO.ACW,000,016	;ACCESS FOR WRITE
	.WORD.	IO.ACE,000,017	;ACCESS FOR EXTEND
	.WORD.	IO.DAC,000,020	;DE-ACCESS FILE
	.WORD.	IO.RVB,000,021	;READ VIRITUAL BLOCK
	.WORD.	IO.WVB,000,022	;WRITE VIRITUAL BLOCK
	.WORD.	IO.EXT,000,023	;EXTEND FILE
	.WORD.	IO.CRE,000,024	;CREATE FILE
	.WORD.	IO.DEL,000,025	;DELETE FILE
	.WORD.	IO.RAT,000,026	;READ FILE ATTRIBUTES
	.WORD.	IO.WAT,000,027	;WRITE FILE ATTRIBUTES
	.WORD.	IO.APV,010,030	;PRIVILEGED ACP CONTROL
	.WORD.	IO.APC,000,030	;ACP CONTROL
;
;
	.MACRO	FILIO$	A
	.ENDM	FILIO$
	.ENDM	FILIO$

;
; DEFINE THE I/O FUNCTION CODES THAT ARE SPECIFIC TO INDIVIDUAL DEVICES
;
	.MACRO	SPCIO$	$$$GBL
	.MCALL	.WORD.,DEFIN$
	.IF	IDN,<$$$GBL>,<DEF$G>
	...GBL=1
	.IFF
	...GBL=0
	.ENDC
;
; I/O FUNCTION CODES FOR SPECIFIC DEVICE DEPENDENT FUNCTIONS
;
	.WORD.	IO.WLV,100,001	;(DECTAPE) WRITE LOGICAL REVERSE
	.WORD.	IO.WLS,010,001	;(COMM.) WRITE PRECEDED BY SYNC TRAIN
	.WORD.	IO.WNS,020,001	;(COMM.) WRITE, NO SYNC TRAIN
	.WORD.	IO.WAL,010,001	;(TTY) WRITE PASSING ALL CHARACTERS
	.WORD.	IO.WMS,020,001	;(TTY) WRITE SUPPRESSIBLE MESSAGE
	.WORD.	IO.CCO,040,001	;(TTY) WRITE WITH CANCEL CONTROL-O
	.WORD.	IO.WBT,100,001	;(TTY) WRITE WITH BREAKTHROUGH
	.WORD.	IO.WLT,010,001	;(DISK) WRITE LAST TRACK
	.WORD.	IO.WLC,020,001	;(DISK) WRITE LOGICAL W/ WRITECHECK
	.WORD.	IO.WPB,040,001	;(DISK) WRITE PHYSICAL BLOCK
	.WORD.	IO.WDD,140,001	;(FLOPPY DISK) WRITE PHYSICAL W/ DELETED DATA
	.WORD.	IO.RSN,140,002	;(MSCP DISK) READ VOLUME SERIAL NUMBER
	.WORD.	IO.RLV,100,002	;(MAGTAPE,DECTAPE) READ REVERSE
	.WORD.	IO.RST,001,002	;(TTY) READ WITH SPECIAL TERMINATOR
	.WORD.	IO.RAL,010,002	;(TTY) READ PASSING ALL CHARACTERS
	.WORD.	IO.RNE,020,002	;(TTY) READ WITHOUT ECHO
	.WORD.	IO.RNC,040,002	;(TTY) READ - NO LOWER CASE CONVERT
	.WORD.	IO.RTM,200,002	;(TTY) READ WITH TIME OUT
	.WORD.	IO.RDB,200,002	;(CARD READER) READ BINARY MODE
	.WORD.	IO.SCF,200,002	;(DISK) SHADOW COPY FUNCTION
	.WORD.	IO.RHD,010,002	;(COMM.) READ, STRIP SYNC
	.WORD.	IO.RNS,020,002	;(COMM.) READ, DON'T STRIP SYNC
	.WORD.	IO.CRC,040,002	;(COMM.) READ, DON'T CLEAR CRC
	.WORD.	IO.RPB,040,002	;(DISK) READ PHYSICAL BLOCK
	.WORD.	IO.RLC,020,002	;(DISK,MAGTAPE) READ LOGICAL W/ READCHECK
	.WORD.	IO.ATA,010,003	;(TTY) ATTACH WITH AST'S
	.WORD.	IO.GTS,000,005	;(TTY) GET TERMINAL SUPPORT CHARACTERISTICS
	.WORD.	IO.R1C,000,005	;(AFC,AD01,UDC) READ SINGLE CHANNEL
	.WORD.	IO.INL,000,005	;(COMM.) INITIALIZATION FUNCTION
	.WORD.	IO.TRM,010,005	;(COMM.) TERMINATION FUNCTION
	.WORD.	IO.RWD,000,005	;(MAGTAPE,DECTAPE) REWIND
	.WORD.	IO.SPB,020,005	;(MAGTAPE) SPACE "N" BLOCKS
	.WORD.	IO.RPL,020,005	;(DISK) REPLACE LOGICAL BLOCK (RESECTOR)
	.WORD.	IO.SPF,040,005	;(MAGTAPE) SPACE "N" EOF MARKS
	.WORD.	IO.STC,100,005	;SET CHARACTERISTIC
	.WORD.	IO.SMD,110,005	;(FLOPPY DISK) SET MEDIA DENSITY
	.WORD.	IO.SEC,120,005	;SENSE CHARACTERISTIC
	.WORD.	IO.RWU,140,005	;(MAGTAPE,DECTAPE) REWIND AND UNLOAD
	.WORD.	IO.SMO,160,005	;(MAGTAPE) MOUNT & SET CHARACTERISTICS
	.WORD.	IO.HNG,000,006	;(TTY) HANGUP DIAL-UP LINE
	.WORD.	IO.RBC,000,006	;READ MULTICHANNELS (BUFFER DEFINES CHANNELS)
	.WORD.	IO.MOD,000,006	;(COMM.) SETMODE FUNCTION FAMILY
	.WORD.	IO.HDX,010,006	;(COMM.) SET UNIT HALF DUPLEX
	.WORD.	IO.FDX,020,006	;(COMM.) SET UNIT FULL DUPLEX
	.WORD.	IO.SYN,040,006	;(COMM.) SPECIFY SYNC CHARACTER
	.WORD.	IO.EOF,000,006	;(MAGTAPE) WRITE EOF
	.WORD.	IO.ERS,020,006	;(MAGTAPE) ERASE TAPE
	.WORD.	IO.DSE,040,006	;(MAGTAPE) DATA SECURITY ERASE
	.WORD.	IO.RTC,000,007	;READ CHANNEL - TIME BASED
	.WORD.	IO.SAO,000,010	;(UDC) SINGLE CHANNEL ANALOG OUTPUT
	.WORD.	IO.SSO,000,011	;(UDC) SINGLE SHOT, SINGLE POINT
	.WORD.	IO.RPR,000,011	;(TTY) READ WITH PROMPT
	.WORD.	IO.MSO,000,012	;(UDC) SINGLE SHOT, MULTI-POINT
	.WORD.	IO.RTT,001,012	;(TTY) READ WITH TERMINATOR TABLE
	.WORD.	IO.SLO,000,013	;(UDC) LATCHING, SINGLE POINT
	.WORD.	IO.MLO,000,014	;(UDC) LATCHING, MULTI-POINT
	.WORD.	IO.LED,000,024	;(LPS11) WRITE LED DISPLAY LIGHTS
	.WORD.	IO.SDO,000,025	;(LPS11) WRITE DIGITAL OUTPUT REGISTER
	.WORD.	IO.SDI,000,026	;(LPS11) READ DIGITAL INPUT REGISTER
	.WORD.	IO.SCS,000,026	;(UDC) CONTACT SENSE, SINGLE POINT
	.WORD.	IO.REL,000,027	;(LPS11) WRITE RELAY
	.WORD.	IO.MCS,000,027	;(UDC) CONTACT SENSE, MULTI-POINT
	.WORD.	IO.ADS,000,030	;(LPS11) SYNCHRONOUS A/D SAMPLING
	.WORD.	IO.CCI,000,030	;(UDC) CONTACT INT - CONNECT
	.WORD.	IO.LOD,000,030	;(LPA11) LOAD MICROCODE
	.WORD.	IO.MDI,000,031	;(LPS11) SYNCHRONOUS DIGITAL INPUT
	.WORD.	IO.DCI,000,031	;(UDC) CONTACT INT - DISCONNECT
	.WORD.	IO.PAD,000,031	;(PSI) DIRECT CONTROL OF X.29 PAD
	.WORD.	HT.RPP,010,000	;(PSI) RESET PAD PARAMETERS SUBFUNCTION
	.WORD.	IO.XMT,000,031	;(COMM.) TRANSMIT SPECIFIED BLOCK WITH ACK
	.WORD.	IO.XNA,010,031	;(COMM.) TRANSMIT WITHOUT ACK
	.WORD.	IO.INI,000,031	;(LPA11) INITIALIZE
	.WORD.	IO.HIS,000,032	;(LPS11) SYNCHRONOUS HISTOGRAM SAMPLING
	.WORD.	IO.RCI,000,032	;(UDC) CONTACT INT - READ
	.WORD.	IO.RCV,000,032	;(COMM.) RECEIVE DATA IN BUFFER SPECIFIED
	.WORD.	IO.CLK,000,032	;(LPA11) START CLOCK
	.WORD.	IO.CSR,000,032	;(BUS SWITCH) READ CSR REGISTER
	.WORD.	IO.MDO,000,033	;(LPS11) SYNCHRONOUS DIGITAL OUTPUT
	.WORD.	IO.CTI,000,033	;(UDC) TIMER - CONNECT
	.WORD.	IO.CON,000,033	;(COMM.) CONNECT FUNCTION
				;(VT11) - CONNECT TASK TO DISPLAY PROCESSOR
				;(BUS SWITCH) CONNECT TO SPECIFIED BUS
	.WORD.	IO.STA,000,033	;(LPA11) START DATA TRANSFER
	.WORD.	IO.DTI,000,034	;(UDC) TIMER - DISCONNECT
	.WORD.	IO.DIS,000,034	;(COMM.) DISCONNECT FUNCTION
				;(VT11) - DISCONNECT TASK FROM DISPLAY PROCESSOR
				;(BUS SWITCH) SWITCHED BUS DISCONNECT
	.WORD.	IO.MDA,000,034	;(LPS11) SYNCHRONOUS D/A OUTPUT
	.WORD.	IO.DPT,010,034	;(BUS SWITCH) DISCONNECT TO SPECIF PORT NO.
	.WORD.	IO.RTI,000,035	;(UDC) TIMER - READ
	.WORD.	IO.CTL,000,035	;(COMM.) NETWORK CONTROL FUNCTION
	.WORD.	IO.STP,000,035	;(LPS11,LPA11) STOP IN PROGRESS FUNCTION
				;(VT11) - STOP DISPLAY PROCESSOR
	.WORD.	IO.SWI,000,035	;(BUS SWITCH) SWITCH BUSSES
	.WORD.	IO.CNT,000,036	;(VT11) - CONTINUE DISPLAY PROCESSOR
	.WORD.	IO.ITI,000,036	;(UDC) TIMER - INITIALIZE
 
 
;
; COMMUNICATIONS FUNCTIONS
;
 
	.WORD.	IO.CPR,010,033	;CONNECT NO TIMEOUTS
	.WORD.	IO.CAS,020,033	;CONNECT WITH AST
	.WORD.	IO.CRJ,040,033	;CONNECT REJECT
	.WORD.	IO.CBO,110,033	;BOOT CONNECT
	.WORD.	IO.CTR,210,033	;TRANSPARENT CONNECT
	.WORD.	IO.GNI,010,035	;GET NODE INFORMATION
	.WORD.	IO.GLI,020,035	;GET LINK INFORMATION
	.WORD.	IO.GLC,030,035	;GET LINK INFO CLEAR COUNTERS
	.WORD.	IO.GRI,040,035	;GET REMOTE NODE INFORMATION
	.WORD.	IO.GRC,050,035	;GET REMOTE NODE ERROR COUNTS
	.WORD.	IO.GRN,060,035	;GET REMOTE NODE NAME
	.WORD.	IO.CSM,070,035	;CHANGE SOLO MODE
	.WORD.	IO.CIN,100,035	;CHANGE CONNECTION INHIBIT
	.WORD.	IO.SPW,110,035	;SPECIFY NETWORK PASSWORD
	.WORD.	IO.CPW,120,035	;CHECK NETWORK PASSWORD.
	.WORD.	IO.NLB,130,035	;NSP LOOPBACK
	.WORD.	IO.DLB,140,035	;DDCMP LOOPBACK
 
;
; ICS/ICR I/O FUNCTIONS
;
	.WORD.	IO.CTY,000,007	;CONNECT TO TERMINAL INTERRUPTS
	.WORD.	IO.DTY,000,015	;DISCONNECT FROM TERMINAL INTERRUPTS
	.WORD.	IO.LDI,000,016	;LINK TO DIGITAL INTERRUPTS
	.WORD.	IO.UDI,010,023	;UNLINK FROM DIGITAL INTERRUPTS
	.WORD.	IO.LTI,000,017	;LINK TO COUNTER MODULE INTERRUPTS
	.WORD.	IO.UTI,020,023	;UNLINK FROM COUNTER MODULE INTERRUPTS
	.WORD.	IO.LTY,000,020	;LINK TO REMOTE TERMINAL INTERRUPTS
	.WORD.	IO.UTY,030,023	;UNLINK FROM REMOTE TERMINAL INTERRUPTS
	.WORD.	IO.LKE,000,024	;LINK TO ERROR INTERRUPTS
	.WORD.	IO.UER,040,023	;UNLINK FROM ERROR INTERRUPTS
	.WORD.	IO.NLK,000,023	;UNLINK FROM ALL INTERRUPTS
	.WORD.	IO.ONL,000,037	;UNIT ONLINE
	.WORD.	IO.FLN,000,025	;UNIT OFFLINE
	.WORD.	IO.RAD,000,021	;READ ACTIVATING DATA
 
;
; IP11 I/O FUNCTIONS
;
	.WORD.	IO.MAO,010,007	;MULTIPLE ANALOG OUTPUTS
	.WORD.	IO.LEI,010,017	;LINK EVENT FLAGS TO INTERRUPT
	.WORD.	IO.RDD,010,020	;READ DIGITAL DATA
	.WORD.	IO.RMT,020,020	;READ MAPPING TABLE
	.WORD.	IO.LSI,000,022	;LINK TO DSI INTERRUPTS
	.WORD.	IO.UEI,050,023	;UNLINK EVENT FLAGS
	.WORD.	IO.USI,060,023	;UNLINK FROM DSI INTERRUPTS
	.WORD.	IO.CSI,000,026	;CONNECT TO DSI INTERRUPTS
	.WORD.	IO.DSI,000,027	;DISCONNECT FROM DSI INTERRUPTS
 
;
; PCL11 I/O FUNCTIONS
;
 
	.WORD.	IO.ATX,000,001	;ATTEMPT TRANSMISSION
	.WORD.	IO.ATF,000,002	;ACCEPT TRANSFER
	.WORD.	IO.CRX,000,031	;CONNECT FOR RECEPTION
	.WORD.	IO.DRX,000,032	;DISCONNECT FROM RECEPTION
	.WORD.	IO.RTF,000,033	;REJECT TRANSFER
 
 
	.MACRO	SPCIO$	A
	.ENDM	SPCIO$
	.ENDM	SPCIO$

;
; DEFINE THE I/O CODES FOR USER-MODE DIAGNOSITCS.  ALL DIAGNOSTIC
; FUNCTION ARE IMPLEMENTED AS A SUBFUNCTION OF I/O CODE 10 (OCTAL).
;
 
	.MACRO	UMDIO$	$$$GBL
	.MCALL	.WORD.,DEFIN$
	.IF IDN	<$$$GBL>,<DEF$G>
...GBL=1
	.IFF
...GBL=0
	.ENDC
 
;
; DEFINE THE GENERAL USER-MODE I/O QUALIFIER BIT.
;
 
	.WORD.	IQ.UMD,004,000	;USER MODE DIAGNOSTIC REQUEST
 
;
; DEFINE USER-MODE DIAGNOSTIC FUNCTIONS.
;
 
	.WORD.	IO.HMS,000,010	;(DISK) HOME SEEK OR RECALIBRATE
	.WORD.	IO.BLS,010,010	;(DISK) BLOCK SEEK
	.WORD.	IO.OFF,020,010	;(DISK) OFFSET POSITION
	.WORD.	IO.RDH,030,010	;(DISK) READ DISK HEADER
	.WORD.	IO.WDH,040,010	;(DISK) WRITE DISK HEADER
	.WORD.	IO.WCK,050,010	;(DISK) WRITECHECK (NON-TRANSFER)
	.WORD.	IO.RNF,060,010	;(DECTAPE) READ BLOCK NUMBER FORWARD
	.WORD.	IO.RNR,070,010	;(DECTAPE) READ BLOCK NUMBER REVERSE
	.WORD.	IO.LPC,100,010	;(MAGTAPE) READ LONGITUDINAL PARITY CHAR
	.WORD.	IO.RTD,120,010	;(DISK) READ TRACK DESCRIPTOR
	.WORD.	IO.WTD,130,010	;(DISK) WRITE TRACK DESCRIPTOR
	.WORD.	IO.TDD,140,010	;(DISK) WRITE TRACK DESCRIPTOR DISPLACED
	.WORD.	IO.DGN,150,010	;DIAGNOSE MICRO PROCESSOR FIRMWARE
	.WORD.	IO.WPD,160,010	;(DISK) WRITE PHYSICAL BLOCK
	.WORD.	IO.RPD,170,010	;(DISK) READ PHYSICAL BLOCK
	.WORD.	IO.CER,200,010	;(DISK) READ CE BLOCK
	.WORD.	IO.CEW,210,010	;(DISK) WRITE CE BLOCK
 
;
; MACRO REDEFINITION TO NULL
;
 
	.MACRO	UMDIO$	A
	.ENDM
 
 
	.ENDM	UMDIO$

;
; HANDLER ERROR CODES RETURNED IN I/O STATUS BLOCK ARE DEFINED THROUGH THIS
; MACRO WHICH THEN CONDITIONALLY INVOKES THE MESSAGE GENERATING MACRO
; FOR THE QIOSYM.MSG FILE
;
	.MACRO	.IOER.	SYM,LO,MSG
	DEFIN$	SYM,LO
	.IF	GT,$$MSG
	.MCALL	.IOMG.
	.IOMG.	SYM,LO,<MSG>
	.ENDC
	.ENDM	.IOER.
;
; I/O ERROR CODES ARE DEFINED THOUGH THIS MACRO WHICH THEN INVOKES THE
; ERROR MESSAGE GENERATING MACRO, ERROR CODES -129 THROUGH -256
; ARE USED IN THE QIOSYM.MSG FILE
;
	.MACRO	.QIOE.	SYM,LO,MSG
	DEFIN$	SYM,LO
	.IF	GT,$$MSG
	.MCALL	.IOMG.
	.IOMG.	SYM,<LO-128.>,<MSG>
	.ENDC
	.ENDM	.QIOE.
;
; CONDITIONALLY GENERATE DATA FOR WRITING A MESSAGE FILE
;
	.MACRO	.IOMG.	SYM,LO,MSG
	.WORD	-^O<LO>
	.ENABL	LC
	.ASCIZ	^MSG^
	.DSABL	LC
	.EVEN
	.IIF	LT,^O<$$$MAX+<LO>>,$$$MAX=-^O<LO>
	.ENDM	.IOMG.
;
; DEFINE THE SYMBOL SYM WHERE LO IS IS THE LOW ORDER BYTE, HI IS THE HIGH BYTE
;
	.MACRO	.WORD.	SYM,LO,HI
	DEFIN$	SYM,<HI*400+LO>
	.ENDM	.WORD.

	.DSABL	LC
