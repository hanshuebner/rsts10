	$BEGIN	UPWARD,<17.0>,<SEARCH HIGHER DIRECTORIES FOR FILE>
; ALTERED:
; G. H. KUENNING - 20-SEP-78
;	GK001 - CHANGE POP-SEARCHING TO USE "POP.POP" INSTEAD OF
;		"POP.DIR"
;
; COPYRIGHT (C) 1978, DIGITAL EQUIPMENT CORP., MAYNARD MASS.

; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.

; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.

; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY
; OF ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;
; GEOFF KUENNING 29-AUG-78
;
;+
; SEARCH UPWARDS FOR FILE
;	THIS ROUTINE IS CALLED AFTER A ..FIND FAILURE.  IF THE REASON
;	FOR THE FAILURE IS IE.NSF, THE ROUTINE ATTEMPTS TO LOCATE A
;	DIRECTORY WITHIN THE CURRENT ONE THAT IS NAMED "POP.DIR".  IF
;	SUCH A DIRECTORY IS FOUND, IT IS RE-SEARCHED FOR THE DESIRED
;	FILE.  THIS PROCESS REPEATS UNTIL THE FILE IS FOUND, NO
;	DIRECTORY NAMED "POP.DIR" CAN BE FOUND, OR 100 POPS HAVE BEEN
;	DONE (THIS LAST TO PROTECT AGAINST CIRCULAR DIRECTORIES).
; CALLING SEQUENCE:
;	CALL	..UPWD
; INPUTS:
;	R0=FDB ADDRESS
;	R1=FILE NAME BLOCK ADDRESS
;	LUN IN F.LUN(R0) IS ASSIGNED TO DEV IN FNB
;	FILE NAME BLOCK ALL SET FOR DIRECTORY PRIMITIVE CALL
; OUTPUTS:
;	C=0 IF SUCCESSFUL, FNB FILLED IN BY DIRECTORY PRIMITIVE
;	C=1 IF FAILURE, F.ERR SET TO REASON
;	R0,R1 PRESERVED, R2-R5 DESTROYED
;-

	.IIF NDF,FA.NSR,FA.NSR=200

	.IF GT	R$$NAM

..UPWD::MOV	#POPLIM,-(SP)	; PUT LIMITATION ON STACK
	BIT	#NB.SVR!NB.STP!NB.SNM!NB.DIR,N.STAT(R1) ; ANY WILDCARDS?
	BNE	RETERR		; IF NE YES, JUST RETURN ERROR
	BITB	#FA.NSR,F.FACC(R0) ; UPWARD SEARCH INHIBITED?
	BNE	RETERR		; IF NE YES, JUST RETURN ERROR

10$:	CMPB	F.ERR(R0),#IE.NSF ; IS THE ERROR NO SUCH FILE?
	BNE	RETERR		; IF NE NO, JUST RETURN ERROR
	MOV	R1,R2		; COPY FNB POINTER FOR SETUP
	ADD	#N.FNAM,R2	; POINT AT FILENAME AREA
	MOV	(R2),-(SP)	; SAVE 1ST WORD OF FILENAME
	MOV	#POPNAM,(R2)+	; AND CHANGE 1ST WORD TO "POP"
	MOV	(R2),-(SP)	; SAVE 2ND WORD OF FILENAME
	CLR	(R2)+		; AND REPLACE IT WITH ZEROES
	MOV	(R2),-(SP)	; SAME FOR 3RD WORD
	CLR	(R2)+		; ...
	MOV	(R2),-(SP)	; SAVE FILE TYPE
	MOV	#POPNAM,(R2)+	; AND REPLACE WITH ".POP"			; GK001
	MOV	(R2),-(SP)	; SAME FOR FILE VERSION				;**-1
	MOV	#1,(R2)		; ..REPLACE WITH ";1"
	MOV	R2,-(SP)	; SAVE PTR TO MIDDLE OF FNB FOR LATER
	CLR	N.NEXT(R1)	; CLEAR SEARCH CONTEXT
	CALL	..FIND		; ATTEMPT TO LOCATE NEXT-UPWARD DIR
	MOV	(SP)+,R2	; RECOVER PTR INTO FNB
	MOV	(SP)+,(R2)	; RESTORE FILE VERSION
	MOV	(SP)+,-(R2)	; RESTORE FILE TYPE
	MOV	(SP)+,-(R2)	; RESTORE FILENAME
	MOV	(SP)+,-(R2)	; ...
	MOV	(SP)+,-(R2)	; ...
	BCS	RETERR		; BRANCH IF COULDN'T FIND DIRECTORY
	CLR	N.NEXT(R1)	; CLEAR SEARCH CONTEXT AGAIN
	MOV	R1,R2		; COPY FNB POINTER
	MOV	R1,R3		; ...
	ADD	#N.DID,R3	; ...
	MOV	(R2)+,(R3)+	; COPY DIRECTORY'S FILE ID
	MOV	(R2)+,(R3)+	; ...
	MOV	(R2)+,(R3)+	; ...
	CLR	(R1)		; CLEAR OLD FILE ID
	CALL	..FIND		; TRY TO FIND THE FILE NAME IN THIS DIR
	BCS	20$		; BRANCH IF WE COULDN'T
	TST	(SP)+		; POP LOOP COUNTER OFF STACK
	MOV	#IS.SUC,F.ERR(R0) ; CLEAR ERROR CODE
	CLC			; AND RETURN SUCCESS
	RETURN

20$:	DEC	(SP)		; HAVE WE TRIED TOO MANY TIMES?
	BNE	10$		; IF NE NO, GO TRY ANOTHER LEVEL

RETERR:	TST	(SP)+		; POP STACK
	SEC			; AND RETURN AN ERROR
	RETURN			; ...

	.ENDC

;
;
	$END	DIRFND
;
	.END
