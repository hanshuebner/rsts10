TITLE	FSS,<RSTS FILE STRING SCAN INTERFACE>,14,18-APR-85,SSS

;
;		COPYRIGHT (c) 1974, 1985 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

;+
; RSTS FILE STRING SCAN INTERFACE
; CALLING SEQUENCE
;	MOV	#<MASK>,R5	;MOVE ADDRESS OF MASK INTO R5
;	CALL	..FSS
;		FOR I/D SPACE SUGGESTED CALLING IS:
;		MOV	#<MASK>,-(SP)	;PUT MASK ON STACK
;		MOV	SP,R5		;GET THE ADDRESS OF THE MASK
;		CALL	..FSS		;DO THE CALL
;		INC	(SP)+		;TRASH THE MASK, LEAVING CARRY
;		BCS/BCC	???		;ERROR CHECK
; INPUTS:
;	R3=ADDRESS OF STRING (DEVICE, DIRECTORY, OR FILENAME)
;	R2=SIZE OF STRING
;	MASK=BITMAP WORD INDICATING ALLOWABLE ELEMENTS:
;		1	FILENAME
;		2	FILENAME = ONE *
;		4	FILENAME CONTAINING ?
;		10	FILE EXTENSION
;		20	NON-NULL FILE EXTENSION
;		40	FILE EXTENSION = ONE *
;		100	FILE EXTENSION CONTAINING ?
;		200	PPN (INCLUDING SPECIAL RSTS PPN'S: $ ! %  & # @)
;			PARENS MAY BE USED INSTEAD OF BRACKETS
;		400	PROJECT = ONE *
;		1000	PROGRAMMER = ONE *
;		2000	FILE PROTECTION
;		4000	IMPLICIT USE OF ASSIGNED PROTECTION
;		10000	DEVICE NAME
;		20000	NON-NULL DEVICE NAME
;		40000	LOGICAL DEVICE NAME
;		100000	UNTRANSLATABLE DEVICE NAME
; OUTPUTS:
;	C=0 IF PARSED SUCCESSFULLY
;	C=1 IF PARSE FAILED, OR INCOMPLETELY PARSED,
;		OR UNALLOWABLE ELEMENTS PARSED
;	R3=ADDRESS OF FIRQB
;	R2=BITMAP OF PARSED ELEMENTS (SAME FORMAT AS MASK)
;	R4=ADDRESS OF BITMAP WORD IN XRB
;	R0,R1,R5 PRESERVED
;	XRB+XRBC	COUNT OF UNPARSED CHARACTERS
;	XRB+10		BITMAP OF PARSED ELEMENTS
;	XRB+12		CONTINUATION OF ABOVE (C=1 IF THIS IS NON-ZERO)
;	FIRQB+FQPPN	PPN IF ANY
;	FIRQB+FQNAM1	FILENAME IF ANY (2 WORDS OF RAD50)
;	FIRQB+FQEXT	FILE EXTENSION IF ANY
;	FIRQB+FQSIZ	SIZE SWITCH VALUE IF ANY
;	FIRQB+FQMODE	MODE SWITCH VALUE IF ANY
;	FIRQB+FQPROT	FILE PROTECTION CODE IF ANY IN BYTE, LOW BYTE IS FLAG
;	FIRQB+FQDEV	DEVICE IF ANY (2 ASCII CHARACTERS)
;	FIRQB+FQDEVN	UNIT NUMBER IF ANY IN LOW BYTE, HIGH BYTE IS FLAG
;			UNTRANSLATABLE LOGICAL NAME IF ANY IS STORED AS 2 WORDS
;			OF RAD50 IN FQDEV AND FQDEVN.
;	FIRQB+FQCLUS	CLUSTER SWITCH VALUE IF ANY
;-

.ENABL	GBL
.PSECT	PURE$I	RO,I,LCL,REL,CON

..FSS::	MOV	#XRB,R4		;POINT TO XRB
	MOV	R2,(R4)		;DEFINE LENGTH OF STRING
	MOV	(R4)+,(R4)+	;IN FIRST TWO WORDS OF XRB
	MOV	R3,(R4)		;DEFINE STRING LOCATION
	CLR	4(R4)		;CLEAR XRB+10 FOR STANDARD LOGICAL TABLE
	.FSS			;CALL RSTS FILE STRING SCANNER
	TSTB	@#IOSTS		;CHECK RETURN STATUS
	BNE	10$		;EXIT ON ERROR
	TST	-(R4)		;CHECK FOR UNPARSED CHARACTERS
	BNE	10$		;ERROR IF NOT ALL PARSED
	ADD	#12-XRBC,R4	;POINT TO SECOND BIT FLAG WORD
	BIC	#^C<7>,(R4)	;MUST BE 0 AFTER CLEARING RESERVED BITS
	BNE	10$		;ELSE TAKE ERROR EXIT
	MOV	-(R4),R2	;GET FIRST BIT FLAG WORD
	BIC	(R5),R2		;CHECK FOR UNALLOWABLE ELEMENTS
	BIC	#4000,R2	;IMPLICIT PROTECTION ALWAYS ALLOWED
	BNE	10$		;ERROR IF FOUND
	MOV	@R4,R2		;RETURN BIT FLAGS
	MOV	#FIRQB,R3	;POINT TO FIRQB
	;CLC			;DONE BY ADD ABOVE
	RETURN

10$:	SEC			;SET C BIT
	RETURN
	.END
