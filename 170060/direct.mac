	$BEGIN	DIRECT,<28.2>,<ISSUE THE DIRECTORY PRIMITIVES>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982, 1991 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 17-AUG-73
;
; PREVIOUSLY MODIFIED BY
;
;	SHAO-SUN CHIEN
;	MARK BRAMHALL
;	LONI BROWN
;	S. RUZICH
;
; Modified for RSTS/E V10.1 by:
;
; 	S. LeVan	10/21/91 	V28.2
;		SEL001 - Shrink code by assuming N.FID = 0.
;+
; ENTER, FIND, REMOVE A DIRECTORY ENTRY
; CALLING SEQUENCE:
;	CALL	..ENTR
;	CALL	..FIND
;	CALL	..RMOV
; INPUTS:
;	R0=FDB ADDRESS
;	R1=FILE NAME BLOCK ADDRESS
;	LUN IN F.LUN(R0) IS ASSIGNED TO DEV IN FNB
;	FILE NAME BLOCK ALL SET FOR DIRECTORY PRIMITIVE CALL
; OUTPUTS:
;	C=0 IF SUCCESSFUL, FNB FILLED IN BY DIR PRIMITIVE
;	C=1 IF FAILED, F.ERR(R0) TELLS WHY
;	R0,R1 PRESERVED, R2-R5 ALTERED
;-

	.IF	EQ,R$RSTS
..ENTR::MOV	#IO.ENA,R4
	BR	DIRCOM
;
	.IFF
..ENTR::CALL	INIFQB		;SET UP FIRQB
	MOV	#LOKFQ,R4	;SET FIP CODE TO LOOK UP FILE
	CALL	..FIP		;GO LOOK FOR THE FILE
	CMPB	#IE.NSF,F.ERR(R0) ;IF CAN'T FILE FILE
	BEQ	20$		;THEN OK, NO DUPLICATE
	CMPB	#0,@#IOSTS	;IF OPENED OK
	BEQ	30$		;THEN DUPLICATE FILE ERROR
	RETURN			;EXIT IF OTHER ERROR (C SET)
20$:	MOVB	#IS.SUC,F.ERR(R0) ;SET SUCCESS CODE
	RETURN
30$:	MOVB	#IE.DUP,F.ERR(R0) ;SET DUPLICATE FILE ERROR
	SEC
	RETURN
	.ENDC

..RMOV::MOV	#IO.RNA,R4
	BR	DIRCOM
;
..FIND::MOV	#IO.FNA,R4
DIRCOM:	BITB	#FD.DIR,F.RCTL(R0)
	BEQ	20$		;NOP IF NOT DIRECTORY DEVICE
	MOV	R1,-(SP)	;SAVE FILE NAME BLOCK ADDRESS

	.IF	EQ,R$RSTS
	.IFF
	CALL	INIFQB		;SET UP FIRQB AND POINTER

	.IFT
	CALL	..IDPB		;INIT DPB, SET R5 TO PARAM BLOCK
	.IF	GT,R$$ANI
	TST	F.ACTL(R0)	;IS ACCESS CONTROL ENABLED ?
	BPL	10$		;BRANCH IF NOT
	MOV	F.ACTL(R0),10(R5) ;YES-MOVE ACCESS CONTROL WORD
	BIC	#100000,10(R5)	;DISABLE ACCESS CONTROL
	.ENDC
10$:	MOV	R1,12(R5)	;STORE FILE NAME BLOCK ADDRESS
	CALL	..QIOW		;ISSUE DIRECTORY QI/O AND WAIT

	.IFF
	MOV	#-1,FQERNO(R5)	;LOOK UP FILE ID
	MOV	#LOKFQ,R4	;SET FIP CODE TO LOOKUP
	CALL 	..FIP		;LOOPUP THE FILE
	BCS	15$		;EXIT IF LOOKUP FAILS
	MOV	FQPPN(R5),F.FNB+N.FID(R0)  ;SET FILE ID
	MOV	FQNENT(R5),F.FNB+N.FID+2(R0)
	MOV	FQDEV(R5),F.FNB+N.DVNM(R0) ;DEVICE NAME
	MOV	FQDEVN(R5),F.FNB+N.UNIT(R0);UNIT NUMBER
	CLRB	F.FNB+N.UNIT+1(R0)  ;CLEAR UNIT BYTE
15$:
	.ENDC

	MOV	(SP)+,R1	;RESTORE THE SAVED FILE NAME BLOCK ADR
	RETURN
20$:	;TST	N.FID(R1)	;CLEAR CARRY TOO; SEL001
	TST	(R1)		;CLEAR CARRY TOO - SEL001
	ASSUME	N.FID,0		;SEL001
	BNE	30$		;BRANCH IF FILE ID NON ZERO
	;INC	N.FID(R1)	;FORCE IT TO 1; SEL001
	INC	(R1)		;FORCE IT TO 1; SEL001
	ASSUME	N.FID,0		;SEL001
30$:	RETURN
;
;

	.IF	GT,R$RSTS
INIFQB:	MOV	#FIRQB+FQFIL,R5 ;POINT TO CHANNEL SLOT IN FIRQB 
	MOVB	F.LUN(R0),@R5	;SET CHANNEL = LUN
	ASLB	(R5)+		;MAKE CHANNEL TIMES 2
	CLRB	(R5)+		;CLEAR HIGH ORDER BYTE
	MOV	R0,-(SP)	;SAVE R0
	MOV	R1,R0		;SET "FDB" POINTER FROM R1
	SUB	#F.FNB,R0
	CALL	..IFQ1		;SET UP FIRQB FROM FNB
	MOV	(SP)+,R0	;RESTORE FDB POINTER
	RETURN
	.ENDC

	$END	DIRECT
;
;
	.END
