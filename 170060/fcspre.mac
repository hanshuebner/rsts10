	.IIF	NDF,MASS$$,	.NLIST
	.IDENT	/28.1/
	.IF	NDF,MASS$$
	.TITLE	FCSPRE - FCS PREFIX FILE
	.ENDC
;
	.IF	DF,MASS$$
	.TITLE	FCS - FILE CONTROL SERVICES
	.SBTTL	MONOLITHIC ASSEMBLY OF FCS MODULES
	.SBTTL	PREFIX FILE - SYMBOL DEFINITIONS AND MACROS
	.ENDC
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1981, 1991 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; ALTERED BY:
;	G.H. KUENNING 1-SEP-78
;		GK001 - ADD CONDITIONALS FOR VAX/VMS AND NAMED DIR'S
;	G.H. KUENNING 15-NOV-78
;		GK002 - TURN OFF EIS FOR RSX-11M!
;	B. LEAVITT	22-NOV-78
;		BJL002 - SINGLE LEVEL NAMED DIRECTORY SUPPORT
;		BJL003 - SCS-11 SUPPORT
;	G.H. KUENNING 22-NOV-78
;		GK003 - ADD SYMBOLS AND CONDITIONALS TO SUPPORT RSX-11M+
;			AND BIG-BUFFERING.  REWRITE ASSEMBLY CONTROL
;			FLAGS SECTION TO MAKE IT CLEARER WHAT OPTIONS
;			ARE SELECTED ON EACH OPERATING SYSTEM, AND TO
;			MAKE IT EASIER TO TEST WIERD OPTIONS WITH
;			ASSEMBLY PREFIX FILES, WITHOUT CHANGING FCSPRE.
;		GK004 - FIX $BEGIN MACRO TO PRODUCE IDENTS THAT WILL
;			REFLECT THE ASSEMBLY OPTIONS WE ACTUALLY USE,
;			AS FOLLOWS:
;			**(REMOVED BY GK005 SINCE IT'S NOW IRRELEVANT)**
;	G.H. KUENNING 1-MAR-79
;		GK005 - REWRITE GK004 TO PRODUCE A MORE EASILY
;			REMEMBERED FORM FOR THE IDENTS, AND ADD
;			IDENT SUPPORT FOR SCS-11.  SEE COMMENTS BEFORE
;			THE $BEGIN MACROS.
;
;	S. RUZICH	26-APR-79
;
;		SR016 - EIS IS NOT PRESENT IN DEFAULT M+ SYSTEM (FOR
;			TRANSPORTABILITY TO M)
;
;	S. RUZICH	15-MAY-79
;
;		SR022 - ADD R$$OPT TO PRODUCE PROPER TITLE FOR THE OPEN
;			VARIANTS.  R$$RSL=2 NOW INDICATES ASSEMBLY
;			EXCLUSIVELY FOR RESIDENT LIBRARY.
;
;	S. RUZICH	24-OCT-79
;
;		SR047 -	MAKE MODULE FCSTYP KNOWN TO $BEGIN MACRO AS AN
;			ANSI AND MULTIPLE BUFFER ROUTINE.
;
;	S. RUZICH	08-NOV-79
;
;		SR050 -	CORRECT VAX IDENT
;
; 	S. RUZICH	13-NOV-79
;
; 		SR051 -	ENABLE BIG BUFFERS (R$$BBF) AS VAX DEFAULT
;
;	S. RUZICH	21-NOV-79
;
;		SR053 - REMOVE MENTION OF SYMBOL R$$MPL, SINCE FCS IS THE SAME
;			FOR 11M AND 11M-PLUS.  LET $BEGIN SHOW .IDENT FOR
;			MULTIPLE BUFFERING ON 11M.  REMOVE MANY AUDIT TRAILS.
;
;	S. RUZICH	6-FEB-80
;
;		SR062 -	DO NOT ENABLE AUTOMATIC SPOOLING EVER.
;
;	S. RUZICH	28-FEB-80
;
;		SR063 -	USE EIS ON VMS.
;
;	JOHN ALLEN PAINTER	30-JUN-80
;
;	      TJPBL28 - SUPPORT FOR AUTO-TRUNCATE ON CLOSE
;
;	S. RUZICH	27-FEB-81
;
;		SR114 -	ALTER $BEGIN MACRO SINCE PARSFN IS ANSI CONDITIONAL.
;			FCS USES READ-ONLY .PSECT
;
;	S. RUZICH	10-MAY-81
;
;		SR126 -	DEFINE FD.OFI AS FLAG USED IN OPEN INDICATING 
;			OPEN BY FID FOR WRITE OF DISK FILE.
;			DEFINE R$$VEC CONDITIONAL FOR VECJMP.MAC
;
;	LONI BROWN	29-APR-81
;
; 	       LEB001 - ADDED RSTS/E SPECIFIC CODE
;
;	S. RUZICH	13-AUG-81
;
;		SR152 -	ALTER $BEGIN: RWLONG, CONTRL, AND WTWATD ARE ANSI;
;			RSTS/E IDENT USES "R"; M-PLUS SUPERVISOR MODE LIBRARY 
;			VERSIONS OF FINIT (FINTSL) AND RDWRIT (RDWRSL) DRIVEN 
;			BY SYMBOL R$$SUP IN FCSSUP.MAC.
;		      - REMOVE M-PLUS, SCS-11, AUTO-SPOOL, & OTHER UNUSED CODE.
;		      - INTEGRATE LEB001.
;
;	S. RUZICH	08-NOV-81
;
;		SR191 -	DEFINE "MOUNTABLE" AND "NO-ADVANCE" BITS IN F.MBFG.
;
;	S. LEVAN	07-MAY-91
;
;		Added R$$NAM flag (Named directory support for RSX).
;
; ASSEMBLY CONTROL FLAGS
;										; GK003
;	OPERATING-SYSTEM SELECTION IS AS FOLLOWS:				; GK003
;										; GK003
;	SYSTEM	R$$11M	R$$VMS	R$RSTS						;LEB001
;	------------------------------						;LEB001
;	IAS/11-D     0	     0	     0						;LEB001
;	RSX-11M	     1       0       0						;LEB001
;	VAX/VMS	     1       1       0						;LEB001
;	RSTS/E	     1	     0	     1						;LEB001
;										;LEB001
										;LEB001
										;**-6
;										;**-7
	.IIF NDF R$$11M,R$$11M=1 ;DEFAULT ASSEMBLY IS FOR 11-M			; GK003
	.IIF NDF R$$VMS,R$$VMS=0 ;...						;**-1
	.IIF NDF R$RSTS,R$RSTS=1 ;						;LEB001
										;**-1
	.IF	GT,R$RSTS	;OPTIONS FOR RSTS/E 				;SRM001
										;SRM001
	.IIF NDF R$$EIS,R$$EIS=1 ;RSTS/E EIS IS PRESENT				;SRM001
	.IIF NDF R$$11M,R$$11M=1 ;TURN ON 11M CHARACTERISTICS			;SRM001
										;SRM001
	.ENDC	;R$RSTS								;SRM001

	.IF GT	R$$11M								; GK003
										; GK003
	.IF GT	R$$VMS		;OPTIONS FOR VAX/VMS:				;**-9
										;**-2
	.IIF NDF R$$ANI,R$$ANI=1 ;VMS: ANSI MAGTAPE SUPPORT DESIRED		; GK003
	.IIF NDF R$$BBF,R$$BBF=1 ; VMS: ENABLE BIG BUFFERING			; SR051
	.IIF NDF R$$ELP,R$$ELP=1 ;VMS: EXTENDED PARSE DIR IS PRESENT		; GK003
	.IIF NDF R$$RSL,R$$RSL=1 ;VMS: FORCE INTO PSECT $$RESL			; GK003
	.IIF NDF R$$EIS,R$$EIS=1 ;VMS: USE EXTENDED INSTRUCTION SET		; SR063
										; GK003
	.IFF			;OPTIONS FOR RSX-11M:				;**-7
										; GK003
	.IIF NDF R$$RSL,R$$RSL=1 ;11-M: FORCE INTO PSECT $$RESL			; GK003
										; GK003
	.ENDC	;R$$VMS								;LEB001
	.IFF	;R$$11M								;LEB001
	.IF	EQ,R$RSTS	;OPTIONS FOR IAS:				;LEB001
										;**-8
	.IIF NDF R$$ANI,R$$ANI=1 ;IAS: ANSI MAGTAPE SUPPORTED			; GK003
	.IIF NDF R$$EIS,R$$EIS=1 ;IAS: EIS IS PRESENT				; GK003
	.IIF NDF R$$MUL,R$$MUL=1 ;IAS: MULTIPLE BUFFERING IS SUPPORTED		; GK003
										;**-1
	.ENDC	;R$RSTS								; SR152
	.ENDC	;R$$11M								; SR152
;										;**-1
;	DEFAULT ASSEMBLY FLAGS - ALL FLAGS DEFAULT TO ZERO EXCEPT		; GK003
;	THOSE GIVEN SEPARATELY BELOW, WHICH ARE HANGOVERS FROM EARLIER		; GK003
;	DAYS.									; GK003
;										; GK003
	.IIF 	NDF,R$$ANI,R$$ANI=0 ;0 FOR NO ANSI MAGTAPE			; GK003
				;1 FOR ANSI MAGTAPE
	.IIF	NDF,R$$BBF,R$$BBF=0 ;0 FOR NO BIG BUFFERS
				;1 TO ALLOW BIG BLOCK BUFFERS FOR
				;BLOCK ORIENTED DEVICES
	.IIF	NDF,R$$EIS,R$$EIS=0 ;0 FOR NO EXTENDED INSTRUCTION SET		; GK003
				;1 FOR 11/40 OR 45 EIS
	.IIF	NDF,R$$ELP,R$$ELP=0 ;0 FOR NO EXTENDED PARSE SUPPORT
				;1 FOR EXTENDED PARSE DIRECTIVE SUPPORT
	.IIF	NDF,R$$MUL,R$$MUL=0 ;0 FOR NO MULTIPLE BUFFERING		;**-3
				;1 FOR MULTIPLE BUFFERING
	.IIF	NDF,R$$RSL,R$$RSL=0 ;0 IF ASSEMBLING FOR SYSLIB
				;1 IF ASSEMBLING FOR RESIDENT LIBRARY
        .IIF    NDF,R$$NAM,R$$NAM=0 ;0 IF NO NAMED DIRECTORY SUPPORT
                                ;1 IF NAMED DIRECTORY SUPPORT
;										;**-11
;	THE FOLLOWING TWO SYMBOLS ARE USED TO PRODUCE VARIANTS OF THE		; GK001
;	GET, PUT, PGCR, AND OPEN MODULES.					; GK001
;										; GK001
	.IIF	NDF,R$$OPF,R$$OPF=0 ;0 FOR NORMAL OPEN BY FILE NAME		; GK001
				;1 FOR OPEN BY FILE NAME BLOCK			; GK001
				;2 FOR OPEN BY FILE ID				; GK001
	.IIF	NDF,R$$SEQ,R$$SEQ=0 ;0 FOR RANDOM OR SEQ GET/PUT		; GK001
				;1 TO RESTRICT TO SEQUENTIAL			; GK001
;
;	SYMBOL R$$OPT CHOOSES THE PROPER TITLE FOR EACH OPEN VARIANT		; SR022
;										; SR022
	.IF	GT,R$$11M	;IF 11M AND...					; SR022
	.IF	EQ,R$$RSL-2	; ASSEMBLING FOR RESIDENT LIBRARY...		; SR022
	R$$OPT=3		; OPEN TITLE = 3 FOR OPENR			; SR022
	.ENDC			;						; SR022
	.ENDC			; OTHERWISE...					; SR022
	.IIF	NDF,R$$OPT,R$$OPT=R$$OPF ; OPEN TITLE CORRESPONDS TO R$$OPF	; SR022
;										; SR022
;	SYMBOL R$$VEC IS USED BY VECJMP.MAC.					; SR126
;										; SR126
	.IIF	NDF,R$$VEC,R$$VEC=0	;0 = PRODUCE FCSJMP.OBJ FROM VECJMP	; SR126
					;1 = PRODUCE FCSVEC.OBJ FROM VECJMP	; SR126
;										; SR152
;	SYMBOL R$$SUP PRODUCES M-PLUS SUPERVISOR MODE LIBRARY VERSIONS		; SR152
;										; SR152
	.IIF	NDF,R$$SUP,R$$SUP=0	;0 = NORMAL				; SR152
					;1 = SUPERVISOR MODE LIBRARY 		; SR152
										; SR152
;
	.IF	EQ,R$$EIS
;
	.MACRO	NOEIS$
	.MCALL	ILLOP
	ILLOP	<MUL,DIV,ASH,ASHC,XOR,SXT,RTT,MARK>
	.MACRO	SOB	REG,LOC
	DEC	REG
	BNE	LOC
	.ENDM	SOB
	.ENDM	NOEIS$
;
; DEFINE THE LIST OF PARAMETERS AS ILLEGAL OPCODES
;
	.MACRO	ILLOP	LIST
	.IRP	X,<LIST>
	.MACRO	X	A1,A2
	.LIST
	.ERROR			;ILLEGAL OP CODE		***************
	.NLIST
	.ENDM	X
	.ENDM			;END OF IRP
	.ENDM	ILLOP
;
	NOEIS$
	.ENDC
	.IF	NDF,SYS40$
	.IF	GT,R$$RSL
	.PSECT	$$RESL,RO	;FOR 11D RESIDENT LIBRARY, OR 11M ANYTHING	; SR114
	.ENDC									; SR022
	.ENDC									; SR022
; MCALL AND INVOKE THE SYMBOL DEFINITION MACROS					;**-4
; CAN AVOID USING LOCAL DEFINITIONS UNLESS ASSEMBLING FOR THE
; RESIDENT LIBRARY
	.MCALL	FDOF$L,BDOFF$,FCSBT$,FSROF$					;**-1
	FDOF$L			;DEFINE FDB OFFSET LOCALLY
	BDOFF$	DEF$L		;DEFINE THE BLOCK BUFFER OFFSETS
	FCSBT$	DEF$L		;DEFINE FCS BITS AND VALUES LOCALLY
	FSROF$	DEF$L		;DEFINE FILE STORAGE REGION OFFSETS LOCALLY
	.IF	GT,R$$11M
	.MCALL	IOERR$,DRERR$,FILIO$
	IOERR$			;DEFINE THE I/O ERROR CODES
	DRERR$			;DEFINE THE DIRECTIVE STATUS CODES
	FILIO$			;DEFINE THE QI/O FUNCTION CODES
	.IFF
	.MCALL	QIOSY$
	QIOSY$	DEF$L		;DEFINE ERROR AND I/O FUNCTION CODES
	.ENDC
;										;**-1
	.MCALL	ALUN$S,DIR$,GLUN$S,CLOSE$,GTSK$S,WTSE$S,CLEF$S,CALL,RETURN
	.MCALL	WSIG$S
	.MCALL	MSDS$S								; SR152
;
; LOCALLY DEFINED MACROS
; CO-ROUTINE CALL TO SAVE REGISTERS R1-R5
	.MACRO	.SAVR1
	JSR	R5,.SAVR1
	.ENDM	.SAVR1
;
; DEFINE MULTIPLE BUFFERING FLAG ONLY IF IDNAM IS IN LIST OF NAMES
	.MACRO	$MULBF	IDNAM,MBFLST
	.IRP	X,<MBFLST>
	.IF	IDN,<IDNAM>,<X>
	R$$MBF=R$$MUL
	.ENDC
	.ENDM
	.ENDM	$MULBF
;										; GK004
; DEFINE ...TMP=1 IF IDNAM IS IN LIST OF NAMES.  DON'T CHANGE ...TMP		; GK004
; IF IT IS NOT.									; GK004
	.MACRO	$TSTNM	IDNAM,TSTLST						; GK004
	.IRP	X,<TSTLST>							; GK004
	.IF	IDN,<IDNAM>,<X>							; GK004
...TMP=	1									; GK004
	.ENDC									; GK004
	.ENDM									; GK004
	.ENDM	$TSTNM								; GK004

;;	$BEGIN MACRO AND ITS COUSINS						; GK005
;										; GK005
;	THIS MACRO PRODUCES THE .TITLE AND .IDENT STATEMENTS FOR THE		; GK005
;	VARIOUS ROUTINES.  THE REASON FOR ITS USE IS SO THAT THE NAME		; GK005
;	AND IDENT CAN BE CONDITIONALLY ASSEMBLED.				; GK005
;										; GK005
;	USAGE:									; GK005
;										; GK005
;	$BEGIN	IDNAM,IDNUM,TITLE,NAMCTL,NAMLST					; GK005
;										; GK005
;	WHERE:									; GK005
;										; GK005
;	IDNAM	IS THE NAME OF THE ROUTINE.  FOR CONDITIONALLY ASSEMBLED	; GK005
;		SOURCES THAT PRODUCE MULTIPLE ROUTINES (E.G., GET WHICH		; GK005
;		PRODUCES GET AND GETSQ), IDNAM IS THE NAME OF THE SOURCE	; GK005
;		FILE OR MAIN ROUTINE.						; GK005
;										; GK005
;	IDNUM	IS THE IDENT NUMBER TO BE ASSIGNED TO THE ROUTINE.  THE		; GK005
;		NUMBER SHOULD HAVE THE FORM VV.N, WHERE VV IS THE		; GK005
;		VERSION OF FCS THAT THE ROUTINE BELONGS TO (WHICH SHOULD	; GK005
;		BE THE SAME ACROSS ALL ROUTINES IN A RELEASE OF FCS),		; GK005
;		N IS THE POST-RELEASE CORRECTION LEVEL, WITH 0 BEING THE	; GK005
;		RELEASE VALUE.  THE BEGIN MACRO WILL ADD A ONE- OR TWO-		; GK005
;		CHARACTER ALPHANUMERIC SUFFIX TO THE IDENT, SO THAT THE		; GK005
;		IDENT TAKES THE FINAL FORM VV.NXY.  X IS USED TO		; GK005
;		INDICATE THE OPERATING SYSTEM:					; GK005
;										; GK005
;			I	IAS/RSX-11D					; GK005
;			M	RSX-11M						; GK005
;			V	VAX/VMS						;**-2
;			R	RSTS/E						;LEB001
;										; GK005
;		Y IS USED TO INDICATE THE VERSION OR VARIANT OF FCS,		; GK005
;		WHICH VARIES DEPENDING ON THE SYSTEM, AS FOLLOWS:		; GK005
;										; GK005
;		FOR VAX/VMS AND RSTS/E, Y IS ALWAYS NULL, SINCE THERE IS	; SR152
;		ONLY ONE VERSION OF FCS.					; SR152
;										;**-2
;		FOR IAS/11D, Y IS "R" FOR THE RESIDENT FCS, AND "S" FOR		; GK005
;		THE SYSLIB FCS.							; GK005
;										; GK005
;		FOR RSX-11M, Y IS A SINGLE HEXA-				; SR152
;		DECIMAL DIGIT INDICATING A BIT PATTERN OF THE OPTIONS		;**-1
;		THAT THE ROUTINE SUPPORTS.  FOR EXAMPLE, IF THE			; GK005
;		OPERATING SYSTEM HAS THREE VARIANTS OF FCS, A			; GK005
;		ROUTINE WITH Y EQUAL TO "6" IS A VARIANT THAT WILL WORK		; GK005
;		CORRECTLY WITH THE SECOND AND THIRD FLAVORS OF FCS BUT		; GK005
;		NOT WITH THE FIRST.  THE VARIANTS ARE ASSIGNED AS		; GK005
;		FOLLOWS:							; GK005
;										; GK005
;			1 = NON-ANSI FCS					; SR152
;			2 = ANSI/BIGBUF FCS					; SR152
;			4 = MULTIBUF FCS					; SR152
;										;**-5
;	TITLE	IS THE TITLE STRING THAT WILL BE PRINTED ON THE LISTING.	; GK005
;		IT MUST BE ENCLOSED IN ANGLE BRACKETS.				; GK005
;										; GK005
;	NAMCTL	IS BLANK FOR SINGLE-VARIANT ROUTINES.  FOR ROUTINES THAT	; GK005
;		PRODUCE MULTIPLE OBJECT FILES (LIKE GET/GETSQ), NAMCTL		; GK005
;		IS THE ASSEMBLY VARIABLE THAT CONTROLS WHICH VARIANT		; GK005
;		IS PRODUCED.  SEE NAMLST.					; GK005
;										; GK005
;	NAMLST	IS BLANK FOR SINGLE-VARIANT ROUTINES.  FOR ROUTINES THAT	; GK005
;		PRODUCE MULTIPLE OBJECT FILES (LIKE GET/GETSQ), NAMLST		; GK005
;		IS A COMMA-SEPARATED LIST OF NAMES TO BE ASSIGNED TO		; GK005
;		THE OBJECT MODULES.  IF NAMCTL IS EQUAL TO N WHEN THE		; GK005
;		ROUTINE IS ASSEMBLED, THE NTH ENTRY IN NAMLST WILL BE		; GK005
;		THE ROUTINE'S NAME.  NAMLST IS INDEXED FROM ZERO, NOT		; GK005
;		ONE!								; GK005
;										; GK005
;	EXAMPLE:								; GK005
;										; GK005
;	$BEGIN	GET,<15.0>,<FCS GET RECORD ROUTINE>,R$$SEQ,<GET,GETSQ>		; GK005
;										; GK005
;	PRODUCES GET IF R$$SEQ IS ZERO, AND GETSQ IF R$$SEQ IS ONE.		; GK005
;	THE IDENT WILL BE 15.0IR IF IT IS ASSEMBLED FOR THE IAS			; GK005
;	RESIDENT LIBRARY.							; GK005
;										; GK005
;										; GK005
;	NOTE:  THE CONDITIONALS THAT DECIDE WHAT IDENT IS ASSIGNED TO		; GK005
;		A ROUTINE DEPEND HEAVILY ON THE FACT THAT,			; SR152
;		FOR RSX11M, A MINIMAL FCS IS FIRST				; SR152
;		ASSEMBLED, AND THEN THE ROUTINES THAT DIFFER FOR THE		;**-2
;		LARGER FCS'S ARE ASSEMBLED AGAIN.  THUS, FOR EXAMPLE,		; GK005
;		IF A ROUTINE IS ASSEMBLED WITH ALL OF ANSI, BIG			; GK005
;		BUFFERING, AND MULTIPLE BUFFERING TURNED ON, WE CAN BE		; GK005
;		SURE THAT IT IS A ROUTINE WHOSE Y IDENT SHOULD BE 4,		; GK005
;		BECAUSE IF IT HAD A Y IDENT OF 6 OR 7, IT WOULD HAVE		; GK005
;		BEEN ASSEMBLED EARLIER.						; GK005
	.MACRO	$BGIN2	NAMLST,IDNUM,TITLE,NAMCTL
	...CTL=0
	.IRP	IDNAM,<NAMLST>
	.IF	EQ,NAMCTL-...CTL
	.IF	NDF,MASS$$
	.LIST
	.TITLE	IDNAM IDNUM, TITLE
	.IDENT	/IDNUM/
	.NLIST
	.ENDC
;
	.IF	DF,MASS$$
	.LIST
	.SBTTL	IDNAM IDNUM, TITLE
	.NLIST
	.ENDC
	.ENDC
	...CTL=...CTL+1
	.ENDM
	.ENDM	$BGIN2
;
	.MACRO	$BGIN1	IDNAM,IDNUM,TITLE,NAMCTL,NAMLST
	.IF	B,NAMCTL
	$BGIN2	IDNAM,IDNUM,<TITLE>,0
	.ENDC
	.IF	NB,NAMCTL
	$BGIN2	<NAMLST>,IDNUM,<TITLE>,NAMCTL
	.ENDC
	.ENDM	$BGIN1
;
	.MACRO	$BEGIN	IDNAM,IDNUM,TITLE,NAMCTL,NAMLST
	$MULBF	IDNAM,<CLOSE,FCSTYP,OPEN,RDWAIT,RSTFDB,RWBLK,WTWAIT>		; SR152
	.IF	GT,R$$11M							; SR152
	 .IF	GT,R$$VMS							; SR152
	$BGIN1	IDNAM,<IDNUM'V>,<TITLE>,NAMCTL,<NAMLST>				; SR152
	 .IFF	;R$$VMS								; SR152
	  .IF	GT,R$$ANI+R$$BBF						; SR152
	   .IF	GT,R$$MUL							; SR152
	$BGIN1	IDNAM,<IDNUM'M4>,<TITLE>,NAMCTL,<NAMLST>			; SR152
	   .IFF ;R$$MUL								; SR152
...TMP=0									; SR152
	$TSTNM	IDNAM,<CLOSE,FCSTYP,OPEN,RDWAIT,RSTFDB,RWBLK,WTWAIT>		; SR152
	    .IF GT,...TMP							; SR152
	$BGIN1	IDNAM,<IDNUM'M2>,<TITLE>,NAMCTL,<NAMLST>			; SR152
	    .IFF ;...TMP							; SR152
	$BGIN1	IDNAM,<IDNUM'M6>,<TITLE>,NAMCTL,<NAMLST>			; SR152
	    .ENDC ;...TMP							; SR152
	   .ENDC ;R$$MUL							; SR152
	  .IFF	;R$$ANI+R$$BBF							; SR152
...TMP=0									; SR152
	$TSTNM	IDNAM,<ANSPAD,ASSLUN,BIGBUF,CLOSE,CREATE,DIRECT,GET>		; SR152
	$TSTNM	IDNAM,<OPEN,POINT,PUT,RDWAIT,RETADR,RWBLK>			; SR152
	$TSTNM	IDNAM,<WATSET,WTWAIT,FCSTYP,PARSFN,RWLONG,CONTRL,WTWATD>	; SR152
	   .IF	GT,...TMP							; SR152
	$BGIN1	IDNAM,<IDNUM'M1>,<TITLE>,NAMCTL,<NAMLST>			; SR152
	   .IFF ;...TMP								; SR152
	    .IF IDN IDNAM,RSTFDB						; SR152
	$BGIN1	IDNAM,<IDNUM'M3>,<TITLE>,NAMCTL,<NAMLST>			; SR152
	    .IFF ;IDNAM								; SR152
	$BGIN1	IDNAM,<IDNUM'M7>,<TITLE>,NAMCTL,<NAMLST>			; SR152
	    .ENDC ;IDNAM							; SR152
	   .ENDC ;...TMP							; SR152
	  .ENDC ;R$$ANI+R$$BBF							; SR152
	 .ENDC	;R$$VMS								; SR152
	.IFF	;R$$11M								; SR152
	 .IF	GT,R$RSTS							; SR152
	$BGIN1	IDNAM,<IDNUM'R>,<TITLE>,NAMCTL,<NAMLST>				; SR152
	 .IFF	;R$RSTS								; SR152
	  .IF	GT,R$$RSL							; SR152
	$BGIN1	IDNAM,<IDNUM'IR>,<TITLE>,NAMCTL,<NAMLST>			; SR152
	  .IFF	;R$$RSL								; SR152
	$BGIN1	IDNAM,<IDNUM'IS>,<TITLE>,NAMCTL,<NAMLST>			; SR152
	  .ENDC	;R$$RSL								; SR152
	 .ENDC	;R$RSTS								; SR152
	.ENDC	;R$$11M								; SR152
	.LIST	MC								; SR152
	.ENDM	$BEGIN								;**-86
;
;
	.MACRO	$END	PROG
	.NLIST	MC
	.ENDM	$END

	.MACRO	ASSUME	A1,A2
	.IF	NE,<A1>-<A2>
	.ERROR			;A1 NOT EQUAL TO A2
	.ENDC
	.ENDM	ASSUME

	.MACRO	CALLR	SUBR
	JMP	SUBR
	.ENDM	CALLR

; F.BKP1 BITS USED INTERNALLY
	FD.WRT=1		;ON IF THIS BUFFER HAS BEEN ALTERED
	FD.EOF=2		;ON IF LAST PUT WAS AT EOF
	FD.EFB=4		;ON IF THIS VBN IS THE END OF FILE BLOCK
	FD.EF1=10		;SET IF DELAYED EOF REPORT
	FD.DVR=20		;SET IF CREATING NEW FILE WITH DFLT VERSION
	FD.OER=40		;SET /IF FAILED TO ACCESS OR ALLOCATE BUFFER
	FD.INV=100		;SET IF BUFFER IS INVALID (I.E.NO BLOCK READ)
	FD.TRN=200		;SET FOR AUTOMATIC TRUNCATE ON CLOSE		;TJPBL28
; F.MBFG BITS USED INTERNALLY							;**-1
	FD.BGB=4		;ON IF BIG BUFFERS IN USE ON FILE		; GK003
	FD.BGD=10		;SET TO FORCE DUMP OF BIG BUFFER (AS		; GK003
				;OPPOSED TO WAITING UNTIL IT'S FULL)		; GK003
	FD.MNT=20		;DEVICE IS MOUNTABLE, IN NEED OF ACCESS, DEACC	; SR191
	FD.NAD=40		;WRITE CURRENT VBN, BUT DON'T ADVANCE TO NEXT	; SR191
				;(USED IN WTWAIT AND WTWATD)			; SR191
; N.STAT BITS USED INTERNALLY - FCSBT$ DEFINES THE REST
; THESE ARE IN THE FILE NAME BLOCK STATUS WORD
	NB.SMI=040000		;SET IF SEMICOLON SEEN IN FILE NAME
	NB.DOT=100000		;SET IF DOT SEEN IN FILE NAME
; BUFFER STATUS BYTE IN BUFFER HEADER - B.BFST
	BD.FRE=1		;SET IF BUFFER IS AVAILABLE
; BITS IN ACCESS CONTROL WORD IN "ACCESS" QI/O DPB
	WI.LCK=1		;SET TO LOCK FILE
	WI.DLK=2		;SET TO ENABLE DEACCESS LOCK
	WI.SPL=20		;SET  FOR SPOOLING
	WI.UPD=100		;SET FOR MAGTAPE UPDATE OPEN
; OTHER FCS DEFINTIONS
	SYDEV="SY		;DEFAULT DEVICE NAME
	SYUNIT=0		;DEFAULT UNIT FOR SYSTEM DEVICE
	FCSEFN=32.		;DEFAULT EVENT FLAG NUMBER
	DIRTYP=<'D-100>*50*50+<<'I-100>*50>+<'R-100> ;.RAD50 /DIR/
		TAPMIN=18.		;MINIMUM # OF BYTES/BLOCK FOR ANSI TAPE	; SR152
;										;**-3
; DEFINED LOW CORE ADDRESSES
;
	.IF	EQ,R$$11M	;DEFINE THESE ONLY FOR RSX11D
	$DSW=0			;DIRECTIVE STATUS WORD
	.FSRPT=2		;FILE STORAGE REGION POINTER
	.ENDC

; FILE NAME POINTER BLOCK OFFSETS
	N.DVSZ=0		;SIZE OF DEVICE NAME STRING
	N.DVPT=2		;ADDRESS OF DEVICE NAME STRING
	N.DRSZ=4		;SIZE OF DIRECTORY NAME STRING
	N.DRPT=6		;ADDRESS OF DIRECTORY NAME STRING
	N.FNSZ=8.		;SIZE OF FILE NAME STRING
	N.FNPT=10.		;ADDRESS OF FILE NAME STRING

; PROJ, PROG CONVERSION FLAG BITS IN R4 - USED BY .PPASC, BYTASC
	PP.ZER=1		;SET IF NOT SUPPRESSING LEADING ZEROS
	PP.SEP=2		;SET IF NOT PUTTING BRACKETS AND COMMA
				;INTO THE ASCII PPN STRING
; ATTRIBUTE CODES FOR WRITING ATTRIBUTES
	HA.UI=1			;OWNERS UIC
	HA.FP=2			;FILE PROTECTION CODE
	HA.CHU=3		;USERS CHARACTERISTICS BYTE
	HA.UAT=4		;USER RECORD ATTRIBUTES
	HA.NAM=5		;FILE NAME (9 RAD50 CHARS)
	HA.TYP=6		;FILE TYPE (3 RAD50 CHARS)
	HA.VER=7		;FILE VERSION (BINARY)
;
; MAGTAPE READ WRITE BLOCK SIZE ATTRIBUTE CODE
	BL.SZ=13		;BLOCK SIZE
;

;
	.NLIST	MC
	.IIF	NDF,MASS$$,	.LIST
