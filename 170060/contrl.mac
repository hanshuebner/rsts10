    $BEGIN  CONTRL,<28.31>,<USER DEVICE CONTROL>
;
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;
; COPYRIGHT (c) 1985 BY DIGITAL EQUIPMENT CORPORATION
; ALL RIGHTS RESERVED.
;
; PETER H. LIPMAN
;
; PREVIOUSLY MODIFIED BY
;
;	SHAO-SUN-CHIEN
;	E. MARISON
;	S. RUZICH
;	J. Melvin
;	T. Schoeller
;
; Last Modification Date :  29-JAN-86
; Modified for RSX-11M-PLUS Update C by :
;
; Todd Schoeller	23.31
;		TMS029 -- Make room in REST segment for csi changes
;
;
;+
; CONTRL---USER DEVICE CONTROL FUNCTION
;
; INPUT:
;	R0=FDB
;	R1=FUNCTION CODE
;	R2=VALUE
;	R3= PARAMETER LIST POINTER
;	USER IS SUPPOSED TO HAVE SET UP THE PARAMETER LIST
;	INCLUDING FUNCTION BYTE AND LIST SIZE.
; OUTPUT:
;	ALL REGISTERS PRESERVED
;	C=0 IF OPERATION WAS A SUCCESS
;	C=1 IF A FAILURE AND F.ERR IS SET TO WHY
;
;-
.CTRL::.SAVR1		;SAVE REGS R1-R5
	BITB	#FD.REC,F.RCTL(R0) ;IS THIS A REC DEVICE?
	BEQ	..CTRL		;NO - DO THE QIO
	CMPB	#FF.RWD,R1	;IS USER REQUESTING REWIND (IE.,EOF CLEAR)?
	BNE	..CTRL		;NO - DO THE QIO - IT WILL FAIL AND RETURN
				;     ERROR "INVALID FUNCTION CODE"
	BICB	#FD.EF1,F.BKP1(R0) ;YES - CLEAR THE DELAYED EOF BIT
	CALL	.SUCSS		;OPERATION SUCCESSFUL (C=0 FROM CMPB)
	RETURN			;
..CTRL::		; INTERNAL INTERFACE
	CALL	..IDPB	;INIT THE DPB
	CLR	(R5)+		;IGNORE FID
	MOV	R3,(R5)+	;Save list pointer
	.IF	GT,R$$ANI	;ANSI ONLY (IF NON-ANSI, THEN .CTRL IS USEFUL
	.IFT			;ONLY FOR CUSTOMER-WRITTEN ACP.)
	MOV	R5,-(SP)	;STASH ADDRESS OF FUNCTION CODE ADDRESS
	.IFTF			;

	MOV	R1,(R5)+	;STORE FUNCTION CODE
	MOV	R2,(R5)		;STORE VALUE
	MOV	#IO.APC,R4	;GET VOL. CHAR.
	CALL	..QIOW		;ISSUE QIO & WAIT
	.IFT
	MOV	(SP)+,R5	;RECOVER ADDRESS OF FUNCTION CODE
	BCS	20$		;RETURN UPON ERROR
	BITB	#FD.RWM,F.RACC(R0) ;READ$/WRITE$ (BLOCK) MODE?
	BEQ	20$		;RETURN IF GET$/PUT - SUBSEQUENT GET$ OR PUT$
				;WILL FAIL WITH IE.BAD (C STILL = 0)
	CMP	#FF.SPC,(R5)+	;WAS SPACE REQUESTED? (HIGH BYTE = 0
				;BECAUSE USER CAN ONLY SPECIFY 2 BYTES
				;OF DELTA SIZE, EVEN THOUGH DPB HAS 3)
	BNE	15$		;NE = no.  See if it was rewind_file.
	CLR	R1		;EXTEND THE SIGN OF OFFSET VALUE INTO R1
				;FOR DOUBLE PRECISION ADD TO VBN
	MOV	(R5),R2		;GET OFFSET VALUE (DPB DELTA SIZE FIELD)
	BGE	10$		;POSITIVE - PROCEED TO ADD
	COM	R1		;NEGATIVE - MAKE HIGH ORDER WORD = -1
10$:	ADD	R2,F.VBN+2(R0)	;ADD OFFSET TO VBN LOW ORDER WORD
	ADC	F.VBN(R0)	;ADD IN CARRY/BORROW BIT
	ADD	R1,F.VBN(R0)	;CORRECT HIGH ORDER WORD IF R2 < 0
	CLC			;INDICATE SUCCESS
	BR	20$		;Return.
15$:	CLC			;Clear carry from compare.
	CMP	#FF.RWF,-2(R5)	;Was that a rewind_file?
	BNE	20$		;NE = no.  Return.
	MOV	#1,F.VBN+2(R0)	;Set the two word value for virtual block...
	CLR	F.VBN(R0)	;   ...number to 1.
	.ENDC			;

20$:	RETURN
;
	$END	CONTRL
;
	.END
