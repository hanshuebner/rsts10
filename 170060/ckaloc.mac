	$BEGIN	CKALOC,<28.1>,<ALLOCATE SPACE IF NECESSARY>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 11-AUG-73
;
; PREVIOUSLY MODIFIED BY
;
;	JOHN ALLEN PAINTER
;	LONI BROWN
;	S. RUZICH
;+
; ALLOCATE MORE FILE SPACE IF SPECIFIED VBN IS ABOVE HIBK
; CALLING SEQUENCE
;	CALL	..ALOC
; INPUTS:
;	R0=FDB
;	F.EFBK(R0),F.EFBK+2(R0) CONTAINS SPECIFIED VBN
; ALTERNATE ENTRY:
;	CALL	..ALC1
; INPUTS:
;	R0=FDB
;	R1,R2=SPECIFIED VBN
; OUTPUTS:
;	C=0 IF NO SPACE NEEDED OR ENOUGH SPACE WAS
;	SUCCESSFULLY ALLOCATED NECESARY SPACE,
;	C=1 IF FAILED TO ALOCATE NECESSARY SPACE
;	F.ERR(R0) SET IF ERROR
;	ALL REGISTERS PRESERVED
; OPERATION:
;	COMPARES SPECIFIED VBN AGAINST F.HIBK
; TO SEE IF THE SPECIFIED BLOCK IS BEYOND THE END OF
; ALLOCATED SPACE. IF IT IS, AN ATTEMPT IS MADE TO
; EXTEND THE FILE. THE FOLLOWING ALGORITH IS USED. IF
; THE SPACE NEEDED IS ONLY 1 BLOCK, INDICATING A SEQUENTAIL
; WRITE GENRATION, THEN THE SYSTEM DEFAULT EXTENSION IS
; REQUESTED. OTHERWISE THE NUMBER OF BLOCKS ALLOCATED IS
; THE ADDITIONAL NUMBER NEEDED.
;-
..ALOC::CMP	F.HIBK(R0),F.EFBK(R0)	;
	BNE	10$			;EQ- TEST LO WORD.  NE- SEE IF NEED ALOC
	CMP	F.HIBK+2(R0),F.EFBK+2(R0)
10$:	BCC	CKALX1			;BRANCH IF HIBK >= EFBK
	MOV	R1,-(SP)	;SET UP TO EXTEND FILE, SAVE R1,R2
	MOV	R2,-(SP)
	MOV	F.EFBK(R0),R1
	MOV	F.EFBK+2(R0),R2
	CALL	..EXTD
	MOV	(SP)+,R2
	MOV	(SP)+,R1
	BCC	..ALOC		;BRANCH IF OK, SEE IF GOT ENOUGH
	RETURN			;FAILED TO ALLOCATE ENOUGH SPACE
;
..ALC1::CMP	F.HIBK(R0),R1		;
	BNE	10$			;EQ- TEST LO WORD.  NE- SEE IF NEED ALOC
	CMP	F.HIBK+2(R0),R2
10$:	BCC	CKALX1			;BRANCH IF HIBK >= EFBK
	CALL	..EXTD
	BCC	..ALC1		;VERIFY THAT ENOUGH WAS ALLOCATED
					;FAILED TO EXTEND FILE
CKALX1:	RETURN				;RETURN CARRY


; EXTEND THE FILE IF POSSIBLE
; THIS ENTRY USED BY FCS INTERNALLY
..EXTD::.SAVR1			;SAVE REGISTER R1-R5
	MOV	F.ALOC(R0),R4	;CLUSTER SIZE TO ALLOCATE?
	BEQ	20$		;BRANCH IF NO
	MOV	#200!1,R1	;ASSUME CONTIGUOUS ALLOCATION
	MOV	R4,R2		;R2=NO. OF BLOCKS
	BGT	30$		;BRANCH IF CONTIGUOUS REQUEST
	NEG	R2		;NEGATE TO GET NON CONTIG BLOCKS 
	CLR	R1		;INIDCATE NON-CONTIG ALLOCATION
	BR	30$
20$:	SUB	F.HIBK(R0),R1	;CALCULATE SPACE NEEDED
	SUB	F.HIBK+2(R0),R2
	SBC	R1
	BNE	EXTDX1		;BRANCH IF TOO MUCH SPACE REQUIRED
; NOTE R1 CONTAINS ZERO AT THIS POINT AND IS USED BELOW

	.IF	EQ,R$RSTS
	CMP	#1,R2		;IF NEED ONLY 1 BLOCK
	BLT	..EXT1
	CLR	R2		;USE SYSTEM DEFAULT ALLOCATION
	.IFTF
30$:
..EXT1::CALL	..IDPB		;INIT DPB, SET R5 TO PARAM BLOCK
	.IFT
	MOV	R0,(R5)
	ADD	#F.FNB,(R5)+	;STORE FILE NAME BLOCK ADDRESS
	.ENDC


	.IF	EQ,R$RSTS
	CLR	(R5)+		;CLEAR ATTRIBUTE LIST POINTER
	SWAB	R1		;MOVE TYPE OF EXTEND TO HIGH BYTE
	TST	R1
	BMI	5$		;IF ENABLE BIT IS SET, ASSUME ITS OK
	BIS	#100000,R1	;OTHERWISE FORCE THE ENABLE BIT
	BIT	#1*400,R1	;AND IF EXTEND IS CONTIGUOUS
	BEQ	5$
	BIS	#4*400,R1	;SAY THAT FILE MUST BE TOO
5$:	MOV	R1,(R5)+	;AND SET EXTEND CONTROL BITS
	.IFTF
	MOV	R2,(R5)		;NOW SET THE SIZE CHANGE
	BNE	10$		;A SIZE WAS SPECIFIED
	TSTB	R1		;ALSO CHECK HIGH ORDER BYTE
	BNE	10$
	.IFT
	BISB	#10,-(R5)	;NO SIZE, SO USE THE DEFAULT
	.IFF
	INC	@R5		;MAKE EXTEND SIZE 1
	.ENDC
10$:
	.IF	EQ,R$RSTS
	MOV	#IO.EXT,R4	;EXTEND FILE I/O FUNCTION CODE
	CALL	..QIOW		;ISSUE THE EXTEND QI/O AND WAIT
	BCS	20$		;BRANCH IF ERROR
	.IFT
	ADD	2(R1),F.HIBK+2(R0) ;ADD ALLOCATED SPACE TO HIBK
	ADC	F.HIBK(R0)	;CLEARS CARRY
	CLR	-(SP)
	MOVB	1(R1),(SP)	;GET HIGH ORDER BYTE, ZERO EXTENDED
	ADD	(SP)+,F.HIBK(R0) ;AND ADD TO FILE SIZE
	BISB	#FD.TRN,F.BKP1(R0) ; TURN AUTO-TRUNCATE ON
	.IFF
	ADD	F.HIBK+2(R0),@R5  ;ASSUME EXTEND SUCCEEDS
	BCS	EXTDX1		  ;EXCEPT IF VBN EXCEEDS 65535
	MOV	@R5,F.HIBK+2(R0)  ;UPDATE HIBK
	.ENDC
20$:	RETURN
EXTDX1:	MOVB	#IE.NBK,F.ERR(R0) ;FAILED TO ALLOCATE REQUESTED SPACE
	SEC
	RETURN
;
;
	$END	CKALOC
;
;
	.END
