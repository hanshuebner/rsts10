	$BEGIN	WAITI,<28.1>,<WAIT FOR I/O DONE - INTERNAL>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 10-OCT-73
;
; PREVIOUSLY MODIFIED BY
;
;	LONI BROWN


;+
; ISSUE QI/O AND WAIT FOR I/O COMPLETION
; CALLING SEQUENCE:
;	CALL	..QIOW
; INPUTS:
;	R0=FDB ADDRESS
;	R4=I/O FUNCTION CODE
; OUTPUTS:
;	C=0 IF SUCCESSFUL, C=1 IF ERROR, F.ERR SET
;	R1=I/O STATUS BLOCK ADDRESS
;	R0 PRESERVED
;	R2-R5 ALTERED
;-
WATUPN:	CLRB	F.ERR+1(R0)	;UNDO SIDE EFFECT FROM ..XQIO
	WSIG$S			;WAIT FOR A SIGNIFICANT EVENT
				;DROP THROUGH TO RETRY THE QI/O
..QIOW::MOV	@#.FSRPT,R5
	ADD	#A.DPB,R5	;R5=DPB ADDRESS
	MOV	#12.*400+3,R3	;USE THE QI/O AND WAIT DIRECTIVE
	CALL	..XQIO		;ISSUE THE QI/O AND WAIT
				;R4 WAS PRESERVED BY THE ABOVE
	CMP	#IE.UPN,@#$DSW	;OUT OF POOL NODES?
	BEQ	WATUPN		;BRANCH IF YES, WAIT AND RETRY
;
; AND NOW DROP THROUGH TO ..WAIT WHICH WILL AT LEAST SET F.ERR
; AND WILL WAIT ON THE EVENT FLAG IF NECESSARY
;
;+
; WAIT FOR I/O DONE FOR I/O STATUS BLOCK
; CALLING SEQUENCE:
;	CALL	..WAIT
; INPUTS:
;	R0=RDB
;	R1=I/O STATUS BLOCK ADDRESS
; OUTPUTS:
;	C=0 IF NO ERROR, C=1 IF ERROR FROM HANDLER
;	F.ERR(R0), SET WITH I/O STATUS CODE
;	ALL REGISTERS PRESERVED
;-
..WAIT::MOVB	@R1,F.ERR(R0)
	BEQ	20$
	CALLR	..FCSX
20$:	CALL	..WAEF
	.IF	GT,R$RSTS
	MOVB	#IS.SUC,@R1	;RSTS NEVER FAILS
	.ENDC
	BR	..WAIT
;+
; WAIT FOR EVENT FLAG IN FDB AND CLEAR IT WHEN SET
; CALLING SEQUENCE:
;	CALL	..WAEF
; INPUTS:
;	R0=FDB
; OUTPUTS:
;	ALL REGISTERS PRESERVED
;	NO SIDE EFFECTS
;-
..WAEF::
	.IF	EQ,R$RSTS
	MOV	R1,-(SP)
	MOVB	F.EFN(R0),R1
	BNE	10$
	MOV	#FCSEFN,R1
	.IFTF
10$:	WTSE$S	R1
	.IFT
	BCS	20$
	CLEF$S	R1
	BCS	20$
	MOV	(SP)+,R1
	.IFTF
	RETURN
	.IFT
20$:	CALL	.FATAL
	.ENDC
;
;
	$END	WAITI
;
;
	.END
