	$BEGIN	RWBLK,<28.2>,<READ WRITE VIRTUAL BLOCK>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1983 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 11-AUG-73
;
;
; MODIFICATIONS:
;
; 	S. M. THOMAS	25-FEB-83
;
;		SMT023 -- TO MAKE SURE I/O IS COMPLETE WAIT ON
;			  THE I/O STATUS BLOCK
;
;+
; ROUTINE TO READ AND WRITE BLOCK TO A LUN
; CALLING SEQUENCE:
;	CALL	..RBLK		;TO READ A BLOCK
;	CALL	..WBLK		;TO WRITE A BLOCK
; INPUTS:
;	R0=FDB
;	R1=ADDRESS OF DATA BUFFER
;	R2=NO. OF BYTES
;	R3=CARRIAGE CONTROL CHARACTER
; OUTPUTS:
;	R0 PRESERVED
;	R1 = ADDRESS OF I/O STATUS BLOCK
;	R2-R5 ARE DESTROYED
; OPERATION:
;	INVOKES THE READ/WRITE VIRTUAL BLOCK QI/O.  IT ASSUMES THAT THE
; RELATION BETWEEN THE BUF ADR AND I/O STATUS BLOCK IS THAT THE I/O
; STATUS BLOCK IS AT THE FRONT OF THE BUFFER HEADER WHICH IMMEDIATELY
; PRECEEDS THE BUFFER.  THE DPB IS BUILT ON THE STACK
; AND ONCE THE QI/O IS ISSUED AND THE C BIT CHECKED FOR ERROR,
; THE ROUTINE RETURNS TO THE CALLER.  THERE IS NO IMPLIED WAIT
; FOR I/O COMPLETION.
;-
	.ENABL	LSB
..RBLK::MOV	#IO.RVB,R4	;READ VIRTUAL BLOCK
	BR	10$
..WBLK::MOV	#IO.WVB,R4	;WRITE VIRTUAL BLOCK
10$:	CALL	..IDPB		;INIT DPB AND SET R5 TO PARAM BLOCK
	MOV	R1,(R5)+	;ADDRESS OF DATA BUFFER
	MOV	R2,(R5)+	;SIZE OF DATA BUFFER
	MOV	R3,(R5)+	;CARRIAGE CONTROL INFORMATION

	.IF	EQ,R$$MBF+R$$BBF ;IF SINGLE BUFFERED FCS
	MOV	F.VBN(R0),(R5)+	;HIGH WORD OF VBN
	MOV	F.VBN+2(R0),(R5) ;LOW WORD OF VBN
	CALLR	..QIOW		;ISSUE THE QI/O, WAIT, AND RETURN

	.IFF			;IF MULTIPLE BUFFERED FCS
	MOV	F.BDB(R0),R1
	MOV	B.VBN(R1),(R5)+	;HIGH VBN FROM BUFFER DESCRIPTOR AREA
	MOV	B.VBN+2(R1),(R5) ;LOW ORDER VBN
	.IF	GT,R$$MBF							; GK001
;
	CMP	#IO.RVB,R4	;READ VIRTUAL BLOCK?				;**-1
	BNE	20$		;BRANCH IF WRITE
	BITB	#FD.RAH,F.MBFG(R0) ;READ AHEAD?
	BR	30$
20$:	BITB	#FD.WBH,F.MBFG(R0) ;WRITE BEHIND?
30$:	BNE	40$		;BRANCH IF NOT SUPPOSED TO WAIT
	.ENDC									; GK001
	CALLR	..QIOW		; ISSUE QIO AND WAIT
;										;**-1
40$:	SUB	#10.*2,R5	;R5 RESET TO TOP OF DPB
	MOV	#12.*400+1,R3	;ASSUME QI/O AND NO WAIT (ASYNCHRONOUS)
	CALLR	..XQIO		;ISSUE THE QI/O, AND RETURN
	.ENDC

	.DSABL	LSB
;
;
	$END	RWBLK
;
;
	.END
