	$BEGIN	PGCR,<28.11>,<IS PUT/GET LEGAL?>,R$$SEQ,<PGCR,PGCS>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982,1986 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 17-AUG-73
;
; Last Modification Date :  29-JAN-86
; Modified for RSX-11M-PLUS Update C by :
;
; Todd Schoeller	28.11
;		TMS029 -- Make room in REST segment for csi changes
;
;
;+
; SUBROUTINE TO VERIFY THAT PUT OR GET IS LEGAL TO THIS FILE
; CALLING SEQUENCE
;	CALL	..PGCR
; INPUTS:
;	R0=FDB
; OUTPUTS:
;	C=0 FOR OPERATION OK, F.ERR = 1
;	C=1 FOR NOT OK, F.ERR = ERROR CODE
;	ALL REGISTERS PRESERVED
;	RETURNS NORMALLY IF ACCESS IS ALLOWED
;	FATAL ERROR IF NOT ALLOWED
;-
	.IF	EQ,R$$SEQ	;SEQUENTIAL OR RANDOM ALLOWED
..PGCR::TST	F.BDB(R0)	;MUST BE NON-ZERO IF FILE IS OPEN
	BEQ	20$		;BRANCH IF FILE NOT OPEN
;
; C=0, PRESERVE IT
;
	BITB	#FD.RWM,F.RACC(R0) ;PUT/GET MODE (I.E. NOT READ/WRITE MODE)
	BNE	20$		;BRANCH IF NOT PUT/GET MODE
	BITB	#FD.RAN,F.RACC(R0) ;IF RANDOM MODE
	BEQ	10$
	BITB	#FD.SQD,F.RCTL(R0) ;MUST NOT BE SEQUENTIAL DEVICE
	BNE	30$
10$:	CALL	.SUCSS		;INITIALIZE ERROR CODE
	RETURN
20$:	MOV	#IE.ILL&377,F.ERR(R0) ;PUT/GET IS ILLEGAL
	SEC
	RETURN
	.ENDC
;
	.IF	GT,R$$SEQ	;SEQUENTIAL ONLY
..PGCS::TST	F.BDB(R0)	;MUST BE NON-ZERO IF FILE IS OPEN
	BEQ	20$		;BRANCH IF FILE NOT OPEN
;
; C=0, PRESERVE IT
;
	BITB	#FD.RWM,F.RACC(R0) ;IF READ/WRITE MODE
	BNE	20$		;THEN ILLEGAL
	BITB	#FD.RAN,F.RACC(R0) ;IF RANDOM MODE
	BNE	30$		;THEN ILLEGAL SEQ OPERATION
	CALL	.SUCSS		;INITIALIZE ERROR CODE
	RETURN
20$:	MOV	#IE.ILL&377,F.ERR(R0) ;PUT/GET IS ILLEGAL
	SEC
	RETURN
	.ENDC
;
30$:
	.IF	GT,R$$SEQ
..SQER::
	.ENDC
	MOV	#IE.ISQ&377,F.ERR(R0) ;ILLEGAL SEQUENTIAL OPERATION
	SEC
	RETURN
;
;
	$END	PGCR
;
;
	.END
