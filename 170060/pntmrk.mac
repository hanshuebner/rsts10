	$BEGIN	PNTMRK,<28.11>,<POINT AND MARK>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982, 1986 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 11-AUG-73
;
; PREVIOUSLY MODIFIED BY
;
;	S. RUZICH
;	A. GROUPE
;
; Last Modification Date :  29-JAN-86
; Modified for RSX-11M-PLUS Update C by :
;
; Todd Schoeller	28.11
;		TMS029 -- Make room in REST segment for csi changes
;
;
;+
; POINT - POSITION FILE AT SPECIFIED BLOCK ANG BYTE NUMBER
; CALLING SEQUENCE
;	CALL	.POINT
; INPUTS:
;	R0=FDB ADDRESS
;	R1=HIGH ORDER BITS OF NEW VIRTUAL BLOCK NUMBER (VBN)
;	R2=LOW ORDER BITS OF NEW VBN
;	R3=BYTE NUMBER TO POSITION TO IN THE BLOCK, BETWEEN 0
;		AND BBFS-1
;
; OUTPUTS:
;	ALL REGISTERS PRESERVED
;	F.VBN, F.VBN+2 SET TO NEW BLOCK NO.
;	F.NREC SET TO BYTE IN BLOCK
;	F.NRBD, F.NRBD+2 SET IF IN PARTIAL LOCATE MODE, THUS ALLOWING PUT
;		LOCATE MODE, RANDOM BY DOING POINT, BUILD RECORD, PUT
;	C=0 IF OK, C=1 IF ERROR, F.ERR TELLS ABOUT KIND OF ERROR
;
;
;
; OPERATION:
;	IF THE BLOCK DESIRED IS DIFFERENT FROM THE CURRENT NO, THE
; CURRENT ONE IS WRITTEN IF FD.WRT OF F.BKP1 IS SET AND THE NEW BLOCK
; IS READ.  IF THE NEW POSITION IS AT OR BEYOND THE EOF, THEN
; THE EOF ERROR CONDITION IS RETURNED WITH THE C BIT SET
;-
.POINT::.SAVR1			;SAVE REGISTERS R1-R5
	CALL	.SUCSS			;INDICATE SUCCESS AT START
	BITB	#FD.REC,F.RCTL(R0)	;IS THE DEVICE RECORD ORIENTED?
	BEQ	5$			;NO - REALLY DO THE POINT
	BICB	#FD.EF1,F.BKP1(R0)	;YES- CLEAR THE EOF BIT
	BR	10$			;AND RETURN SUCCESS
5$:				;
	CALL	..PNT1
	BCC	10$
	CMPB	#IE.EOF,F.ERR(R0) ; IF POINTING TO EOF
	BNE	20$		; THERE IS NO ERROR
10$:	CALL	..RTAD		; RETURN REC ADR IN LOCATE MODE
20$:	CALLR	..FCSX


;+
; MARK THE POSITION OF THE FILE SO THAT IT CAN
; BE CONVENIENTLY REPOSITIONED THERE
; CALLING SEQUENCE:
;	CALL	.MARK
; INPUTS:
;	R0=FDB
; OUTPUTS:
;	R1=HIGH ORDER BITS OF VIRTUAL BLOCK NUMBER
;	R2=LOW ORDER BITS OF VIRTUAL BLOCK NUMBER
;	R3=CURRENT POSITION WITHIN BLOCK (BYTE NUMBER)
; OPERATION:
;	IT IS INTENDED THAT THE USER WOULD CALL .MARK
; TO GET THE NECESSARY PARAMETERS FOR A LATER CALL TO .POINT
;-
.MARK::	MOV	F.VBN(R0),R1
	MOV	F.VBN+2(R0),R2
	MOV	F.NREC(R0),R3
	ADD	F.VBSZ(R0),R3
	SUB	F.EOBB(R0),R3
	RETURN
;
;
	$END	PNTMRK
;
;
	.END
