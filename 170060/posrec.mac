	$BEGIN	POSREC,<28.11>,<POSITION RANDOM RECORD>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982,1986 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
;
; PREVIOUSLY MODIFIED BY
;
;	BRIAN A. O'CONNELL
; PETER H. LIPMAN 11-AUG-73
;
; Last Modification Date :  29-JAN-86
; Modified for RSX-11M-PLUS Update C by :
;
; Todd Schoeller	28.11
;		TMS029 -- Make room in REST segment for csi changes
;
;+
; POSITION FILE TO PUT OR GET SPECIFIED RECORD NUMBER
; CALLING SEQUENCE
;	CALL	.POSRC
; INPUTS:
;	R0=FDB
;	F.RCNM,F.RCNM+2 CONTAIN THE DESIRED RECORD NUMBER
; OUTPUTS:
;	C=0 IF OK, C=1 IF ERROR, F.ERR TELLS WHAT HAPPENED
;	ALL REGISTERS PRESERVED
;	FDB SET UP TO POINT AT DESIRED RECORD
;		F.VBN, F.NREC ARE SET UP
;		F.NRBD, F.NRBD+2 ARE SET IF IN PARTIAL LOCATE MODE
;-
.POSRC::.SAVR1
	CALL	.SUCSS		;INDICATE SUCCESS AT START
	BITB	#FD.REC,F.RCTL(R0) ;NOP IF RECORD ORIENTED
	BNE	POSRCX
; ENTER HERE TO AVOID SAVING THE REGISTERS - ONLY R0 PRESERVED
..PSR1::CALL	..PSRC
	CALL	..RTAD		;RETURN BUF ADR IN PARTIAL LOCATE MODE
POSRCX:	CALLR	..FCSX
;
..PSRC::CALL	..PSIT		;CALCULATE VBN AND BYTE
	BCS	POSRET		;BRANCH IF BAD RECORD NUMBER OR SIZE
POSPNT:	CALL	..PNT1		;POSITION THE FILE
POSRET:	RETURN
;
; ENTER HERE FOR GET & EOF CHECK
..PSRG::CALL	..PSIT		; CALC VBN & BYTE
				;*RETURNS R1, R2 = VBN
	BCS	POSRET		; RETURN ANY ERROR

	CMP	F.EFBK(R0),R1	; CMP EOF BLOCK # WITH VBN
	BNE	10$
	CMP	F.EFBK+2(R0),R2
	BNE	10$
	TST	F.FFBY(R0)	; SAME BLOCK AS EOF
				;*OK UNLESS F.FFBY=0
10$:	BHI	POSPNT		; IF HI - OK

	MOVB	#IE.EOF,F.ERR(R0)	; RETURN EOF ERROR
	SEC
	BR	POSRET
;
;
	$END	POSREC
;
;
	.END
