	$BEGIN	DIFND,<28.1>,<FIND DIRECTORY ID - 2ND HALF>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1981, 1991 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; PETER H. LIPMAN
;
; ALTERED BY:
;
; SHAO-SUN CHIEN	28-JUN-74
; ANDREW C. GOLDSTEIN  17 MAR 76  19:11
; G. H. KUENNING 26-MAY-78
;	GK001 - MAKE FILE-ID MOVING BE A SEPARATE ROUTINE, ..MFID
;
;	S. RUZICH	10-MAY-81
;
;		SR129 -	UPON FIND ERROR, ZERO N.DID+2 TO PREVENT ITS USE IF
;			USER IGNORES ERROR.
;	
;	LONI BROWN	27-APR-81
;
; 	       LEB001 - ADDED RSTS/E SPECIFIC CODE
;
;	S. LeVan	21-Oct-91	V28.1
;		SEL001 - Shrink code by assuming N.FID=0.
;
;+
; ALTERNATE ENTRY FOR REAL SUBROUTINE CALL.
;
; INPUTS:
;	R0=FDB
;	R1=FNB
; OUTPUTS:
;	SAME AS BELOW, EXCEPT R2 & R3 ARE SAVED AND RESTORED.
;
;-
..DID1::MOV	R3,-(SP)	; SAVE REGISTERS
	MOV	R2,-(SP)	; AND FALL INTO COMMON CODE

;+
; THIS SECOND HALF OF THE FIND DIRECTORY ROUTINE IS CALLED
; EITHER BY DIRFND, OR BY DIDFND.
;
; INPUTS:
;	R0=FDB
;	R1=FNB
;	(SP)=SAVED R2
;	2(SP)=SAVED R3
;	4(SP)=RETURN LOCATION
; OUTPUT:
;	C=0 IF SUCCESSFUL, C=1 IF FAILURE, F.ERR SET TO REASON
;	R2,R3 RESTORED FROM STACK
;	RETURNS THROUGH 4(SP)	;SP AT ENTRY POINT
;	DIRECTORY ID, DEVICE AND UNIT ESTABLISHED IN FNB
;	ALL OTHER ENTRIES ZEROED IF SUCCESSFUL.
;-
	.IF	EQ,R$RSTS							;LEB001
..DID:: CLR	N.FNAM+4(R1)
	MOV	#1,N.FVER(R1)	;VERSION IS 1
	MOV	#DIRTYP,N.FTYP(R1)
	MOV	#4,N.DID(R1)	;START SEARCH AT MFD
	MOV	#4,N.DID+2(R1)
	CALL	..FIND		;FIND THE ID FOR THIS DIRECTORY NAME
	BCC	..MLD		;NO ERROR - PROCEED				; SR129
	MOV	#0,N.DID+2(R1)	;ERROR - ZERO THE 2ND WORD OF DIR ID		; SR129
	BR	DONE		;RETURN WITH CARRY STILL SET			; SR129
										;**-1
	.IFF									;LEB001
..DID::	CLR	N.STAT(R1)	;RESET FNB STATUS				;LEB001
	;CLR	N.FID(R1)	;REINIT THE FILE ID; LEB001; SEL001
	CLR	(R1)		;REINIT THE FILE ID; SEL001
	ASSUME	N.FID,0		;SEL001
	CLR	N.FID+2(R1)							;LEB001
	CLR	N.FID+4(R1)							;LEB001
	CLR	N.NEXT(R1)							;LEB001
	BR	DONE								;LEB001
	.IFT									;LEB001
..MLD::	CALL	..MFID		;MOVE FILE ID TO DIR. ID, CLEAR FID		; GK001
	CLR	N.FNAM(R1)	;CLEAN UP THE FNB FOR PARSE FILE NAME
	CLR	N.FNAM+2(R1)
	CLR	N.FNAM+4(R1)
	CLR	N.FTYP(R1)
	CLR	N.FVER(R1)
	CLR	N.NEXT(R1)
	.IFTF									;LEB001
DONE:	MOV	(SP)+,R2							; GK001
	MOV	(SP)+,R3							; GK001
	RETURN									; GK001
										; GK001
										; GK001
; THE FOLLOWING ROUTINE COPIES THE FILE ID INTO THE DIRECTORY ID,		; GK001
; AND CLEARS THE FILE ID.  IT DESTROYS R4 AND R5.				; GK001
;										; GK001
..MFID::									; GK001
	.IFT									;LEB001
	MOV	R1,R4		;COPY FILE ID IN FNB INTO DIR. ID		; GK001
	MOV	R1,R5		; ...						; GK001
	ADD	#N.FID,R4	; ...						; GK001
	ADD	#N.DID,R5	; ...						; GK001
	MOV	(R4)+,(R5)+	; ...						; GK001
	MOV	(R4)+,(R5)+	; ...						; GK001
	MOV	(R4),(R5)+	; ...						; GK001
	CLR	(R4)		;CLEAR OLD FILE ID FOR NEXT PASS		; GK001
	CLR	-(R4)		; ...						; GK001
	CLR	-(R4)		; ...						; GK001
	RETURN
;
;
	.ENDC									;LEB001
	$END	DIFND
;
	.END
