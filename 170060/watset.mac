	$BEGIN	WATSET,<28.1>,<WAIT FOR I/O DONE, SET REC POINTERS>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; PETER H. LIPMAN 10-OCT-73
;
; PREVIOUSLY MODIFIED BY
;
;	S. RUZICH
;
;+
; WAIT FOR IO DONE ON SPECIFIED IO STATUS BLOCK AND
; SET F.NREC, F.EOBB AS WELL AS F.ERR
; CALLING SEQUENCE:
;	CALL	..WAST
; INPUTS:
;	R0=FDB
;	R1=IO STATUS BLOCK ADR
; OUTPUTS
;	C=0 IF OK, C=1 IF ERROR
;	F.ERR SET TO IO STATUS CODE
;	F.NREC TO BEGIN OF DATA
;	F.EOBB TO END OF DATA (VBN)
;	R0,R1 R3-R5 PRESERVED R2 ALTERED
;-
..WAST::
	CALL	..WAIT
	MOV	2(R1),R2	;NO. OF BYTES XFERRED
	.IF	GT,R$$BBF	;BUFFERS BIGGER THAN 1 BLOCK
	BITB	#FD.REC,F.RCTL(R0)
	BNE	10$
	CMP	R2,F.VBSZ(R0)	;IF BIGGER, USE VB SIZE
	BLOS	10$
	MOV	F.VBSZ(R0),R2
10$:
	.ENDC	
	MOV	R1,-(SP)	;PRESERVE R1
	ADD	#S.BFHD,R1
	MOV	R1,F.NREC(R0)
	.IF	GT,R$$ANI
	BITB	#CH.AND,F.CHR(R0)	;ANSI MAG TAPE?
	BEQ	20$			;NO - BRANCH
	CLR	-(SP)			;YES
	BISB	F.BGBC(R0),(SP)		;AVOID EXTENDING SIGN BIT OF BUF OFFSET
	ADD	(SP)+,F.NREC(R0)	;ADD BUFFER OFFSET TO NEXT REC POINTER
20$:
	.ENDC
	ADD	R2,R1
	MOV	R1,F.EOBB(R0)
	MOV	(SP)+,R1	;RESTORE R1
	CALLR	..FCSX
;
;
	$END	WATSET
;
;
	.END
