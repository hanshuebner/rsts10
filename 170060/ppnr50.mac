	$BEGIN	PPNR50,<28.1>,<TRANSLATE PPN TO RAD50 FORM>
; 
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED OR COPIED ONLY IN ACCORDANCE WITH THE  TERMS
; OF SUCH LICENSE.
;  
; COPYRIGHT (c) 1982 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
; 
; D.N.CUTLER	3-JUL-74
; COMMENTED BY S.CHIEN	12-JUL-74
;
;
;+
; TRANSLATE PPN TO TWO RAD50 WORDS
;
; CALLING SEQUENCE:
;	CALL .PPR50
;
; INPUT:
;	R2 = PPN - .BYTE   PROG,PROJ
;	R1 = ADDRESS TO STORE RAD50 STRING
; OUTPUT:
;	R0,R4,R5 PRESERVED
;	R1,R2,R3 DESTROYED
;-
;


.PPR50::CALL	10$		;CONVERT PROJ NUMBER
	TST	(R1)+		;CONVERT PROG NUMBER
10$:	CLR	(R1)		;INITIAL CONDITION OF ALGORITHM
	CLR	R3		;CLEAR ACCUMULATOR
	CALL	20$		;CONVERT HIGH OCTAL DIGIT
	CALL	(PC)		;CONVERT 2 REMAINING LOW OCTAL DIGITS
	MOV	(R1),-(SP)	;RAD50 FORM OF OCTAL DIGIT
	ASL	(R1)		;2N
	ASL	(R1)		;4N
	ADD	(SP)+,(R1)	;N+4N=5N
	ASL	(R1)		;10N
	ASL	(R1)		;20N
	ASL	(R1)		;40N (RAD 50)
	CLR	R3		;GET READY FOR NEXT OCTAL DIGIT
	ASL	R2		;SHIFT ONE BIT FROM R2
	ROL	R3		;INTO R3
20$:	ASL	R2		;
	ROL	R3		;
	ASL	R2		;
	ROL	R3		;
	ADD	#36,R3		;ADD RAD50 FORM OF 0
	ADD	R3,(R1)		;ACCUMULATE RESULT
	RETURN
;
	$END	PPNR50
;
	.END
