TITLE	FIP,<FIP CALL INTERFACE>,14,18-APR-85,SSS

;
;		COPYRIGHT (c) 1974, 1985 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

;+
; ISSUE FIP CALL
; CALLING SEQUENCE:
;	CALL	..FIP
; INPUTS:
;	R0=FDB
;	R4=FIP FUNCTION CODE
;	R5=FIRQB ADDRESS
; OUTPUTS:
;	ALL REGISTERS PRESERVED IF SUCCESSFUL,
;	R4 ALTERED IN CASE OF ERROR
;	C=0 IF OK, C=1 IF ERROR, F.ERR SET USING IOSTS
; OPERATION:
; ALL FIP PARAMETERS EXCEPT FOR THE FUNCTION CODE HAVE ALREADY BEEN
; PLACED IN THE FIRQB. THIS ROUTINE PLACES THE FUNCTION CODE IN THE
; FIRQB AND ISSUES THE FIP CALL. F.ERR IN THE FDB IS THEN SET USING
; THE RETURNED VALUE OF IOSTS.
;-
.ENABL	GBL
.PSECT	PURE$I	RO,I,LCL,REL,CON

..FIP::
	MOVB	R4,FQFUN(R5)	;SET THE FUNCTION CODE
	CALFIP			;THEN CALL FIP
	MOVB	#1,F.ERR(R0)	;PRESET SUCCESSFUL RETURN
	TSTB	@#IOSTS		;NOW CHECK STATUS
	BEQ	20$		;BRANCH IF OK
	MOV	#ERTAB,R4	;SET POINTER TO ERROR TABLE
10$:	MOVB	(R4)+,F.ERR(R0)	;ASSUME THIS ERROR
	TSTB	(R4)		;++01	CHECK FOR END OF TABLE
	BEQ	15$		;++01	IF SO USE CATCH-ALL CODE
	CMPB	(R4)+,@#IOSTS	;NOW CHECK FOR THE ERROR
	BNE	10$		;++01	TRY AGAIN IF NOT THIS ONE
15$:				;++01
	SEC			;SET C
	RETURN			;EXIT

20$:	CMP	#OPNFQ,R4	;IF FUNCTION WAS OPEN FILE
	BNE	30$
	MOV	FQDEV(R5),F.FNB+N.DVNM(R0)	;THEN COPY DEVICE NAME
	MOV	FQDEVN(R5),F.FNB+N.UNIT(R0)	;AND UNIT NUMBER
	CLRB	F.FNB+N.UNIT+1(R0)		;DON'T WANT THE FLAG BYTE
30$:	CLC			;CLEAR C
	RETURN			;EXIT

.PSECT	PURE$D	RO,D,LCL,REL,CON

ERTAB:				;ERROR CODE TABLE
				;DESCENDING ORDERED BY IOSTS CODE
	.BYTE	IE.DNR,HNGDEV
	.BYTE	IE.VER,DATERR
	.BYTE	IE.EOF,EOF
	.BYTE	IE.PRI,PRVIOL
	.BYTE	IE.NLN,NOTOPN
	.BYTE	IE.RSU,NOTAVL
	.BYTE	IE.ALN,NOTCLS
	.BYTE	IE.BDV,NODEVC
	.BYTE	IE.NSF,NOSUCH
	.BYTE	IE.DFU,NOROOM
	.BYTE	IE.BNM,BADNAM
	.BYTE	IE.BDR,BADDIR
	.BYTE	IE.BAD,0	;DEFAULT ERROR CODE


	;DEFINE THE ERROR VALUES LOCALLY

	BADDIR	= 000001
	DATERR	= 000015
	HNGDEV	= 000016
	NOROOM	= 000004
	NOTAVL	= 000010
	NOTOPN	= 000011
	BADNAM	= 000002
	EOF	= 000013
	NODEVC	= 000006
	NOSUCH	= 000005
	NOTCLS	= 000007
	PRVIOL	= 000012


;+
; INITIALIZE THE FIRQB FOR A FIP CALL
; CALLING SEQUENCE:
;	CALL	..IFQB
; INPUTS:
;	R0=FDB
; OUTPUTS:
;	R5=ADDRESS OF FIRQB
;	R0-R4 PRESERVED
; OPERATION:
; SETS UP THE STANDARD PARAMETERS FOR A FIP CALL FROM THE FDB,
; CLEARS THE REMAINING PARAMETERS, AND RETURNS THE ADDRESS OF
; THE FIRQB IN R5.
;-
.PSECT	PURE$I

..IFQB::
	.ENABL	LSB
	MOV	#FIRQB+FQFIL,R5		;POINT TO CHANNEL SLOT IN FIRQB
	MOVB	F.LUN(R0),(R5)		;SET CHANNEL = LUN
	ASLB	(R5)+			;MAKE CHANNEL TIMES 2
	CLRB	(R5)+			;CLEAR HIGH ORDER BYTE
	TST	F.FNB+N.FID(R0)		;IS THERE A FILE ID?
	BEQ	10$
	MOV	F.FNB+N.FID(R0),(R5)+	;IF SO SET PPN FROM FILE ID
	CLR	(R5)+			;CLEAR FIRST WORD OF NAME
	MOV	F.FNB+N.FID+2(R0),(R5)+	;SET SECOND WORD FROM FILE ID
	BR	15$
..IFQ1::
10$:	MOV	F.FNB+N.DID(R0),(R5)+	;ELSE SET PPN FROM DIRECTORY ID
	MOV	F.FNB+N.FNAM(R0),(R5)+	;AND FILENAME FROM THE FILENAME BLOCK
	MOV	F.FNB+N.FNAM+2(R0),(R5)+
15$:	MOV	F.FNB+N.FTYP(R0),(R5)+	;NOW SET EXTENSION FROM FILE TYPE
	CLR	(R5)+			;FQSIZ
	CLR	(R5)+			;FQNAM2
	CLR	(R5)+			;FQMODE
	CLR	(R5)+			;FQFLAG
	CLR	(R5)+			;FQPROT
	MOV	F.FNB+N.DVNM(R0),(R5)	;SET DEVICE NAME FROM FILENAME BLOCK
	CMP	(R5)+,#"SY		;IF DEVICE NAME IS "SY"
	BNE	18$
	CLR	(R5)+			;THEN NEVER A UNIT NUMBER
	BR	20$

18$:	MOV	F.FNB+N.UNIT(R0),(R5)	;ELSE SET UNIT NUMBER FROM FNB
	ADD	(PC)+,(R5)+		;SET UNIT NUMBER FLAG
	.BYTE	0,377
	BCC	20$			;BRANCH UNLESS NO UNIT NUMBER
	CLR	-2(R5)			;CLEAR TO INDICATE NO UNIT
20$:	CLR	(R5)+			;FQCLUS
	CLR	(R5)+			;FQNENT
	MOV	#FIRQB,R5		;POINT TO START OF FIRQB
	RETURN
	.DSABL	LSB
	.END
