	.TITLE	P2PRS
	.IDENT	/01.02/
;
; COPYRIGHT (c)	1986 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; D.N. CUTLER/C. MONIA 27-DEC-73
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	01.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
; MODIFIED FOR RSX-11M-PLUS AND MICRO/RSX V4.0 BY:
;
;	L. M. PETERSON	20-NOV-86	1.02
;		LMP071		CLOSE CMIPT (COMMAND INPUT FILE) ON ERROR
;				(DPR029 NOW KEEPS CMIPT OPEN)
;
;
; MACRO LIBRARY CALLS
;
	.MCALL	GCMLD$, CCML$
	GCMLD$
;
; PARSE PHASE TWO OPTION INPUTS
;
;+
; **-$P2PRS-PARSE OPTION INPUTS
;
; INPUTS:
;
;	R0:	ADDRESS OF NEXT BYTE TO PROCESS
;	R2:	LAST BYTE PROCESSED **
;	R4:	ADDRESS OF LAST OPTION BLOCK PROCESSED
;
; OUTPUTS:
;
;	C-CLEAR: OPTION INPUT FOUND AND SATISFACTORILY PARSED
;	R0:	 ADDRESS OF NEXT BYTE AFTER OPTION TERMINATOR
;	R2:	 BYTE TERMINATING OPTION SPECIFICATION
;	R4:	 ADDRESS OF CORRESPONDING OPTION BLOCK
;	R5:	 ADDRESS OF PARAMETER STORAGE
;
;	C-SET:   END OF LINE OR SYNTAX ERROR DETECTED
;
; ** R2 IS LOADED WITH THE CHARACTER "!" WHEN PROCESSING
;    A NEW LINE OF KEYWORD INPUT.
;-
	PURE.I			; READ-ONLY I-SPACE

$P2PRS::			;
	TST	R2		; END OF LINE?
	BEQ	120$		; IF EQ YES
	CMPB	#';,R2		; COMMENT TERMINATOR?
	BEQ	120$		; IF EQ YES
	CMPB	#'!,R2		; KEYWORD DELIMITER?
	BNE	40$		; IF NE NO
10$:				;
	CALL	$SETNB		; BYPASS LEADING BLANKS AND HT'S
	CMPB	#';,(R0)	;COMMENT DELIMITER?
	BEQ	120$		; IF EQ YES
	MOV	#$PARM,R5	; GET ADDRESS OF PARAMETER STORAGE
	CALL	$RP		;CONVERT KEYWORD
	CMPB	#'=,R2		;TERMINATED PROPERLY?
	BNE	60$		;IF NE SYNTAX ERROR
	CMP	-(R5),-(R5)	;POINT TO KEYWORD
	MOV	#$KWRD,R4	; GET ADDRESS OF OPTION CONTROL BLOCKS
30$:				;
	CMP	(R5),K$EY(R4)	; KEYWORD MATCH
	BNE	35$		;IF NE NO
	CMP	2(R5),K$EY+2(R4) ; KEY MATCH?
	BEQ	40$		;IF EQ YES
35$:				;
	ADD	#L$NG,R4	; INREMENT TO NEXT BLOCK
	CMP	R4,#$KWRDE	; ANY MORE CONTROL BLOCKS
	BLO	30$		;IF LO YES
	MOV	(PC)+,R1	;GET ERROR/SEVERITY
	.BYTE	E$R29,S$V1	;
	BR	100$		;
40$:				;
	CLR	$NUMP		; CLEAR NUMBER OF PARAMETERS
	CLR	R2		;ASSUME NO MORE PARAMETERS
	TSTB	(R0)		;ANY MORE PARAMETERS?
	BEQ	90$		;IF EQ NO
	CMPB	#';,(R0)	;COMMENT DELIMITER?
	BEQ	90$		;IF EQ YES
	MOV	A$RG(R4),R3	; GET ADDRESS OF ARGUMENT BLOCK
	BIC	#1,R3		;CLEAR LOW BIT
	MOV	#$PARM,R5	; GET ADDRESS OF PARAMETER STORAGE
50$:				;
	INC	$NUMP		; INCREMENT NUMBER OF PARAMETERS
	CMPB	$NUMP,M$AX(R4)	; TOO MANY PARAMETERS?
	BGT	70$		;IF GT YES
	CALL	$SETNB		;BYPASS LEADING BLANKS AND HT'S
	CALL	@(R3)+		;CONVERT PARAMETER
	CMPB	#',,R2		;COMMA TERMINATOR?
	BEQ	80$		;IF EQ YES
	CMPB	#'!,R2		;KEYWORD DELIMITER?
	BEQ	90$		;IF EQ YES
	TST	R2		;ZERO BYTE?
	BEQ	90$		;IF EQ YES
	CMPB	#';,R2		;COMMENT DELIMITER?
	BEQ	90$		;IF EQ YES
	CMPB	#':,R2		;COLON TERMINATOR?
	BEQ	50$		;IF EQ YES
60$:	MOV	(PC)+,R1	;GET ERROR/SEVERITY
	.BYTE	E$R30,S$V1	;
	BR	100$		;
70$:	MOV	(PC)+,R1	;GET ERROR/SEVERITY
	.BYTE	E$R31,S$V1	;
	BR	100$		;
80$:				;
	BIT	#1,A$RG(R4)	; MULTI-SETS ALLOWED?
	BNE	90$		;IF NE YES
	MOV	(PC)+,R1	;GET ERROR/SEVERITY
	.BYTE	E$R32,S$V1	;
	BR	100$		;
90$:				;
	CMPB	$NUMP,M$IN(R4)	; ENOUGH PARAMETERS
	BGE	110$		;IF GE YES
	MOV	(PC)+,R1	;GET ERROR/SEVERITY
	.BYTE	E$R33,S$V1	;
100$:	MOV	$CMIPT, R2		; POINTER TO FDB OF COMMAND INPUT FILE
	BISB	#GE.CLO, G.MODE(R2)	; SET TO ORIGINAL STATE
	CCML$	$CMIPT			; CLOSE THE FILE
	MOV	#$LNDES,R2	;GET ADDRESS OF LINE DESCRIPTOR
	CALL	$ERMSG		;OUTPUT ERROR MESSAGE
	BR	120$		; TERMINATE SCAN
110$:				;
	MOV	#$PARM,R5	; GET ADDRESS OF PARAMETER STORAGE
	MOV	$NUMP,R3	; GET NUMBER OF PARAMETERS
	CLC			; SET SUCCESS
	BR	130$		; EXIT
120$:				;
	SEC			; SET ERROR FLAG
130$:				;
	RETURN			;

	.END
