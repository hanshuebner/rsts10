	.TITLE	BLMNT
	.IDENT	/00.01/
;
; COPYRIGHT (c)	1983 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; C. MONIA	29-APR-74
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	00.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
; INITIALIZE AND BUILD LIBRARY MODULE NAME LISTS
;
; LOCAL DATA
;
	IMPURE			; READ/WRITE D-SPACE


LCLMOD:	.BLKW	17.		; LOCAL STORAGE FOR MODULE NAMES
$LBMOD::.BLKW	1		; VIRTUAL ADDRESS OF NAME TABLE

;+
; **-$CLRMN-INITIALIZE MODULE SWITCH VALUE TABLE
;
; INPUTS:
;
;	NONE
;
; OUTPUTS:
;
;	CSI SWITCH VALUE LIST FOR MODULE NAMES IS INITIALIZED
;
; THIS SUBROUTINE IS CALLED TO SETUP THE MODULE NAME LIST FOR
; SUBSEQUENT SCANNING BY $BLMNT
;-
	PURE.I			; READ-ONLY I-SPACE

$CLRMN::			;
	MOV	#$LBSVT,R0	; GET ADDRESS OF VALUE TABLE
	MOV	#8.,R1		; GET MAX. NO OF NAMES
10$:				;
	CLRB	(R0)		; CLEAR FIRST BYTE OF ENTRY
	ADD	#7,R0		; POINT TO START OF NEXT ENTRY
	SOB	R1,10$		; REPEAT
	RETURN			;

;+
; **-$BLMNT-SCAN CSI SWITCH VALUE LIST FOR MODULE NAMES
;
; INPUTS:
;
;	$INIPT RECORD BLOCK
;	$LBSVL CSI SWITCH VALUE LIST
;
; OUTPUTS:
;
;	C-CLEAR
;	$LBMOD=VIRTUAL ADDRESS OF MODULE LIST (0=NONE)
;
;	C-SET
;	NON RADIX-50 NAME SPECIFIED.
;
; THIS ROUTINE IS CALLED TO CONSTRUCT A LIST OF MODULE NAMES FOR A LIBRARY
; FILE. THE LIST CONSISTS OF TWO-WORD RADIX-50 VALUES TERMINATED BY A ZERO.
; LIST STORAGE IS OBTAINED FROM VIRTUAL MEMORY. INPUT IS THE SWITCH VALUE
; TABLE CONTAINING ASCII DATA AS BUILT BY CSI2. IF THE TABLE IS EMPTY NO LIST
; IS CONSTRUCTED.
;-

$BLMNT::			;
	SAVRG			; SAVE NON-VILATILE REGISTERS
	CLR	$LBMOD		; ASSUME TABLE EMPTY (CLEAR C)
	MOV	$INIPT,R0	; GET INPUT FILE RECORD BLOCK
	BIT	#SW$LB,R$SWTH(R0) ; LIBRARY FILE?
	BEQ	40$		; IF EQ NO
	MOV	#LCLMOD,R5	; GET LOCAL STORAGE ADDRESS
	MOV	#$LBSVT-7,R3	; GET ADDRESS OF SWITCH VALUE LIST
	MOV	#9.,-(SP)	; SET LOOP COUNT
10$:				;
	ADD	#7,R3		; POINT TO NEXT STRING
	DEC	(SP)		; DECREMENT COUNT
	BLE	20$		; IF LE FINISHED SCAN
	TSTB	(R3)		; ANYTHING AT THIS ENTRY?
	BEQ	10$		; IF EQ NO
	MOV	R3,R0		; SET STRING POINTER
	CALL	$RR		; CONVERT NAME
	TST	R2		; ANY BAD CHARACTERS?
	SEC			; ASSUME YES
	BNE	35$		; IF NE NO
	BR	10$		; GO AGAIN
20$:				;
	CLR	(R5)		; MARK END OF LIST
	MOV	#LCLMOD,R4	; GET TABLE ADDRESS
	CMP	R4,R5		; ANY ENTRIES?
	BEQ	35$		; IF EQ NO
	MOV	#17.*2,R1	; SET TABLE SIZE
	CALL	$ALVRT		; ALLOCATE VIRTUAL STORAGE
	MOV	R1,$LBMOD	; SAVE VIRTUAL ADDRESS
	CLC			; SET SUCCESS
30$:				;
	MOV	(R4)+,(R0)+	; BUILD NAME LIST
	BEQ	35$		; IF EQ DONE WITH LIST
	MOV	(R4)+,(R0)+	; MOVE SECOND HALF OF NAME
	BR	30$		;
35$:				;
	INC	(SP)+		; CLEAN STACK
40$:				;
	RETURN			;

	.END
