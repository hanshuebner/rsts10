	.TITLE	LSRCI
	.IDENT	/00/
 
;
; COPYRIGHT   1975,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A SINGLE COMPUTER SYSTEM  AND  CAN BE COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT NOTICE)  ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE INFORMATION IN  THIS DOCUMENT IS  SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT  BE CONSTRUED AS  A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES  NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF ITS  SOFTWARE  ON  EQUIPMENT  WHICH IS NOT  SUPPLIED BY DEC.
;
; VERSION 00
;
; C. MONIA 12-MAR-75
;
; ROUTINES TO SEARCH AND INSERT KEYS IN A VIRTUAL LINEAR LIST
;
; LOCAL DATA
;
; SYMBOL NAME (2-WORDS IN RADIX-50 FORMAT)
;
 
	.PSECT	$$LSRC,D,GBL
 
SYM:	.BLKW	2		;
 
	.PSECT
 
;+
;
; DATA FORMATS:
;
; EACH ITEM IN THE LIST HAS THE FOLLOWING FORMAT
;
; ITEM:	.WORD	NEXT		; VIRTUAL ADDRESS OF NEXT ITEM
;	.WORD	DATA		; ANY DATA
;	.WORD	DATA		; ...
;	.WORD	KEY		; HIGH PART OF RADIX-50 KEY
;	.WORD	KEY		; LOW PART OF RADIX-50 KEY
;	.			; ANY DATA
;	.			; ...
;
;-
;+
; **-$LSRCH-SEARCH VIRTUAL LINEAR LIST FOR KEY
;
; INPUTS:
;
;	R0=ADDRESS OF LISTHEAD
;	R1=ADDRESS OF DESCRIPTOR CONTAINING KEY
;
; OUTPUTS:
;
;	C/CLEAR=KEY FOUND IN LIST
;
;	R0=REAL ADDRESS OF KEY
;	R1=VIRTUAL ADDRESS OF KEY
;
;	C/SET=KEY NOT IN LIST
;
;	R1=0
;
;
;-
 
$LSRCH::			;
	MOV	R5,-(SP)	; SAVE R5
	MOV	R1,R5		; COPY ADDRESS OF SYMBOL DESCRIPTOR
10$:				;
	MOV	(R0),R1		; GET VIRTUAL ADDRESS OF NEXT ENTRY
	SEC			; ASSUME END OF LIST
	BEQ	20$		; IF EQ END OF LIST
	CALL	$CVRL		; CONVERT TO REAL ADDRESS
	CALL	CMPR		; COMPARE KEYS
	BHI	10$		; IF HI TRY NEXT KEY
20$:				;
	MOV	(SP)+,R5	; RESTORE R5
	RETURN
 
;+
;
; **-$LSRCI-LINEAR VIRTUAL LIST SEARCH AND INSERTION
;
; INPUTS:
;
;	R0=VIRTUAL LISTHEAD ADDRESS
;	R1=VIRTUAL ADDRESS OF KEY TO BE INSERTED
;
; OUTPUTS:
;
;	KEY IS INSERTED IN LIST
;
;-
 
$LSRCI::			;
	MOV	R5,-(SP)	; SAVE R5
	MOV	#SYM-S$YM,R5	; GET ADDRESS OF KEY STORAGE LESS OFFSET
	MOV	R1,-(SP)	; SAVE VIRTUAL ADDRESS OF NEW ENTRY
	MOV	R0,-(SP)	; SAVE VIRTUAL ADDRESS OF LISTHEAD
	CALL	$CVRL		; CONVERT NEW ENTRY TO REAL ADDRESS
	MOV	S$YM(R0),S$YM(R5) ; SAVE KEY
	MOV	S$YM+2(R0),S$YM+2(R5) ; ...
	MOV	(SP),R1		; GET VIRTUAL ADDRESS OF LISTHEAD
10$:				;
	MOV	R1,(SP)		; SAVE VIRTUAL ADDRESS OF CURRENT ENTRY
	MOV	(R0),R1		; GET VIRTUAL ADDRESS OF NEXT ENTRY
	SEC			; ASSUME  END OF LIST
	BEQ	20$		; IF EQ AT END OF LIST
	CALL	CMPR		; COMPARE KEYS
	BHI	10$		; IF HI GET NEXT ENTRY
20$:				;
	MOV	R1,R5		; COPY VIRTUAL ADDRESS
	MOV	(SP)+,R1	; RETRIEVE ADDRESS OF PREVIOUS ENTRY
	CALL	CVMRK		; CONVERT TO REAL, WRITE MARK PAGE
	MOV	(SP)+,(R0)	; SET NEW LINK NEXT OF PREVIOUS ENTRY
	MOV	(R0),R1		; GET VIRTUAL ADDRESS OF NEW ENTRY
	CALL	CVMRK		; CONVERT TO REAL, WRITE-MARK PAGE
	MOV	R5,(R0)		; SET LINK NEXT OF NEW ENTRY
	MOV	(SP)+,R5	; RESTORE R5
	RETURN			;
 
;
; COMPARE KEYS
;
 
CMPR:				;
	CMP	S$YM(R5),S$YM(R0) ; TEST HIGH PART OF KEY
	BNE	10$		; C-SET IF RESULT LO, CLEAR IF HIS
	CMP	S$YM+2(R0),S$YM+2(R5) ; FIRST HALF EQUAL, TEST SECOND HALF
10$:				;
	RETURN			;
 
;
; CONVERT A VIRTUAL ADDRESS TO REAL AND WRITE MARK THE PAGE
;
 
CVMRK:				;
	CALL	$CVRL		;
	CALLR	$WRMPG		;
 
	.END
