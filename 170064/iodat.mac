	.TITLE	IODAT
	.IDENT	/30.13/
;
; COPYRIGHT (c)	1989,1991 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; D.N. CUTLER/C. MONIA 27-DEC-73
;
;
;
; MODIFIED FOR RSX-11M/M-PLUS V4.0/2.0 BY:
;
;	J. A. KASSON
;	J. M. LAWLER
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	30.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;	J. M. SALMAN	16-JUN-82	30.02
;		JMS050		SUPPORT SELECTIVE INCLUSION OF AUTOLOAD VECTORS
;				USING NEW TKB-GENERATED ISD RECORD.
;
;	J. M. SALMAN	13-JUL-82	30.03
;		JMS054		ADD ARGUMENT 'N' TO /ID:N SWITCH.
;
;	M. Pettengill	12-OCT-82	30.04
;		MLP079		ALLOCATE ENOUGH SPACE FOR FILE NAME FOR PAB
;
;
;	C. B. PETROVIC	25-OCT-82	30.05
;		CBP064		ADD 'VARRAY' OPTION TO ALLOW PLACING
;				FORTRAN-IV AND FORTRAN-77 'VIRTUAL'
;				ARRAYS IN A COMMON. THIS HAS BEEN
;				TAKEN FROM A MULTI-TASKER ARTICLE
;				WRITTEN BY:
;
;				CHRIS DORAN
;				SIRA INSTITUTE LIMITED
;				SOUTH HILL
;				CHISELHURST, KENT
;				GREAT BRITIAN, BR7 5EH
;
;
;	C. B. PETROVIC	04-JAN-83	30.06
;		CBP072		ADD '/EL' SWITCH TO AUGMENT A RESIDENT
;				LIBRARU BUILD. THIS SWITCH WILL CAUSE
;				THE VALUE CONTAINED IN $HGHAD TO BE PLACED
;				IN THE LABEL BLOCK AT OFFSET L$BMXV. THIS
;				IS AN IMPLIED 'LIBRARY EXTEND TO PARTITON'
;				DIRECTIVE FOR THE RMS SEGMENTED LIBRARY
;				IMPLEMENTATION ON RSX-11M-PLUS.
;
;	B. S. MCCARTHY	15-JUL-84	30.07
;		BM314		ADD SECOND TASK FLAGS WORD AND LABEL
;				REVISION FIELD
;
;
;	C. B. PETROVIC	20-MAR-85	30.08
;		CBP163		ADD SECOND DEFAULT TASK SWITCH WORD
;				IN PREPARATION FOR THE ELIMINATION
;				OF THE SLOW TASK BUILDER (STK) AND
;				ADD THE /SL SWITCH.
;
;
; MODIFIED FOR RSX-11M-PLUS AND MICRO/RSX V4.0 BY:
;
;	L. M. PETERSON	30-APR-86	30.09
;		LMP045		ADD /FO SWITCH TO GET OTS FAST MAP ROUTINE
;
; MODIFIED FOR RSX-11M-PLUS AND MICRO/RSX V4.1 BY:
;
;	L. M. PETERSON	12-NOV-87	30.10
;		LMP098		ADD LIBRARY D-SPACE RESERVATION SUPPORT
;
; MODIFIED FOR RSX-11M-PLUS AND MICRO/RSX V4.3 BY:
;
;	L. M. PETERSON	28-FEB-89	30.11
;		LMP131		ALLOW TASKS WITH MEMORY RESIDENT OVERLAYS
;				TO BE EXTENDED (USING $EXTM DIRECTIVE)
;
;	L. M. PETERSON	1-OCT-89	30.12
;		LMP140A		DELETE OBSOLETE VAX-11 ASSEMBLY TIME 
;				CONDITIONALS AND SET .EXE FILETYPE W/RUNTIME 
;				FEAT$
;
;       C. M. KATZ	19-APR-91	30.13
;		CMK001		ADD RSTS CONDITIONALS
;
; MONITOR DEPENDENT I/O DATA BASE
;
; EQUATED SYMBOLS
;

	.IF DF	R$RSTS		;++RSTS					;KPH001
F$DEVL==9.			;++RSTS Max length of device name	;KPH001
F$DIRL==11.			;++RSTS Max length of directory name	;KPH001
	.IFF			;++RSTS					;KPH001
	
F$DEVL==16.			; MAX LENGTH OF DEVICE NAME
F$DIRL==31.			; MAX LENGTH OF DIRECTORY NAME
	.ENDC
F$FILL==17.			;MAX LENGTH OF FILENAME
LMOD=6.				; MAX LENGTH OF LIBRARY MODULE NAME
NMOD=8.				; MAX NUMBER OF NAMES PER SPEC.

;
; MACRO LIBRARY CALLS
;

	.MCALL	CSI$ND,CSI$SV,CSI$SW
	.MCALL	FDAT$A,FDBDF$,FDOP$A,FDRC$A,FSRSZ$
	.MCALL	GCMLB$,NMBLK$

;
; LOCAL MACROS
;

;
; GENERATE CONTROL BLOCK
;
; GENBLK	A,B,C,DD,E,F,G,H,I,J
;
; WHERE:
;
;	A=THREE CHARACTER BLOCK NAME
;	B=RECORD TYPE
;	C=RECORD ATTRIBUTES
;	DD=RECORD SIZE
;	E=RECORD ACCESS
;	F=RECORD BUFFER SIZE
;	G=LOGICAL UNIT
;	H=DATASET POINTER SWITCH
;	I=ADDRESS OF DEFAULT NAME BLOCK
;	J=NUMBER OF FCS BLOCK BUFFERS
;

	.MACRO	GENBLK	A,B,C,DD,E,F,G,H,I,J
	.PSECT	A'$D,D,GBL
$$=0
	.IF	NB	F
$$=.
	.BLKB	F
	.EVEN
	.ENDC
$$0=0
	.IF	NB	H
$$1=.
	.BLKB	F$DEVL
	.EVEN
$$2=.
	.BLKB	F$DIRL
	.EVEN
$$3=.
	.BLKB	F$FILL
	.EVEN
$$0=.
	.BLKW	1
	.WORD	$$1
	.BLKW	1
	.WORD	$$2
	.BLKW	1
	.WORD	$$3
	.ENDC
	.PSECT	FILN$D,D,GBL
$'A'NM::.WORD	0
	.PSECT	A'P$D,D,GBL
$'A'PT::.WORD	A'PT
	.PSECT	A'$D,D,GBL
A'PT:	FDBDF$
	FDAT$A	B,C,DD
	FDRC$A	E,$$,F
	FDOP$A	G,$$0,I
R$NAME==.-'A'PT
	.WORD	A'PT+F.FNB+N.FNAM
R$SWTH==.-'A'PT
	.BLKW	1
R$SWBK==.-'A'PT
	.BLKW	1
R$NMBK==.-'A'PT
	.WORD	$'A'NM
R$BLKB==.-'A'PT
	.WORD	0
	.IF	NB	J
	.PSECT	A'$E,D,GBL
$$E=.
	.PSECT	A'$D,D,GBL
.=.-2
	.WORD	.+2
$$B=.
	.WORD	$$E-$$B-2
	.BLKB	J*<512.+S.BFHD>
	.ENDC
	.ENDM

;
; R$SWTH BIT DEFINITIONS
;


;
; TASK AND STB FILE SWITCHES
;
;		*** NOTE ***
;
; DEBUGGING AID SWITCH, 'SW$DA', ALSO APPLIES TO INPUT FILE
; SWITCHES
;

SW$CP==100000			; TASK CHECKPOINTABLE (0=YES)
SW$FP==040000			; TASK USES FLOATING POINT (1=YES)
SW$DA==002000			; TASK DEBUGGING AID SPECIFIED (1=YES)
SW$PI==001000			; PIC OUTPUT (1=YES) (ALSO APPLIES TO STB FILE).
SW$PR==000400			; TASK IS PRIVELEGED (1=YES)
SW$TR==000200			; SET TRACE BIT IN PS (1=YES)

	.IF	NDF	R$$11M

SW$FX==004000			; TASK IS FIXABLE (0=YES)
SW$AB==000020			; TASK ABORTABLE (0=YES)
SW$DS==000010			; TASK DISABLABLE (0=YES)

	.IFF

SW$CM==4000			; TASK BUILT IN COMPATIBILITY MODE (1=YES)
SW$EA==020000			; TASK USES EAE (1=YES)
SW$NH==010000			; BUILD TASK IMAGE WITHOUT HEADER (1=YES)
SW$PM==000100			;++034 POST-MORTEM DUMP (1=YES)
SW$SL==000040			; TASK IS SLAVEABLE (1=YES)
SW$NS==000020			; NO SENDS TO TASK ARE PERMITTED (1=YES)
SW$MU==000010			; TASK IS MULTI-USER (1=YES)
SW$AC==000004			; TASK IS ANCILLARY CONTROL PROCESSOR (1=YES)
SW$ALO==000002			; TASK IMAGE CONTAINS CHECKPOINT SPACE (0=YES)
;
; *NOTE WELL*
; CURRENTLY, THE TASKBUILDER CSI TABLE FOR TASK IMAGE SWITCHES SPANS
; 3 SWITCH WORDS -> INIPT + R$SWTH, $SWTCH, $SWOVR.  RSX11M PLUS
; REQUIRES A 3 WAY SWITCH FOR EXTERNAL HEADER SUPPORT.  THAT IS,
; WE NEED TO IDENTIFY 3 SEPERATE CASES: (1) /XH   (2) /-XH AND
; (3) NO SWITCH.  OBVIOUSLY, WE CAN NOT DIFFERENTIATE BETWEEN
; CASE 2 AND CASE 3 BY SIMPLY EXAMINING THE SWITCH WORDS.  CSI$2
; WILL SET THE CORRESPONDING SWITCH VALUE FOR XH (XH$DR) IN
; C.MKW1 IF THE SWITCH WAS SEEN AND WILL SET THE POLARITY OF THE
; SWITCH IN C.MKW2.  NOTE THAT BOTH C.MKW1 AND C.MKW2 ARE WORD
; LOCATIONS AND WE HAVE 3 WORDS OF BIT VALUES.  THEREFORE, FOR
; THIS SPECIAL SWITCH WE WILL FOREVER ALLOCATE THE BIT POSITION
; FOR /XH (XH$DR) IN ALL 3 MASK WORDS.
;
; DO NOT CHANGE THIS DEFINTION UNLESS IT IS ALSO CHANGED IN TABLS.MAC
;
	XH$DR==000001		; TASK MUST NOT HAVE XTRNL HDR (1=YES)


	.ENDC

;
; INPUT FILE SWITCHES
;

SW$MA==100000			; INCLUDE OBJECT FILE IN MAP (1=NO)
SW$DL==040000			; FILE IS DEFAULT SYSTEM LIBRARY (1=YES)
SW$LB==020000			; LIBRARY FILE (1=YES)
SW$MP==010000			; OVERLAY MAP FILE (1=YES)
SW$DA==002000			; OBJECT MODULE IS DEBUGGING AID (1=YES)
SW$SV==000400			; SUPERVISOR-MODE VECTORS (1=NO)
SW$SUP==000200			; SUPERVISOR MODE LIBRARY
SW$CC==000100			; CONCATENATED FILE (1=YES)
SW$AL==000040			; AUTOLOAD ELEMENT (1=YES)
SW$ALE==10			; RESIDENT LIBRARY ELEMENT CONTAINS
				; AUTOLOADABLE ENTRY POINT ISD RECORDS (1=YES)
SW$RL==000004			; RESIDENT LIBRARY ELEMENT (1=YES)
SW$SS==000002			;++008 SELECTIVE SYMBOL SEARCH (1=YES)
SW$CLS==000001			; PART OF CLUSTER LIBRARY (1=YES)

;
; LOCAL DATA
;
; DEFAULT FILE SWITCH SETTINGS
;
; ADJACENCY ASSUMED
;

	IMPURE			; READ/WRITE D-SPACE

	.IF NDF	R$$11M

$DFTSK::.WORD	SW$CP!SW$FP	; DEFAULT TASK SWITCHES

	.IFF

	.IF	DF,R$RSTS	;++RSTS V8.0			;TWH001
$DFTSK::.WORD	SW$ALO!SW$FP	;++RSTS V8.0			;TWH001
	.IFF			;++RSTS V8.0			;TWH001
$DFTSK::.WORD	SW$ALO!SW$CP	; DEFAULT TASK SWITCHES
	.ENDC

	.ENDC

	.IF	NDF,R$RSTS
$DFMAP::.WORD	LG$SH!WI$DE	; DEFAULT MAP FILE SWITCHES
	.IFF
$DFMAP::.WORD	LG$SH!WI$DE!SP$OL	; DEFAULT MAP FILE SWITCHES
	.ENDC
$DFSTB::.WORD	0		; DEFAULT STB FILE SWITCHES
$DFINP::.WORD	SW$CC		; DEFAULT INPUT FILE SWITCHES
$DFLBS::.WORD	SW$LB!SW$MA	; DEFAULT SYSTEM LIBRARY FILE SWITCHES
$DFSWT::.WORD	0		; DEFAULT TASK BUILD SWITCHES
$DFTSO:: .WORD	SE$GA		; DEFAULT FOR $SWOVR WORD
	.WORD	0		; DEFAULT FOR $SWTCH WORD

;
; SYSTEM LIBRARY FILE SWITCH WORD
;

$LBSWT::.BLKW	1		;


;
; 'VARRAY' P-SECTION ATTRIBUTES, DEFAULT VALUES
;

$VAROC::.WORD	CS$VAS*400!CS$TYP!CS$GBL!CS$REL	; DEFAULT IS 'CON'

;
; ALLOCATE FCS RESIDENT IMPURE AREA
;


	FSRSZ$	0

;
; 'GET COMMAND LINE' INPUT CONTROL BLOCK
;

	.PSECT	CMIP$D,D,GBL

$CMIPT::.WORD	CMIPT

	.PSECT	CMI$D,D,GBL

CMIPT:				; REF. LABEL
	GCMLB$	3,TKB,$LNBUF,,,134.

	.PSECT

;
; I/O DATA BASES (SEQUENCE MUST BE AS SHOWN)
;

	.IF	NDF	R$$11M

	GENBLK	CMO,R.VAR,FD.CR,80.,,,2

	.ENDC

	GENBLK	INI,R.FIX,,512.,FD.PLC,,3,1,,1
	GENBLK	TSK,R.FIX,,512.,FD.RWM!FD.RAN,,7,,,1
	.IF	NDF,R$RSTS		;++RSTS V8.0	;TWH001
	GENBLK	MAP,R.VAR,,100.,,,4,,,2
	.IFF				;++RSTS V8.0	;TWH001
	GENBLK	MAP,R.STM,,100.,,,4,,,2	;++RSTS V8.0	;TWH001
	.ENDC				;++RSTS V8.0	;TWH001
	GENBLK	STB,R.VAR,,128.,,,6,,,2
	GENBLK	INP,R.VAR,,,FD.PLC,128.,3
	GENBLK	CRF,R.FIX,,,,,4

;
; ODL FILE COMMAND INPUT CONTROL BLOCK
;
	.PSECT	ODLP$D,D,GBL

$ODLPT::.WORD	ODLPT		;

	.PSECT	ODL$D,D,GBL

	.ENABL	LSB

ODLPT:	GCMLB$	3,TKB,$LNBUF,5,,134.,,ODLNB
$$$=.
.=ODLNB
	NMBLK$	,ODL,,SY
.=ODLPT+G.MODE
	.BYTE	GE.COM!GE.IND!GE.CON!GE.SIZ
.=$$$

	.DSABL	LSB


;
; LIBRARY NAME BLOCK POINTER
;

	.PSECT	LIBN$D,D,GBL

$LIBNM::.WORD	0		;

	.PSECT	INID$D,D,GBL

;
; DEFAULT NAME BLOCKS (ADJACENCY ASSUMED)
;

$DFNB::				; REF LABEL
	NMBLK$	,TSK,,SY
	NMBLK$	,MAP,,SY
	NMBLK$	,STB,,SY
	NMBLK$	,OBJ,,SY

;++036
;++036 TASK BUILDER TEMPORARY MAP OUTPUT NAMEBLOCK
;++036

$MAPTM::NMBLK$	TKBTMP,MAP,,SY


;
; DEFAULT LIBRARY NAME BLOCK
;

$LIBNB::NMBLK$	,OLB,,SY


;
; SYSTEM LIBRARY FILE
;

$DFLIB::NMBLK$	SYSLIB,OLB,,LB

;
; DATA SET DESCRIPTORS AND STRING POINTERS
;
;++036 SYSTEM LIBRARY DIRECTORY STRING
;
	
	.IF	NDF,R$RSTS
DSLIB:	.ASCII	/[1,1]/		; DIRECTORY
	.IFF

DSDEV:	.ASCII	/LB/		;++RSTS V8.0	DEVICE ADDED		;TWH001
DSLIB:	.ASCII	//		;++RSTS V8.0	DIRECTORY DELETED	;TWH001
	.ENDC			;++RSTS V8.0				;TWH001
DSLBE:				; REF LABEL
	.EVEN

;
;++036 SYSTEM LIBRARY STRING DESCRIPTOR
;

$DSPLB::			; REF LABEL
	.IF	NDF,R$RSTS	;++RSTS V8.0				;TWH001
	.WORD	0		; DEFAULT DEVICE
	.WORD	0		;
	.IFF			;++RSTS V8.0				;TWH001
	.WORD	DSLIB-DSDEV	;++RSTS V8.0	DEFAULT DEVICE		;TWH001
	.WORD	DSDEV		;++RSTS V8.0				;TWH001
	.ENDC			;++RSTS V8.0				;TWH001
	.WORD	DSLBE-DSLIB	; DIRECTORY STRING
	.WORD	DSLIB		;
	.WORD	0		; DEFAULT FILE I/D
	.WORD	0		;

;++036
;++036 TASK BUILDER TEMPORARY MAP OUTPUT STRING
;++036

MAPDV:	.ASCII	/SY/		;++036 DEVICE
MAPE:				;++036

	.EVEN

;++036
;++036 TASK BUILDER MAP OUTPUT STRING DESCRIPTOR
;++036

$MAPTD::.WORD	MAPE-MAPDV	;++036 DEVICE DESCRIPTOR
	.WORD	MAPDV		;++036


;
; INPUT FILE SWITCHES
;
$INPSW::			; REF LABEL
	CSI$SW	CC,SW$CC,INIPT+R$SWTH,SET,NEG
	CSI$SW	DA,SW$DA,INIPT+R$SWTH,SET,NEG
	CSI$SW	LB,SW$LB,INIPT+R$SWTH,SET,NEG,LBSV
	CSI$SW	MP,SW$MP,INIPT+R$SWTH,SET,NEG
	CSI$SW	SS,SW$SS,INIPT+R$SWTH,SET,NEG
	CSI$SW	MA,SW$MA,INIPT+R$SWTH,CLEAR,NEG
	CSI$SW	DL,SW$DL!SW$LB,INIPT+R$SWTH,SET,NEG
	CSI$ND

;
; MAP FILE SWITCHES
;

$MAPSW::			; REF LABEL
	CSI$SW	SH,LG$SH,$SWTCH,SET,NEG
	CSI$SW	SP,SP$OL,$SWTCH,CLEAR,NEG
	CSI$SW	CR,CR$EF,$SWTCH,SET,NEG
	CSI$SW	MA,SW$MA,$LBSWT,CLEAR,NEG
	CSI$SW	WI,WI$DE,$SWTCH,SET,NEG
	CSI$ND

;
; STB FILE SWITCHES
;

$STBSW::			; REF LABEL
	CSI$SW	HD,SW$NH,INIPT+R$SWTH,CLEAR,NEG
	CSI$SW	PI,SW$PI,INIPT+R$SWTH,SET,NEG
	CSI$SW	CO,CO$MON,$SWOVR,SET
	CSI$SW	LI,LI$BRY,$SWOVR,SET,,LISV
	CSI$ND

;
; TASK FILE SWITCHES
;

$TSKSW::			; REF LABEL
	CSI$SW	CP,SW$CP,INIPT+R$SWTH,CLEAR,NEG
	CSI$SW	DA,SW$DA,INIPT+R$SWTH,SET,NEG
	CSI$SW	FP,SW$FP,INIPT+R$SWTH,SET,NEG
	CSI$SW	MM,MP$SY,$SWTCH,SET,NEG,MMSV
	CSI$SW	PI,SW$PI,INIPT+R$SWTH,SET,NEG
	CSI$SW	PR,SW$PR,INIPT+R$SWTH,SET,NEG,PRSV
	CSI$SW	SQ,SE$QA,$SWTCH,SET,NEG
	CSI$SW	TR,SW$TR,INIPT+R$SWTH,SET,NEG
	CSI$SW	XT,AB$RT,$SWTCH,SET,NEG,XTSV

	.IF	NDF	R$$11M

	CSI$SW	AB,SW$AB,INIPT+R$SWTH,SET,NEG
	CSI$SW	DS,SW$DS,INIPT+R$SWTH,CLEAR,NEG
	CSI$SW	FX,SW$FX,INIPT+R$SWTH,CLEAR,NEG

	.IFF

	CSI$SW	AC,SW$AC,INIPT+R$SWTH,SET,NEG,PRSV
	CSI$SW	EA,SW$EA,INIPT+R$SWTH,SET,NEG
	CSI$SW	HD,SW$NH,INIPT+R$SWTH,CLEAR,NEG
	CSI$SW	PM,SW$PM,INIPT+R$SWTH,SET,NEG
	CSI$SW	SL,SW$SL,INIPT+R$SWTH,SET,NEG
;	CSI$SW	RE,SW$RE,INIPT+R$SWTH,SET,NEG
	CSI$SW	MU,SW$MU,INIPT+R$SWTH,SET,NEG
	CSI$SW	FU,CO$SRC,$SWTCH,SET,NEG
	CSI$SW	RO,RS$OV,$SWTCH,CLEAR,NEG
	CSI$SW	AL,SW$ALO!SW$CP,INIPT+R$SWTH,CLEAR,NEG
	CSI$SW	CM,SW$CM,INIPT+R$SWTH,SET,NEG
	CSI$SW	SE,SW$NS,INIPT+R$SWTH,CLEAR,NEG
	CSI$SW	IP,IO$PAG,$SWOVR,CLEAR,NEG
	CSI$SW	NM,NO$DIA,$SWOVR,SET,NEG
	CSI$SW	CO,CO$MON,$SWOVR,SET
	CSI$SW	LI,LI$BRY,$SWOVR,SET,,LISV
	CSI$SW	SG,SE$GA,$SWOVR,CLEAR,NEG
	CSI$SW	XH,XH$DR,$SWTCH,SET,NEG
	CSI$SW	ID,ID$ATA,$SWTCH,SET,NEG
	CSI$SW	EL,EX$LIB,$SWOVR,SET,NEG
	CSI$SW	FM,FS$MAP,$SWOVR,SET,NEG
	CSI$SW	CL,IM$CLI,$SWOVR,SET,NEG
	CSI$SW	SB,SL$OW,$SWTCH+2,SET,NEG
	CSI$SW	FO,FO$MAP,$SWOVR,SET,NEG
	CSI$SW	EX,EX$MRT,$SWOV2,SET

	.ENDC

	CSI$ND

;
; '/LB' SWITCH VALUE TABLE
;

LB=$LBSVT
LBSV:				;
	.REPT	NMOD
	CSI$SV	,LB,LMOD
LB=LB+LMOD+1
	.ENDR
	CSI$ND

;
; '/LB' SWITCH VALUE STORAGE
;

$LBSVT::			; REF LABEL

	.REPT	NMOD
	.BLKB	LMOD
	.BYTE	0
	.ENDR

	.EVEN

; '/LI' SWITCH VALUE TABLE
;

LISV:	CSI$SV	OCTAL,$LDAPR,2
	CSI$ND

;
; '/PR' SWITCH VALUE TABLE
;

PRSV:	CSI$SV	OCTAL,$PRVAP,2
	CSI$ND

;
; '/MM' SWITCH VALUE TABLE
;

MMSV:
	CSI$SV	DECIMAL,$ADLIM,2
	CSI$ND

;
; '/XT' SWITCH VALUE TABLE
;

XTSV:	CSI$SV	NUMERIC,$ERRCT,2
	CSI$ND

;
; '/ID' SWITCH VALUE TABLE
;

IDSV:	CSI$SV	DECIMAL,$DPSIZ,2
	CSI$ND


	.PSECT


;
;+
; I/O DATA BASE STRUCTURE:
;
;	THE I/O DATA BASE IS DESIGNED TO ALLOCATE STORAGE FOR BLOCK
; BUFFER SPACE,  FDB'S AND ASSOCIATED DATA IN GLOBAL PSECTS
; SUCH THAT THIS DATA MAY BE OVERLAYED WHEN NO LONGER REQUIRED.
;
;	THE DATA BASE CONSISTS OF ONE OR MORE OR THE
; FOLLOWING ELEMENTS:
;
;	(1) AN FDB, RECORD BUFFER, AND POINTERS TO THE FOLLOWING ELEMENTS
;	(2) A DATASET AND DATASET POINTERS
;	(3) A POOL OF BLOCK BUFFERS
;	(4) A DEFAULT NAME BLOCK
;	(5) CSI SWITCH BLOCK AND SWITCH VALUE TABLES
;
;	THE FOLLOWING MACRO'S ARE USED TO CREATE THE DATA BASE:
;
;	GENBLK:	BUILD FDB, POINTERS, DATASET AND FCS BLOCK BUFFER POOL
;	FCS MACROS:	BUILD DEFAULT NAME BLOCK
;	CSI MACROS:	BUILD SWITCH TABLES.
;
;-
;


	.END
