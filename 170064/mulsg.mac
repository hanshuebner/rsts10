	.TITLE	MULSG
	.IDENT	/08.02/
;
; COPYRIGHT (c)	1986 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; D. N. CUTLER/C. MONIA 12-DEC-73
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	08.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
; MODIFIED FOR RSX-11M-PLUS AND MICRO/RSX V4.0 BY:
;
;	L. M. PETERSON	4-JUN-86	08.02
;		LMP045		ADD SUPPORT FOR OTS OPTIMIZATION
;				(MOV $AFLG TO ROOT)
;
; GENERATE SEGMENT DESCRIPTORS FOR MULTI-SEGMENT TASK
;
; EQUATED SYMBOLS
;
; RESIDENCY FLAG
;

RS$FLG==200			;

;
; PARSED DIRECTIVE OFFSET DEFINITIONS
;

T$YP==2				; OFFSET-TYPE OF ENTRY
L$AB==4				; OFFSET-LABEL OF ENTRY
N$XT==10			; OFFSET-NEXT BYTE ADDRESS
F$LG==N$XT			; OFFSET-CONTROL SECTION FLAGS

;
; ITEM TYPES
;


	.DSECT

S$OS::	.BLKW	1		; START OF STRING
E$OS::	.BLKW	1		; END OF STRING
L$PAR::	.BLKW	1		; LEFT PARENTHESES
R$PAR::	.BLKW	1		; RIGHT PARENTHESES
C$OMA::	.BLKW	1		; COMMA
D$ASH::	.BLKW	1		; DASH (MINUS SIGN)
S$TAR::	.BLKW	1		; ASTERISK
E$XCL::	.BLKW	1		; EXCLAMATION POINT

;
; ALL OPERATOR ASSIGNMENTS MUST FOLLOW SECTION NAME
;

S$CTN::	.BLKW	1		; SECTION NAME
S$EGN::	.BLKW	1		; SEGMENT NAME
F$ILE::	.BLKW	1		; FILE


;
; NUMBER OF NESTED PARENTHESIS LEVELS ALLOWED
;

N$PLVL==32.			;

;
; NUMBER OF SEGMENT DESCRIPTION NAME LEVELS ALLOWED
;

N$SLVL==32.			;

;
; LOCAL MACROS
;
; GENERATE LEGAL CONSTRUCTION MACTRIX
;
; GCON TYPE,^/A/
;
; WHERE:
;
;	TYPE=ITEM TYPE
;
;	A=LEGAL PRECEDING ITEM TYPES
;

	.MACRO	GCON	TYPE,A
	.PSECT	CMAT.D,RO,D,GBL
.=$CBAS+TYPE
MASK=0
	.IF	NB, <A>
	.IRP	X,<A>
N=1
	.REPT	X/2
N=N*2
	.ENDR
MASK=MASK!N
	.ENDM
	.ENDC
	.WORD	MASK
	.PSECT
	.ENDM

;
; LOCAL DATA
;

	IMPURE			; READ/WRITE D-SPACE

;
; AUTOLOAD LEVEL COUNT
;

$ALVL::	.BLKW	1		;

;
; LEGAL CONSTRUCTION MATRIX
;
; THE MATRIX IS AN N-WORD BY N-BIT ARRAY . WHERE N =ITEM TYPE/2.
; THE ARRAY IS USED IN 'MLSG1' TO VERIFY THAT EACH LINE OF ODL INPUT IS
; OF THE PROPER SYNTAX.
;

	.PSECT	CMAT.D,RO,D,GBL
$CBAS::				; REF LABEL
	GCON	S$OS
	GCON	E$OS,^/R$PAR,S$CTN,S$EGN,F$ILE/
	GCON	L$PAR,^/L$PAR,C$OMA,D$ASH,S$TAR,E$XCL/
	GCON	R$PAR,^/R$PAR,S$CTN,S$EGN,F$ILE/
	GCON	C$OMA,^/R$PAR,S$CTN,S$EGN,F$ILE/
	GCON	D$ASH,^/S$CTN,S$EGN,F$ILE/
	GCON	S$TAR,^/S$OS,L$PAR,C$OMA,D$ASH/
	GCON	E$XCL,^/S$OS,L$PAR,C$OMA,D$ASH,S$TAR/
	GCON	S$CTN,^/S$OS,L$PAR,C$OMA,D$ASH,S$TAR/
	GCON	S$EGN,^/S$OS,L$PAR,C$OMA,D$ASH,S$TAR/
	GCON	F$ILE,^/S$OS,L$PAR,C$OMA,D$ASH,S$TAR/

;
; PARSED DIRECTIVE LISTHEAD
;
	IMPURE			; READ/WRITE D-SPACE

$DIRHD::.BLKW	2		;

;
; SEGMENT DESCRIPTION STACK
;
; EACH ENTRY IN THIS STACK IS A LISTHEAD CONSISTING OF TWO WORDS.
; THE LISTHEADS ARE USED TO COLLECT THE SEGMENT DESCRIPTION FOR
; EACH PARENTHESIS LEVEL.
;

$DSTK::	.BLKW	N$PLVL*2


;
; EXCLAMATION POINT (RESIDENCY OPERATOR)
;

$EXCL::	.WORD	0		;
	.BYTE	E$XCL,0		;

;
; LAST ITEM OPERATOR ENTRY
;

$EOSOP::.WORD	0		; LINK TO NEXT IS ALWAYS ZERO
	.BYTE	E$OS,0		;

;
; SOS OPERATOR ENTRY
;

$SOSOP::.BLKW	1		;
	.BYTE	S$OS,0		;

;
; ASTERISK OPERATOR ENTRY
;

$STAR::	.WORD	0		;
	.BYTE	S$TAR,0		;


;
; ROOT SEGMENT PARSED DIRECTIVE POINTER.
;

$RTDIR::.BLKW	1		;

;



;
; TEXT POINTER STACK
;

	.BLKW	N$SLVL*2	;
$TSTK::				; REF LABEL

;
;+
; **-$MULSG-CREATE MULTISEGMENT DESCRIPTION
;
; INPUTS:
;
;	THE ODL FILE.
;
; OUTPUTS:
;
;	THE SEGMMENT TABLES AND ELEMENT LISTS DESCRIBING
; A MULTI-SEGMENT TASK ARE BUILT IN DYNAMIC STORAGE.
;
;	CREATION OF THE SEGMENT TABLES FROM THE ODL INPUT
; IS A THREE STEP PROCESS. IN STEP 1 THE ODL FILE IS READ
; ONE LINE AT A TIME AND RETAINED IN DYNAMIC STORAGE AFTER
; VERIFYING CORRECT LINE FORMAT. IN STEP TWO THE ENTIRE
; ODL IS PARSED INCLUDING A 'PARSE/FIND' ON EACH INPUT FILE.
; CONSTRUCTION OF THE SEGMENT TABLES AND ELEMENT DESCRIPTORS
; IS DONE IN PHASE THREE.
;
;	THE ODL ROUTINES CONSIST OF THE FOLLOWING PRINCIPLE
; MODULES:
;
;	MULSG:	TOP LEVEL CALLS, COMMON DATA AND SUBROUTINES
;	MLSG0:	READ THE ODL AND VERFIFY LINE FORMAT
;	MLSG1:	PARSE THE SEGMENT DESCRIPTION
;	MLSG2:	CREATE THE SEGMENT TABLES
;
;-
	PURE.I			; READ-ONLY I-SPACE

$MULSG::			;
	SAVRG			; SAVE NON-VOLATILE REGISTERS
	CALL	$MLSG0		; READ ODL FILE, BUILD PARSED SEGMENT DESCRIPTOR
	CALL	$MLSG1		; PARSE SEGMENT DESCRIPTION
	CALLR	$MLSG2		; GENERATE SEGMENT TABLES, EXIT

;
; COMMON SUBROUTINE TO SCAN PARSED DIRECTIVE LIST FOR A MATCH
;
; THE PARSED DIRECTIVE LIST POINTED TO BY '$DIRHD' IS SCANNED FOR
; A LABEL MATCH.
;
;
; INPUTS:
;
;	R5: POINTS TO TWO-WORD RADIX 50 NAME
;
; OUTPUTS:
;
;	C-SET: MATCHING LABEL NOT FOUND
;	C-CLEAR: MATCHING LABEL FOUND
;

$SCNL::				;
	MOV	#$DIRHD,R1	; GET ADDRESS OF LISTHEAD
10$:	MOV	(R1),R1		;GET ADDRESS OF NEXT ENTRY
	SEC			;ASSUME NO MORE
	BEQ	20$		;IF EQ YES DONE
	CMP	(R5),L$AB(R1)	; FIRST HALF MATCH?
	BNE	10$		;IF NE NO
	CMP	2(R5),L$AB+2(R1) ; SECOND HALF MATCH?
	BNE	10$		;IF NE NO
20$:	RETURN			;

	.END
