	.TITLE	WSRCS
	.IDENT	/00.00/
	.ENABL	LC
;
; COPYRIGHT (c)	1985 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; C. B. PETROVIC	22-MAR-85
;
;+
; $WSRCS - PERFORM WHOLE SEARCH OF SYMBOL TABLES USING EITHER THE
;	   FAST OR SLOW SYMBOL TABLE MANAGEMENT ROUTINES
;
;	INPUTS:
;		NONE
;
;	OUTPUT:
;		EITHER THE SLOW OR THE FASTER VIRTUAL MEMORY
;		MANAGEMENT ALGORITHM WILL BE CALLED FOR THE
;		CURRENT TASK BUILD.
;
;
; NOTE:
;	THIS MODULE REDEFINES THE GLOBAL ENTRY POINT OF BOTH THE SLOW
;	AND FAST ALGORITHMS FOR THE TASK BUILDER. 
;	THE ORIGINAL MODULES, WHICH ONCE EXISTED
;	IN EITHER TKB.TSK (MODULE WSRCS.MAC) OR STK.TSK (MODULE SLSRC) WILL
;	HAVE MODIFIED ENTRY POINT NAMES TO CORRESPOND TO THE RELATIVE SPEED
;	OF THE ALGORITHM THERIN ENCODED.
;
;	THE MODULE WSRCS (FAST ALGORITHM) WILL BE CHANGED TO DEFINE THE
;	GLOBAL ENTRYPOINT $WSRFS.
;
;	THE MODULE SLSRC (SLOW  ALGORITHM) WILL BE CHANGED TO DEFINE THE
;	GLOBAL ENTRYPOINT $WSRSL.
;
;-
$WSRCS::
	BIT	#SL$OW,$SWTCH+2		; WE DOING A 'SLOW' BUILD?
	BNE	5$			; IF NE, YES...
	CALLR	$WSRFS			; IF EQ, NO...CALL THE FAST MANAGER
5$:
	CALLR	$WSRSL			; CALL THE SLOW MANAGER
	.END
