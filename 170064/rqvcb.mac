	.TITLE	RQVCB
	.IDENT	/00.01/
;
;		COPYRIGHT (c) 1983 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD
;	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE  IS  FURNISHED  UNDER  A LICENSE AND MAY BE USED
; AND  COPIED  ONLY IN  ACCORDANCE WITH THE TERMS OF SUCH LICENSE
; AND WITH  THE INCLUSION  OF THE ABOVE  COPYRIGHT  NOTICE.  THIS
; SOFTWARE  OR ANY OTHER  COPIES  THEREOF, MAY NOT BE PROVIDED OR
; OTHERWISE MADE  AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND
; OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERRED.
;
; THE INFORMATION  IN THIS DOCUMENT IS SUBJECT  TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT  BY  DIGITAL
; EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
;
;
; C. MONIA 22-FEB-74
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	00.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
; REQUEST VIRTUAL CORE BLOCK
;
;+
; **-$RQVCB-REQUEST VIRTUAL MEMORY ALLOCATION
;
; INPUTS:
;
;	R1=ALLOCATION REQUEST IN BYTES (</= 512.)
;	$HGVAD=NEXT FREE VIRTUAL ADDRESS
;
; OUTPUTS:
;
;	C-CLEAR: REQUEST SUCCEEDED.
;
;	R1=VIRTUAL ADDRESS OF REQUESTED BLOCK
;	$HGVAD=UPDATED VALUE OF NEXT FREE ADDRESS
;
;	C-SET: REQUEST FAILED
;
;	FAILURE CONDITIONS:
;
;	(1) REQUEST EXCEEDED 512. BYTES
;	(2) VIRTUAL STORAGE EXHAUSTED
;
; THIS ROUTINE IS CALLED TO ALLOCATE SPACE FROM VIRTUAL
; MEMORY. THE ALLOCATION REQUEST IS ROUNDED UP TO THE
; NEAREST WORD. IF THE ROUNDED VALUE CROSSES A DISK BLOCK
; BOUNDRY THEN ALLOCATION BEGINS AT THE NEXT BLOCK.
;
;		*** NOTE ***
;
; VIRTUAL ADDRESSES ARE WORD VALUES.
;-
	PURE.I			; READ-ONLY I-SPACE

$RQVCB::			;
	MOV	R1,R2		; SAVE LENGTH
	MOV	$HGVAD,R1	; GET HIGHEST VIRTUAL ADDRESS
	BEQ	20$		; IF EQ NO SPACE LEFT
	CLC			; CLEAR CARRY
	ROR	R2		; DO UNSIGNED DIVIDE
	ADC	R2		; ROUND UP TO NEAREST WORD
	CMP	R2,#256.	; CHECK LENGTH OF REQUEST
	BHI	20$		; IF HIGH, TOO BIG
	DEC	R2		; BACK OFF SIZE BY ONE
	MOV	R1,R0		; COPY FREE ADDRESS
	ADD	R2,R0		; COMPUTE LAST ADDRESS IN ALLOCATION
	BCS	30$		; IF C/S ADDRESS SPACE OVERFLOW
	CLRB	R0		; CLEAR DISPLACEMENT INTO BLOCK
	CMP	R0,R1		; SEE IF CROSSING BLOCK BOUNDRY
	BLOS	10$		; IF LOS NO
	MOV	R0,R1		; SET VIRTUAL ADDRESS
10$:				;
	INC	R2		; CONVERT BACK TO LENGTH
	ADD	R1,R2		; COMPUTE NEXT FREE ADDRESS
	MOV	R2,$HGVAD	; UPDATE FREE ADDRESS
	CLC			; SET SUCCESS
	BR	30$		; EXIT
20$:				;
	SEC			; SET FAILURE
30$:				;
	RETURN			;

	.END
