	.TITLE	STOPT
	.IDENT	/02.0/
;
; COPYRIGHT (c)	1988 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; C. MONIA 26-AUG-76
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	02.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
; 	L. M. PETERSON	4-APR-88	02.02	LMP098		
;				INITIALIZE D-APR STORAGE FOR LIBRARIES
;				FOR LIBRARY D-SPACE SUPPORT
;
;
; SETUP FOR TASK BUILDER OPTION INPUT
;
;
; MACRO LIBRARY CALLS
;

	.MCALL	CSI$
	CSI$
;
; EQUATED SYMBOLS
;
; DEFAULTED PARAMETERS

DFAFL=4.			; DEFAULT NUMBER OF ACTIVE FILES
DFPOL=20.			; DEFAULT POOL USAGE
DFSTK=256.*2			; DEFAULT STACK SIZE
DFUNT=6.			; DEFAULT NUMBER OF LOGICAL UNITS

;+
; **-$STOPT-SETUP FOR TASK BUILDER OPTION INPUTS
;
; THIS SUBROUTINE IS CALLED TO PREPARE FOR OPTION INPUTS. THE DEFAULT
; VALUE OF ALL OPTIONAL PARAMETERS IS ESTABLISHED.
;
; INPUTS:
;
;	NONE
;
; OUTPUTS:
;
;	THE DEFAULT VALUE OF ALL OPTIONS IS SETUP
;
; REGISTERS MODIFIED:
;
;	R0, R1 AND R2
;
;-
	PURE.I			; READ-ONLY I-SPACE

$STOPT::		;
	MOV	#$PARM+C.SIZE+4,R0 ; GET ADDRESS TO STORE DAPR BITMASK
	MOV	#-1,(R0)	; SET TO DEFAULT (NO BITMASK)
	CLR	R0		;++041 SET FOR DEFAULT PARTITION
	CALL	$GTPPR		;++041 GET NAME OF DEFAULT PARTITION
	MOV	#DFAFL,$ACTFL	;SET DEFAULT ACTIVE FILES
	CLR	$FSIZI		; CLEAR FILE SIZE INDICATOR
	MOV	#DFUNT,$NUNIT	;SET DEFAULT NUMBER OF UNITS
	.IIF	DF	R$$11M, CLR	$HGHAD	; CLEAR ADDRESS LIMIT
	CLR	$LBEXT		;++041 CLEAR TASK EXTENSION SIZE
	CLR	$MEMFL		;++041 CLEAR MEMORY ALLOCATION FLAG
	CLR	$MXASG		; CLEAR MAXIMUM ASSIGNED LUN
	CLR	$ODTSZ		;CLEAR SIZE OF ODT AND TASK VECTORS
	CLR	$ODTV		;CLEAR ODT VECTOR SYMBOL
	CLR	$OFFST		;CLEAR OFFSET BIAS
	.IIF  NDF  R$$11M, MOV	#DFPOL,$POOL	; SET DEFAULT POOL USEAGE
	CLR	$PRIOR		;CLEAR PRIORITY
	CLR	$TNAME		;CLEAR TASK NAME
	CLR	$TNAME+2	;
	.IIF 	DF	R$$11M,	CLR	$TSKSZ	; CLEAR VECTOR SIZE
	CLR	$TSKV		;CLEAR TSK VECTOR SYMBOL
	MOV	#DFSTK,$STACK	;SET DEFAULT STACK SIZE
	MOV	.FSRPT,R0	;++40 GET ADDRESS OF FILE STORAGE REGION 2
	MOV	A.DFUI(R0),$TKUIC ; SET TASK UIC
	CLR	$PATHD		;INITIALIZE PATCH LISTHEAD
	MOV	#$PATHD,$PATHD+2;LAST POINTS TO FIRST FOR EMPTY LIST
	CLR	$XCLHD		; INITIALIZE EXCLUDE LIST
	MOV	#$XCLHD,$XCLHD+2 ; LAST POINTS TO FIRST WHEN EMPTY
	MOV	#$LBRHD,R0	; GET LIBRARY LISTHEAD ADDRESS
	MOV	R0,R1		; COPY LISTHEAD ADDRESS
	CLR	(R0)+		; CLEAR FIRST WORD OF LISTHEAD
	MOV	R1,(R0)+	; LAST POINTS TO FIRST INITIALLY
	CLR	(R0)		; CLEAR NUMBER OF ENTRIES
	MOV	$TSKNM,R1	; GET V/A OF TASK FILE NAMEBLOCK
	CALL	$CVRL		; CONVERT TO REAL ADDRESS
	MOV	E$LSWT(R0),$TKSW ; SAVE TASK FILE SWITCHES
	BIT	#MP$SY,$SWTCH	; SYSTEM MAPPED?
	BNE	20$		; IF NE YES - IGNORE SYSTEM SIZE
	MOV	#77,$ADBND	; ASSUME NON-MAPPED SYSTEM, SET ADDRESS BOUND
	MOV	$ADLIM,R1	; GET SYSTEM SIZE SPECIFIED WITH /MM SWITCH
	BEQ	10$		; IF EQ NONE SPECIFIED
	CMP	#30.,R1		; SIZE GREATER THAN 30K
	BLO	30$		; IF LO YES
	SWAB	R1		; CONVERT TO SIZE
	ROL	R1		;
	ROL	R1		;
	ROL	R1		;
	DEC	R1		;
	MOV	R1,$ADLIM	; STORE
	BR	5$		;
10$:
	MOV	#157777,$ADLIM	; SET HIGH ADDRESS LIMIT
	BR	5$		;

20$:
	MOV	#17777,$ADBND	; SET 4K ADDRESS BOUND
	MOV	#177777,$ADLIM	; SET 32K-1 HIGH ADDRESS LIMIT

;
; INITIALIZE LUN ASSIGNMENT LISTHEAD
;

5$:				;
	MOV	#$LUNHD,R0	;GET ADDRESS OF ASSIGNMENT LISTHEAD
	MOV	R0,R1		;COPY ADDRESS
	CLR	(R0)+		;CLEAR LINK TO FIRST
	MOV	R1,(R0)		;LAST POINTS TO FIRST INITIALLY
	RETURN			;
30$:
	MOV	#<S$V0*400!E$R101>,R1	; ILLEGAL SYSTEM SIZE
	CALL	$ERMSG		;FATAL ERROR - NO RETURN
	BR	10$		; SET SIZE TO DEFUALT

	.END
