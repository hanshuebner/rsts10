	.TITLE	ALVRT
	.IDENT	/04.01/
;
;		COPYRIGHT (c) 1983 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD
;	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE  IS  FURNISHED  UNDER  A LICENSE AND MAY BE USED
; AND  COPIED  ONLY IN  ACCORDANCE WITH THE TERMS OF SUCH LICENSE
; AND WITH  THE INCLUSION  OF THE ABOVE  COPYRIGHT  NOTICE.  THIS
; SOFTWARE  OR ANY OTHER  COPIES  THEREOF, MAY NOT BE PROVIDED OR
; OTHERWISE MADE  AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND
; OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERRED.
;
; THE INFORMATION  IN THIS DOCUMENT IS SUBJECT  TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT  BY  DIGITAL
; EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
;
;
;
; C. MONIA 22-FEB-74
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	04.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
; ALLOCATE VIRTUAL STORAGE
;
;+
; **-$ALVRT-ALLOCATE VIRTUAL MEMORY
;
; INPUTS:
;
;	R1=NUMBER OF BYTES TO ALLOCATE
;
; OUTPUTS:
;
;	R0=REAL ADDRESS OF ALLOCATION
;	R1=VIRTUAL ADDRESS OF ALLOCATION
;
;	THE SPECIFIED PAGE IS WRITE-MARKED
;
; THIS ROUTINE IS CALLED TO ALLOCATE VIRTUAL MEMORY AND MAKE
; THE ALLOCATED SPACE RESIDENT IN CORE. THE AMOUNT OF SPACE
; TO BE ALLOCATED IS ROUNDED TO THE NEAREST WORD
;
;
;-
	PURE.I			; READ-ONLY I-SPACE

$ALVRT::			;
	SAVRG			; SAVE NON-VOLATILE REGISTERS
	CALL	$RQVCB		; REQUEST VIRTUAL CORE BLOCK
	BCS	40$		; IF C/S NO VIRTUAL SPACE LEFT
	MOV	R1,R5		; SAVE VIRTUAL ADDRESS
	SWAB	R5		; PUT RELATIVE BLOCK IN LOW BYTE
	TSTB	R1		; IS REQUEST ON BLOCK BOUNDRY?
	BNE	20$		; IF NE NO, BLOCK ALREADY EXISTS
	MOV	#P$GSIZ,R1	; CREATE A PAGE BUFFER
	CALL	$ALBLK		; ALLOCATE STORAGE SPACE
	MOV	$PAGLS,R2	; GET ADDRESS OF PAGE LIST
	BEQ	10$		; IF EQ NONE
	CLR	R1		; SET FOR MOVB WITHOUT EXTEND
	BISB	R5,R1		; GET RELATIVE BLOCK NUMBER
	ASL	R1		; CONVERT TO WORD OFFSET
	ADD	R1,R2		; COMPUTE ADDRESS IN LIST
	MOV	R0,(R2)		; STORE ADDRESS
10$:				;
	MOV	$PAGHD,P$GNXT(R0) ; LINK OLD FIRST TO NEW FIRST
	MOV	R0,$PAGHD	; SET NEW FIRST
	MOVB	R5,P$GBLK(R0)	; SET RELATIVE BLOCK NUMBER OF PAGE
	MOV	R5,R1		; RESTORE SWAPPED VIRTUAL ADDRESS
	SWAB	R1		; STRAIGHTEN IT
20$:				;
	CALL	$CVRL		; CONVERT TO REAL ADDRESS
30$:				;
	CALLR	$WRMPG		; WRITE-MARK PAGE
40$:				;
	MOV	#<S$V2*400!E$R76>,R1 ; GET ERROR/SEVERITY
	CLR	R2		; SET DUMMY PARAMETER BLOCK ADDRESS
	CALL	$ERMSG		; FATAL-NO RETURN

	.END
