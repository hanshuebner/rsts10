	.NLIST
	.TITLE	MACFLM
	.IDENT	/07.07/
;
;		COPYRIGHT (c) 1983,1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD
;	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE  IS  FURNISHED  UNDER  A LICENSE AND MAY BE USED
; AND  COPIED  ONLY IN  ACCORDANCE WITH THE TERMS OF SUCH LICENSE
; AND WITH  THE INCLUSION  OF THE ABOVE  COPYRIGHT  NOTICE.  THIS
; SOFTWARE  OR ANY OTHER  COPIES  THEREOF, MAY NOT BE PROVIDED OR
; OTHERWISE MADE  AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND
; OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERRED.
;
; THE INFORMATION  IN THIS DOCUMENT IS SUBJECT  TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT  BY  DIGITAL
; EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
;
;
;
; D. N. CUTLER/C. MONIA 10-APR-74
;
; MODIFIED FOR RSX-11M/M-PLUS V4.0/V2.0 BY:
;
;	S. RUZICH
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	07.01
;		CBP039		ADD PSECT MACROS TO MAKE TKB AN 'I & D'-ABLE
;				TASK - MACROS WERE TAKEN FROM PIP.
;
;	C. B. PETROVIC	7-JUN-82	07.02
;		CBP051		ADD AUTOLOAD SUPPORT FOR USER-MODE
;				I/D TASKS.
;
;	C. B. PETROVIC	6-AUG-82	07.03
;		CBP951		ADD DEBUGGING CONDITIONAL DEFINITIONS
;				TO ALLOW FOR EASIER MODIFICATION.
;
;	C. B. PETROVIC	14-OCT-82	07.04
;		CBP063		ADD CONDITITIONAL ASSEMBLY DEFINITION FOR
;				THE P/OS TASKBUILDER, 'PAB.' THIS DEFINITION
;				WILL BE COMMENTED OUT FOR THE RSX-11M/M+
;				TASKBUILDER AND WILL PRODUCE AN IDENTIFICATION
;				OF M40.10 IN THE MODULE TASKB. WHEN THE
;				COMMENT SEMI-COLON IS REMOVED, THE IDENT
;				WILL BECOME M40.11.
;
;	C. B. PETROVIC	20-OCT-83	07.05
;		CBP112		ADD DEBUGGING HOOKS TO TRACE P-SECTION
;				MANIPULATION.
;
;	C. B. PETROVIC	7-NOV-83	07.06
;		CBP114		ADD MORE DEBUGGING HOOKS FOR CORRECTION
;				OF SLOW TKB PROBLEM
;
;
;	C. M. KATZ	19-APR-91	07.07
;			ADD RSTS CONDITIONAL CODE
;
R$$11M=0
R$RSTS=1
;
.IF	DF,R$RSTS
	RSTS=1
	V1145=1
	R$$EIS=1
	R$$DPB=1
.ENDC
;
; MACRO DEFINITION FILE
;
; SUBROUTINE CALL
;
; CALL	SUBR,ARG1,ARG2,ARG3,ARG4,ARG5
;
;	SUBR=ADDRESS OF SUBROUTINE TO BE CALLED
;	ARG1-ARG5=ARGUMENTS TO BE PASSED ON THE STACK
;

	.MACRO	CALL	SUBR ARG1,ARG2,ARG3,ARG4,ARG5
	.NARG	$$
	.IF GE	$$-6
	MOV	ARG5,-(SP)
	.ENDC
	.IF GE	$$-5
	MOV	ARG4,-(SP)
	.ENDC
	.IF GE	$$-4
	MOV	ARG3,-(SP)
	.ENDC
	.IF GE	$$-3
	MOV	ARG2,-(SP)
	.ENDC
	.IF GE	$$-2
	MOV	ARG1,-(SP)
	.ENDC
	JSR	PC,SUBR
	.ENDM

;
;++005 SUBROUTINE CALL AND RETURN TO MAIN PROGRAM
;
;++005 CALLR	SUBR
;
;++005	SUBR=ADDRESS OF SUBROUTINE TO BE ENTERED
;
;
;
	.MACRO	CALLR SUBR
	JMP	SUBR
	.ENDM

;
; COMMON LABEL DEFINITIONS
;

	.MACRO	DEF
CR=15
FF=14
HT=11
LF=12
SPA=40
VT=13
	.MACRO	DEF
	.ENDM
	.ENDM

;
; DEFINE SECTION FOR OFFSET DEFINIITONS
;

	.MACRO	.DSECT
	.ASECT
.=0
	.ENDM


;
; INVOKE ERROR MESSAGE OUTPUT ROUTINE
;
; ERROR$	ERR,SEV,PARM
;
; WHERE:
;
;	ERR=ERROR NUMBER(MUST BE LESS THAN 256)
;	SEV=ERROR SEVERITY. MUST BE ONE OF THE
;	    FOLLOWING VALUES
;
;		S$V0: DIAGNOSTIC MESSAGE
;		S$V1: FATAL UNLESS INPUT DEVICE IS TERMINAL
;		S$V2: ALWAYS FATAL
;
;	PARM=$EDMSG PARAMETER ARRAY ADDRESS
;
;

	.MACRO	ERROR$	ERR,SEV,PARM
	MOV	#<SEV*400!ERR>,R1
	.IF	NB	PARM
	.IF	DIF	PARM,<R2>
	MOV	PARM,R2
	.ENDC
	.IFF
	CLR	R2
	.ENDC
	CALL	$ERMSG
	.ENDM

;

;
; JUMP ON LETTER
;
; JOL	ADDR
;
;	ADDR=ADDRESS TO JUMP TO IF MATCH
;

	.MACRO	JOL ADDR
	CMPB	(R4)+,R5
	BEQ	ADDR
	.ENDM

;
; SAVE NONVOLATILE REGISTERS
;
; SAVRG
;

	.MACRO	SAVRG
	JSR	R5,$SAVRG
	.ENDM

;
; SAVE VOLATILE REGISTERS
;
; SAVVR
;

	.MACRO	SAVVR
	JSR	R2,$SAVVR
	.ENDM

;
; SOB MACRO
;

	.IF NDF	V1145
	.MACRO	SOB A,B
	DEC	A
	BNE	B
	.ENDM
	.ENDC

;
; SUBROUTINE RETURN
;
; RETURN
;

	.MACRO	RETURN
	RTS	PC
	.ENDM

;
; INVOKE MACROS TO DEFINE TABLE OFFSETS AND CONSTANTS
;
; DEFINE COMMONLY USED CONSTANTS
;

	DEF

;
; GENERATE TITLE, DEPENDING ON A GIVEN SYMBOL.
;
; CALLING SEQUENCE:	.NLIST
;			TTL$	NAME1,NAME2,SYM
;			.LIST
;
;

	.MACRO TTL$	NAME1,NAME2,SYM
	.IF	NDF,SYM
	.LIST
	.LIST
	.TITLE NAME1
	.NLIST
	.NLIST
	.ENDC
	.IF	DF,SYM
	.LIST
	.LIST
	.TITLE NAME2
	.NLIST
	.NLIST
	.ENDC
	.ENDM


	.ENABL	LC
;
; PSECT MACROS - Define the pure and impure (I/D) control sections
;

	RONLY$=1		;FORCE PURE PSECTS READ ONLY

	.MACRO	IMPURE
	.PSECT	IMPURE,RW,D,LCL,REL,CON
	.ENDM	IMPURE
;
;
	.MACRO	PURE.	PSECT,ID
	.IF	DF,RONLY$
	.PSECT	PSECT,RO,ID,LCL,REL,CON
	.ENDC
	.IF	NDF,RONLY$
	.PSECT	PSECT,RW,ID,LCL,REL,CON
	.ENDC
	.ENDM	PURE.
;
;
	.MACRO	PURE.I
	PURE.	PURE$I,I
	.ENDM	PURE.I
;
;
	.MACRO	PURE.D
	PURE.	PURE$D,D
	.ENDM	PURE.D


;
; Trace message table definition
;
; TRC SEGOFF,FORMAT
;
; WHERE:
;
;	SEGOFF=INTERNAL SEGMENT DESCRIPTOR OFFSET
;	FORMAT=SEGMENT DESCRIPTOR OFFSET FORMAT STATEMENT.
;

	.MACRO	TRC SEGOFF,FORMAT
	.PSECT	TRTX$D,RO,D
NN=.
	.ENABL	LC
	.NLIST	BEX
	.ASCIZ	"FORMAT"
	.EVEN
	.LIST	BEX
;
	.PSECT	TRPT$D,RO,D
	.WORD	SEGOFF
	.WORD	NN
;
	.ENDM

;
;+
; The conditional assembly definitions that follow allow for a simpler way
; to debug the Taskbuilder. Each module generally has a single entry point
; therefore the convention that will be followed is the debugging traps in
; a given module will be conditionally assembled if the corresponding
; definition is 'uncommented'. For example, to turn on the trace trap in the
; module $SGALO, the definition must be D$SGAL. In addition to the code
; placed in-line, the library file DEBUG.OLB must have been accessed to
; obtain the selected debugging hook. Currently there are two general purpose
; debugging hooks, $TRACE and $DVDEB, contained in the module TASKB. In
; addition to these subroutines, there are the special overlay run-time system
; routines which can breakpoint trap on a selected segment load.
;
;-
;
	.NLIST	CND		; Don't list code that's conditional

;	D$EBUG	=	0	; To change the IDENT
;	D$SVTK	=	0	; To enable SST handling
;	D$TRAC	=	0	; Suboutine $TRACE
;	D$VMDP	=	0	; Subroutine $VMDMP
;	D$ADRS	=	0	; $ADRST/$ADRSM
;	D$CVRL	=	0	; $CVRL
;	D$DKAL	=	0	; $DKALO
;	D$DSAL	=	0	; $DSALO
;	D$ALAL	=	0	; $ALALO
;	D$PCTR	=	0	; $PCTRL
;	D$PRCL	=	0	; $PRCLM
;	D$P4MA	=	0	; $P4MAL
;	D$P5EO	=	0	; $P5EOS
;	D$P5IM	=	0	; $P5IMG, $WRBYT, $DISK
;	D$RDPG	=	0	; $RDPAG/$WRPAG
;	D$SGAL	=	0	; $SGALO, SGALO, PHALO
;
;+
; The following global definitions selectively enable tracing
; of particular sub-modules within the base module $SGALO. All
; tracing can be disabled by removing the group global definition.
;-
	.IF DF D$SGAL

;	D$SG0==0		; PHALO
;	D$SG1==0		; SGALO
;	D$SG2==0		; $SGALO
;	D$SG3==0		; CSREL
;	D$SG4==0		; CSALO
;	D$SG5==0		; BLKAL, BLKAL1
;	D$SG6==0		; WDALOD, WDALOI
;	D$SG7==0		; CLSWND
;	D$SG8==0		; CSREL, BEFORE PROCESSING
;	D$SG9==0		; CSALO, BEFORE PROCESSING

	.ENDC	; D$SGAL

;
; The following conditional turns on the assembly of the subroutine $DVDBP
; which is used only by module SGALO at this time. If other modules utilize
; $DVDBP the conditional symbol must be added to the list.
;
	.IF DF D$SG3!D$SG4!D$SG5!D$SG8!D$SG9

	D$DVBP	=	0	; Subroutine $DVDBP

	.ENDC	; D$SG3!D$SG4!D$SG5!D$SG8!D$SG9
;
;+
; The following global definitions selectively enable tracing
; of particular sub-modules within the base module $PCTRL. All
; tracing can be disabled by removing the group global definition.
;-
;
	.IF DF D$PCTR
;
;	D$PC0==0		; Segment descriptor - before processing
;	D$PC1==0		; Segment descriptor - after processing
;	D$PC2==0		; Window descriptor - before processing
;	D$PC3==0		; Window descriptor - after processing
;
	.ENDC	; D$PCTR
;
;+
; The following global definitions selectively enable tracing
; of particular sub-modules within the base module $PRCLM. All
; tracing can be disabled by removing the group global definition.
;-
;
	.IF DF D$PRCL
;
;	D$PRC0==0		; Symbol insertions
;	D$PRC1==0		; Symbol references
;	D$PRC2==0		; Autoload symbol references
;
	.ENDC	; D$PRCL
;
;+
; The following global definitions selectively enable tracing
; of particular sub-modules within the base module $P4MAL. All
; tracing can be disabled by removing the group global definition.
;-
;
	.IF DF D$P4MA
;
;	D$DSLO==0		; Trace allocaton of task-resident descriptors
;	D$ALLO==0		; Trace generation of autoload vectors
;	D$SGLO==0		; Trace allocation of physical and task-virtual
				; memory
;
	.ENDC	; D$P4MA
;
;+
; The following global definitions selectively enable tracing
; of particular sub-modules within the base module $ALALO. All
; tracing can be disabled by removing the group global definition.
;-
;
	.IF DF D$ALAL
;
;	D$ALA0==0		; Trace window block contents
;
	.ENDC	; D$ALAL
;
; The following parameter is used to conditionally assemble code for P/OS
; support in the RSX-11M/M+ Taskbuilder. Currently the modules which respond
; to the definition that follows are listed below. They are:
;
;	GTCML.MAC
;	INITL.MAC
;	MLSG0.MAC
;	PRCER.MAC
;	P2OPT.MAC
;	P4MAL.MAC
;	TASKB.MAC
;
; The definition is:
;
;	R$$PRO=1
;
;
	.LIST
