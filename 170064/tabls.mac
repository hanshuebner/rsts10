	.TITLE	TABLS
	.IDENT	/46.07/
;
; COPYRIGHT (c)	1989,1991 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
; D.N. CUTLER/C. MONIA 27-DEC-73
;
; MODIFIED FOR RSX-11M/M-PLUS V4.0/V2.0 BY:
;
;	J. A. KASSON
;	C. B. PETROVIC
;	J. M. LAWLER
;
; MODIFIED FOR RSX-11M/M-PLUS V4.1/V2.1 BY:
;
;	C. B. PETROVIC
;	J. M. SALMAN
;
; MODIFIED FOR RSX-11M-PLUS V3.0 BY:
;
;	C. B. PETROVIC	26-MAY-83	45.13	CBP090
;	B. S. MCCARTHY	15-JUL-84	45.14	BM314
;	C. B. PETROVIC	10-SEP-84	45.15	CBP134
;	D. P. RABAHY	18-FEB-85	45.16	DPR013
;	D. P. RABAHY	8-MAR-85	45.17	DPR013
;	B. S. MCCARTHY	8-MAR-85	45.18	DPR013
;	C. B. PETROVIC	20-MAR-85	45.19	CBP163
;
; MODIFIED FOR RSX-11M-PLUS V4.0 BY:
;
;	L. M. PETERSON	16-APR-86	46.00	LMP045
;	D. P. RABAHY	13-MAY-87	46.01	DPR040
;
; MODIFIED FOR RSX-11M-PLUS V4.1 BY:
;
;	L. M. PETERSON	19-OCT-87	46.02	LMP098
;		Add support to reserve library D-space 
;
; MODIFIED FOR RSX-11M-PLUS V4.2 BY:
;
;	L. M. PETERSON	13-APR-88	46.03	LMP110
;		Correct error with PAR, /MU combination SPR13603
;
;	L. M. PETERSON	5-JAN-89	46.04	LMP126
;		Allow RW access to supervisor libraries
;		(.COR reconstructed by LBM to propogate across zero
;		of master pack for CPR v1 before M-PLUS v4.2 ship)
;
; MODIFIED FOR RSX-11M-PLUS AND MICRO/RSX V4.3 BY:
;
;	L. M. PETERSON	28-FEB-89	46.05	LMP131
;		Allow tasks with (task)memory resident overlays to be 
;		extended (with the $EXTM directive)
;
;	L. M. Peterson	12-JUL-89	46.06	LMP135
;		Set label block definitions with LBLDF$ macro instead of 
;		declaring them 
;
;	C. M. Katz	23-APR-91	46.07	CMK001
;
; MACRO LIBRARY CALLS
;

	.MCALL	LBLDF$
; COMMON DATA AND TABLES
;
; EQUATED SYMBOLS
;
; AUTOLOAD LIST ENTRY SIZE
;

A$LLST==4			;SIZE OF AUTOLOAD LIST ENTRY

;
; CONTROL SECTION ENTRY FLAG BYTE BIT DEFINITIONS
;

CS$TYP==000200			;TYPE (1=DATA, 0=INS)
CS$GBL==000100			;SCOPE (1=GLOBAL, 0=LOCAL)
CS$REL==000040			;RELOCATABLE (1=REL, 0=ABS)
CS$ACC==000020			;ACCESS (1=RO, 0=RW)
CS$IND==000010			;INDIRECT (1=IND, 0=DEF)
CS$ALO==000004			;ALLOCATION (1=OVR, 0=CON)
CS$LIB==000002			;LIBRARY SECTION (1=YES)
CS$SAV==000001			; .PSECT IS TO BE FORCED INTO ROOT

;
; 	*** NOTE ***
;
; MEMORY TYPE IS NOT SUPPORTED BY TKB.
; THIS FLAG BIT IS USED INTERNALLY TO
; SPECIFY THE AUTOLOAD ATTRIBUTE.
;

CS$MEM==000001			;MEMORY TYPE (1=HGH, 0=LOW)
CS$ATL==000001			; AUTOLOAD FLAG (1=YES)

;
; THE FOLLOWING FLAGS ARE LOCATED IN THE HIGH BYTE OF THE CONTROL
; SECTION FLAGS WORD.
;

CS$VSC==000200			; CONTROL SECTION IS VIRTUAL (1=YES, 0=NO)
CS$RES==000100			; CONTROL SECTION IS TASK-RESIDENT (1=YES, 0=NO)
CS$VAS==000040			; CONTROL  SECTION IS VIRTUAL ARRAY (1=YES)
CS$ROT==000020			; CONTROL SECTION FORCED INTO ROOT ('SAV'
				; ATTRIBUTE IS SET).
CS$SUP==000010			; CONTROL SECTION IS FROM A SUPER-MODE LIBRARY

CS$EXT==000004			; CONTROL SECTION ALREADY SHIFTED (1=YES, 0=NO)

;
; CONTROL SECTION TABLE ENTRY OFFSET AND LENGTH DEFINITIONS
;


	.DSECT

C$SLNK::.BLKW	1		; OFFSET-LINK TO NEXT CONTROL SECTION ENTRY
C$SNME::.BLKW	2		; OFFSET-CONTROL SECTION NAME IN 2-WD. RAD50
C$SFLG::.BLKW	1		; OFFSET-FLAGS BYTE
C$SBSE::.BLKW	1		; OFFSET-BASE ADDRESS
C$SLTH::.BLKW	1		; OFFSET-LENGTH OF CONTROL SECTION
C$SELM::.BLKW	1		; OFFSET-ADDRESS OF DEFINING ELEMENT
C$SCUR::.BLKW	1		; OFFSET-CURRENT BASE ADDRESS
C$SLGS::.BLKW	1		; OFFSET-LENGTH IN SEGMENT
C$SLGH::.BLKW	0		; LENGTH OF CONTROL SECTION ENTRY

;
; ELEMENT DESCRIPTOR OFFSET AND LENGTH DEFINITIONS
;


	.DSECT

E$LNXT::.BLKW	1		; OFFSET-LINK TO NEXT DESCRIPTOR
E$LCMT::.BLKW	1		; OFFSET-REAL ADDRESS OF CONTROL SECTION MAPPING
E$LNUM::.BLKW	1		; OFFSET-HIGHEST SECTION NUMBER
E$LSWT::.BLKW	1		; OFFSET-ELEMENT SWITCH WORD
E$LIDT::.BLKW	2		; OFFSET-VERSION IDENTIFICATION
E$LMOD::.BLKW	2		; OFFSET-MODULE NAME (TITLE BLOCK)
E$LVMT::.BLKW	2		; OFFSET-VIRTUAL ADDRESS OF MAPPING TABLE
E$LMND::.BLKW	12		; OFFSET-MONITOR DEPENDANT INFORMATION
E$LLGH::.BLKW	0		; OFFSET-LENGTH OF ELEMENT DESCRIPTOR

;
; HEADER OFFSET DEFINITIONS
;

	.DSECT

	.IF	NDF	R$$11M

H$DFLP::.BLKW	1		; OFFSET-FLOATING POINT SAVE POINTER
H$DPDR::.BLKW	10		; OFFSET-PDR REGISTERS
H$DPAR::.BLKW	10		; OFFSET-PAR REGISTERS
H$DPS::	.BLKW	1		; OFFSET-CURRENT PS WORD
H$DPC::	.BLKW	1		; OFFSET-CURRENT PC WORD
H$DR0::	.BLKW	1		; OFFSET-GENERAL REGISTER R0
H$DR1::	.BLKW	1		; OFFSET-GENERAL REGISTER R1
H$DR2::	.BLKW	1		; OFFSET-GENERAL REGISTER R2
H$DR3::	.BLKW	1		; OFFSET-GENERAL REGISTER R3
H$DR4::	.BLKW	1		; OFFSET-GENERAL RGISTER R4
H$DR5::	.BLKW	1		; OFFSET-GENERAL REGISTER R5
H$DSP::	.BLKW	1		; OFFSET-GENERAL REGISTER SP
H$DIPS::.BLKW	1		; OFFSET-INITIAL PS WORD
H$DIPC::.BLKW	1		; OFFSET-INITIAL PC WORD
H$DISP::.BLKW	1		; OFFSET-INITIAL STACK POINTER WORD
H$DDSV::.BLKW	1		; OFFSET-ODT SST VECTOR ADDRESS
H$DTSV::.BLKW	1		; OFFSET-TASK SST VECTOR ADDRESS
H$DDVT::.BLKB	1		; OFFSET-ODT SST VECTOR LENGTH
H$DTVT::.BLKB	1		; OFFSET-TASK SST VECTOR LENGTH
H$DPUN::.BLKW	1		; OFFSET-POWER FAIL AST NODE ADDRESS
H$DFEN::.BLKW	1		; OFFSET-FLOATING POINT EXCEPTION AST NODE
H$DDUC::.BLKW	1		; OFFSET-DEFAULT UIC
H$DUIC::.BLKW	1		; OFFSET-TASK UIC
H$DSIZ::.BLKW	1		; OFFSET-HEADER SIZE IN 32W BLOCKS
H$DFZI::.BLKW	1+11		; OFFSET-FILE SIZE INDICATOR
H$DLUT::.BLKW	1		; OFFSET-NUMBER OF LOGICAL UNITS

	.IFF

H$CSP::	.BLKW	1		; OFFSET-CURRENT SP WORD
H$DSIZ::.BLKW	1		; OFFSET-LENGTH OF HEADER IN BYTES
H$EFLM::.BLKW	2		; OFFSET-ADDRESS OF EVENT FLAGS AND MASK WORD
H$CUIC::.BLKW	1		; OFFSET-CURRENT UIC
H$DUIC::.BLKW	1		; OFFSET-DEFAULT UIC
H$IPS::	.BLKW	1		; OFFSET-INITIAL PS WORD
H$IPC::	.BLKW	1		; OFFSET-INITIAL PC WORD
H$ISP::	.BLKW	1		; OFFSET-INITIAL SP WORD
H$ODVA::.BLKW	1		; OFFSET-ODT SST VECTOR ADDRESS
H$ODVL::.BLKW	1		; OFFSET-ODT SST VECTOR LENGTH
H$TKVA::.BLKW	1		; OFFSET-TASK SST VECTOR ADDRESS
H$TKVL::.BLKW	1		; OFFSET-TASK SST VECTOR LENGTH
H$PFVA::.BLKW	1		; OFFSET-ADDRESS OF POWER-FAIL AST CONTROL BLOCK
H$FPVA::.BLKW	1		; OFFSET-ADDRESS OF FLOATING POINT EXCEPTION CON
H$RCVA::.BLKW	1		; OFFSET-ADDRESS OF TASK RECEIVE AST CONTROL BLO
H$EFSV::.BLKW	1		; OFFSET-EVENT FLAGS SAVE WORD
H$FPSA::.BLKW	1		; OFFSET-ADDRESS OF FLOATING POINT SAVE AREA
H$WND::	.BLKW	1		; OFFSET-ADDRESS OF TASK WINDOW BLOCKS

;
; THE FOLLOWING FIVE OFFSETS CORRESPOND TO PHYSICAL LOW-CORE
; LOCATIONS IN THE UNMAPPED SYSTEM AND THUS CANNOT BE ALTERED
; INDISCRIMINATELY.
;

H$DSW::	.BLKW	1		; OFFSET-TASK DIRECTIVE STATUS WORD
H$FSR::	.BLKW	1		; OFFSET-ADDRESS OF FCS WORK AREA
H$FOT::	.BLKW	1		; OFFSET-ADDRESS OF FORTRAN OTS WORK AREA
H$OVLY::.BLKW	1		; OFFSET-ADDRESS OF OVERLAY RUNTIME SYSTEM WORK
H$VEXT::.BLKW	1		; OFFSET-WORK AREA VECTOR EXTENSIONS
H$SPRI::.BLKB	1		; OFFSET-SWAPPING PRIORITY DIFFERENCE
H$NML::	.BLKB	1		; OFFSET-NETWORK MAILBOX LUN
H$RRVA::.BLKW	1		; OFFSET-RECEIVE-BY-REFERENCE AST
	.BLKW	3		; OFFSET-RESERVED HEADER WORDS
H$GARD::.BLKW	1		; OFFSET-ADDRESS OF HEADER GUARD WORD
H$NLUN::.BLKW	1		; OFFSET-NUMBER OF LOGICAL UNITS
H$LUN::	.BLKW	0		; OFFSET-LOGICAL UNIT TABLE

	.ENDC


;
; LABEL BLOCK OFFSET DEFINITIONS
;
	LBLDF$	<:>,<=>

;
; LIBRARY LIST FLAG WORD BIT DEFINITIONS
;


	.IF	NDF	R$$11M

LD$ACC==100000			;ACCESS REQUEST TYPE (1=RW, 0=RO)
LD$RSV==040000			;APR RESERVATION FLAG (1=YES)
LD$ARW==000020			;NONOWNER RW ACCESS ENABLE (1=YES)
LD$ARO==000010			;NONOWNER RO ACCESS ENABLE (1=YES)
LD$REL==000004			;PIC INDICATOR (1=YES)
LD$TYP==000002			;TYPE OF COMMON BLOCK (0=COM, 1=LIB)
LD$DEF==000001			;BLOCK DEFINED? (0=NO, 1=YES)

	.IFF

;
;+
; THE FOLLOWING BIT DEFINITIONS ARE FOR USE EXCLUSIVLY FOR APR SPECIFICATION
; TO DIFFERENTIATE BETWEEN A DEFAULT APR REQUEST AND A SPECIFIED APR REQUEST.
;
; BITS 5,4	LD$AMK - MASK BITS FOR THE APR NUMBER IF SPECIFIED, CLEAR IF
;		EITHER APR 0 WAS SPECIFIED OR LD$ADF IS SET.
;
;-
;
LD$SCL==000200			; SAVED CLUSTER ATTRIBUTE BIT FOR 1ST LIB
LD$AMK==000060			; APR MASK BITS
LD$ACC==100000			; ACCESS INTENT (1=RW, 0=RO)
LD$RSV==040000			; RELOCATION BIAS SPECIFIED (1=YES)
LD$CLS==020000			; CLUSTER LIBRARY MEMBER (1=YES)
LD$SMV==010000			; INCLUDE SUPERVISOR-MODE VECTORS (1=NO)
LD$RES==000040			; LIBRARY HAS MEMORY-RESIDENT OVERLAYS
LD$SUP==000010			; SUPERVISOR LIBRARY (0=NO, 1=YES)
LD$REL==000004			;PIC INDICATOR (1=YES)
LD$TYP==000002			; TYPE OF REQUEST (0=LIBRARY, 1=COMMON)

	.IF	DF,R$RSTS
LD$RTS==000200			; REALLY A RUN-TIME SYSTEM
LD$MRTS==001000                 ; MAKE INTO A RTS BEFORE EXITING
	.ENDC
	.ENDC


;
; LIBRARY LIST OFFSET DEFINITIONS
;
;++003	DELETE 'OWNER UIC' ENTRY
;
;
; 		***NOTE***
;
; 	WHEN BUILDING RSX-11M TASKS, 'L$DLTH'
; 	CONTAINS LIBRARY SIZE IN BYTES.
;


	.DSECT

	.IF	NDF	R$$11M

L$DNXT::.BLKW	1		; OFFSET-LINK TO NEXT ENTRY
L$DNME::.BLKW	2		; OFFSET-RADIX 50 LIBRARY NAME
L$DLTH::.BLKW	1		; OFFSET-LENGTH OF LIBRARY IN 32W BLOCKS
L$DDAT::.BLKW	3		; OFFSET-LIBRARY CREATION DATE
L$DAPR::.BLKW	1		; OFFSET-STARTING APR NUMBER
L$DFLG::.BLKW	1		; OFFSET-LIBRARY FLAGS WORD
L$DBSE::.BLKW	1		; OFFSET-BASE VIRTUAL ADDRESS
L$DCUR::.BLKW	1		; OFFSET-CURRENT BASE ADDRESS
L$DLGH::.BLKW	0		; SIZE OF LIBRARY LIST DESCRIPTOR

	.IFF

L$DNXT::.BLKW	1		; OFFSET-LINK TO NEXT ENTRY
L$DNME::.BLKW	2		; OFFSET-RADIX 50 LIBRARY NAME
L$DSA::	.BLKW	1		; OFFSET-STARTING VIRTUAL ADDRESS OF LIBRARY
L$DHGV::.BLKW	1		; OFFSET-HIGHEST VIRTUAL ADDRESS IN WINDOW ZERO
L$DMXV::.BLKW	1		; OFFSET-HIGHEST LIBRARY VIRTUAL ADDRESS
L$DLDZ::.BLKW	1		; OFFSET-LIBRARY LOAD SIZE (32W BLOCKS)
L$DMXZ::.BLKW	1		; OFFSET-LIBRARY MAX SIZE (32W BLOCKS)
L$DOFF::.BLKW	1		; OFFSET-PARTITION OFFSET (32W BLOCKS)
L$DWND::.BLKW	1		; OFFSET-NUMBER OF LIBRARY WINDOWS
L$DSEG::.BLKW	1		; OFFSET-SIZE OF LIBRARY SEGMENT DESCRIPTORS
L$DFLG::.BLKW	1		; OFFSET-LIBRARY FLAGS WORD
L$DDAT::.BLKW	3		; OFFSET-LIBRARY CREATION DATE (YR., MO., DAY)
L$DCUR::.BLKW	1		; OFFSET-CURRENT BASE ADDRESS
L$DAPR::.BLKW	1		; OFFSET-LIBRARY D-SPACE APRS
L$DLGH::.BLKW	0		; SIZE OF LIBRARY LIST DESCRIPTOR

	.ENDC



;
; CLUSTER LIBRARY TABLE OFFSET DEFINITIONS
;

	.DSECT
C$LLNK::.BLKW	1		; OFFSET - UTILITY LINK WORD TO NEXT CLUSTER
C$LCNT::.BLKB	1		; OFFSET - COUNT OF LIBS IN CURRENT CLUSTER
C$LACC::.BLKB	1		; OFFSET - LIBRARY ACCESS, RO/RW
C$LAPR::.BLKB	1		; OFFSET - APR REQUEST FOR CLUSTER
C$LMSK::.BLKB	1		; OFFSET - CLUSTER MASK BYTE
C$LNME::.BLKW	6*2		; OFFSET - NAMES OF SIX LIBRARIES IN CLUSTER
C$LDSC::.BLKW	1		; OFFSET - ADDRESS OF LIBRARY DESCRIPTOR FOR
				;	   FIRST LIBRARY IN CLUSTER
C$LOFF::.BLKW	1		; OFFSET - $$SGD1 OFFSET FOR FIRST LIBRARY IN
				;	   CLUSTER (IF IT'S OVERLAID WITH A
				;	   NON-NULL ROOT)
C$LLGH::.BLKW	0		; SIZE OF CLUSTER LIBRARY TABLE

;
;++008 MODULE HEADER SWITCH BYTE  FLAGS -- LIBRARY MODULE
;

MH$SS==000001			;++008 SELECTIVE SEARCH LIBRARY MODULE

;
;++008 LIBRARY MODULE OFFSETS -- MODULE HEADER
;

M$HST==000000			;++008 MODULE STATUS BYTE
M$HFL==M$HST+1			;++008 MODULE FLAGS BYTE

;
; SIZE OF B-TREE NODE IN BYTES
;

N$DLGH==256.*2			;

;
; OPTION SWITCH WORD BIT DEFINITIONS
;
;
; *NOTE WELL*
; CURRENTLY, THE TASKBUILDER CSI TABLE FOR TASK IMAGE SWITCHES SPANS
; 4 SWITCH WORDS -> INIPT + R$SWTH, $SWTCH, $SWOVR, $SWOV2.  RSX11M PLUS
; REQUIRES A 3 WAY SWITCH FOR EXTERNAL HEADER SUPPORT.  THAT IS,
; WE NEED TO IDENTIFY 3 SEPERATE CASES: (1) /XH   (2) /-XH AND
; (3) NO SWITCH.  OBVIOUSLY, WE CAN NOT DIFFERENTIATE BETWEEN
; CASE 2 AND CASE 3 BY SIMPLY EXAMINING THE SWITCH WORDS.  CSI$2
; WILL SET THE CORRESPONDING SWITCH VALUE FOR XH (XH$DR) IN
; C.MKW1 IF THE SWITCH WAS SEEN AND WILL SET THE POLARITY OF THE
; SWITCH IN C.MKW2.  NOTE THAT BOTH C.MKW1 AND C.MKW2 ARE WORD
; LOCATIONS AND WE HAVE 3 WORDS OF BIT VALUES.  THEREFORE, FOR
; THIS SPECIAL SWITCH WE WILL FOREVER ALLOCATE THE BIT POSITION
; FOR /XH (XH$DR) IN ALL 3 MASK WORDS.
;
; DO NOT CHANGE THIS DEFINTION UNLESS IT IS ALSO CHANGED IN IODAT.MAC
;

AB$RT==100000			;ABORT ON ANY ERROR (1=YES)
MA$PF==040000			;MAP LISTING FILE (1=YES)
ST$BF==020000			;SYMBOL TABLE FILE (1=YES)
TS$KF==010000			;TASK IMAGE FILE (1=YES)
SE$QA==004000			;SEQUENCE ALLOCATION (1=YES)
LG$SH==002000			;LONG/SHORT MAP FILE
EN$DR==001000			;END OF RUN FLAG
SP$OL==000400			;SPOOL MAP OUTPUT (0=YES)

	.IF	DF	R$$11M

MP$SY==000200			; TARGET SYSTEM IS MAPPED (1=YES)

	.ENDC



CR$EF==000100			;++036 PRODUCE CREF OUTPUT (1=YES)
WI$DE==000040			; PRODUCE WIDE MAP OUTPUT FORMAT (1 = YES)
CO$SRC==000020			; SEARCH ALL TREES (1 =YES)
RS$OV==000010			; RECOGNIZE RESIDENT OVERLAYS (1=NO)
SL$OW==000004			; TASKBUILD IS TO USE FAST SYMBOL TABLE
				; ALGORITHM (0=YES)
ID$ATA==00002			; RECOGNIZE USER D-SPACE (1=YES)
XH$DR==000001			; EXTERNAL HEADER (1=YES)

;
; TASK SWITCH OVERFLOW WORD BIT DEFINITIONS
;

XH$DR==	000001			; EXTERNAL HEADER (1=YES)
NO$DIA==000002			; NO DIAGNOSTIC MESSAGES
IO$PAG==000004			; TASK OVER MAPS THE IO PAGE
SE$GA==000010			; SEGREGATE RO AND RW PSECT (1=NO)
CO$MON==000020			; BUILDING SHARED REGION AS COMMON
LI$BRY==000040			; BUILDING SHARED REGION AS LIBRARY
SU$PLB==000100			; SUPERVIOSRO LIBRARY (1=YES)
DS$KOV==000200			; TASK HAS DISK OVERLAYS (1=YES)
NO$XH ==000400			; NO EXTERNAL HEADER (1=YES)
CL$STR==001000			; TASK IS LINKING TO CLUSTER LIBRARY (1=YES)
OV$RLB==002000			; TASK IS LINKING TO OVERLAID LIBRARY (1=YES)
EX$LIB==004000			; LIBRARY REQUESTS AN IMPLIED 'EXTTSK' (1=YES)
FS$MAP==010000			; TASK USES FAST MAP FACILITY (1=YES)
IM$CLI==020000			; TASK IS A CLI (1=YES)
FO$MAP==040000			; TASK USES OTS FAST MAP ROUTINE (1=YES)
EX$MRT==000001			; EXTEND TASK WITH MR OVERLAYS (1=YES)
MU$LTI==100000			; TASK IS MULTIUSER (1=YES)

;
; DEFINE REGION DESCRIPTOR OFFSETS
;

	.LIST	MEB

	RGDF	<:>,<=>

	.NLIST	MEB


;
; SYMBOL TABLE ENTRY FLAG BYTE BIT DEFINTIONS
;

;
;+
; THESE BIT DEFINITIONS ARE COPIES OF THE LOW-ORDER BYTE WITH NEW NAMES FOR
; SUPER-MODE LIBRARY REFERENCES. THE ONLY EXCEPTION IS A RE-DEFINITION OF THE
; BIT WHICH TELLS US IF THE DEFINITION IS FROM A SUPER-MODE LIBRARY, WHICH
; IS NOW UNNECESSARY, BUT NEEDED FOR COMPATIBILITYS' SAKE!
;-
;
SY$SGB==040000			; SUPER-MODE LIBRARY GLOBAL SYMBOL (1=GBL)
SY$SRL==020000			; SUPER-MODE LIBRARY RELOCATABLE SYMBOL (1=REL)
SY$RS0==010000			; SUPER-MODE LIBRARY FUTURE EXPANSION
SY$SDF==004000			; SUPER-MODE LIBRARY SYMBOL DECLARATION (1=DEF)
SY$SLB==002000			; SUPER-MODE LIBRARY DEFINITION (1=LIB)
SY$SUP==001000			; SUPER-MODE LIBRARY DEFINITION FROM ROOT
SY$SAB==000400			; ABSOLUTE DEFINITION FROM A SUPERVISOR MODE LIB
				; SET WHILE LINKING TO LIBRARY (1=YES, 0=NO)
SY$IND==000200			;INDIRECT (1=IND, 0=DEF)
SY$GBL==000100			;GLOBAL (1=GLOBAL, 0=INTERNAL)
SY$REL==000040			;RELOCATION (1=REL, 0=ABS)
SY$ATL==000020			;AUTOLOAD FLAG (1=YES, 0=NO)
SY$DEF==000010			;DEFINITION (1=DEF, 0=REF)
SY$LIB==000004			;SYMBOL DEFINED IN LIBRARY (1=YES)
SY$ATR==000002			;++036 REFERENCE VIA AUTOLOAD VECTOR (1=YES)
SY$WK==000001			; WEAK REFERENCE OR DEFINITION (1=YES)

;
; THE FOLLOWING SYMBOL TABLE FLAGS ARE LOCATED IN THE HIGH BYTE OF THE
; FLAGS WORD (S$YFLG+1).
;

SY$EXC==000200			; EXCLUDE SYMBOL FROM MAP (1=YES).


;
; SYMBOL TABLE ENTRY OFFSET AND LENGTH DEFINITIONS
;


	.DSECT

	.BLKW	3
S$YFLG::.BLKW	1		; OFFSET-SYMBOL FLAGS BYTE
S$YVAL::.BLKW	1		; OFFSET-SYMBOL VALUE
S$YCMT::.BLKW	1		; OFFSET-CONTROL SECTION ENTRY ADDRESS
S$YSEG::.BLKW	1		; OFFSET-ADDRESS OF DEFINING SEGMENT
S$YSDO::			; OFFSET-SEGMENT DESCRIPTOR OFFSET VALUE
				;
S$YVOF==S$YSDO+2		; OFFSET-VALUE OF THE OFFSET INTO THE PSECT
				; $$ALVC AS CALCULATED BY ALALO FOR THE
				; SPECIAL AUTOLOADABLE SYMBOL FROM A SYMBOL
				; TABLE FILE OF A LIBRARY.
				;
S$YCVT==S$YVOF+2		; OFFSET-PSEUDO-INDIRECT SYMBOL TABLE ENTRY
				; WHICH WILL CONTAIN THE CONTROL SECTION
				; VIRTUAL ADDRESS OF THE PSECT $$ALVC
				;
S$YLEX==S$YCVT-S$YSEG		; LENGTH EXTENSION FOR AUTOLOADABLE SYMBOLS
				; DEFINED IN RESIDENT LIBRARY SYMBOLTABLE FILES

S$YCMP::			; OFFSET - VALUE OF COMPLETION ROUTINE
				; ONLY IF SYMBOL IF DEFINED IN A SUP LIB
S$YLGH::.BLKW	1		; LENGTH OF SYMBOL TABLE ENTRY
S$YSEX==6			; LENGTH OF SYMBOL ENTRY EXTENSION FOR A
				; SUPER-MODE LIBRARY SYMBOL.
S$YSDX==S$YLGH+S$YSEX		; OFFSET-SEGMENT DESCRIPTOR OFFSET VALUE
				; EXTENSION FOR WHEN THE SYMBOL TABLE HAS
				; BEEN GENERATED FOR AN OVERLAID SUPER-MODE
				; LIBRARY.
				;
S$YVOX==S$YSDX+2		; OFFSET-SAME AS THE OFFSET S$YVOF, BUT FOR
				; A SUPER-MODE AUTOLOADABLE SYMBOL FROM A
				; SYMBOL TABLE FILE.
				;
S$YCVX==S$YVOX+2		; OFFSET-PSEUDO-INDIRECT SYMBOL TABLE ENTRY
				; WHICH WILL CONTAIN THE CONTROL SECTION
				; VIRTUAL ADDRESS OF THE PSECT $$ALVC, BUT IN
				; THE EXTENDED AREA FOR AN AUTOLOADABLE
				; SYMBOL FROM AN OVERLAID SUPER-MODE LIBRARY.
				;

;
; LENGTH OF AUTOLOAD VECTORS
;

	.DSECT

	.BLKW	4		;
S$ZATI::			; FOR I/D TASKS (MAINLY FOR SANITY'S SAKE!)
S$ZATL::.BLKW	0		;

;
; LENGTH OF THE D-SPACE PORTION OF AN I/D TASK'S AUTOLOAD VECTOR
;

	.DSECT

	.BLKW	2
S$ZATD::.BLKW	0

;
; LENGTH OF SEQUENCE ALLOCATION LIST ENTRY
;

	.DSECT

	.BLKW	2		;
S$ZSEQ::.BLKW	0		;

;
; LENGTH OF WINDOW BLOCK
;

	.DSECT

	.BLKW	8.		;
S$ZWND::.BLKW	0		;


	.IF	DF	R$$11M

;
; RSX-11M TASK FLAG WORD BIT DEFINITIONS
;

TS$PIC==100000			; TASK IS PIC (1=YES)
TS$NHD==040000			; TASK HAS NO HEADER (1=YES)
TS$ACP==020000			; TASK IS ANCILLARY CONTROL PROCESSOR (1=YES)
TS$PMD==010000			; GENERATE POST-MORTEM DUMP ( 1=YES)
TS$SLV==004000			; TASK IS SLAVE (1=YES)
TS$NSD==002000			; NO SEND TO TASK IS PERMITTED (1=YES)
TS$PRV==000400			; TASK IS PRIVELEGED (1=YES)
TS$CMP==000200			; TASK BUILT IN COMPATIBILITY MODE (1=YES)
TS$CHK==000100			; TASK IS CHECKPOINTABLE (0=YES)
TS$RES==000040			; TASK HAS RESIDENT OVERLAYS (1=YES)
TS$IOP==000020 			; PRIVILEGED TASK DOES NOT MAP
				; THE IO PAGE (1=YES)
TS$SUP==000010			; TASK LINKED TO SUPERVISOR LIBRARIES (1=YES)
TS$XHR==000004			; TASK HAS EXTERNAL HEADER (1=YES)
TS$NXH==000002			; TASK WAS BUILT WITH NO EXTERNAL HEADER
TS$NEW==000001			; LABEL BLOCK USES NEW FORMAT
				; (MEANS L$BLRL DESCRIBES FORMAT)
;
; SECOND TASK FLAGS WORD
;

T2$MRO==000004			; TASK HAS RES OVRLYS (1=YES) (VAX-11 USES THIS)
T2$FMP==000002			; TASK USES FAST MAP DIRECTIVE (1=YES)
T2$CLI==000001			; TASK IS A CLI (1=YES)


;
; DEFINE THE MAXIMUM NUMBER OF WINDOWS IN AN M-PLUS TASK
;

W$NDWS==24.



;
; DEFINE WINDOW DESCRIPTOR OFFSETS
;

	.LIST	MEB

	WDBDF	<:>,<=>

	.NLIST	MEB


	.ENDC
;
; LOCAL MACROS
;
; GENERATE DEFAULT LUN ASSIGNMENT
;
; GDFLUN DEVNAM,DEVUNT,LOGUNT
;
; WHERE:
;
;	DEVNAM=A TWO CHARACTER DEVICE NAME.
;	DEVUNT=PHYSICAL UNIT.
;	LOGUNT=LUN DEVICE IS TO BE ASSIGNED TO.
;

	.MACRO	GDFLUN DEVNAM,DEVUNT,LOGUNT
	.BLKW	1
	.ASCII	/DEVNAM/
	.BYTE	DEVUNT,1
	.WORD	LOGUNT
	.ENDM
;
; GLOBAL DATA
;
; DUMMY ABSOLUTE SECTION ENTRY
;

	.PSECT	NOCLR,RW,D


$ABSCT::.BLKW	1		;
$ABSNM::.RAD50	/. ABS./	;DEFAULT ABS SECTION NAME
	.WORD	CS$GBL!CS$ALO	;DEFAULT FLAGS
	.REPT	<C$SLGH-<.-$ABSCT>>/2
	.WORD	0		;
	.ENDR

	IMPURE			; READ/WRITE D-SPACE

$CLRBG::.BLKW	0		; START OF AREA TO CLEAR


;
; NUMBER OF ACTIVE FILES
;

$ACTFL::.BLKW	1		;


;
; HIGH ADDRESS LIMIT
;

$ADLIM::	.BLKW	1	;
;
; TASK APR BITMAP
;

$APRMP::.BLKB	1		;

;
; SUPERVISOR LIBRARY BITMAP
;

$APRSP::.BLKB	1		;


;
; TASK DATA APR BITMAP
;

$APRDM::.BLKW	1		;


;
; VIRTUAL ADDRESS OF ABSOLUTE SECTION
;

$ASCT::	.BLKW	1		;


;
; TASK USES AUTOLOAD (0=NO)
;

$AFLG::	.BLKW	1		;

;
; START TIME FOR THIS BUILD
;

$BGTIM::.BLKW	8.		;


;
; BITMAP DESCRIPTOR FOR TASK IMAGE FILE BITMAP
;

$BITMP::.BLKW	2		;

;
; SEGMENT ADDRESS LIMITS AND BIAS VALUES
;

	.PSECT	IMG$D,D,GBL

$BEGRO::.BLKW	1		; BEGINNING OF RO AREA
$BGROD::.BLKW	1		; BEGINNING OF R/O DATA AREA
$BEGRW::.BLKW	1		; BEGINNING OF RW AREA
$BGRWD::.BLKW	1		; BEGINNING OF R/W DATA AREA
$BFFLG::.BLKW	1		; BUFFER TRUE/FALSE FLAG

	.IF	NDF	R$$11M

$BIAS::.BLKW	1		; RO ADDRESS BIAS

	.ENDC

$ENDRO::.BLKW	1		; END OF RO AREA
$EDROD::.BLKW	1		; END OF R/O DATA AREA
$ENDRW::.BLKW	1		; END OF RW AREA
$EDRWD::.BLKW	1		; END OF R/W DATA AREA

	.IF	DF	R$$11M

$LOWRW::.BLKW	1		; LOW R/W MEMORY LIMIT
$LWRWD::.BLKW	1		; LOW R/W DATA MEMORY LIMITS

	.IFF

$HDOFF::.BLKW	1		; HEADER OFFSET BIAS

	.ENDC

$WRFLG::.BLKB	1		; SEGMENT HAS NO DISK ALLOCATION (.EQ.=NO)
$STYP::	.BLKB	1		; SECTION TYPE DATA (.NE.=YES)


	IMPURE			; READ/WRITE D-SPACE

;
; CLUSTER LIBRARY TABLE LISTHEAD
;

$CLSHD::.BLKW	2		; SECOND WORD IS NUMBER OF CLUSTER TABLES
;
; COMMAND INPUT FLAG
;

$CMFLG::.WORD	0		;

;
; NAME OF COMPLETION ROUTINE
;

 $CMPRT::.BLKW	4		;


;
; CURRENT STATE POINTERS (REAL ADDRESSES)
;

$CRELM::.BLKW	1		;CURRENT ELEMENT
$CRSEG::.BLKW	1		;CURRENT SEGMENT
$CRSRC::.BLKW	1		;CURRENT SEGMENT BEING SEARCHED
$CRSYM::.BLKW	1		;CURRENT SYMBOL

;
; CURRENT STATE POINTERS (VIRTUAL ADDRESSES)
;

$CRVEL::.BLKW	1		; VIRTUAL ADDRESS-CURRENT ELEMENT
$CRVSG::.BLKW	1		; VIRTUAL ADDRESS-CURRENT SEGMENT
$CRVSR::.BLKW	1		; VIRTUAL ADDRESS-CURRENT SEGMENT SEARCHED
$CRVSM::.BLKW	1		; VIRTUAL ADDRESS-CURRENT SYMBOL

;++036
;++036 CREF OUTPUT DEVICE
;++036

$CRODV::.BLKW	1		;++036

;++036
;++036 CREF OUTPUT UNIT
;++036

$CROUN::.BLKW	1		;++036


;
; EIGHT-WORD AREA FOR DEBUGGER TIME-STAMP
;

$DBTS::	.BLKW	8.		;


;
; DEFAULT DEVICE ASSIGNMENTS
;

	.PSECT	NOCLR,RW,D


$DFASG::.WORD	<DFASG-$DFASG>/10;NUMBER OF DEFAULT ASSIGNMENTS

	GDFLUN	SY,0,1
	GDFLUN	SY,0,2
	GDFLUN	SY,0,3
	GDFLUN	SY,0,4
	GDFLUN	TI,0,5
	GDFLUN	CL,0,6

DFASG:				;REF LABEL

	IMPURE			; READ/WRITE D-SPACE

;
; ARGUMENT TO /ID:N TASK FILE SWITCH
;

$DPSIZ::.BLKW	1		;


;
; COUNT OF NON-FATAL LINK ERRORS DETECTED
;

$ERRCT::.BLKW	1		;

;
; FREE SPACE POOL HEADER AND POOL
;

$FRHD::	.BLKW	2		;HEADER
	.PSECT	FRSIZ1,RW,D
$FRSZ1::
	.PSECT	FRSIZ2,RW,D
$FRSZ2::
	IMPURE			; READ/WRITE D-SPACE

;
; SIZE OF CORE POOL
;

$FRSIZ::.BLKW	1		;


;
; FILE SIZE INDICATOR
;

$FSIZI::.BLKW	1		;


	.IF	NDF	R$$11M

;
; TASK IMAGE PAGE ADDRESS REGISTERS (PAR)
;

$HDPAR::.BLKW	8.		;

;
; TASK IMAGE PAGE DESCRIPTOR REGISTERS (PDR)
;

$HDPDR::.BLKW	8.		;

	.IFTF

;
; SIZE OF TASK HEADER
;

$HDSIZ::.BLKW	1		;

;
; RELATIVE DISK BLOCK ADDRESS OF HEADER
;

$HDRBN::.BLKW	1		;
$DHDRB::.BLKW	2		; RELATIVE DISK BLOCK OF DATA HEADER
				; AND DISK BLOCK OF R/O DATA

	.IFF

;
; ADDRESS OF IMPURE VECTOR EXTENSION LIST
;

$HEXT::	.BLKW	1		;

;
; MAXIMUM ALLOWABLE TASK ADDRESSES...
;
; $HGHAD   ::= I-SPACE MAX ADDRESS
; $HGHAD+2 ::= D-SPACE MAX ADDRESS

$HGHAD::.BLKW	2



;
; FCS IMPURE AREA POINTER - LOC.2 CONTEXT SAVE
;

$HFSR::	.BLKW	1		;

;
; FORTRAN OTS IMPURE AREA POINTER - LOC. 40 CONTEXT SAVE.
;

$HOTV::	.BLKW	1		;

;
; OVERLAY RUNTIME SYSTEM IMPURE AREA POINTER - LOC. 42 CONTEXT SAVE
;

$HOVLY::.BLKW	1		;

	.ENDC

;
; HIGHEST VIRTUAL ADDRESS IN TASK
;

$HVRTL::.BLKW	1		;
$HDVRT::	.BLKW	1	; HIGHEST VIRTUAL ADDRESS OF DATA

;
; HIGH VIRTUAL ADDRESS LIMIT - ADDRESS WINDOW 0
;

$HVRT0::.BLKW	1		;

;
; DATA HIGH VIRTUAL ADDRESS, WINDOW 1
;

$HDVR1::.BLKW	1



;
; VERSION IDENTIFICATION
;

$IDENT::.BLKW	2		;


;
; NO. OF DISK BLOCKS IN LABEL
;

$LBBLK::.BLKW	1		;

;
; TASK EXTENSION SIZE IN 32 W BLOCKS
;

$LBEXT::.BLKW	1		;++041

;
; SIZE OF LABEL BLOCK (BYTES)
;

$LBLSZ::.BLKW	1		;

;
; TASK OFFSET INTO REGION
;

$LBOFF::.BLKW	1		;

;
; RESIDENT LIBRARY REQUEST LISTHEAD
;

$LBRHD::.BLKW	3		;

;
; LIBRARY D-SPACE RESERVATION
;

$LDAPR::.BLKW	1

; LIBRARY APR USAGE (I-SPACE)
;

$LIBAPR::.BLKW	1


;
;
; COMMAND LINE BUFFER
;

	.PSECT	LNB$D,D,GBL

$LNBUF::.BLKB	134.		;

;
; COMMAND LINE DESCRIPTOR
;

$LNDES::.BLKW	2		;

	IMPURE			; READ/WRITE D-SPACE

;
; DEFAULT LOGICAL UNIT ASSIGNMENT LISTHEAD
;

$LUNHD::.BLKW	2		;


;
; VIRTUAL ADDRESS OF NAME BLOCK FOR REAL MAP
; OUTPUT FILE
;

$MPFIL::.BLKW	1		;++036

;
; MASTER UNDEFINED SYMBOL COUNT
;

$MSYMC::.BLKW	1		;

;
; MAXIMUM PHYSICAL MEMORY NEEDED
;

$MXLGH::.BLKW	4		;

;
; MAXIMUM NUMBER OF WINDOWS REQUIRED BY TASK
;

$MXWND::.BLKW	1		;

;
; NUMBER OF REGIONS
;

$NUMRG::.BLKW	1		;

;
; NUMBER OF SEGMENTS IN ALLOCATION
;

$NUMSG::.BLKW	1		;

;
; NUMBER OF WINDOWS
;

$NUMWN::.BLKW	1		;

;
; NUMBER OF LOGICAL UNITS
;

$NUNIT::.BLKW	1		;

;
; ODT TRANSFER ADDRESS VECTOR
;

$ODTAD::.BLKW	2		;

;
; ODT AND TASK SST VECTORS - ADJACENCY ASSUMED
;

	.IF	NDF	R$$11M

$ODTV::	.BLKW	2		;
$ODTSZ::.BLKB	1		;
$TSKSZ::.BLKB	1		;
$TSKV::	.BLKW	2		;

	.IFF

$ODTV:: .BLKW	2		;
$ODTSZ::.BLKW	1		;
$TSKV:: .BLKW	2		;
$TSKSZ::.BLKW	1		;

	.ENDC


;
; OFFSET BIAS CALCULATED FROM /BS (BASE) OR /TP (TOP) SWITCH VALUE
;

$OFFST::.BLKW	1		;

;
; D-SPACE OFFSET BIAS DERIVED FROM THE RESERVED APR OPTION 'RSDAPR='.
; THIS OFFSET VALUE WILL BE DERIVED FROM THE HIGHEST APR RESERVED.
;

$OFFSD::.WORD	0


;
; OUTPUT BUFFER-LOAD MAP/ERROR MESSAGES
;
	.IF	NDF,R$RSTS
$OUTBF::.BLKB	90.		;
$TBUF::	.BLKB	80.		; TEMP. ERROR TEXT STORAGE (ADJ. REQUIRED)
	.IFF
$OUTBF::.BLKB	134.		;
$TBUF::	.BLKB	134.		; TEMP. ERROR TEXT STORAGE (ADJ. REQUIRED)
	.ENDC

;
; TASK PARTITION SIZE (32W BLOCKS)
;

$PARSZ::.BLKW	1		;

;
; PATH LIST ADDRESS
;

$PATH::	.BLKW	1		;


;
; PATCH LISTHEAD
;

$PATHD::.BLKW	2		;

;
; PHASE NUMBER
;

$PHASE::.BLKW	1		;

;
; PHYSICAL ADDRESS BOUND
;

$PHYBD::.BLKW	1		;

;
; DEFAULT PARTITION NAME
;

$PNAME::.BLKW	2		;

;
; POOL USAGE
;

	.IF	NDF	R$$11M

$POOL::	.BLKW	1		;

	.ENDC

;
; DEFAULT PRIORITX
;

$PRIOR::.BLKW	1		;

;
; PRIVELEGED TASK INITIAL APR
;

	.IF	DF	R$$11M

$PRVAP::.BLKW	1		;

	.ENDC

;
;
; RESERVED APR REQUESTS FROM THE OPTIONS 'RESAPR' ($RIAPR), AND 'RSDAPR'
; ($RDAPR). THESE ARE BYTE QUANTITIES.
;

$RIAPR::.BLKB	1		; SET BY 'RESAPR' OPTION
$RDAPR::.BLKB	1		; SET BY 'RSDAPR' OPTION

; HIGHEST RELATIVE DISK BLOCK NUMBER
;

$RLBLK::.BLKW	1		;
$ROBLK::.BLKW	1		; READ ONLY PORTION
$REBLK::.BLKW	1		; LAST BLOCK AFTER COMPRESSION
$RLDBK::.BLKW	1		; HIGHEST BLOCK NUMBER FOR DATA
$RODBK::.BLKW	1		; HIGHEST BLOCK NUMBER FOR R/O DATA

;
; DEFAULT R-O PARTITION NAME
;

$ROPAR::.BLKW	2		;


;
; SYSTEM INDICATOR
;

$RSXSY::.BLKW	1		;

;
; ROOT SEGMENT POINTER
;

$RTSEG::.BLKW	1		;
	.WORD	0		; PATH FLAG=CURRENT SEGMENT
	.WORD	0		; END OF SINGLE SEGMENT PATH LIST

;
; VIRTUAL ADDRESS OF ROOT SEGMENT WINDOW DESCRIPTOR
;

$RTWDP::.BLKW	2		; FOR THE ROOT SEGMENT WINDOW BLOCKS

;
; CONTROL SECTION EXTENSION LISTHEAD
;

	.PSECT	NOCLR,RW,D


$SCTHD::.WORD	$SCTHD		;
	.BLKW	3		;
	.BYTE	0,15.		;

	IMPURE			; READ/WRITE D-SPACE

;
; ADDRESS OF SEGMENT LIST
;

$SGLST::.BLKW	1		;

;
; SEGMENT DESCRIPTOR 'GROUP' OFFSET - THIS LOCATION WILL CONTAIN THE OFFSET
; VALUE FOR EACH 'GROUP' OF SEGMENT DESCRIPTORS THAT ARE SUPPLIED BY RESIDENT
; LIBRARY SYMBOL TABLE FILES. THIS IS NECESSARY FOR SUPPORT OF SELECTIVE
; INCLUSION OF AUTOLOAD VECTORS. EACH 'GROUP' OF SEGMENT DESCRIPTORS IS TREATED
; MUCH LIKE THE MANNER THAT SEGMENT DESCRIPTORS ARE TREATED FOR CLUSTER LIBRARIE
; INITIALLY, THE VALUE IS ZERO AND UPDATED BY ADDING THE LENGTH CONTRIBUTION
; OF THE P-SECTION $$SGD1 AFTER EACH ELEMENT IS SCANNED BY PRCLM. IT CONTAINS A
; RUNNING TOTAL OF THE PREVIOUS P-SECTION $$SGD1 LENGTHS.
;

$SGOFF::.WORD	0

;
; 'GROUP' SEGMENT DESCRIPTOR OFFSET TEMPORARY LOCATION WHICH WILL BE
; MODIFIED BY PRCLM AS IT SEES THE INCOMING .PSECTS $$SGD1. THE CONTENTS OF
; THIS LOCATION WILL BE ADDED TO THE PREVIOUS LOCATION ($SGOFF) AND REPRESENTS
; THE LENGTH OF THE P-SECTION $$SGD1 FOR THE CURRENT ELEMENT BEING PROCESSED.
;

SGOFF::	.BLKW	1		; 'GROUP' SEGMENT DESCRIPTOR OFFSET VALUE...

;
; STACK SPACE REQUIRED
;

$STACK::.BLKW	1		;

;
; SWITCH OPTION WORD
;

$SWTCH::.BLKW	1		;
	.WORD	0		; SECOND SWITCH WORD

;
; LINKING TO SUPERVISOR MODE LIBRARY FLAG
;

$SUPLF::.BLKW	1		;



;
; SUPERVISOR-MODE LIBRARY AUTOLOAD VECTOR OFFSET
;
; THIS VALUE WAS MOVED FROM MODULE PRCLM BECAUSE IT WILL BE USED WHEN AUTOLOAD
; VECTORS ARE BEING GENERATED FOR SUPER-MODE SYMBOLS. WE NEED TO ASSOCIATE A
; SYMBOL WITH IT'S ALTERNATE AUTOLOAD ENTRYPOINT SO THAT THE OVERLAY RUN-TIME
; SYSTEM CAN PERFORM ITS DUTIES IN USER-MODE THEN CONTEXT SWITCH INTO SUPER-
; MODE.
;

$SUPOF::.BLKW	1

;
; TASK IMAGE SWITCH OPTION OVERFLOW WORD
;

$SWOVR::.BLKW	1.

; SECOND TASK IMAGE SWITCH OPTION OVERFLOW WORD
;

$SWOV2::.BLKW	1.

;
;
; MASTER SYMBOL TABLE LISTHEAD
;

	.PSECT	NOCLR,RW,D

$SYMHD::.BLKW	1		; POINTER TO ROOT NODE
	.WORD	<3+4>*2		; ENTRY SIZE IN BYTES
	.WORD	N$DLGH		; NODE SIZE IN BYTES

	IMPURE			; READ/WRITE D-SPACE


;
; SIZE OF RESIDENT SEGMENT DESCRIPTOR
;

$SZSEG::.BLKW	1		;


;
; SYSTEM IDENTIFICATION
;

$SYSTM::.WORD	1		;

;
; TASK UIC
;

$TKUIC::.BLKW	1		;

;
; TASK NAME
;

$TNAME::.BLKW	2		;

;
; TOTAL NUMBER OF WINDOW DESCRIPTORS
;

$TSKWD::.BLKW	1		;

;
; TEMPORARY COPY OF $LBOFF IF MAPPED ARRAY DECLARATION DETECTED
;

$VARSZ::.BLKW	1		;

;
; VIRTUAL ADDRESS BOUNDARY
;

$VRTBD::.BLKW	1		;

;
; VIRTUAL SECTION LISTHEAD
;

$VSCHD::.BLKW	1		;


;
; SEGMENT CURRENTLY BEING WRITTEN INTO
;

$WRSEG::.BLKW	1		;

;
; SEARCH EXTENT FLAG
;

$WSEXT::.WORD	0		; MOVED FROM SLSRC AND WSRCS

;
; TASK TRANSFER ADDRESS VECTOR
;

$XFRAD::.BLKW	2		;

;
; EXCLUDE SYMBOL TABLE LISTHEAD
;

$XCLHD::.BLKW	2
	.IF	DF,R$RSTS	;++RSTS V8.0  
;				;++RSTS V8.0  
;	RSTS HISEG WORKING STORAGE AREA	;++RSTS V8.0		       
;				;++RSTS V8.0		      
$TKRTS::.BLKW	2		;++RSTS V8.0		      
	.WORD	0		;++RSTS V8.0	ERROR FLAG FOR HISEG
	.ENDC			;++RSTS V8.0			    

;
; WORKING STORAGE CLEARING SIZE
;
	C$LRSZ== .-$CLRBG/2	; NUMBER OF WORDS TO CLEAR
;
; NOTE!!
;
; THIS MUST BE THE NEXT TO THE LAST LAST ITEM IN THIS FILE, BEFORE $EXSTS,
; OTHERWISE SOME VITAL WORKING STORAGE WILL NOT BE INITIALIZED FOR EACH
; TASKBUILD. THIS WILL NOT POSE ANY PROBLEM EXCEPT IN THE CASE WHERE
; MULTIPLE TASKBUILDS ARE INVOKED FROM THE SAME COMMAND FILE.
;
;

;
; EXIT STATUS TO BE RETURNED TO REQUESTER
;

$EXSTS::.BLKW	1		;

	.END
