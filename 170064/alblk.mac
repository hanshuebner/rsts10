	.TITLE	ALBLK
	.IDENT	/03.01/
;
; COPYRIGHT (c)	1983 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; D. N. CUTLER/C. MONIA 04-MAR-74
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	03.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
;+
; **-$ALBLK-ALLOCATE BLOCK
;
; THIS ROUTINE IS CALLED TO ALLOCATE A BLOCK OF STORAGE FROM THE FREE
; STORAGE POOL. IF THE BLOCK CANNOT BE ALLOCATED, THEN A FATAL ERROR
; MESSAGE IS ISSUED. ELSE THE BLOCK IS ALLOCATED AND ZEROED AND THE
; ADDRESS IS RETURNED TO THE CALLER.
;
; INPUTS:
;
;	R1=SIZE OF BLOCK TO ALLOCATE IN BYTES.
;
; OUTPUTS:
;
;	R0=ADDRESS OF ALLOCATED BLOCK.
;-
	PURE.I			; READ-ONLY I-SPACE

$ALBLK::			;
	MOV	R1,-(SP)	;SAVE SIZE OF BLOCK
	CALL	$GTCOR		; REQUEST A BLOCK OF STORAGE
	BCC	10$		;IF CC GOT IT
	MOV	#$FRHD,R2	;GET ADDRESS OF FREE POOL HEADER
	MOV	(PC)+,R1	;GET ERROR/SEVERITY
	.BYTE	E$R4,S$V2	;
	CALL	$ERMSG		;ISSUE FATAL ERROR (NO RETURN)
10$:	MOV	(SP)+,R1	;RETRIEVE SIZE OF BLOCK
	ADD	#3,R1		;ROUND TO NEXT 2 WORD BOUNDRY
	BIC	#3,R1		;CLEAR EXECSS BITS
	ASR	R1		;CONVERT TO WORDS
	MOV	R0,R2		;COPY ADDRESS OF BLOCK
20$:	CLR	(R2)+		;CLEAR BLOCK
	SOB	R1,20$		;REPEAT
	RETURN			;

	.END
