	.TITLE	P3MDS
	.IDENT	/25.02/
;
; COPYRIGHT (c)	1986 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; D.N. CUTLER/C. MONIA 15-JAN-74
;
;
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	25.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
; MODIFIED FO RSX-11M-PLUS V4.0 BY:
;
;	L. PETERSON	18-FEB-86	25.02
;		LMP033		OPEN AND CLOSE DEFAULT LIBRARY AT START AND
;				END OF UNDEFINED SYMBOL SEARCH INSTEAD OF
;				BEFORE AND AFTER EVERY SEGMENT
;
;
; PHASE 3 MODULE SCAN
;
;
; MACRO LIBRARY CALLS
;

	.MCALL	BDOFF$,CLOSE$

;
; DEFINE FCS BUFFER OFFSETS LOCALLY
;

 	BDOFF$	DEF$L


;
; LOCAL DATA
;


;
; SUBROUTINE TRANSFER VECTORS
;
	PURE.D			; READ-ONLY D-SPACE

$LBFN::	.WORD	$LBFIN		; TERMINAL LIBRARY PROCESSING
$PRCL::	.WORD	$PRCLM		; ELEMENT PROCESSING

;
; WINDOW INCREMENT FOR VIRTUAL ARRAYS
;
	IMPURE			; READ/WRITE D-SPACE

$VSWND::.BLKW	1		;
$LBOPE::.BLKW	1		; DEFAULT LIBRARY FLAG (0-CLOSED,1-OPEN)


;
; PHASE 3 FCS BLOCK BUFFER
;

	.PSECT	P3B$D,D,OVR,GBL

$P3BF::	.WORD	S.BFHD+512.	; SIZE OF BUFFER IN BYTES
	.BLKB	S.BFHD+512.	; BLOCK BUFFER

	.PSECT	P3B$E,D,OVR,GBL


	.EVEN

;+
; **-$P3MDS-PHASE 3 MODULE SCAN
;
; THIS ROUTINE IS CALLED TO DO THE PHASE 3 MODULE SCAN OF ALL SEG-
; MENTS IN THE ALLOCATION. AS EACH SEGMENT IS CONSIDERED, THE ELE-
; MENT LIST IS SCANNED. THE SCAN STARTS WITH THE FIRST ELEMENT IN
; THE LIST AND CONTINUES TO THE END OF THE LIST. AS EACH ELEMENT
; IS CONSIDERED, THE SECTION AND SYMBOL TABLES OF THE SEGMENT ARE UP-
; DATED. THE ELEMENT MODULE NAME IS RESOLVED AND THE ELEMENT SECT-
; ION MAPPING TABLE IS CONSTRUCTED.
;
; INPUTS:
;
;	NONE.
;
; OUTPUTS:
;
;	NONE.
;-
	PURE.I			; READ-ONLY I-SPACE

$P3MDS::			;
	CLR	R1		; SPECIFY ZERO LENGTH BLOCK
	CLR	$SUPOF		; CLEAR SUPERVISOR MODE LIBRARY AUTO LOAD OFFSET
	CALL	$ALSVB		; INITIALIZE SMALL BLOCK ALLOCATION
	MOV	#1,$VSWND	; SETUP WINDOW INCREMENT FOR VIRTUAL ARRAY
	MOV	$INPPT,R0	; GET INPUT RECORD BLOCK POINTER
	MOV	#$P3BF,R$BLKB(R0) ; SET POINTER TO FCS BLOCK BUFFER
	CLR	@R$NMBK(R0)	; NO NAMEBLOCK TO SETUP
	CALL	$STRCB		; SET RECORD BLOCK RESIDENT
	MOV	#$P3SCN,R0	; GET ADDRESS OF PHASE CONTROL ROUTINE
	CALL	$PCTRL		;CALL PHASE CONTROL ROUTINE
	TST	$MSYMC		;ANY UNDEFINED SYMBOLS?
	BEQ	20$		;IF EQ NO
	TST	$LIBNM		; DID LIBRARY PARSE/FIND SUCCEED?
	BEQ	10$		; IF EQ NO, COMPLAIN NOW
	MOV	SP,$WSEXT	; ASSUME ALL CO-TREES SEARCHED?
	BIT	#CO$SRC,$SWTCH	; SEACH ALL CO-TREES?
	BNE	5$		; IF NE YES
	CLR	$WSEXT		; SET TO LIMIT SEARCH
5$:				;
	CLR	$LBOPE		; OPEN DEFAULT LIBRARY IN P3LBS
	MOV	#$P3LBS,R0	; GET ADDRESS OF PHASE CONTROL ROUTINE
	CALL	$PCTRL		;CALL PHASE CONTROL ROUTINE
	CLR	$WSEXT		; SET FLAG TO LIMIT SEARCH
	BR	20$		;
10$:				;
	CLR	R2		; SET DUMMY PARAMETER BLOCK ADDRESS
	MOV	#<S$V0*400!E$R74>,R1 ; GET ERROR/SEVERITY
	CALL	$ERMSG		;OUTPUT ERROR MESSAGE
20$:				;
	MOV	$INPPT,R0	; GET RECORD BLOCK POINTER
	CLOSE$	R0		; CLOSE DEFAULT LIBRARY
	CLR	R$BLKB(R0)	; CLEAR BLOCK BUFFER POINTER
	RETURN			;

	.END
