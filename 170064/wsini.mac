	.TITLE	WSINI
	.IDENT	/00.01/
;
; COPYRIGHT (c)	1983 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; C. MONIA 23-SEP-75
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	00.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
; INITIALIZE WHOLE-SEARCH ALGORITHM
;
; LOCAL DATA
;
; VIRTUAL ADDRESS OF ROOT SEGMENT IN THIS TREE
;
	IMPURE			; READ/WRITE D-SPACE

ROOT:	.BLKW	1		;

;+
; **-$WSINI-INITIALIZE WHOLE-SEARCH ALGORITM
;
; THIS ROUTINE IS CALLED TO INITIALIZE THE SEGMENT PATH LIST THAT
; IS REFERENCED WHEN TRAVERSING THE OVERLAY STRUCTURE IN SEARCH OF
; A SYMBOL OR SECTION NAME.
;
; INPUTS:
;
;	$CRSEG=ADDRESS OF CURRENT SEGMENT BEING PROCESSED
;	$CRVSG=VIRTUAL ADDRESS OF SEGMENT BEING PROCESSED
;	$PATH=ADDRESS OF SEGMENT PATH LIST
;
; OUTPUTS:
;
;	SEGMENT PATH LIST IS BUILT CONTAINING ENTRIES IN THE FOLLOWING
;	FORMAT:
;
;		.WORD	SGADR		; VIRTUAL ADDRESS OF SEGMENT DESCR.
;		.WORD	PATHF		; PATH FLAG
;
;	THE PATH FLAG INDICATES THE LOCATION OF THE SEGMENT WITH RESPECT
;	TO THE CURRENT SEGMENT BEING PROCESSED AS FOLLOWS:
;
;		PATHF=0			; CURRENT SEGMENT
;		PATHF=1			; SEGMENT IS UPTREE
;		PATHF=2			; SEGMENT IS IN CO-TREE
;		PATHF<0			; SEGMENT IS DOWNTREE
;
;	ENTRIES ARE MADE IN THE LIST IN THE FOLLOWING SEQUENCE:
;
;		CURRENT SEGMENT
;		ALL ENTRIES DOWNTREE
;		ALL ENTRIES UP-TREE
;		ALL CO-TREE ENTRIES
;
;	A ZERO WORD TERMINATES THE LIST.
;
;-
	PURE.I			; READ-ONLY I-SPACE

$WSINI::			;
	SAVRG			; SAVE THE VOLATILE REGISTERS
	MOV	$PATH,R5	; GET ADDRESS OF PATH LIST
	MOV	$CRVSG,R1	; GET VIRTUAL ADDRESS OF CURRENT SEGMENT
	CLR	-(SP)		; MARK BOTTOM OF STACK
	MOV	R1,-(SP)	; SET SENTINEL AT THIS LEVEL
	CLR	R4		; SET PATH FLAG=CURRENT SEGMENT
10$:				;
	MOV	R1,ROOT		; MARK VIRTUAL ADDRESS OF ROOT
	CALL	$CVRL		; CONVERT SEGMENT TO REAL ADDRESS
	CALL	BLDEN		; ENTER IN PATH LIST
	DEC	R4		; FLAG=PATH DOWN
	MOV	S$GDWN(R0),R1	; GET ADDRESS OF DOWNTREE SEGMENT
	BNE	10$		; IF NE HAVE SEGMENT ADDRESS
	MOV	#1,R4		; SET FLAG=PATH-UP
	MOV	$CRSEG,R0	; GET REAL ADDRESS OF CURRENT SEGMENT
	MOV	S$GPRV(R0),-(SP) ; SET SENTINEL AT THIS LEVEL
20$:				;
	MOV	S$GUP(R0),R1	; GET LINK UP
	BEQ	40$		; IF EQ NO LINK UP
	MOV	R1,-(SP)	; SET SENTINEL AT THIS LEVEL
30$:				;
	MOV	R1,-(SP)	; SAVE ADDRESS OF CURRENT SEGMENT
	CALL	$CVRL		; CONVERT TO REAL ADDRESS
	CALL	BLDEN		; BUILD PATH LIST ENTRY
	BR	20$		; GO AGAIN
40$:				;
	MOV	(SP),R1		; GET SEGMENT AT PREVIOUS LEVEL
	BEQ	50$		; IF EQ TRAVERSED ENTIRE TREE
	CALL	$CVRL		; CONVERT TO REAL ADDRESS
	INC	(SP)+		; REMOVE ADDRESS OF CURRENT ENTRY
	MOV	S$GNXT(R0),R1	; GET LINK-NEXT
	CMP	R1,(SP)		; PROCESSED ALL LINK-NEXT?
	BNE	30$		; IF NE NO
	INC	(SP)+		; REMOVE SENTINEL AT THIS LEVEL
	BR	40$		; PROCESS LINK NEXT
50$:				;
	INC	R4		; INCREMENT PATH FLAG
	CMP	R4,#2		; PROCESSED ALL CO-TREES?
	BHI	60$		; IF HI YES
	MOV	ROOT,-(SP)	; SET ROOT SEGMENT OF THIS TREE
	MOV	(SP),-(SP)	; DUPLICATE SEGMENT ADDRESS
	BR	40$		; LOCATE ALL CO-TREE SEGMENTS
60$:				;
	INC	(SP)+		; CLEAN THE STACK
	RETURN			;

;
; APPEND AN ENTRY TO THE PATH LIST
;

BLDEN:				;
	MOV	R1,(R5)+	; RECORD VIRTUAL ADDRESS OF SEGMENT
	MOV	R4,(R5)+	; RECORD PATH FLAG
	CLR	(R5)		; TERMINATE TABLE
	RETURN			;

	.END
