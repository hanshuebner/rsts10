	.TITLE	VSECT
	.IDENT	/00.01/
;
; COPYRIGHT (c)	1983 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; C. MONIA 30-MAY-76
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	00.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
; PROCESS VIRTUAL SECTION KEYWORD OPTION
;
;+
;
; **-$VSECT-PROCESS VIRTUAL SECTION KEYWORD OPTION
;
; THIS SUBROUTINE IS CALLED BY THE PHASE 2 OPTION PROCESSOR TO VALIDATE
; KEYWORD PARAMETERS AND ENTER THE VIRTUAL SECTION IN THE VSECT LIST.
;
; INPUTS:
;
;	R3=NUMBER OF PARAMETERS SPECIFIED
;	R5=ADDRESS OF PARAMETER LIST ($PARM)
;
;	PARAMETER LIST CONTAINS THE FOLLOWING:
;
;	.WORD	NAME		; SECTION NAME
;	.WORD	NAME		; ...
;	.WORD	BASE		; BASE VIRTUAL ADDRESS
;	.WORD	LENGTH		; WINDOW SIZE IN BYTES
;	.WORD	PALLOC		; PHYSICAL ALLOCATION IN 64 BYTE BLOCKS
;
; OUTPUTS:
;
;	KEYWORD PARAMETERS ARE PROCESSED AND VSECT LIST ENTRY
;	IS CONSTRUCTED IF PARAMETERS ARE VALID.
;
; THE CONTENTS OF REGISTERS R0 - R5 ARE PRESERVED
;
;-
	PURE.I			; READ-ONLY I-SPACE

$VSECT::			;
	SAVVR			; SAVE THE VOLATILE REGISTERS
	CMP	R3,#4		; PHYSICAL ALLOCATION SPECIFIED?
	BHIS	10$		; IF HIS YES
	CLR	10(R5)		; CLEAR ALLOCATION SIZE
	CMP	R3,#3		; WINDOW SIZE SPECIFIED?
	BHIS	10$		; IF HIS YES
	CLR	6(R5)		; CLEAR WINDOW SIZE
10$:				;
	BIT	#MP$SY,$SWTCH	; MEMORY MANAGEMENT IN EFFECT?
	BNE	15$		; IF NE YES
	CLR	10(R5)		; IGNORE PHYSICAL ALLOCATION
15$:				;
	MOV	R5,R0		; COPY ADDRESS OF PARAMETER LIST
	CMP	(R0)+,(R0)+	; STEP PAST NAME
	MOV	(R0)+,R1	; GET BASE ADDRESS
	BEQ	20$		; IF EQ AT ZERO
	DEC	R1		; BACK OFF BASE BY ONE
20$:				;
	ADD	(R0)+,R1	; ADD WINDOW SIZE
	BCS	70$		; IF C/S ERROR
	MOV	R5,R1		; GET PARAMETER LIST AGAIN
	TST	-(R1)		; ADJUST POINTER
	MOV	#$VSCHD,R4	; GET ADDRESS OF LISTHEAD
	MOV	R4,R0		; COPY LISTHEAD ADDRESS
	CALL	$SRCHR		; SEARCH LIST FOR PREVIOUS ENTRY
	BCC	40$		; IF C/C IN LIST
	MOV	#14,R1		; GET SIZE OF ENTRY IN BYTES
	CALL	$ALBLK		; ALLOCATE BLOCK
	MOV	(R4),(R0)	; COPY FIRST IN LIST
	MOV	R0,(R4)		; SET NEW FIRST
40$:				;
	TST	(R0)+		; POINT TO SPACE FOR NAME
	MOV	R5,R1		; COPY ADDRESS OF PARAMETER LIST
	MOV	#5,R2		; GET COUNT OF WORDS TO MOVE
50$:				;
	MOV	(R1)+,(R0)+	; COPY ENTRY
	SOB	R2,50$		; ...
	CALL	$GTRT		; GET ADDRESS OF ROOT SEGMENT
	ADD	#S$GCST,R0	; POINT TO CONTROL SECTION TABLE
	MOV	R5,R1		; COPY ADDRESS OF PARAMETER LIST
	TST	-(R1)		; ADJUST ADDRESS
	CALL	$SRCH		; SEARCH FOR ENTRY
	BCS	60$		; IF C/S NO ENTRY
	BITB	#CS$REL,C$SFLG(R0) ; SECTION RELOCATABLE?
	BEQ	60$		; IF EQ NO
	CALL	$WRMPG		; WRITE-MARK PAGE
	BISB	#CS$VSC,C$SFLG+1(R0) ; MARK SECTION AS VIRTUAL
	MOV	4(R5),C$SBSE(R0) ; SET BASE ADDRESS
	MOV	6(R5),C$SLTH(R0) ; SET WINDOW SIZE
60$:				;
	RETURN			; EXIT
70$:				;
	MOV	#<S$V1*400!E$R90>,R3 ; GET ERROR/SEVERITY
	CALLR	$P2OPE		; REPORT ALLOCATION ERROR

	.END
