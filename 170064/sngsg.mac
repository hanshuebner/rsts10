	.TITLE	SNGSG
	.IDENT	/12.01/
;
; COPYRIGHT (c)	1983 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	12.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
;+
; **-$SNGSG-CREATE SINGLE SEGMENT DESCRIPTION
;
; THIS ROUTINE IS CALLED TO CREATE A SINGLE SEGMENT TASK
; DESCRIPTION.
;
; INPUTS:
;
;	R5=ADDRESS OF TEMP BUFFER AREA.
;	$INPPT RECORD BLOCK.
;
; OUTPUTS:
;
;	A SINGLE SEGMENT TASK DESCRIPTION IS CREATED.
;-
	PURE.I			; READ-ONLY I-SPACE

$SNGSG::			;
	MOV	$LBMOD,R1	; GET ADDRESS OF MODULE NAME LIST
	BEQ	3$		; IF EQ NONE
	CALL	$CVRL		; CONVERT TO REAL
	MOV	(R0)+,-(SP)	; SAVE NAME OF FIRST MODULE
	MOV	(R0),-(SP)	; ...
3$:				;
	CALL	PRFND		; PARSE-FIND FILE
	MOV	(PC)+,R1	;ASSUME PARSE-FIND FAILURE
	.BYTE	E$R57,S$V2	;FATAL-NO RETURN
	BCS	30$		;IF CS YES
	MOV	$RTSEG,R1	;GET ADDRESS OF ROOT SEGMENT
	CALL	$CVRL		; CONVERT TO REAL ADDRESS
	CALL	$WRMPG		; WRITE MARK PAGE
	MOV	$INIPT,R1	; GET INPUT FILE RECORD BLOCK
	ADD	#S$GNME,R0	; POINT TO SEGMENT NAME
	MOV	F.FNB+N.FNAM(R1),(R0)+ ; SET FIRST PART OF NAME
	MOV	F.FNB+N.FNAM+2(R1),(R0) ; SET SECOND HALF OF NAME
	TST	$LBMOD		; MODULE NAME LIST SPECIFIED?
	BEQ	10$		; IF EQ NO
	MOV	(SP)+,(R0)	; RESET SEGMENT NAME
	MOV	(SP)+,-(R0)	; ...
10$:	CALL	$ALELD		;ALLOCATE AN ELEMENT DESCRIPTOR
	BIT	#SW$DL,E$LSWT(R0) ; DEFAULT LIBRARY ELEMENT SPECIFIED?
	BEQ	14$		; IF EQ NO
	TST	$LIBNM		; ALREADY HAVE ONE?
	BEQ	12$		; IF EQ NO
	MOV	#$LNDES,R2	; GET ADDRESS OF COMMAND LINE BUFFER
	MOV	#<S$V2*400!E$R1>,R1 ; GET ERROR/SEVERITY
	BR	35$		;
12$:				;
	MOV	R1,$LIBNM	; SET ADDRESS OF LIBRARY NAME BLOCK
	MOV	$LBSWT,E$LSWT(R0) ; SET SWITCHES
	BR	20$		;
14$:				;
	MOV	$LBMOD,E$LIDT+2(R0) ; SET VIRTUAL ADDRESS OF MODULE NAME LIST
	MOV	$RTSEG,R0	; GET ADDRESS OF ROOT SEGMENT
	ADD	#<S$GELT/2>,R0	; POINT TO VIRTUAL ADDRESS OF LISTHEAD
	MOV	#E$LNXT,R2	; SET LINK-NEXT OFFSET
	CALL	$LNKVM		; LINK DESCRIPTOR TO LIST
20$:				;++031
	MOV	$INIPT,R0	; GET INPUT FILE RECORD BLOCK
25$:				;
	MOV	$DFINP,R$SWTH(R0) ; SET DEFAULT INPUT FILE SWITCHES
	CALL	$NXTFL		;++031 GET NEXT INPUT FILE
	BCS	40$		;IF CS LOGICAL EOF
	CALL	PRFND		; PARSE-FIND FILE
	BCC	10$		;IF CC OKAY
	MOV	(PC)+,R1	;PARSE-FIND FAILURE
	.BYTE	E$R57,S$V1	;DIAGNOSTIC
30$:	MOV	R$NAME(R0),R2	;GET ADDRESS OF NAME STRING
35$:				;
	CALL	$ERMSG		;OUTPUT ERROR MESSAGE
	BR	20$		;TRY FOR ANOTHER FILE
40$:	RETURN			;

;
; ESTABLISH DEFAULT FOR LIBRARY FILE (IF REQUESTED), PARSE/FIND
; THE FILE.
;

PRFND:				;
	MOV	$INIPT,R0	; GET INPUT FILE RECORD BLOCK
	MOV	F.DFNB(R0),-(SP) ; SAVE DEFAULT NAMEBLOCK
	BIT	#SW$LB,R$SWTH(R0) ; LIBRARY FILE?
	BEQ	10$		; IF EQ NO
	MOV	#$LIBNB,F.DFNB(R0) ; REPLACE NAMEBLOCK POINTER
10$:				;
	CALL	$PRFND		; PARSE-FIND THE FILE
	MOV	(SP)+,F.DFNB(R0) ; REPLACE NAMEBLOCK
	RETURN			;


	.END
