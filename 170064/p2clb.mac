	.TITLE	P2CLB
	.IDENT	/03.04/
;
; COPYRIGHT (c)	1983,1991 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; J.A. KASSON 21-AUG-80
;
; MODIFIED FOR RSX-11M/M-PLUS V4.0/V2.0 BY:
;
;	C. B. PETROVIC
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	03.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;	J. M. SALMAN	12-MAY-82	03.02
;		JMS047		ALLOW THE FIRST LIBRARY IN A CLUSTER
;				TO BE OVERLAID WITH A NON-NULL ROOT.
;				ALSO CHANGE CLUSTER TABLE OFFSETS FROM
;				CL$XXX TO C$LXXX.
;
;	P. K. M. WEISS	23-OCT-84	03.03
;		PKW072		ADD LOGICAL NAME SUPPORT
;
;	C. M. KATZ	23-APR-91	03.04
;		CMK001		ADD RSTS CONDITIONAL CODE
;
; MACRO LIBRARY CALLS
;

	.IF	NDF,R$RSTS
	.MCALL	CSI$,CSI$SW,CSI$SV,CSI$ND,CSI$1,CSI$4
	CSI$
	.IFF
	.MCALL	CSI$,CSI$SW,CSI$SV,CSI$ND,CSI$1,CSI$2
	CSI$
	.ENDC

;
; LOCAL DATA
;
; DEFAULT LIBRARY STRING
;

	.PSECT	LBR$D,RO,D,GBL

LBDEV:	.ASCII	/LB/		;DEVICE
LBDVE:				; REF LABEL
	.IF	NDF,R$RSTS
LBDIR:	.ASCII	/[1,1]/		; DIRECTORY
	.IFF
LBDIR:	.ASCII	//		; RSTS LB 
	.ENDC
LBDRE:				; REF. LABEL
	.EVEN

;
; GLOBAL DATA
;
	IMPURE			; READ/WRITE D-SPACE

$CLWND::.BLKW	1		; MAXIMUM NUMBER OF WINDOWS NEEDED FOR CLUSTER


;+
; **-$CLSLB-PROCESS CLUSTER TABLE
;
; THIS ROUTINE IS CALLED BY THE PHASE 2 OPTION PROCESSOR
; TO PROCESS THE PREVIOUSLY CREATED CLUSTER TABLE. IT PRODUCES
; A FILE DESCRIPTOR THAT IS USED BY $LIBR TO PROCESS THE
; LIBRARY/COMMON REQUEST.
;
;-
	PURE.I			; READ-ONLY I-SPACE

$CLSLB::			;
	CALL	$SAVAL		; SAVE ALL REGISTERS
	MOV	$CURCL,R4	; GET ADDRESS OF CURRENT CLUSTER
	MOV	#$PARM,R5	; GET ADDRESS OF PARAMETER BUFFER
	MOV	R5,-(SP)	; SAVE PARAMETER BUFFER ADDRESS
	MOV	R5,R2		; COPY ADDRESS OF PARAMETER LIST
	MOVB	C$LCNT(R4),R3	; GET MAXIMUM NUMBER OF LIBS. IN CLUSTER

	MOV	#C.SIZE/2+2,R1	; SET SIZE OF DESCRIPTOR PLUS SWITCH WORDS
10$:				;
	CLR	(R2)+		; CLEAR DESCRIPTOR
	SOB	R1,10$		; LOOP
	MOV	#LBDEV,C.DEVD+2(R5)	; SET DEFAULT DEVICE STRING DESCRIPTOR
	MOV	#<LBDVE-LBDEV>,C.DEVD(R5) ;
	MOV	#LBDIR,C.DIRD+2(R5) ; SET DEFAULT DIRECTORY STRING DESCR.
	MOV	#<LBDRE-LBDIR>,C.DIRD(R5) ; ...
	MOVB	C$LAPR(R4),C.SIZE+2(R5) ; SET APR
	TSTB	C$LAPR(R4)	; IS THIS A DEFAULT APR REQUEST?
	BPL	15$		; IF PL, NO...ONE WAS SPECIFIED
	BIS	#100000,C.SIZE+2(R5) ; SIGNAL A DEFAULT REQUEST
15$:
	MOVB	C$LACC(R4),C.SIZE+1(R5) ; SET ACCESS TYPE
	MOV	#$CLNME,-(SP)	; GET STORAGE ADDRESS FOR FILENAME
	MOV	(SP),C.FILD+2(R5) ; SET FILENAME DESCRIPTOR
	ADD	#C$LNME,R4	; POINT TO FIRST LIBRARY NAME
	CLR	-(SP)		; THE SIZE OF LARGEST LIBRARY STORAGE
20$:
	MOV	(R4)+,R1	; GET FIRST HALF OF NAME
	MOV	2(SP),R0		; GET STORE ADDRESS
	CALL	$C5TA		; CONVERT NAME TO ASCII
	MOV	(R4)+,R1	; GET SECOND HALF
	CALL	$C5TA		;
	MOV	2(SP),R1	; GET ADDRESS OF ASCII NAME
	MOV	R1,R0		; SAVE START OF NAME
	MOV	#7,R2		; MAX LOOP COUNTER
40$:
	DEC	R2		; MORE CHARACTERS?
	BEQ	45$		; IF EQ NO
	CMPB	#40,(R1)+	; DETERMINE LENGTH OF NAME
	BNE	40$		;
	DEC	R1		;
45$:
	SUB	R0,R1		; CALCULATE LENGTH OF NAME STRING
50$:				;
	MOV	R1,C.FILD(R5)	; SET LENGTH OF STRING
	CALL	$LIBR		; PROCESS RESIDENT LIBRARY/COMMON REQUEST
	CMP	(R5),(SP)	; IS THIS LIBRARY LARGER ?
	BLE	60$		; IF LE NO
	MOV	(R5),(SP)	; YES - REPLACE SO IT NOW THE LARGEST
60$:
	MOV	4(SP),R5	; RESTORE PARAMETER BUFFER ADDRESS
	DEC	R3		; MORE LIBRARIES IN CLUSTER?
	BNE	20$		; IF NE PROCESS NEXT LIBRARY
100$:
	MOV	$CURCL,R4	; GET ADDRESS OF CLUSTER TABLS
	MOVB	(SP)+,C$LMSK(R4) ; SAVE SIZE OF LARGEST LIBRARY
	CMP	(SP)+,(SP)+	; CLEAN STACK
	CLR	$CURCL		; CLEAR CURRENT CLUSTER POINTER
	ADD	$CLWND,$MXWND	; WINDOWS NEEDED FOR CLUSTER
	RETURN			; EXIT



	.END
