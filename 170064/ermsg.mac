	.TITLE	ERMSG
	.IDENT	/32.12r/
;
; COPYRIGHT (c)	1990,1991 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; D.N. CUTLER 16-OCT-72
;
;
;
; MODIFIED FOR RSX-11M/M-PLUS V4.1/V2.1 BY:
;
;	C. B. PETROVIC
;	J. M. SALMAN
;
;
; MODIFIED BY:
;
;
;	C. B. PETROVIC	14-NOV-86	32.08
;		CBP200	ADD 'RNDSEG' OPTION
;
;	L. M. PETERSON	3-FEB-87	32.09
;		LMP078		ADD NEW ERROR MESSAGE ABOUT INCOMPATIBLE
;				SYSLIB (SINCE M+ 4.0 TKB REQUIRES M+ 4.0
;				SYSLIB)
;
; MODIFIED FOR RSX-11M-PLUS AND MICRO/RSX V4.3 BY:
;
;	L. M. PETERSON	28-FEB-89	32.10	LMP131
;		ALLOW TASKS WITH (TASK)MEMORY RESIDENT OVERLAYS TO BE 
;		EXTENDED (WITH THE $EXTM DIRECTIVE)
;
;	L. M. PETERSON	12-OCT-89	32.11	LMP140A
;		MODIFY ERROR MESSAGE TO REFLECT CHANGES TO CSI$
;
; MODIFIED FOR RSX-11M-PLUS AND MICRO/RSX V4.4 BY:
;
;	L. M. PETERSON	21-JUN-90	32.12	LMP148
;		ADD ERROR MESSAGES FOR TURBO TKB (PERFORMANCE IMPROVEMENT
;		VIA FAST MAPPED VSECT VERSUS NORMAL DISK WORKFILE)
;
; MODIFIED FOR RSTS/E V10.1 BY:
;
;	C. M. KATZ	19-JUN-91	32.12r	CMK001
;		ADD RSTS CONDITIONAL CODE

; ERROR MESSAGE ROUTINE      
;
; EQUATED SYMBOLS
;

MXBF=0				; INITIAL SIZE OF TEMP BUFFER
M$SG1==55.
S$V0==0				;SEV 0=DIAGNOSTIC MESSAGE
S$V1==1				;SEV 1=DIAG IF TERM IN/FATAL IF NOT
S$V2==2				;SEV 2=FATAL ERROR

;
; MACRO LIBRARY CALLS
;

	.IF	NDF	R$$11M

	.MCALL	CLOSE$,DIR$,PUT$,RCML$

	.IFF

	.MCALL	CLOSE$,DIR$,QIO$,QIOSY$,RCML$,WTSE$S
	.MCALL	QIOW$

	.ENDC

;
; LOCAL MACROS
;
; ERROR MESSAGE DEFINITION
;
; ERM NUM,FORMAT
;
; WHERE:
;
;	NUM=ERROR NUMBER.
;	SELECT=PRINT/DON'T PRINT BIT. IF = 0, PRINT, IF = 1, DON'T PRINT
;	FORMAT=ERROR MESSAGE FORMAT STATEMENT.
;

	.MACRO	ERM NUM,SELECT,FORMAT
	.IF	B	SELECT
	FLAG = 0
	.IFF
	FLAG = SELECT'
	.ENDC
E$R'NUM==<FLAG*200> + NUM'.
E$RMAX==NUM'.
	.NCHR	SZ,<FORMAT>
	.IF	GT	SZ-MXBF
MXBF=SZ
	.ENDC
	.IF	LE	E$RMAX-M$SG1
	.PSECT	ETX1$D,RO,D,GBL
	.IFF
	.PSECT	ETX2$D,RO,D,GBL
	.ENDC
NN=.
	.ENABL	LC
	.ASCIZ	"FORMAT"
	.PSECT	EPT$D,RO,D,GBL
.=$MSG+<2*NUM'.>
	.WORD	NN
	IMPURE			; READ-ONLY D-SPACE
	.ENDM

;
; LOCAL DATA
;
	IMPURE			; READ/WRITE D-SPACE

$ARGBK::.BLKW	3		; LOCAL ARGUMENT BLOCK

	PURE.D			; READ-ONLY D-SPACE

	.ENABL	LC

	.NLIST	BEX		; SAVE SOME PAPER AND SPACE

ABMSG:	.ASCII	/TKB -- *FATAL*-Run aborted/;ABORT MESSAGE
ABMSE:				;

	.PSECT	EPT$D,RO,D,GBL

$MSG::				; REF. LABEL

;
; ERROR MESSAGES
;




	.ENABL	LC

	ERM 0,0,^/Illegal Get Command Line error code%2N/
	ERM 1,0,^\Command syntax error%2N%VA%2N\
	ERM 2,0,^\Required input file missing%2N\
	ERM 3,0,^\Illegal switch or filespec%2N%VA%2N\
	ERM 4,0,^\No dynamic storage available%2N\
	ERM 5,0,^/Illegal error-severity code %P %P %P%2N/
	ERM 6,0,^\Command I/O error%2N\
	ERM 7,0,^\Indirect file open failure%2N%VA%2N\
	ERM 8,0,^\Indirect command syntax error%2N%VA%2N\
	ERM 9,0,^\Indirect file depth exceeded%2N%VA%2N\
	ERM 10,0,^\I/O error on input file %X%2N\
	ERM 11,0,^/Open failure on file %X%2N/
	ERM 12,0,^/Search stack overflow on segment %2R%2N/
	ERM 13,0,^/Pass control stack overflow at segment %2R%2N/
	ERM 14,0,^/File %X has illegal format%2N/
	ERM 15,0,^\Module %2R ambiguously defines P-section %2R%2N\
	ERM 16,1,^\Module %2R multiply defines P-section %2R%2N\
	ERM 17,0,^/Module %2R multiply defines xfr addr in seg %2R%2N/
	ERM 18,0,^/Module %2R illegally defines xfr addr %2R %P%2N/
	ERM 19,0,^/P-section %2R has overflowed%2N/
	ERM 20,0,^\Module %2R ambiguously defines symbol %2R%2N\
	ERM 21,0,^\Module %2R multiply defines symbol %2R%2N\
	ERM 22,0,^\Insufficient APRs available to map read-only root%2N\
	ERM 23,0,^\Segment %2R has address overflow: allocation deleted%2N\
	ERM 24,0,^/Allocation failure on file %X%2N/
	ERM 25,0,^\I/O error on output file %X%2N\
	ERM 26,0,^/Load addr out of range in module %2R%2N/
	ERM 27,0,^/Truncation error in module %2R%2N/
	ERM 28,1,^\%D undefined symbols segment %2R%2N\
	ERM 29,0,^/Invalid keyword identifier%2N%VA%2N/
	ERM 30,0,^\Option syntax error%2N%VA%2N\
	ERM 31,0,^/Too many parameters%2N%VA%2N/
	ERM 32,0,^/Illegal multiple parameter sets%2N%VA%2N/
	ERM 33,0,^/Insufficient parameters%2N%VA%2N/
	ERM 34,0,^/Task has illegal memory limits%2N/
	ERM 35,0,^/Overlay directive has no operands%2N%VA%2N/
	ERM 36,0,^/Illegal overlay directive%2N%VA%2N/
	ERM 37,0,^/Overlay directive syntax error%2N%VA%2N/
	ERM 38,0,^/Root segment is multiply defined%2N%VA%2N/
	ERM 39,0,^/Label or name is multiply defined%2N%VA%2N/
	ERM 40,0,^/No root segment specified%2N/
	ERM 41,0,^/Blank P-section name is illegal%2N%VA%2N/
	ERM 42,0,^\Illegal P-section/segment attribute%2N%VA%2N\
	ERM 43,0,^/Illegal overlay description operator%2N%VA%2N/
	ERM 44,0,^\Too many nested .ROOT/.FCTR directives%2N%VA%2N\
	ERM 45,0,^\Too many parentheses levels%2N%VA%2N\
	ERM 46,0,^\Unbalanced parentheses%2N%VA%2N\

	.IF NDF	R$$11M

	ERM 47,0,^/Illegal base or top address offset %D%2N/

	.ENDC

	ERM 48,0,^/Illegal logical unit number%2N%VA%2N/
	ERM 49,0,^/Illegal number of logical units%2N%VA%2N/

	.IF NDF	R$$11M

	ERRM 51,0,^/Illegal base or top boundary value%2N%VA%2N/
	ERRM 52,0,^/Illegal pool usage number specified%2N%VA%2N/

	.ENDC

	ERM 53,0,^/Illegal default priority specified%2N%VA%2N/
	ERM 54,0,^/Illegal ODT or task vector size%2N/
	ERM 55,0,^\Illegal filename%2N%VA%2N\
	ERM 56,0,^\Illegal device/volume%2N%VA%2N\
	ERM 57,0,^\Lookup failure on file %X%2N\
	ERM 58,0,^\Illegal directory%2N%VA%2N\
	ERM 59,0,^\Incompatable reference to library P-section %2R%2N\
	ERM 60,0,^\Illegal reference to library P-section %2R%2N\
	ERM 61,0,^\Resident library memory allocation conflict%2N%VA%2N\
	ERM 62,0,^\Lookup failure resident library file - %X%2N\
	ERM 64,0,^\Illegal partition/common block specified%2N%VA%2N\
	ERM 65,0,^\No memory available for library %2R%2N\
	ERM 66,0,^\PIC libraries may not reference other libraries%N%VA\
	ERM 67,0,^\Illegal APR reservation%N%VA\
	ERM 68,0,^\I/O error library image file%N%VA\
	ERM 70,0,^\Required partition not specified%2N\
	ERM 71,0,^\Invalid APR reservation%N%VA\
	ERM 72,0,^\Complex relocation error-divide by zero module %2R%2N\
	ERM 73,0,^\Work file I/O error%2N\
	ERM 74,0,^\Lookup failure on system library file%2N\
	ERM 75,0,^\Unable to open work file%2N\
	ERM 76,0,^\No virtual memory storage available%2N\
	ERM 77,0,^\Module %2R not in library%2N\
	ERM 78,0,^\Incorrect library module specification%N%VA%2N\
	ERM 79,0,^\Library file %X has incorrect format%2N\
	ERM 80,0,^\Resident library has incorrect address alignment%2N%VA%2N\
	ERM 81,0,^\Partition %2R has illegal memory limits%2N\
	ERM 82,0,^\Invalid partition/common block specified%2N%VA%2N\
	ERM 83,0,^\Task build aborted via request%2N%VA%2N\
	ERM 84,0,^\Disk image core allocation too large%2N%VA%2N\
	ERM 85,0,^\Invalid window block specification%2N%VA%2N\
	ERM 86,0,^\Task requires too many window blocks%2N\
	ERM 87,0,^\Task has illegal physical memory limits%N%P %P %P%2N\
	ERM 88,0,^\Library references overlaid library%2N%VA%2N\
	ERM 89,0,^\Task image file %X is non-contiguous%2N\
	ERM 90,0,^\Virtual section has illegal address limits%2N%VA%2N\
	ERM 91,0,^\File %X attempted to store data in virtual section%2N\
	ERM 92,0,^\Resident library mapped array allocation too large%2N%VA%2N\
	ERM 93,0,^\Invalid reference to mapped array by module%2R%2N\

	ERM 94,0,^\End of file reached before .END in  %X%2N\
	ERM 96,0,^\Symbol %2R not found for patch %2N\
	ERM 97,0,^\Segment %2R not found for patch %2N\
	ERM 98,0,^\Supervisor mode completion routine is undefined %2N\
	ERM 99,0,^\Library not built as a supervisor mode library%N%VA%2N\
	ERM 100,0,^\Supervisor-mode library reference error%N%VA%2N\
	ERM 101,0,^\Illegal system size specified %2N\
	ERM 102,0,^\Conflicting base addresses in cluster library %2N\
	ERM 103,0,^\Library %2R not found in any cluster%2N\
	ERM 104,0,^\Illegal cluster configuration %2N\
	ERM 105,0,^\Cluster library element %2R does not have null root%2N\
	ERM 106,0,^\Module %2R contains incompatible autoload vectors%2N\
	ERM 107,0,^\Cluster library element %2R is not resident overlaid%2N\
	ERM 108,0,^\Segment not found to address round%2N%VA%2N\
	ERM 109,0,^\Library build not requested - ignoring option%2N%VA%2N\

	ERM 110,0,^\Incompatible OTS module%2N\
	.IF	NDF,R$RSTS
	ERM 111,0,^\Insufficient APRs available to allow task extension %2N\
	.IFF
	ERM	111,0,^\Only one HISEG may be specified%2N\	;++RSTS CMK001
	.ENDC
	ERM 112,0,^\VSECT fast mapping unavailable %2N\				;LMP148

;
; REDEFINE ERROR MESSAGE MACRO TO FREE UP MACRO STORAGE
;

	.MACRO	ERM	NUM,FORMAT
	.ENDM


	IMPURE			; READ/WRITE D-SPACE

	.IF	DF	R$$11M

;
; DEFINE QIO DPB PARAMETERS
;

	QIOSY$			;

;
; QIO DPB FOR ERROR MESSAGE OUTPUT
;

CODPB:	QIOW$	IO.WVB,2,2,,COSTS,,<0,0,40,0,0,0>

;
; CONSOLE OUTPUT I/O STATUS DOUBLE WORD
;

COSTS:	.BLKW	2

	.ENDC

;+
; **-$ERMSG-ERROR MESSAGE ROUTINE
;
; THIS ROUTINE IS CALLED TO OUTPUT AN ERROR MESSAGE. THE SEVERITY OF
; THE ERROR IS USED TO SELECT A PREFIX THAT IS TO BE OUTPUT WITH THE
; MESSAGE. THE ERROR NUMBER SPECIFIES AN ERROR FORMAT WHICH IS PASSED
; TO $EDMSG TO EDIT THE ERROR MESSAGE. THE RESULTANT ERROR MESSAGE IS
; THEN OUTPUT USING THE ROUTINE ERROR$. IF THE SEVERITY OF THE ERROR
; IS 2, AB$RT IS SET, OR THE SEVERITY OF THE ERROR IS 1 AND THE INPUT IS
; NOT COMING FROM A TERMINAL, THEN THE CURRENT BUILD IS TERMINATED. ELSE
; A RETURN TO THE CALLER IS EXECUTED.
;
; INPUTS:
;
;	R1=ERROR/SEVERITY NUMBERS.
;	R2=ARGUMENT BLOCK ADDRESS.
;
; OUTPUTS:
;
;	IF THE SEVERITY OF THE ERROR IS FATAL OR AB$RT IS SET, THEN
;	THE CURRENT BUILD IS TERMINATED BY CLOSING ALL OPEN FILES AND
;	JUMPING TO THE RESTART ADDRESS IN THE ROOT SEGMENT.
;
;	CARRY IS SET IF A RETURN TO THE CALLER IS MADE
;
;-
	PURE.I			; READ-ONLY I-SPACE

$ERMSG::SAVRG			;SAVE NONVOLITILE REGISTERS
	BIT	#NO$DIA,$SWOVR	; DIAGNOSTIC MESSAGES WANTED?
	BEQ	3$		; IF EQ YES
	MOV	R1,R3		; COPY THE ERROR/SEVERITY CODE
	CLRB	R3		; WIPE OUT THE ERROR NUMBER
	SWAB	R3		; AND SET THE SEVERITY CODE
				; NOTE ** ALL THIS IS NEEDED IF AN ERROR
				; MESSAGE IS SUPRESSED, SINCE WE KEEP TRACK
				; OF ALL ERRORS ENCOUNTERED....
	TSTB	R1		; NOW, IS THE "DON'T PRINT" BIT SET?
	BMI	4$		; IF MI, YES...DON'T PRINT THE MESSAGE
3$:
	BICB	#200,R1		; CLEAR THE "DON'T PRINT" BIT FOR $PRCER
				; OTHERWISE IT'LL GET CONFUSED COMPUTING THE
				; ERROR MESSAGE STRING ADDRESS.
	CALL	$PRCER		; GET UNFORMATTED TEXT
	CALL	$EDMSG		; FORMAT OUTPUT
	MOV	R1,R2		; COPY BYTE COUNT
	MOV	#$OUTBF,R1	; GET BUFFER ADDRESS
	CALL	$PUTCO		; OUTPUT MESSAGE
	BCS	10$		; IF C/S LEAVE NOW
4$:
	BIT	#AB$RT,$SWTCH	; ABORT ON ERROR?
	BEQ	5$		; IF EQ NO
	DEC	$ERRCT		; DECREMENT ERROR COUNT
	BLE	10$		; IF LE ENFORCE ABORT SWITCH NOW
5$:				;
	CMP	R3,#S$V2	; FATAL ERROR?
	BHIS	10$		; IF HIS YES
	CMP	$EXSTS,#EX$ERR	; SEEN A WORSE ERROR?
	BHIS	7$		; IF HIS YES
	MOV	#EX$ERR,$EXSTS	; SET EXIT STATUS
	BIT	#NO$DIA,$SWOVR	; ARE WE SUPPRESSING DIAGNOSTIC MESSAGES
	BEQ	7$		; IF EQ, NO...
	MOV	#EX$SUC,$EXSTS	; IF NE, YES...SET SUCCESS STATUS
7$:
	SEC			; SET C-BIT FOR ERROR
	RETURN			;
10$:				;
	MOV	#EX$SEV,$EXSTS	; SET EXIT STATUS
	CALL	$POPCL		;
	CALL	$CMLCL		; RESET COMMAND LINE INPUT
	BIT	#AB$RT,$SWTCH	; ABORT ON ERROR?
	BEQ	15$		; IF EQ NO
	TST	$ERRCT		; TIME TO ENFORCE EXIT?
	BLE	20$		; IF LE YES
15$:				;
	JMP	$RSTRT		; RESTART
20$:				;
	MOV	#ABMSG,R1	; GET BUFFER ADDRESS
	MOV	#<ABMSE-ABMSG>,R2 ; BYTE COUNT
	CALL	$PUTCO		; OUTPUT MESSAGE
	JMP	$QUIT		; EXIT

;
; SUBROUTINE TO ISSUE A MESSAGE TO DEVICE 'CO'
;
; INPUTS:
;	R1: BUFFER ADDRESS
;	R2: BYTE COUNT
;
; OUTPUTS:
;
;	C-CLEAR: SUCCESS, MESSAGE IS PRINTED ON DEVICE 'CO'
;
;	C-SET: REQUEST FAILED
;

$PUTCO::

	.IF	NDF	R$$11M

	PUT$	$CMOPT,R1,R2
	RETURN

	.IFF

	MOV	#<CODPB+Q.IOPL>,R0 ; POINT TO DPB PARAMETERS
	MOV	R1,(R0)+	; SET BUFFER ADDRESS
	MOV	R2,(R0)+	; BYTE COUNT
	DIR$	#CODPB		; ISSUE QIO DIRECTIVE
	BCS	10$		; EXIT ON FAILURE
	ROLB	COSTS		; MOVE SIGN BIT TO 'C'
10$:
	RETURN			; EXIT

	.ENDC

	.END
