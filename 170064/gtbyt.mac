	.TITLE	GTBYT
	.IDENT	/04.02/
;
; COPYRIGHT (c)	1983 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; D.N. CUTLER/C. MONIA	21-JAN-74
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	04.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;	J. M. SALMAN	16-JUN-82	04.02
;		JMS050		SUPPORT SELECTIVE INCLUSION OF AUTOLOAD VECTORS
;				USING NEW TKB-GENERATED ISD RECORD.
; ROUTINES TO GET BYTE/WORD FROM INPUT FILE
;
; MACRO LIBRARY CALLS
;

	.MCALL	GET$S,QIOSY$
	QIOSY$

;
; LOCAL DATA
;
	IMPURE			; READ/WRITE D-SPACE

$BYTEA::
BYTEA:	.BLKW	1		;NEXT BYTE IN RECORD ADDRESS
$NBYTE::.BLKW	1		;NUMBER OF BYTES REMAINING IN RECORD

;+
; **-$GTBYT-GET BYTE FROM INPUT FILE
;
; THIS ROUTINE IS CALLED TO GET THE NEXT BYTE FROM THE CURRENT INPUT
; FILE ($INPPT). IF THERE ARE NO MORE BYTES IN THE CURRENT RECORD,
; THEN THE NEXT RECORD IS READ AND THE LENGTH OF THAT RECORD IS RE-
; TURNED TO THE CALLER. ELSE THE NEXT BYTE IS RETURNED TO THE CALLER.
; THUS THE NORMAL USE OF THIS ROUTINE IS TO MAKE A CALL TO OBTAIN THE
; BYTE COUNT AND THEN TO MAKE SUBSEQUENT CALLS TO OBTAIN EACH BYTE.
; BEFORE THE FIRST CALL IS MADE FOR EACH FILE, $NBYTE MUST BE ZEROED
; IN ORDER TO FORCE A READ.
;
; INPUTS:
;
;	$INPPT RECORD BLOCK.
;
; OUTPUTS:
;
;	C=1 IF EOF ENCOUNTERED.
;	C=0 IF NEXT BYTE OR RECORD LENGTH IS OBTAINED.
;		R0=NEXT BYTE OR RECORD LENGTH.
;-
	PURE.I			; READ-ONLY I-SPACE

$GTBYT::DEC	$NBYTE		;ANY MORE BYTES?
	BLT	10$		;IF LT NO
	CLR	R0		;CLEAR R0 AND CARRY
	BISB	@BYTEA,R0	;PICK UP NEXT BYTE
	INC	BYTEA		;INCREMENT BYTE ADDRESS
	BR	30$		;EXIT THROUGH COMMON POINT
10$:	MOV	$INPPT,R0	;GET INPUT FILE RECORD BLOCK
	GET$S	R0		; GET NEXT RECORD
	BCC	20$		;IF CC OKAY
	CMPB	#IE.EOF,F.ERR(R0);EOF?
	SEC			;ASSUME EOF
	BEQ	30$		;IF EQ YES
	MOV	R$NAME(R0),R2	;GET ADDRESS OF NAME STRING
	MOV	(PC)+,R1	;GET ERROR/SEVERITY
	.BYTE	E$R10,S$V2	;FATAL
	CALL	$ERMSG		;OUTPUT ERROR MESSAGE
20$:	MOV	F.NRBD+2(R0),BYTEA;SET ADDRESS OF NEXT BYTE
	MOV	F.NRBD(R0),R0	;GET LENGTH OF RECORD
	MOV	R0,$NBYTE	;SET NUMBER OF BYTES
30$:	RETURN			;

;+
; **-$GTWRD-GET WORD FROM INPUT FILE
;
; THIS ROUTINE IS CALLED TO GET THE NEXT TWO BYTES FROM THE CURRENT
; INPUT FILE ($INPPT). $GTBYT IS CALLED TWICE TO OBTAIN THE TWO BYTES
; AND THE RESULTANT WORD IS RETURNED TO THE CALLER.
;
; INPUTS:
;
;	NONE.
;
; OUTPUTS:
;
;	R0=NEXT TWO BYTES FROM THE INPUT FILE.
;-

$GTWRD::CALL	$GTBYT		;GET FIRST BYTE
	MOV	R0,-(SP)	;SAVE IT ON STACK
	CALL	$GTBYT		;GET SECOND BYTE
	SWAB	R0		;SWAP HALVES
	BIS	(SP)+,R0	;MERGE BYTES
	RETURN			;

	.END
