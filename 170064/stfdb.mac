	.TITLE	STFDB
	.IDENT	/03.01/
;
; COPYRIGHT (c)	1983 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE IS FURNISHED  UNDER A LICENSE AND MAY BE USED OR
; COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
; C. MONIA 04-MAR-74
;
; MODIFIED BY:
;
;	C. B. PETROVIC	26-FEB-82	03.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
;
; ROUTINES TO MANAGE OVERLAYED I/O DATA BASE.
;
; MACRO LIBRARY CALLS
;

	.MCALL	CLOSE$

;
; LOCAL DATA
;
; STACK OF RESIDENT FDB'S
;
	IMPURE			; READ/WRITE D-SPACE

	.BLKW	5
RCBPT:	.WORD	.
;
;+
; **-$POPCL-CLOSE ALL FDB'S ON THE RESIDENT FDB LIST
;
; INPUTS:
;	RCBPT=POINTER TO STACK OF RESIDENT FDB'S
;
; OUTPUTS:
;
;	A POP CLOSE IS PERFORMED ON EACH RESIDENT FDB
;-
	PURE.I			; READ-ONLY I-SPACE
;

$POPCL::			;
	MOV	#RCBPT,R0	; GET ADDRESS OF RECORD BLOCK LIST
	CMP	(R0),R0		; LIST EMPTY NOW?
	BEQ	20$		; IF EQ YES
	MOV	@(R0)+,-(SP)	; GET ADDRESS OF RECORD BLOCK
	ADD	#2,-(R0)	; POP ENTRY FROM LIST
	CMP	(SP),$ODLPT	; ODL FILE?
	BNE	10$		; IF NE NO
	CALL	$CLSOD		; CLOSE ODL FILE, RESET GCML BLOCK
10$:				;
	CLOSE$	(SP)+		; CLOSE FILE
	BR	$POPCL		; CONTINUE LIST PROCESSING
20$:				;
	RETURN			;
;
;+
; **-$STBLK-SETUP FCS BLOCK BUFFER STORAGE REGION
;
; INPUTS:
;
;	R0=ADDRESS OF BLOCK BUFFER POOL
;
;	BUFFER POOL SETUP AS FOLLOWS:
;
;	POOL: .WORD N
;	      .BLKW N
;
;
; OUTPUTS:
;
;	FILE STORAGE REGION 2 IS SETUP WITH A LISTHEAD POINTING TO THE
;	ABOVE POOL IN THE FORMAT REQUIRED BY $RQCB, $RLCB STORAGE
;	ALLOCATION AND DEALLOCATION ROUTINES.
;
;	***NOTE***
;
; NO FILES MAY BE OPEN WHEN THIS ROUTINE IS CALLED
;
;-
;

$STBLK::			;
	MOV	@#.FSRPT,R1	; GET FSR2 ADDRESS
	MOV	(R0)+,R2	; GET POOL SIZE
	MOV	R0,(R1)+	; SET BUFFER POINTER
	CLR	(R1)		; CLEAR SECOND WORD OF LISTHEAD
	CLR	(R0)+		; CLEAR LINK TO NEXT
	MOV	R2,(R0)		; SET BLOCK SIZE
	RETURN			;

;
;+
; **-$STFNB-SETUP THE NAMEBLOCK PORTION OF THE FDB
;
; INPUTS:
;
;	R0=ADDRESS OF ELEMENT DESCRIPTOR
;	R1=RECORD BLOCK ADDRESS
;
; OUTPUTS:
;
;	THE NAME BLOCK AND FILE SWITCH WORD ARE
;	COPIED INTO THE APPROPRIATE LOCATIONS WITH-
;	IN THE RECORD BLOCK
;
;		*** NOTE ***
;
;	IF E$LNUM IS -2 THEN THE DIRECTORY I/D
;	IS SETUP INSTEAD OF THE FILE I/D.
;-
;

$STFNB::			;
	MOV	E$LNUM(R0),-(SP) ; SAVE DIRECTORY INDICATOR
	CALL	STFN		; SETUP FILENAME PORTION OF FNB
	ADD	#F.FNB+N.FID,R1	; POINT TO FILE I/D
	CMP	(SP)+,#-2	; TEST DIRECTORY INDICATOR
	BNE	10$		; IF NE SETUP FILE I/D
	ADD	#<N.DID-N.FID>,R1 ; POINT TO DIRECTORY I/D
10$:				;
	MOV	(R0)+,(R1)+	; SETUP I/D
	MOV	(R0)+,(R1)+	;
	MOV	(R0)+,(R1)+	;
	RETURN			;

;
; SETUP THE FILENAME PORTION OF THE FDB
; LEAVE R0 POINTING TO I/D.
;

STFN:				;
	MOV	E$LSWT(R0),R$SWTH(R1) ; SET FILE SWITCH WORD
	ADD	#E$LMND,R0	; POINT TO MODULE NAME TABLE
	MOV	(R0)+,F.FNB+N.UNIT(R1) ; SET UNIT NUMBER
	MOV	(R0)+,F.FNB+N.DVNM(R1) ; SET DEVICE NAME
	MOV	(R0)+,F.FNB+N.FNAM(R1) ; SET FILE NAME
	MOV	(R0)+,F.FNB+N.FNAM+2(R1) ;
	MOV	(R0)+,F.FNB+N.FNAM+4(R1) ;
	MOV	(R0)+,F.FNB+N.FTYP(R1) ; SET FILE TYPE
	MOV	(R0)+,F.FNB+N.FVER(R1) ; SET FILE VERSION
	RETURN			;
;
;+
; **-$STRCB-SETUP RECORD BLOCK
; **-$STFDB-RECORD FDB ADDRESS
;
;	THIS ROUTINE IS CALLED TO SETUP A RECORD BLOCK FOR
; A FILE TO BE OPENED. THE BLOCK ADDRESS IS PUSHED ONTO
; A LIST OF OPEN FDB'S SO THAT FILES MAY BE PROPERLY
; CLOSED WHEN A TASK BUILD IS ABORTED. OPTIONALLY, AN FCS
; BLOCK BUFFER POOL IS ESTABLISHED AND THE
; FILENAME BLOCK IS SETUP. A CO-ROUTINE CALL IS MADE TO
; THE CALLER. ON RETURN, THE RECORD BLOCK ADDRESS IS POP-
; PED FROM THE LIST.
;
; IF $STFDB IS CALLED, ONLY THE RECORD BLOCK ADDRESS IS PUSHED; ALL
; OTHER SETUP OPERATIONS ARE OMITTED.
;
;	IN THE EVENT OF AN ABORT, A POP-CLOSE IS DONE ON
; EACH POINTER IN THE LIST VIA A CALL TO $POPCL.
;
; INPUTS:
;
;	R0=RECORD BLOCK POINTER
;
; OUTPUTS:
;
;	THE NAME BLOCK AND BUFFER POOL ARE SETUP AS REQUIRED
;	THE RECORD BLOCK ADDRESS IS PUSHED ONTO THE LIST OF RESIDENT BLOCKS.
;-

	.ENABL	LSB

$STFDB::			;
	MOV	R0,-(SP)	; COPY FDB ADDRESS
	BR	20$		; PUSH ON RECORD BLOCK LIST

$STRCB::			;
	MOV	R0,-(SP)	; SAVE RECORD BLOCK POINTER
	MOV	@R$NMBK(R0),R1	; GET VIRTUAL ADDRESS OF NAMEBLOCK
	BEQ	10$		; IF EQ NONE
	CALL	$CVRL		; CONVERT TO REAL ADDRESS
	MOV	(SP),R1		; GET ADDRESS OF RECORD BLOCK
	CALL	$STFNB		; SETUP FILENAME BLOCK
10$:				;
	MOV	(SP),R0		; RETRIEVE RECORD BLOCK ADDRESS
	MOV	R$BLKB(R0),R0	; GET ADDRESS OF BLOCK BUFFER
	BEQ	20$		; IF EQ NONE
	CALL	$STBLK		; SETUP BLOCK BUFFER POINTER
20$:				;
	ADD	#-2,RCBPT	; PUSH RECORD BLOCK POINTER
	MOV	(SP)+,@RCBPT	; SAVE BLOCK ADDRESS
	CALL	@(SP)+		; CALL THE CALLER
	ADD	#+2,RCBPT	; POP RECORD BLOCK POINTER
	RETURN			;

	.DSABL	LSB

	.END
