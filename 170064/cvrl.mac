	.IF NDF	W$$KST

	.TITLE	CVRL

	.IFF

	.TITLE	CVRS

	.ENDC
	.IDENT	/02.03/
;
;		COPYRIGHT (c) 1983 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD
;	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE  IS  FURNISHED  UNDER  A LICENSE AND MAY BE USED
; AND  COPIED  ONLY IN  ACCORDANCE WITH THE TERMS OF SUCH LICENSE
; AND WITH  THE INCLUSION  OF THE ABOVE  COPYRIGHT  NOTICE.  THIS
; SOFTWARE  OR ANY OTHER  COPIES  THEREOF, MAY NOT BE PROVIDED OR
; OTHERWISE MADE  AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND
; OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERRED.
;
; THE INFORMATION  IN THIS DOCUMENT IS SUBJECT  TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT  BY  DIGITAL
; EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
;
;
;
; C. MONIA 22-FEB-74
;
;	C. B. PETROVIC	26-FEB-82	02.01
;		CBP039		ADD CORRECT .PSECT DEFINITIONS TO
;				ALLOW TKB TO BE LINKED AS AN I/D TASK.
;
;
;	C. B. PETROVIC	7-NOV-83	08.03
;		CBP114		ADD TRACE OF SELECTED VIRTUAL MEMORY PAGE
;
;
; CONVERT A VIRTUAL ADDRESS TO REAL ADDRESS
;
;+
; **-$CVRL-MAKE VIRTUAL STORE RESIDENT
;
; INPUTS:
;
;	R1=VIRTUAL ADDRESS
;
; OUTPUTS:
;
;	R0=REAL ADDRESS
;
; R1 IS UNCHANGED
;
; THIS ROUTINE IS CALLED TO CONVERT A VIRTUAL ADDRESS INTO
; AN ADDRESS IN REAL MEMORY. THE LIST OF RESIDENT PAGE
; BUFFERS IS CHECKED FIRST. IF THE PAGE IS NOT
; IN MEMORY A BUFFER IS ALLOCATED AND THE PAGE IS READ INTO
; CORE
;
;-
	PURE.I			; READ-ONLY I-SPACE

$CVRL::				;
	SAVRG			; SAVE NON-VOLATILE REGISTERS
	MOV	R1,R5		; COPY VIRTUAL ADDRESS
	SWAB	R5		; POSITION BLOCK NUMBER TO LOW BYTE
	CALL	$FNDPG		; SEARCH FOR PAGE
	BCC	10$		; IF C/C PAGE IN CORE.
	MOV	#P$GSIZ,R1	; GET SIZE OF PAGE BUFFER
	CALL	$ALBLK		; ALLOCATE MEMORY
	MOV	$PAGLS,R4	; GET ADDRESS OF PAGE LIST
	BEQ	5$		; IF EQ NONE
	CLR	R2		; SET FOR MOVB WITH NO EXTEND
	BISB	R5,R2		; GET RELATIVE BLOCK NUMBER
	ASL	R2		; CONVERT TO WORD OFFSET
	ADD	R2,R4		; COMPUTE LIST ADDRESS
	MOV	R0,(R4)		; STORE ADDRESS OF PAGE
5$:				;
	MOVB	R5,P$GBLK(R0)	; SET RELATIVE BLOCK NUMBER
	CALL	$RDPAG		; READ PAGE INTO CORE
	MOV	$PAGHD,P$GNXT(R0) ; LINK OLD FIRST TO NEW FIRST
	MOV	R0,$PAGHD	; SET NEW FIRST
	MOV	$TIME,P$GTIM(R0) ; TIME-STAMP PAGE
	MOV	R5,R1		; RESTORE VIRTUAL ADDRESS
	SWAB	R1		; STRAIGHTEN IT
10$:				;

	.IF DF D$CVRL & D$VMDP

	MOV	$PHASE,$VMPHZ	; SET PHASE NUMBER TO DUMP ON
	MOV	#0,$VMPAG	; SET VIRTUAL PAGE TO DUMP...
	MOV	#0,$VMSEG	; SET TO DUMP ONLY ROOT REFERENCES
	MOV	#0,$VMPAD	; DUMP ONLY THE SELECTED PAGE
	MOV	#$CVRL,$VMIDN	; SET DUMP IDENTIFIER
	CALL	$VMDMP		; SNAPSHOT THE VIRTUAL MEMORY PAGE
	MOV	#-1,$VMPHZ	; RESET PHASE NUMBER 
	MOV	#0,$VMPAG	; RESET VIRTUAL PAGE TO DUMP...
	MOV	#-1,$VMSEG	; RESET DUMP REFERENCES
	MOV	#1,$VMIDN	; RESET DUMP IDENTIFIER

	.ENDC	; D$CVRL & D$VMDP

	CLRB	R5		; CLEAR BLOCK NUMBER
	SWAB	R5		; GET WORD DISPLACEMENT IN LOW BYTE
	ASL	R5		; MAKE BYTE OFFSET
	ADD	R5,R0		; ADD DISPLACEMENT IN BLOCK
	ADD	#P$GHD,R0	; OFFSET PAST HEADER

	.IF DF	W$$KST

	INC	$WRKAC+2	; INCREMENT TOTAL ACCESS COUNT
	BNE	20$		; IF NE NO OVERFLOW
	INC	$WRKAC		; INCREMENT HIGH PART OF COUNT
20$:				;

	.ENDC

	RETURN			;

	.END
