.INCLUDE	/CMN:COMMON.MAC/
.INCLUDE	/CMN:KERNEL.MAC/
.INCLUDE	/INIT:INIPFX.MAC/
TITLE	INIXMC,<RSTS/E INIT - DMC TYPE/ECO CHECKER>,0A,10-MAY-91,FEK

;
;		COPYRIGHT (c) 1985 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	Edit history for INIXMC

;+
;
;			[RSTS V9.2]
;  	FEK  15-Oct-85	Creation
;  001	FEK  07-Feb-86	Don't assume flag word starts clear (in case two
;			devices have the same CSR, via CSR option).
;
;			[RSTS V9.4]
;  002	FEK  30-Dec-86	Keep DMR modem status around, & Begin adding DMP/V
;			checks
;-



.SBTTL	DMC11 Hardware definitions

.MACRO	I.MESS
	TMPORG	XMCTXT
.NLIST	BEX
.ENDM	I.MESS


.DSECT

SEL0:
BSEL0:	.BLKB
BSEL1:	.BLKB
SEL2:
BSEL2:	.BLKB
BSEL3:	.BLKB
SEL4:
BSEL4:	.BLKB
BSEL5:	.BLKB
SEL6:
BSEL6:	.BLKB
BSEL7:	.BLKB

.BSECT

MSTEP:	.BLKB	.
ROMI:	.BLKB	.
ROMO:	.BLKB	.
	.BLKB	.		;LU LOOP
	.BLKB	.		;STEP LU
	.BLKB	.		;CRAM WRITE
MCLR:	.BLKB	.
RUN:	.BLKB	.

DSPDSR	=	021263		;PUT MODEM STATUS IN BSEL3

UNORG

	DEFORG	XMCTXT
	DEFORG	XMLOOK

.SBTTL	Determine which types of DMC this is

;	This routine checks the status of the SW switch on the DMC
;	line unit.  The documentation states that this switch will
;	be set based on the type of unit that is installed.  However
;	the state of that switch, doesn't have any effect on how the
;	unit functions.  Therefore, this routine could improperly
;	identify a unit which has been installed wrong, but that has
;	been working fine, and will continue to work fine.
;
;	Bits in the TYPTBL word
;
;	bit 0	=   1	- remote line unit (DMC)
;	    1	=   2	- local line unit (DMC)
;	    2	=   4	- high (local) micro processor (DMC)
;	    3	=  10	- low (remote) micro processor (DMC)
;	    4   =  20	- DMC/DMR mode (DMR)
;	    5	=  40	- 1 Meg mode (DMR)
;
;	 8-15	=       - Cable type (DMR) (from POKE routine)

XMLOOK::NOP
	MOVB	XM.PKT+PK.MXU,R0	;GET THE MAX NUMBER OF DMC'S
	ASL	R0			; *2
10$:	SUB	#2,R0			;GO TO THE NEXT LOWER UNIT
	BMI	100$			;ALL DONE
	MOV	CSRTBL+XM.CSO(R0),R3	;GET THE CSR OF THIS UNIT
	BEQ	10$			;NONE, GO ONTO THE NEXT ONE
	CLRB	TYPTBL+XM.CSO(R0)	;START WITH NOTHING FOUND	;002
	MOVB	#MCLR,BSEL1(R3)		;DO A MASTER CLEAR		;002
	CLR	(R3)			;AND TURN OFF RUN
	.ASSUME	SEL0 EQ 0
	TST	(R3)			;DID IT TURN OFF?
	BMI	10$			;NO, SO WE CAN'T DO THIS
	.ASSUME	RUN EQ 200
	BIT	BITWRD(R0),XM.TYP	;IS THIS A DMR
	BNE	40$			;  YES, SO DON'T BOTHER WITH THIS
	MOV	#DSPDSR,SEL6(R3)	;GET MODEM STATUS
	MOVB	#MSTEP!ROMI,BSEL1(R3)	;AND STEP THE MICRO ON THAT INSTRUCTION
	MOVB	BSEL3(R3),R1		;SO WE CAN READ THE MODEM STATUS REG
	CMPB	R1,#377			;ANY LINE UNIT AT ALL?
	BEQ	30$			;NO, SO QUIT NOW.
	MOV	#2,R5			;ASSUME LOCAL
	BIT	R5,R1			;IS IT HIGH, OR LOW LINE UNIT
	.ASSUME	ROMI EQ 2
	BNE	20$			; NO, REMOTE (LOW)
	DEC	R5			;WRONG, MAKE IT LOCAL
20$:	BIS	R5,TYPTBL+XM.CSO(R0)	;SET THE M8202 BIT (local)
30$:	CALL	ECOCHK			;NOW, GO CHECK THIS UNITS ECO STATUS
	MOV	TYPTBL+XM.CSO(R0),R5	;GET THE TYPE
	BIT	#14,R5			;DID WE FIND A MICRO TYPE?
	BNE	90$			;YES, SO GO WITH IT.
	BIS	#10,R5			;ASSUME REMOTE MICRO
	BIT	#1,R5			;REMOTE LINE UNIT?
	BNE	35$			;YES, GO WITH IT
	BIC	#10,R5			;NO, SO CLEAR THAT FLAG
	BIT	#2,R5			;LOCAL LINE UNIT?
	BEQ	35$			;NO, SO STOP HERE
	BIS	#4,R5			;SET THE LOCAL MICRO BIT.
35$:	BIS	R5,TYPTBL+XM.CSO(R0)	;GIVE IT OUR BEST GUESS
	BR	90$			;GO DO THE NEXT ONE.

40$:	MOV	#021223,SEL6(R3)	;MOV IBUS 11 , OBUS* 3
	;	001 00 010 1001 0011	;PAGE 3-12 OF KMC PROGRAMMERS MANUAL
	;	S   M   D   A1   A2
	;	S - SOURCE (IBUS REGISTERS)
	;	M - MAR (REMAINS UNCHANGED)
	;	D - DESTINATION (OUTBUS* REGISTERS)
	;	A1- SOURCE (IBUS ADDRESS)
	;	A2- DESTINATION ADDRESS (OBUS* ADDRESS)
	MOVB	#MSTEP!ROMI,BSEL1(R3)	;AND STEP THE MICRO ON THAT INSTRUCTION
	MOVB	BSEL3(R3),R1		;SO WE CAN READ THE IBUS 11 STATUS REG
	CLR	R5			;ASSUME NOT 1 MEG MODE
	BIT	#2,R1			;1 MEG OR NOT 1 MEG
	BEQ	50$			;NOT 1 MEG
	MOV	#40,R5			;THEN SET 1 MEG MODE
50$:	BIT	#4,R1			;DMC OR DMR MODE
	BNE	60$			;DMC MODE
	BIS	#20,R5			;SET THE DMR BIT
60$:	BIS	R5,TYPTBL+XM.CSO(R0)	;SET THE BITS
90$:	MOV	#MCLR*400,(R3)		;RESET THE DEVICE BACK TO NORMAL ;002
	.ASSUME	BSEL1	EQ	1
	BR	10$			;GO BACK FOR THE NEXT ONE.

100$:	RETURN				; ALL DONE, GO BACK TO THE MAIN LINE

GLOBAL	<XM.PKT,BITWRD,CSRTBL,TYPTBL,XM.CSO,XM.TYP>

.SBTTL	Determine the DMP switch settings.

;
;	The TYPTBL entry for the DMP will contain the following:
;
;	bit	value
;	0	Low/High speed select
;	1	Power on boot enable
;	2	Remote load detect enable
;	3	We got some valid information here
;	4-6	mode selection (pg 2-19 DMP tech manual)
;	7	mode enable
;	8-15	tributary #
;

XDLOOK::NOP
	MOV	#XD.PKT,R5		;POINT TO THE XD PACKET
	MOVB	PK.MXU(R5),R0		;GET THE MAX NUMBER OF DMC'S
	ASL	R0			; *2
10$:	SUB	#2,R0			;GO TO THE NEXT LOWER UNIT
	BMI	100$			;ALL DONE
	MOV	CSRTBL+XD.CSO(R0),R3	;GET THE CSR OF THIS UNIT
	BEQ	10$			;NONE, GO ONTO THE NEXT ONE
	MOV	#TYPTBL+XD.CSO,R2	;START WITH NOTHING FOUND
	ADD	R0,R2			;POINT TO THE TYPE TABLE WORD
	CLR	(R2)			;AND START WITH IT CLEAR
	CMP	PK.SIZ(R5),#DMVSZ	;DID WE FIND A DMV, OR DMP?
	BEQ	40$			; DMV, SO DO IT DIFFERENTLY
	CLR	(R3)			;Turn run off
	.ASSUME	SEL0 EQ 0
	TST	(R3)			;DID IT TURN OFF?
	BMI	10$			;NO, SO WE CAN'T FIND THIS STUFF OUT.
	.ASSUME	RUN EQ 200
	MOV	#021343,SEL6(R3)	;MOV IBUS 16 , OBUS* 3
	;	001 00 010 1110 0011	;PAGE 3-12 OF KMC PROGRAMMERS MANUAL
	MOVB	#MSTEP!ROMI,BSEL1(R3)	;AND STEP THE MICRO ON THAT INSTRUCTION
	MOVB	BSEL3(R3),(R2)		;SO WE CAN READ THE IBUS 16 STATUS REG
	BICB	#17,(R2)		;CLEAR OUT THE UNIT # BITS
	MOV	#021323,SEL6(R3)	;MOV IBUS 15 , OBUS* 3
	;	001 00 010 1101 0011	;PAGE 3-12 OF KMC PROGRAMMERS MANUAL
	MOVB	#MSTEP!ROMI,BSEL1(R3)	;AND STEP THE MICRO ON THAT INSTRUCTION
	MOVB	BSEL3(R3),1(R2)		;SO WE CAN READ THE IBUS 15 STATUS REG
	MOV	#021223,SEL6(R3)	;MOV IBUS 11 , OBUS* 3
	;	001 00 010 1001 0011	;PAGE 3-12 OF KMC PROGRAMMERS MANUAL
	MOVB	#MSTEP!ROMI,BSEL1(R3)	;AND STEP THE MICRO ON THAT INSTRUCTION
	MOVB	BSEL3(R3),R1		;SO WE CAN READ THE IBUS 11 STATUS REG
	MOVB	#MCLR,BSEL1(R3)		;RESET THE DEVICE BACK TO NORMAL
	MOV	R1,-(SP)		;SAVE A COPY
	BIC	#^C6,R1			;TRASH ALL BUT BIT 1 & 2
	BIS	R1,(R2)			;STORE THOSE 2 BITS
	MOV	(SP)+,R1		;GET THE ORIGINAL BACK
	BIC	#^C40,R1		;CLEAR ALL BUT BIT 5
	ASH	#-5,R1			;MOVE IT DOWN TO BIT 0
	BIS	#10,R1			;Set the valid flag
	BIS	R1,(R2)			;AND STORE IT AWAY
	BR	10$			;GO BACK FOR THE NEXT ONE.

40$:	BR	10$			;FIGURE OUT THE DMV STUFF

100$:	RETURN

GLOBAL	<XD.PKT,CSRTBL,XD.CSO,TYPTBL,DMVSZ>

.SBTTL	Check the Micro-code for latest ECO level

;	This routine reads out the micro-code from the roms, and
;	compares them with the last ECO'ed roms that went out.  This
;	happened in the late 1970's, and then the device was replaced
;	by DMR's, so there should be no need to change this routine
;	in the future, however, if there is a new DMC rom ECO, this
;	the two copies of the DMC micro-code will need to be updated
;	to reflect the then current micro-code listings.
;
;	This routine expects:
;
;		R3 = The CSR of the unit to check
;
;	and must preserve:
;
;		R0 = The unit number *2
;

ECOCHK:	MOV	R0,-(SP)	;PRESERVE THE UNIT # *2
	CLR	R0		;SET A STARTING ADDRESS
	MOV	#3,R4		;TWO CHANCES TO MATCH MICRO-CODE (2 BITS)
	MOV	#HICOD,R1	;HIGH SPEED MICRO CODE ADDRESS
	MOV	#LOCOD,R2	;LOW SPEED MICRO CODE ADDRESS
10$:	MOVB	#ROMI,BSEL1(R3)	;SET UP FOR A ROMI
	MOV	#100400,-(SP)	;SET THE INSTRUCTION TO USE
	BIS	R0,(SP)		;  AND NOW THE ADDRESS
	MOV	(SP)+,SEL6(R3)	;PUT THE INSTRUCTION IN,
	BISB	#MSTEP!ROMI,BSEL1(R3) ;  AND EXECUTE IT
	MOVB	#ROMO,BSEL1(R3)	;NOW CLEAR THE BITS
	MOV	SEL6(R3),R5	;GET THE MICRO-CODE FROM THAT ADDRESS
	CLRB	BSEL1(R3)	;AND CLEAR THE CSR
	CMP	R5,(R1)+	;MATCH THE HIGH ONE?
	BEQ	20$		; YES, SO CONTINUE	
	BIC	#1,R4		;NOT HIGH SPEED, SO CLEAR THE HIGH SPEED BIT
20$:	CMP	R5,(R2)+	;MATCH THE LOW ONE?
	BEQ	30$		; YES, SO CONTINUE
	BIC	#2,R4		;NOT LOW SPEED SO CLEAR THE LOW SPEED BIT
30$:	TST	R4		;DID EITHER ONE MATCH?
	BEQ	100$		;NEITHER ONE MATCHES, SO QUIT RIGHT NOW
	CMP	R1,#LOCOD	;END OF HIGH CODE?
	BHIS	35$		; YES, SO QUIT EARLY
	.ASSUME LOCOD GT HICOD	;THE LOW TABLE MUST COME AFTER THE HIGH ONE
	INCB	R0		;INC
	BNE	10$		;DIDN'T WRAP YET, SO GO SOME MORE
	ADD	#4000,R0	;  TO WHERE THEY BELONG
	CMP	#20000,R0	;ARE WE DONE YET?
	BNE	10$		;NO, SO GO HIT THE NEXT ADDRESS.
35$:	MOV	(SP)+,R0	;RESTORE THE UNIT # *2
	ROR	R4		;MOVE LOW BIT INTO 'C' BIT
	BCC	40$		;  NOT THE HIGH SPEED
	ROR	R4		;IT BETTER NOT BE BOTH (LOOK AT NEXT BIT)
	BCS	60$		;OH NO, ITS BOTH????
	BIS	#4,TYPTBL+XM.CSO(R0) ;SET THE TYPE BIT (high)
40$:	ROR	R4		;IS IT THE LOW SPEED? (CHECK BIT #1)
	BCC	50$		;  NO
	BIS	#10,TYPTBL+XM.CSO(R0) ;SET THE TYPE BIT (low)
50$:
60$:	RETURN

100$:	MOV	(SP),R0		;GET THE UNIT # * 2
	ASR	R0		; NOW * 1
	MESSAGE <"XM">
	CALLX	DECZER		;AND PRINT IT OUT
	MESSAGE <": is missing ECO's, but will still function."<200>>
	MOV	(SP)+,R0	;RESTORE THE NUMBER # * 2
	RETURN

GLOBAL	<TYPTBL,XM.CSO>

.SBTTL	The High speed micro code listing

;
;	This table comes from Diagnostic CZDMGD0
;	It supports ROM part #'s:
;		23-622A9 to 23-629A9
;

HICOD:	.WORD	63220		;0
	.WORD	63223		;1
	.WORD	63237		;2
	.WORD	63232		;3
	.WORD	61200		;4
	.WORD	61202		;5
	.WORD	3370
	.WORD	63130
	.WORD	76423		;10
	.WORD	63060		;11
	.WORD	101414		;12
	.WORD	100407
	.WORD	3401		;14
	.WORD	63231
	.WORD	10162		;16
	.WORD	626
	.WORD	62234		;20
	.WORD	16403
	.WORD	16402		;22
	.WORD	16406
	.WORD	16407		;24
	.WORD	16401
	.WORD	10210		;26
	.WORD	16455
	.WORD	16472		;30
	.WORD	10067
	.WORD	16471		;32
	.WORD	2471
	.WORD	43236		;34
	.WORD	10022
	.WORD	16424		;36
	.WORD	2424
	.WORD	43235		;40
	.WORD	10240
	.WORD	16642		;42
	.WORD	2642
	.WORD	600		;44
	.WORD	61221
	.WORD	110642		;46
	.WORD	20620
	.WORD	173202		;50
	.WORD	20640
	.WORD	167203		;52
	.WORD	10210
	.WORD	140620		;54
	.WORD	20620		;55
	.WORD	103060		;56
	.WORD	100463
	.WORD	433		;60
	.WORD	60342
	.WORD	101047		;62
	.WORD	123620
	.WORD	113246		;64
	.WORD	23240
	.WORD	60520		;66
	.WORD	103451
	.WORD	10211		;70
	.WORD	140620
	.WORD	60601		;72
	.WORD	103100
	.WORD	123400		;74
	.WORD	1620
	.WORD	117034		;76
	.WORD	100447
	.WORD	2611		;100
	.WORD	100447
	.WORD	123400		;102
	.WORD	103505
	.WORD	114434		;104
	.WORD	60520
	.WORD	103603		;106
	.WORD	120400
	.WORD	1620		;110
	.WORD	103047
	.WORD	2514
	.WORD	100447
	.WORD	123400
	.WORD	102527
	.WORD	2654
	.WORD	102124
	.WORD	1620		;120
	.WORD	2722
	.WORD	102524
	.WORD	2701
	.WORD	60601
	.WORD	102130
	.WORD	100447
	.WORD	102140
	.WORD	2472		;130
	.WORD	500
	.WORD	61260
	.WORD	10177
	.WORD	16402
	.WORD	2400
	.WORD	42233
	.WORD	114474
	.WORD	60721		;140
	.WORD	102130
	.WORD	2472
	.WORD	10017
	.WORD	136500
	.WORD	136520
	.WORD	122560
	.WORD	123000
	.WORD	500		;150
	.WORD	61260
	.WORD	2133
	.WORD	40620
	.WORD	103164
	.WORD	10151
	.WORD	16406
	.WORD	2700
	.WORD	63161		;160
	.WORD	641
	.WORD	3374
	.WORD	110727
	.WORD	3004
	.WORD	63070
	.WORD	10017
	.WORD	731
	.WORD	110463		;170
	.WORD	10154
	.WORD	57310
	.WORD	57231
	.WORD	57235
	.WORD	43237
	.WORD	43232
	.WORD	63170
	.WORD	63161		;200

.SBTTL	The Low speed micro code listing

;
;	This table comes from Diagnostic CZDMGD0
;	It supports ROM part #'s:
;		23-630A9 to 23-637A9
;

LOCOD:	.WORD	63220		;0
	.WORD	63223		;1
	.WORD	63237		;2
	.WORD	63232		;3
	.WORD	61200		;4
	.WORD	61202		;5
	.WORD	3370
	.WORD	63130
	.WORD	76423		;10
	.WORD	63060		;11
	.WORD	101414		;12
	.WORD	100407
	.WORD	3401		;14
	.WORD	63231
	.WORD	10162		;16
	.WORD	626
	.WORD	62234		;20
	.WORD	16403
	.WORD	16402		;22
	.WORD	16406
	.WORD	16407		;24
	.WORD	16401
	.WORD	10210		;26
	.WORD	16455
	.WORD	16461		;30
	.WORD	10067
	.WORD	16471		;32
	.WORD	2471
	.WORD	43236		;34
	.WORD	10022
	.WORD	16424		;36
	.WORD	2424
	.WORD	43235		;40
	.WORD	10240
	.WORD	16642		;42
	.WORD	2642
	.WORD	600		;44
	.WORD	61221
	.WORD	110642		;46
	.WORD	20620
	.WORD	173202		;50
	.WORD	20640
	.WORD	167203		;52
	.WORD	10210
	.WORD	140620		;54
	.WORD	123620		;55
	.WORD	113246		;56
	.WORD	10211
	.WORD	140620		;60
	.WORD	60601
	.WORD	103214		;62
	.WORD	123400
	.WORD	1620		;64
	.WORD	117030		;different than fiche, but matches diag
	.WORD	23660		;66
	.WORD	60520
	.WORD	103105		;70
	.WORD	60610
	.WORD	1620		;72
	.WORD	103047
	.WORD	60521		;74
	.WORD	102447
	.WORD	103447		;76
	.WORD	123420
	.WORD	60400		;100
	.WORD	103047
	.WORD	500		;102
	.WORD	63301
	.WORD	114643		;different than fiche, but matches diag
	.WORD	677
	.WORD	100646		;106
	.WORD	123400
	.WORD	103512		;110
	.WORD	114430		;different than fiche, but matches diag
	.WORD	60520
	.WORD	103606
	.WORD	120400
	.WORD	1620
	.WORD	103066
	.WORD	123400
	.WORD	102532		;120
	.WORD	2655
	.WORD	102127
	.WORD	1620
	.WORD	2723
	.WORD	102527
	.WORD	2702
	.WORD	60601
	.WORD	102133		;130
	.WORD	100447
	.WORD	102143
	.WORD	2461
	.WORD	500
	.WORD	61260
	.WORD	10177
	.WORD	16402
	.WORD	2400		;140
	.WORD	42233
	.WORD	114475		;different than fiche, but matches diag
	.WORD	60721
	.WORD	102133
	.WORD	2461
	.WORD	10017
	.WORD	136500
	.WORD	136520		;150
	.WORD	122560
	.WORD	123000
	.WORD	500
	.WORD	61260
	.WORD	2133
	.WORD	40620
	.WORD	103167
	.WORD	10151		;160
	.WORD	16406
	.WORD	2700
	.WORD	63161
	.WORD	641
	.WORD	3374
	.WORD	110727		;different than fiche, but matches diag
	.WORD	3004
	.WORD	63070		;170
	.WORD	10017
	.WORD	731		;different than fiche, but matches diag
	.WORD	110463
	.WORD	10154
	.WORD	57310
	.WORD	57231
	.WORD	57235
	.WORD	43237		;200

	.END
