.IIF	NDF	L$$IST,	.NLIST
.IIF	NDF	L$$IST,	.DSABL CRF
TITLE	FLC,<FINAL LOADER COMMUNICATIONS AREA>,0A,10-MAY-91,WJS/KPH/PJH

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	Edit history for FLC

;+
;
;			[RSTS V9.0]
;  000	WJS  23-Aug-83	CREATION
;
;			[RSTS V9.3]
;  001  KPH  17-Sep-86	Bugfix in EXTPOL setup
;
;			[RSTS V9.6]
;  002  KPH  13-Oct-87	Changes for mapped jam list support
;  003	PJH  02-Mar-88	Increase SMPOOL for RETSMB
;-

.ENABL	LC

; Macros for defining final loader's communication area

.MACRO	FLC	LCLGBL
$$$$$$	  =	0
.IF	IDN	<LCLGBL>,<LCL>
.LIST

.SBTTL	FLC - Final loader's communication area

; Define communications area for passing information to the final loader
;  Allocate space inline, with local symbols
;  Define the area as a block, so GETFLC can load it from
;    the root's companion area
;  Definitions are from FLC macro -- file FLC.MAC

FLCLCL:

.NLIST
	FLCDEF	<:>,<:	>
.LIST

FLC.LN	  =	<.-FLCLCL>/2	; Length of FLC area in words
.NLIST
.IFF	; LCL
  .IF	IDN	<LCLGBL>,<GBL>
.LIST

.SBTTL	FLC - Final loader's communication area

; Define communications area for passing information to the final loader
;  Allocate space in the root, and globalize its symbols
;  Definitions are from FLC macro -- file FLC.MAC

FLCGBL::

.NLIST
	FLCDEF	<::>,<::>
  .IFF	; GBL
  .ERROR	; Argument "LCLGBL" must be "LCL" or "GBL"
  .ENDC	; GBL
.ENDC	; LCL
.ENDM	FLC

.MACRO	FLCDEF	C,T 		;  C = ":" or "::",
				;  T = ":<ht>" or "::"

CACHON'T	.WORD	0		; Flag for extended data caching
TAGSIZ'T	.WORD	14		; Size of a cache tag
..CACH'T	.WORD	0		; Monitor cache parameter table
NTAGS'C		.WORD	0		; Number of cache tags
XBUFX'C		.WORD	0,0		; Address, total size of first pool
TAGASZ'T	.WORD	0		; Size of prefix area, including cache tags ;001
		.WORD	0,0		; Address and total size of EXTPOL	;001
		.WORD	1		; prefix size of EXTPOL in slivers	;001
		.WORD	0		; End of list
SMPOOL'T	.BLKW0	40*2		; Describes small buffer pools	;003
SMPEND'T				; End of pool space symbol	;003
STUSR3'T	.BYTE	0		; Flag for MMU register 3
		.BYTE	0		; Reserved
..SP'C		.WORD	0		; Initial RSTS SP value
FLAG22'T	.WORD	0		; D-space, 22-bit, and UMR flags
..SROM'T	.WORD	0		; Start of read-only memory
..RSIZ'T	.WORD	0		; Size of Monitor in words
JAMMMU'T	.WORD	0		; MMU address of jam list	;002
	.ENDM	FLCDEF

.IIF	NDF	L$$IST,	.ENABL	CRF
.IIF	NDF	L$$IST,	.LIST
