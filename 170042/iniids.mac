	.INCLUDE /CMN:COMMON/
	.INCLUDE /CMN:KERNEL/
	.INCLUDE /INIT:INIPFX/
TITLE	INIIDS,<Display Version of Installed SIL>,0A,10-MAY-91,RVR/VAM

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR INIIDS
;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-08
;			[RSTS V8.0]
;  001	JHC  28-Jan-83	Print out patch info about DECNET ($$0701)
;			[RSTS V9.0]
;  002	FEK  14-Mar-85	Print DECNET patches even if no monitor patches
;			and work with new .SIL headers
;  003  VAM  21-Mar-85	Print out installed SIL name even if no patches
;
;			[RSTS/E V10.0]
;  004  VAM  15-Jun-90	Change patch audit locations for new V10.0 component
;			numbers.
;-


.MACRO	I.MESS
	TMPORG	IDSTXT
.NLIST	BEX
.ENDM	I.MESS

.MACRO	AODSEDITDATE
 .ASCII	/10-May-80/
.ENDM	AODSEDITDATE

.SBTTL	IDENTIFY THE INSTALLED MONITOR (MAYBE)

DEFORG	INIIDS
DEFORG	IDSCTL
DEFORG	IDSTXT
ORG	INIIDS

IDESIL::NOP			;OPTIONALLY PATCHED TO BPT FOR DEBUGGING
	REGSCR			;DON'T KNOW WHERE WE CAME FROM, SO CLEANLINESS
	TST	SILNAM		;IS A SIL INSTALLED IN THIS INIT?
	BEQ	10$		;NOPE, SO DON'T TRY ANYTHING ELSE
	CALL	GETSPW		;TRY TO GET THE SIL PATCH LISTING WORDS
10$:	RETURN

; IDENTIFY THE CURRENT INSTALLED SIL IF POSSIBLE

GETSPW:	MOV	#FQ...+FQNAM1,R4 ;POINT TO FIRQB FOR STORING NAME
	MOV	SILNAM,(R4)+	;MOVE IN THE FIRST WORD OF INSTALLED SIL NAME
	MOV	SILNAM+2,(R4)+	;AND THE SECOND WORD ALSO
	MOV	#^RSIL,(R4)+	;INSTALL CHECKS THAT THIS IS CORRECT
	CALLX	LOK...		;NOW TRY TO LOOK IT UP
	BCS	20$		;WHOOPS! NOT THERE! WE'LL FIND OUT LATER...
	CALLX	SILNDX,R5,FQ...	;GET SIL TYPE INFO IF IT'S A REAL SIL
	BNE	20$		;NOT A SIL, SO LET'S GET OUTTA HERE...
	CALLX	SILSCN,R5	;LOOK UP THE ROOT MODULE
	  .RAD50  /RSTS  /
	MOV	R0,SILENT	;ALL FURTHER WORK IS DONE ON THE ROOT
	CALL	GETSR4,R4	;GET FIRST WORD OF '3.1.??' PATCH LISTING
	  .RAD50  /$$0301/	;(NOTE: TRASHES SATBUF+2000 THRU SATBUF+3000!)
	BCS	20$		;NONE! WE'LL FIND OUT ABOUT BAD SIL LATER...
	MOV	R0,R3		;SAVE POINTER TO FIRST WORD
	MOV	#24.,R2		;Get all 24 words...			;004
				; (3.1.?? to 3.13.?? plus 7.1.?)	;004
	MOV	#PALBUF,R1	;We'll store them all here.		;004
	CLR	BLNRST		;WE DON'T HAVE ANY MONITOR STUFF YET
10$:	CALL	RDRSTS		;GET ANOTHER WORD OF PATCH LISTING
	MOV	(R0)+,(R1)+	;SAVE IT IN WORK AREA
	INC	R3		;POINT TO NEXT
	INC	R3		; PATCH WORD
	MOV	R3,R0		;SET UP FOR ANOTHER GO-AROUND
	SOB	R2,10$		;Get all words.				;004
	CALL	LSTSLP		;LIST ALL THE SIL PATCHES
20$:	RETURN			;WHAT COULD BE EASIER?

GLOBAL	<FQ...,FQNAM1>

.SBTTL	LIST PATCHES BY SUBCOMPONENT

LSTSLP:	CALLX	MESSAGE,R5,SILMSG ;Let 'em know we're gonna tell 'em.	;003
	MOV	SILNAM,R0	;Get first half of SIL name.		;003
	CALLX	RADZER		;Shove it at the terminal.		;003
	MOV	SILNAM+2,R0	;Second verse, same as the first.	;003
	CALLX	RADZER		;Same deal.				;003
	CALLX	MESSAGE,R5,SMSEND ;End of installed SIL name.		;003
	MOV	#PALBUF,R0	;POINT TO FIRST FOUR PATCH WORDS (Monitor)
	CALL	SUMPT1		;ANY PATCHES IN THIS SIL?
	BEQ	100$		;NOPE, THAT WAS EASY
	CALLX	MESSAGE,R5,SPLBAN ;SOME, SO PRINT SIL PATCH LISTING BANNER
	MOV	#PALBUF,R0	;POINT TO FIRST FOUR PATCH WORDS (Monitor)
	CALL	SUMPAT		;ANY PATCHES?
	BEQ	10$		;NOPE, TRY ANOTHER SUBCOMPONENT
	CALLX	MESSAGE,R5,MTRPAT ;ANNOUNCE MONITOR PATCH LISTING
	MOV	#3,R2		;COMPONENT NUMBER IS 3 (EXECUTIVE)
	MOV	#1,R3		;SUBCOMPONENT NUMBER IS 1 (MONITOR)
	MOV	#PALBUF,R4	;POINT TO INSTALLED PATCH LISTING FOR 3.1.??
	CALLX	CHKCSC		;LIST ALL PATCHES INSTALLED UNDER 3.1.??
10$:	MOV	#PALBUF+10,R0	;POINT TO NEXT FOUR PATCH WORDS (TERSVC)
	CALL	SUMPAT		;ANY PATCHES?
	BEQ	20$		;NOPE, TRY ANOTHER SUBCOMPONENT
	CALLX	MESSAGE,R5,TSVPAT ;ANNOUNCE TERMINAL SERVICE PATCH LISTING
	MOV	#3,R2		;COMPONENT NUMBER IS 3 (EXECUTIVE)
	MOV	#4,R3		;Subcomponent number is 4 (TerSer)	;004
	MOV	#PALBUF+10,R4	;POINT TO INSTALLED PATCH LISTING FOR 3.4.??
	CALLX	CHKCSC		;LIST ALL PATCHES INSTALLED UNDER 3.4.??
20$:	MOV	#PALBUF+20,R0	;POINT TO FIRST FOUR PATCH WORDS (MONITR)
	CALL	SUMPAT		;ANY PATCHES?
	BEQ	30$		;NOPE, TRY ANOTHER SUBCOMPONENT
	CALLX	MESSAGE,R5,FPRPAT ;ANNOUNCE FILE PROCESSOR PATCH LISTING
	MOV	#3,R2		;COMPONENT NUMBER IS 3 (EXECUTIVE)
	MOV	#7,R3		;Subcomponent number is 7 (FIP)		;004
	MOV	#PALBUF+20,R4	;POINT TO INSTALLED PATCH LISTING FOR 3.7.??
	CALLX	CHKCSC		;LIST ALL PATCHES INSTALLED UNDER 3.7.??
30$:	MOV	#PALBUF+30,R0	;POINT TO FIRST FOUR PATCH WORDS (MONITR)
	CALL	SUMPAT		;ANY PATCHES?
	BEQ	40$		;NOPE, TRY ANOTHER SUBCOMPONENT
	CALLX	MESSAGE,R5,DDRPAT ;ANNOUNCE DEVICE DRIVER PATCH LISTING
	MOV	#3,R2		;COMPONENT NUMBER IS 3 (EXECUTIVE)
	MOV	#10.,R3		;Subcomponent number is 10 (Drivers)	;004
	MOV	#PALBUF+30,R4	;POINT TO INSTALLED PATCH LISTING FOR 3.1.??
	CALLX	CHKCSC		;LIST ALL PATCHES INSTALLED UNDER 3.1.??
40$:	MOV	#PALBUF+40,R0	;Point to next four patch words (FMS).	;004
	CALL	SUMPAT		;Any patches?				;004
	BEQ	50$		;Nope, try another subcomponent.	;004
	CALLX	MESSAGE,R5,FMSPAT ;Announce FMS patch listing.		;004
	MOV	#3,R2		;Component number is 3 (Executive).	;004
	MOV	#13.,R3		;Subcomponent number is 13 (FMS).	;004
	MOV	#PALBUF+40,R4	;Point to installed patches for 3.13.??	;004
	CALLX	CHKCSC		;List all patches installed for 3.13.??	;004
50$:	MOV	#PALBUF+50, R0	;Look at DECNET patch space.		;004
	CALL	SUMPAT		; any patches here?			;001
	BEQ	100$		; nope, we is done			;001
	CALLX	MESSAGE,R5,NETPAT ; Yes, tell him it is DECNET time	;001
	MOV	#7, R2		; component #7 				;001
	MOV	#1, R3		; sub-component #1 (DECNET patches)	;001
	MOV	#PALBUF+50, R4	;Point to DECNET patch flag words.	;004
	CALLX	CHKCSC		; list DECNET patches			;001
100$:	RETURN			;Finished at last...			;004

	TMPORG	IDSCTL
PALBUF:	.BLKW0	6*4	;TEMP STORAGE FOR 3.1.??, 3.4.??, 3.7.??,	;004
	UNORG		; 3.10.??, 3.13.?? and 7.1.??			;004

	I.MESS
	.ENABL	LC
SILMSG:	.ASCIZ	<177>/  Currently installed monitor is /		;003
SMSEND:	.ASCIZ	/.SIL/<200><200>					;003

SPLBAN:	.ASCII	<177>		;RESET CTRL/O
	.ASCIZ	/   The following patches are installed:/<200><200>	;003
MTRPAT:	.ASCIZ	<11>/Monitor patches installed:/<200><200>
TSVPAT:	.ASCIZ	<11>/Terminal Service patches installed:/<200><200>
FPRPAT:	.ASCIZ	<11>/File Processor patches installed:/<200><200>
DDRPAT:	.ASCIZ	<11>/Device Driver patches installed:/<200><200>
FMSPAT:	.ASCIZ	<11>/FMS Monitor patches installed:/<200><200>		;004
NETPAT: .ASCIZ	<11>"DECnet/E patches installed:"<200><200>		;004
	.EVEN
	.DSABL	LC
	UNORG

GLOBAL	<SILNAM>

.SBTTL	GET A SYMBOL FROM A MODULE STB

;+
; GETSYM - FETCH A SYMBOL'S VALUE FROM THE SYMBOL TABLE OF THE CURRENT MODULE
;
;	** THIS ROUTINE IS A COPY OF THE SAME ROUTINE IN INIINS **
;
;	SILENT = SIL ENTRY NUMBER FOR CURRENT MODULE
;	R4 -> SYMBOL NAME IN RAD50
;
;	CALL	GETSYM
;
;		SATBUF+2000 THRU SATBUF+3000 TRASHED
;	C=0	SYMBOL FOUND, R0 = SYMBOL VALUE
;	C=1	SYMBOL NOT FOUND
;-

.ENABL	LSB

GETSR4:	CALL	GETSYM		;ENTRY IF SYMBOL FOLLOWS CALL
	RETURN	R4

GETSYM:	REGSCR			;SAVE REGISTERS
	ADD	#4,TOS.R4(SP)	;BUMP RETURNED R4
	MOV	SILENT,R5	;R5 -> SIL INDEX ENTRY
	MOV	#-1,R0		;FORCE A READ THE FIRST TIME
	MOV	SE.STN(R5),R2	;R2 = NUMBER OF SYMBOLS TO CHECK
	BEQ	40$		;NONE IS ERROR
	MOV	#FC...,R1	;R1 -> FCB FOR READING STB
	MOV	SE.STB(R5),FCNVB(R1) ;READ FROM STB BLOCK OF MODULE
10$:	CMP	R0,#SATBUF+3000	;END OF STB?
	BLO	20$		;NO, SAME BLOCK
	MOV	#256.,R0	;READ ONE BLOCK
	CALLX	READ.,R5,SATBUF+2000 ; OF THE STB
	MOV	#SATBUF+2000,R0	;R0 -> STB
20$:	CMP	(R0),(R4)	;IS THIS IT?
	BNE	30$		;NO
	CMP	2(R0),2(R4)	;MAYBE
	BEQ	50$		;YES
30$:	ADD	#10,R0		;POINT TO NEXT ENTRY
	SOB	R2,10$		;LOOP UNTIL NO MORE
40$:	SEC			;INDICATE FAILURE
	RETURN

50$:	MOV	6(R0),TOS.R0(SP) ;RETURN VALUE IN R0
	RETURN			;RETURN WITH C=0 FROM CMP

.DSABL	LSB

	TMPORG	IDSCTL
SILENT:	.WORD	0		;POINTER TO SIL ENTRY FOR MODULE
	UNORG

GLOBAL	<FC...,SATBUF>

.SBTTL	GET A WORD FROM THE RSTS MODULE OF THE SIL

;+
; RDRSTS - READ RSTS MODULE AND RETURN A WORD
;
;	R0 =  ADDRESS WITHIN RSTS
;
;	CALL	RDRSTS
;
;	R0 -> WORD IN BUFFER
;
; NOTE: TO REWRITE THE BUFFER, MAKE RWRITE NON-0
;-

.ENABL	LSB

RDRSO3:	MOV	R3,R0		;READ OFFSET FROM R3
	ADD	@(R4)+,R0	;OFFSET POINTER FOLLOWS THE CALL
	CALL	RDRSTS		;GET IT
	RETURN	R4		;AND RETURN PROPERLY

RDRSTS:	REGSCR			;SAVE REGISTERS
	MOV	R0,R2		;COPY ADDRESS
	BIC	#777,R2		;REMOVE BLOCK OFFSET FROM ADDRESS
	BIC	R2,R0		;LEAVE ONLY THE BLOCK OFFSET IN R0
	ADD	#SATBUF,R0	;R0 -> LOCATION OF DESIRED WORD IN BUFF
	MOV	R0,TOS.R0(SP)	;RETURN POINTER IN R0
	SWAB	R2		;CONVERT R2 TO RELATIVE BLOCK NUMBER
	ROR	R2		;  WITHIN RSTS MODULE
	ADD	RSTBLK,R2	; ACCOUNT FOR MULTI-BLOCK SIL HEADER	;002
	CMP	R2,BLNRST	;IS IT ALREADY THERE?
	BEQ	10$		;YUP, THAT'S EASY
;	CALL	WRITRC		;REWRITE BLOCK IF NECESSARY
	MOV	#FC...,R1	;R1 -> FCB FOR READ
	MOV	R2,FCNVB(R1)	;SPECIFY BLOCK TO READ
	CALLX	READ.B,R5,SATBUF ;READ IT IN
	MOV	R2,BLNRST	;REMEMBER WHAT'S THERE
10$:	RETURN

.DSABL	LSB

GLOBAL	<SATBUF,FC...,RSTBLK>

.SBTTL	REWRITE MONITOR IF REQUIRED

WRITRC:	RETURN			;NEVER WRITE TO MONITOR FROM THIS OPTION

	TMPORG	IDSCTL
BLNRST:	.WORD	0		;BLOCK OF SIL IN MEMORY
RWRITE:	.WORD	0		;<>0 IF REWRITE OF BLOCK NEEDED
	UNORG

; CHECK FOR ANY PATCHES ON THIS SUBCOMPONENT (OR SUBCOMPONENT BLOCK)
	.ENABL	LSB

SUMPT1:	MOV	#24.-1,R2	;Do the whole mess.			;004
	BR	10$

SUMPAT:	MOV	#4-1,R2
10$:	MOV	(R0)+,R1	;GET WORKING COPY OF FIRST PATCH WORD
20$:	BIS	(R0)+,R1	;.OR. IN THE NEXT WORD
	SOB	R2,20$		;DO MORE MAYBE
	TST	R1
	RETURN			;Z=0 IF NO PATCHES
	.DSABL	LSB

.END
