.IIF	NDF	L$$IST,	.NLIST
.IIF	NDF	L$$IST,	.DSABL CRF
TITLE	DISKDF,<REGISTER DEFINITIONS>,0A,10-MAY-91,GW/ABC/AWL/GPK/AJK

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR DSKDEF
;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-07
;  001	AWL  06-MAR-82	CREATION - COPIED FROM V7.1-11
;  002	AWL  06-MAR-82	Added offset fot 5th RLV12 register
;  003  AJK  27-JUL-82  CHANGED OFFSET OF DSQBBH TO = TO DSQSAV
;  004  GPK  30-Jun-82	Updated MSCPDF portion
;  005  AJK  18-FEB-83  Removed MSCP definitions and renamed this module
;			to DISKDF.MAC.  At base level time MSCPDF and DISKDF
;			are murged together to produce [170,42]DSKDEF.MAC.
;
;			[RSTS/E V9.4]
;  006	GPK  25-Aug-86	Added DZ (GPK RX50), DW
;-

.SBTTL	DBDEF:RH11/RP04

;   REGISTER OFFSETS

.DSECT	,NOCREF

	.BLKW			;CONTROL
RHWC:	.BLKW			;WORD COUNT
RHBA:	.BLKW			;BUS ADDRESS
RBDA:	.BLKW			;DESIRED SECTOR/TRACK ADDRESS
RHCS2:	.BLKW			;STATUS
RHDS:	.BLKW			;DRIVE STATUS
RHER:	.BLKW			;ERROR REGISTER 1
RHAS:	.BLKW			;ATTENTION SUMMARY
	.BLKW			;LOOK AHEAD
	.BLKW			;DATA BUFFER
	.BLKW			;MAINTENANCE
	.BLKW			;DRIVE TYPE
	.BLKW			;SERIAL NUMBER
RBOF:	.BLKW			;OFFSET
RBDC:	.BLKW			;DESIRED CYLINDER
RBCC:	.BLKW			;CURRENT CYLINDER
RBER2:	.BLKW			;ERROR REGISTER 2
RBER3:	.BLKW			;ERROR REGISTER 3
RBEC1:	.BLKW			;ECC POSITION
RBEC2:	.BLKW			;ECC PATTERN

;   CONTROL BIT ASSIGNMENTS

.BSECT	HIGH	,NOCREF

	.BLKB	.		;ADDRESS EXTENSION BIT 1
	.BLKB	.		;ADDRESS EXTENSION BIT 2
	.BLKB	.		;PORT SELECT
	.BLKB	.		;DRIVE AVAILABLE
	.BLKB	.		;UNUSED
RHMCPE:	.BLKB	.		;MASSBUS CONTROL PARITY ERROR
RHTRE:	.BLKB	.		;TRANSFER ERROR
RHSC:	.BLKB	.		;SPECIAL CONDITION

;   CS2 BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;UNIT BIT 1
	.BLKB	.		;UNIT BIT 2
	.BLKB	.		;UNIT BIT 3
	.BLKB	.		;BUS ADDRESS INCREMENT INHIBIT
	.BLKB	.		;PARITY TEST
RHCLR:	.BLKB	.		;CONTROLLER CLEAR
	.BLKB	.		;INPUT READY
	.BLKB	.		;OUTPUT READY
	.BLKB	.		;MASSBUS DATA PARITY ERROR
	.BLKB	.		;MISSED TRANSFER
	.BLKB	.		;PROGRAM ERROR
RHNEM:	.BLKB	.		;NON EXISTENT MEMORY
RHNED:	.BLKB	.		;NON EXISTENT DRIVE
	.BLKB	.		;UNIBUS PARITY ERROR
	.BLKB	.		;WRITE CHECK
	.BLKB	.		;DATA LATE

;   DRIVE STATUS BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;5 IN/SEC
	.BLKB	.		;20 IN/SEC
	.BLKB	.		;DRIVE TO INNER GUARD
	.BLKB	.		;GO REVERSE
	.BLKB	.		;DIFFERENCE LESS THAN 64
	.BLKB	.		;DIFFERENCE EQUALS 1
RBVV:	.BLKB	.		;VOLUME VALID
RHDRY:	.BLKB	.		;DRIVE READY
RHDPR:	.BLKB	.		;DRIVE PRESENT
RBPGM:	.BLKB	.		;PROGRAMABLE
	.BLKB	.		;LAST SECTOR TRANSFERED
	.BLKB	.		;WRITE LOCKED
RHMOL:	.BLKB	.		;MEDIUM ON LINE
RHPIP:	.BLKB	.		;POSITIONING IN PROGRESS
RHERR:	.BLKB	.		;ERROR
RHATA:	.BLKB	.		;ATTENTION ACTIVE

;   ERROR REGISTER 1 BIT ASSIGNMENTS

.BSECT	,NOCREF

RHILF:	.BLKB	.		;ILLEGAL FUNCTION
RHILR:	.BLKB	.		;ILLEGAL REGISTER
RHRMR:	.BLKB	.		;REGISTER MODIFICATION REFUSED
	.BLKB	.		;PARITY ERROR
	.BLKB	.		;FORMAT ERROR
	.BLKB	.		;WRITE CLOCK FAILED
RBECH:	.BLKB	.		;HARD ERROR
RBHCRC:	.BLKB	.		;HEADER COMPARE ERROR
RBHCE:	.BLKB	.		;HEADER CRC ERROR
RBAO:	.BLKB	.		;ADDRESS OVERFLOW
RBIAE:	.BLKB	.		;INVALID ADDRESS
RBWLE:	.BLKB	.		;WRITE LOCKED
RBDTE:	.BLKB	.		;DRIVE TIMING
	.BLKB	.		;OPERATION INCOMPLETE
RHUNS:	.BLKB	.		;UNSAFE
RBDCK:	.BLKB	.		;DATA CHECK

.SBTTL	DZDEF:RX50							;006+

;+
; RX50 notes:
;
;	Drives/control	1 -or- 2
;	Disk/drive	2
;	Surfaces/disk	2
;	Tracks/surface	80
;	Sectors/track	10
;-

;+
; Register offsets
;-

.DSECT

RX5ID:	.BLKW			; [R-O] GPK bus ID
	.BLKW
RX5CS0:	.BLKW			;  [R]  Status; [W] Command
RX5CS1:	.BLKW			;  [R]  Status; [W] Command
RX5CS2:	.BLKW			;  [R]  Status; [W] Command
RX5CS3:	.BLKW			;  [R]  Status; [W] **Unused**
RX5CS4:	.BLKW			;  [R]  Status; [W] **Unused**
RX5CS5:	.BLKW			;  [R]	Status; [W] Extended function
RX5EB:	.BLKW			; [R-O] Empty data buffer (Reads)
RX5CA:	.BLKW			; [W-O] Clear silo pointer
RX5GO:	.BLKW			; [W-O] Initiate command in RX5CS0 (i.e., GO)
RX5FB:	.BLKW			; [W-O] Fill data buffer (Writes)

; WRITE bit definitions in RX5CS0

.BSECT

RXSDE:	.BLKB	.		; Side select
RXUNT:	.BLKB	.		; Unit select
RXDRV:	.BLKB	.		; Drive select
RXTMO:	.BLKB	.		; Extended motor timeout
RXFUN:	.BLKB	160		; Function
	.BLKB	.

; Function code values in RXFUN of RX5CS0

.DSECT

RXRDST:	.BLKB	RXFUN		; Read status
RXMAIN:	.BLKB	RXFUN		; Maintenance mode
RXRSTR:	.BLKB	RXFUN		; Restore
RXINIT:	.BLKB	RXFUN		; Initialize
RXREAD:	.BLKB	RXFUN		; Read data
RXRRTY:	.BLKB	RXFUN		; Read w/ retries
RXRADR:	.BLKB	RXFUN		; Read address
RXWRIT:	.BLKB	RXFUN		; Write data

; READ bit definitions in RX5CS0

.BSECT

RXSDE:	.BLKB	.		; Side used
RXUNT:	.BLKB	.		; Unit used
RXDRV:	.BLKB	.		; Drive used
RXDNE:	.BLKB	.		; Done
RXFUN:	.BLKB	160		; Function used
RXERR:	.BLKB	.		; Error

; READ error code values in RX5CS1 iff RXERR in RX5CS0

.EQUATE	RXNDRV,	030		; No drives in system
.EQUATE	RXBTRK,	040		; Bad trak number
.EQUATE	RXBSID,	110		; Bad side number
.EQUATE	RXICRC,	140		; ID CRC error
.EQUATE	RXDRQ,	160		; Data overrun
.EQUATE	RXSID,	170		; Soft ID read error
.EQUATE	RXCRC,	200		; Data CRC error


.SBTTL	DWDEF:RD5x

;+
; Register offsets
;-

.DSECT

RD5ID:	.BLKW			; [R-O] GPK bus ID
	.BLKW
RD5ERR:	.BLKW			;  [R]  Error status;	[W] Precomp
RD5SEC:	.BLKW			; [R/W] Sector number
RD5DAT:	.BLKW			; [R/W] Data register
RD5CYL:	.BLKW			; [R/W] Cylinder number
RD5TRK:	.BLKW			; [R/W] Track number
RD5ST2:	.BLKW			;  [R]	Status 2;	[W] Command
RD5STS:	.BLKW			;  [R]	Status;		[W] Init

; Error bit definitions in RD5ERR

.BSECT	,HIGH
RDDMER:	.BLKB	.		;Data mark not found
RDT0ER:	.BLKB	.		;Track 0 not found
RDILCM:	.BLKB	.		;Illegal command
	.BLKB	.		;Unused
RDNFND:	.BLKB	.		;ID not found
RDHCRC:	.BLKB	.		;Header CRC error
RDDCRC:	.BLKB	.		;Data CRC error
	.BLKB	.		;Unused

; Command codes in RD5ST2

.DSECT	20
RDREST:	.BLKB	20		;Restore
RDREAD:	.BLKB	20		;Read
RDWRIT:	.BLKB	20		;Write
	.BLKB	20		;Not used
RDFMT:	.BLKB	20		;Format

; Secondary status bits in RD5ST2

.BSECT	,HIGH
RDERS:	.BLKB	.		;Error summary
	.BLKB	.		;Unused
	.BLKB	.		;Unused
RDDATR:	.BLKB	.		;Data request
RDSKDN:	.BLKB	.		;Seek done
RDWRTF:	.BLKB	.		;Write fault (you're dead!)
RDRDY:	.BLKB	.		;Drive ready
	.BLKB	.		;Unused

; Status bits in RD5STS

.BSECT
RDEND:	.BLKB	.		;Operation ended (all done)
	.BLKB	.		;Unused
	.BLKB	.		;Unused
RDRSET:	.BLKB	.		;Reset/initialize (write-only)
	.BLKB	.		;Unused
	.BLKB	.		;Unused
	.BLKB	.		;Unused
RDDRQ:	.BLKB	.		;Data transfer request
RD50:	.BLKB	.		;RD50 flag (0 = something else)
	.BLKB	.		;Unused
	.BLKB	.		;Unused
	.BLKB	.		;Unused
	.BLKB	.		;Unused
	.BLKB	.		;Unused
	.BLKB	.		;Unused
RDBSY:	.BLKB	.		;Busy					;006-


.SBTTL	DCDEF:RC11

;   REGISTER OFFSETS

.DSECT	-6	,NOCREF

RCLA:	.BLKW			;LOOK AHEAD
RCDA:	.BLKW			;DISK ADDRESS
	.BLKW			;ERROR STATUS
	.BLKW			;COMMAND AND STATUS
	.BLKW			;WORD COUNT
RCMA:	.BLKW			;CURRENT ADDRESS
RCMN:	.BLKW			;MAINTENANCE
	.BLKW			;DATA BUFFER

;   CONTROL REGISTER BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;GO
	.BLKB	.		;FUNCTION BIT 1
	.BLKB	.		;FUNCTION BIT 2
	.BLKB	.		;MODE
	.BLKB	.		;EXTENDED MEMORY BIT 1
	.BLKB	.		;EXTENDED MEMORY BIT 2
	.BLKB	.		;INTERRUPT ENABLE
	.BLKB	.		;READY
RCAB:	.BLKB	.		;ABORT
	.BLKB	.		;INHIBIT CA INCREMENT
	.BLKB	.		;WRITE CHECK ERROR
RCNED:	.BLKB	.		;NON EXISTENT DISK
RCWL:	.BLKB	.		;WRITE LOCKED
	.BLKB	.		;ADDRESS ERROR
	.BLKB	.		;DATA ERROR
	.BLKB	.		;SPECIAL CONDITION

.SBTTL	DFDEF:RF11

;   REGISTER OFFSETS

.DSECT	,NOCREF

RFCS:	.BLKW			;CONTROL STATUS
	.BLKW			;WORD COUNT
	.BLKW			;CURRENT MEMORY ADDRESS
RFDAR:	.BLKW			;DISK ADDRESS
RFDAE:	.BLKW			;EXTENDED DISK ADDRESS AND ERROR
	.BLKW			;DATA BUFFER
	.BLKW			;MAINTENANCE
RFADS:	.BLKW			;ADDRESS OF DISK SEGMENT

;   CONTROL STATUS BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;GO
	.BLKB	.		;FUNCTION REGISTER BIT 1
	.BLKB	.		;FUNCTION REGISTER BIT 2
	.BLKB	.		;MAINTENANCE
	.BLKB	.		;EXTENDED MEMORY BIT 1
	.BLKB	.		;EXTENDED MEMORY BIT 2
	.BLKB	.		;INTERRUPT ENABLE
	.BLKB	.		;CONTROL READY
RFCLR:	.BLKB	.		;DISK CLEAR
	.BLKB	.		;MISSED TRANSFER
RFWLO:	.BLKB	.		;WRITE LOCKED OUT
RFNED:	.BLKB	.		;NON EXISTENT DRIVE
	.BLKB	.		;DATA PARITY ERROR
	.BLKB	.		;WRITE CHECK ERROR
	.BLKB	.		;FREEZE
	.BLKB	.		;ERROR

.SBTTL	DKDEF:RK11

;   REGISTER OFFSETS

.DSECT	-4	,NOCREF

RKDS:	.BLKW			;DRIVE STATUS
RKER:	.BLKW			;ERROR
	.BLKW			;CONTROL STATUS
RKWC:	.BLKW			;WORD COUNT
RKMA:	.BLKW			;BUS ADDRESS
RKDA:	.BLKW			;DISK ADDRESS
	.BLKW			;DATA BUFFER

;   DRIVE STATUS BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;SECTOR COUNT BIT 1
	.BLKB	.		;SECTOR COUNT BIT 2
	.BLKB	.		;SECTOR COUNT BIT 3
	.BLKB	.		;SECTOR COUNT BIT 4
	.BLKB	.		;SC=SA
RKWPS:	.BLKB	.		;WRITE PROTECT STATUS
RKARY:	.BLKB	.		;READ/WRITE/SEEK/READY
RKDRY:	.BLKB	.		;DRIVE READY
	.BLKB	.		;SECTOR COUNT OK
RKSIN:	.BLKB	.		;SEEK INCOMPLETE
RKDRU:	.BLKB	.		;DRIVE UNSAFE
	.BLKB	.		;RK05
RKDPL:	.BLKB	.		;DRIVE POWER LOW
	.BLKB	.		;DRIVE IDENT BIT 1
	.BLKB	.		;DRIVE IDENT BIT 2
	.BLKB	.		;DRIVE IDENT BIT 3

;   ERROR REGISTER BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;WRITE CHECK
	.BLKB	.		;CHECKSUM ERROR
	.BLKB	.		;UNUSED
	.BLKB	.		;UNUSED
	.BLKB	.		;UNUSED
RKNXS:	.BLKB	.		;NON EXISTENT SECTOR
RKNXC:	.BLKB	.		;NON EXISTENT CYLINDER
RKNXD:	.BLKB	.		;NON EXISTENT DRIVE
	.BLKB	.		;TIMING ERROR
	.BLKB	.		;DATA LATE
RKNXM:	.BLKB	.		;NON EXISTENT MEMORY
	.BLKB	.		;PROGRAMMING ERROR
RKSKE:	.BLKB	.		;SEEK ERROR
RKWLO:	.BLKB	.		;WRITE LOCK OUT
RKOVR:	.BLKB	.		;OVERRUN
RKDRE:	.BLKB	.		;DRIVE ERROR

;   CONTROL REGISTER BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;GO
	.BLKB	.		;FUNCTION BIT 1
	.BLKB	.		;FUNCTION BIT 2
	.BLKB	.		;FUNCTION BIT 3
	.BLKB	.		;MEMORY EXTENSION BIT 1
	.BLKB	.		;MEMORY EXTENSION BIT 2
	.BLKB	.		;INTERRUPT ENABLE
RKRY:	.BLKB	.		;READY
	.BLKB	.		;STOP ON SOFT ERROR
	.BLKB	.		;UNUSED
	.BLKB	.		;FORMAT
	.BLKB	.		;INHIBIT INCREMENT
	.BLKB	.		;UNUSED
RKSCP:	.BLKB	.		;SEARCH COMPLETE
RKHE:	.BLKB	.		;HARD ERROR
RKERR:	.BLKB	.		;ERROR

.SBTTL	DLDEF:RL01

; REGISTER OFFSETS

.DSECT	,NOCREF

RLCS:	.BLKW			;CONTROL STATUS REGISTER
RLBA:	.BLKW			;UNIBUS ADDRESS REGISTER
RLDA:	.BLKW			;DISK ADDRESS REGISTER
RLMP:	.BLKW			;MULTI-PURPOSE REGISTER
RLBE:	.BLKW			;BUS ADDRESS EXTENSION REGISTER

; CONTROL/STATUS  BIT ASSIGNMENTS (RLCS)

.BSECT	,NOCREF

RLDRDY:	.BLKB	.		;DRIVE READY
	.BLKB	.		;FUNCTION BIT 1
	.BLKB	.		;FUNCTION BIT 2
	.BLKB	.		;FUNCTION BIT 3
	.BLKB	.		;MEMORY EXTENSION BIT 1
	.BLKB	.		;MEMORY EXTENSION BIT 2
	.BLKB	.		;INTERRUPT ENABLE
	.BLKB	.		;CONTROLLER READY
	.BLKB	.		;UNIT SELECT BIT 1
	.BLKB	.		;UNIT SELECT BIT 2
	.BLKB	.		;OPERATION INCOMPLETE
	.BLKB	.		;DATA CHECK ERROR/HEADER CRC ERROR
	.BLKB	.		;DATA LATE ERROR/HEADER NOT FOUND ERROR
RLNXM:	.BLKB	.		;NON-EXISTANT MEMORY ERROR
RLDE:	.BLKB	.		;DRIVE ERROR

; FUNCTIONS

.DSECT	,NOCREF

	.BLKW			;NO-OPERATION
	.BLKW			;WRITE CHECK
RLGSTS:	.BLKW			;GET STATUS
RLSEEK:	.BLKW			;SEEK
RLRDH:	.BLKW			;READ HEADERS
	.BLKW			;WRITE DATA
	.BLKW			;READ DATA

; RLDA STATUS CODES

.BSECT	,NOCREF

RLMRK:	.BLKB	.		;MARKER BIT (SEEK, GET STATUS)
RLSTS:	.BLKB	.		;GET STATUS BIT (GET STATUS)
RLSN:	.BLKB	.		;PLUS SIGN BIT (SEEK)
RLRST:	.BLKB	.		;DRIVE RESET BIT (GET STATUS)
RLHS:	.BLKB	.		;HEAD SELECT BIT (SEEK)
	.BLKB	.
	.BLKB	.		;HEAD SELECT BIT (READ, WRITE, WCHECK)
RLREV=	200!RLMRK		;DIFFERENCE WORD FOR 1 CYL REVERSE SEEK

; RLMP GET STATUS BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;STATE BIT 1
	.BLKB	.		;STATE BIT 2
	.BLKB	.		;STATE BIT 3
RLSLM=	5			;DRIVE IN SEEK LINEAR MODE
RLBH:	.BLKB	.		;BRUSHES HOME
RLHH:	.BLKB	.		;HEADS HOME
	.BLKB	.		;COVER OPEN
RLHSS:	.BLKB	.		;HEAD SELECT STATUS
RLDT:	.BLKB	.		;DRIVE TYPE (RL01 = 0)
	.BLKB	.		;DRIVE SELECT ERROR
	.BLKB	.		;VOLUME CHECK
RLWGE:	.BLKB	.		;WRITE GATE ERROR
	.BLKB	.		;SPEED ERROR
	.BLKB	.		;SEEK TIME-OUT
RLWLS:	.BLKB	.		;WRITE LOCK STATUS
	.BLKB	.		;HEAD CURRENT ERROR
	.BLKB	.		;WRITE DATA ERROR


; DEVICE CONSTANTS


RLWPT=	256.*20.		;WORDS PER TRACK

.SBTTL	DMDEF:RK611

;   DEVICE REGISTER OFFSETS

.DSECT	,NOCREF

RMCS1:	.BLKW			;CONTROL STATUS REGISTER 1
RMWC:	.BLKW			;WORD COUNT
	.BLKW			;BUS ADDRESS
RMDA:	.BLKW			;DISK ADDRESS
RMCS2:	.BLKW			;CONTROL STATUS REGISTER 2
RMDS:	.BLKW			;DRIVE STATUS
RMER:	.BLKW			;ERROR REGISTER
RMASOF:	.BLKW			;OFFSET/ATTENTION REGISTER
RMDCY:	.BLKW			;DESIRED CYLINDER
	.BLKW			;UNUSED
	.BLKW			;DATA BUFFER
	.BLKW			;MAINTAINCE REGISTER 1
RMECPS:	.BLKW			;ECC POSITION
RMECPT:	.BLKW			;ECC PATTERN
	.BLKW			;MAINTENANCE REGISTER 2
	.BLKW			;MAINTENANCE REGISTER 3

;   RMCS1 BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;GO
	.BLKB	.		;FUNCTION CODE BIT 1
	.BLKB	.		;FUNCTION CODE BIT 2
	.BLKB	.		;FUNCTION CODE BIT 3
	.BLKB	.		;FUNCTION CODE BIT 4
	.BLKB	.		;SPARE
RMIE:	.BLKB	.		;INTERRUPT ENABLE
RMRDY:	.BLKB	.		;CONTROLLER READY
	.BLKB	.		;BUS ADDRESS BIT 16
	.BLKB	.		;BUS ADDRESS BIT 17
RMCDT:	.BLKB	.		;CONTROLLER DRIVE TYPE
RMCTO:	.BLKB	.		;CONTROLLER TIME OUT ERROR
	.BLKB	.		;CONTROLLER FORMAT
RMSPAR:	.BLKB	.		;SERIAL PARITY ERROR
	.BLKB	.		;DRIVE INTERRUPT
RMCCLR:	.BLKB	.		;CONTROLLER CLEAR/ERROR

;   RMCS2 BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;DRIVE SELECT BIT 0
	.BLKB	.		;DRIVE SELECT BIT 1
	.BLKB	.		;DRIVE SELECT BIT 2
	.BLKB	.		;RELEASE
	.BLKB	.		;BUS ADDRESS INCREMENT INHIBIT
RMSCLR:	.BLKB	.		;SUBSYSTEM CLEAR
	.BLKB	.		;INPUT READY
	.BLKB	.		;OUTPUT READY
RMUFE:	.BLKB	.		;UNIT FIELD ERROR
RMMDS:	.BLKB	.		;MULTIPLE DRIVE SELECT
RMPGE:	.BLKB	.		;PROGRAMMING ERROR
RMNEM:	.BLKB	.		;NON EXISTENT MEMORY
RMNED:	.BLKB	.		;NO EXISTENT DRIVE
RMUPE:	.BLKB	.		;UNIBUS PARITY ERROR
RMWCE:	.BLKB	.		;WRITE CHECK ERROR
RMDLT:	.BLKB	.		;DATA LATE ERROR

;   RMDS BIT ASSIGNMENTS

.BSECT	,NOCREF

RMDRA:	.BLKB	.		;DRIVE AVAILABLE
	.BLKB	.		;UNUSED
	.BLKB	.		;OFFSET
	.BLKB	.		;DRIVE AC LOW
	.BLKB	.		;DRIVE DC LOW
	.BLKB	.		;DRIVE OFF TRACK
RMVV:	.BLKB	.		;VOLUME VALID
RMDRDY:	.BLKB	.		;DRIVE READY
	.BLKB	.		;DRIVE'S DRIVE TYPE
	.BLKB	.		;UNUSED
	.BLKB	.		;UNUSED
	.BLKB	.		;WRITE LOCKED
	.BLKB	.		;UNUSED
RMPIP:	.BLKB	.		;POSITIONING IN PROGRESS
	.BLKB	.		;DRIVE STATUS CHANGE
RMSVAL:	.BLKB	.		;STATUS VALID

;  RMER BIT ASSIGNMENTS

.BSECT	,NOCREF

RMILF:	.BLKB	.		;ILLEGAL FUNCTION
	.BLKB	.		;SEEK INCOMPLETE
	.BLKB	.		;NON EXECUTABLE FUNCTION
	.BLKB	.		;DRIVE PARITY ERROR
	.BLKB	.		;FORMAT ERROR
RMDT:	.BLKB	.		;DRIVE TYPE ERROR
RMECH:	.BLKB	.		;ERROR CORRECTION HARD
RMBSE:	.BLKB	.		;BAD SECTOR ERROR
RMHVRC:	.BLKB	.		;HEADER VRC ERROR
RMCOE:	.BLKB	.		;CYLINDER OVERFLOW ERROR
RMIDAE:	.BLKB	.		;INVALID DISK ADDRESS
RMWLE:	.BLKB	.		;WRITE LOCK ERROR
RMDTE:	.BLKB	.		;DRIVE TIMING ERROR
	.BLKB	.		;OPERATION INCOMPLETE
RMUNS:	.BLKB	.		;DRIVE UNSAFE
	.BLKB	.		;DATA CHECK

;   COMMAND BIT ASSIGNMENTS

.BSECT	,NOCREF

RMSD:	.BLKB	2		;SELECT DRIVE
RMACK:	.BLKB	2		;PACK ACKNOWLEDGE
RMDC:	.BLKB	2		;DRIVE CLEAR
	.BLKB	2		;UNLOAD
	.BLKB	2		;START SPINDLE
	.BLKB	2		;RECALIBRATE
RMOF:	.BLKB	2		;OFFSET
RMSK:	.BLKB	2		;SEEK
RMRD:	.BLKB	2		;READ DATA
	.BLKB	2		;WRITE DATA
	.BLKB	2		;READ HEADER
	.BLKB	2		;WRITE HEADER
	.BLKB	2		;WRITE CHECK

.SBTTL	DPDEF:RP11C

;   REGISTER OFFSETS

.DSECT	-4	,NOCREF

RPDS:	.BLKW			;DEVIVE STATUS
RPER:	.BLKW			;ERROR
	.BLKW			;CONTROL STATUS
RPWC:	.BLKW			;WORD COUNT
RPMA:	.BLKW			;BUS ADDRESS
RPCA:	.BLKW			;CYLINDER ADDRESS
RPDA:	.BLKW			;DISK ADDRESS
	.BLKW			;MAINTENANCE 1
	.BLKW			;MAINTENANCE 2
	.BLKW			;MAINTENANCE 3
RPSUCA:	.BLKW			;SELECTED UNIT CYLINDER
	.BLKW			;SILO MEMORY

;   RPDS BIT ASSIGNMENTS

.BSECT	HIGH	,NOCREF

	.BLKB	.		;WRITE PROTECTED
RPFU:	.BLKB	.		;UNSAFE
RPSU:	.BLKB	.		;SEEK UNDERWAY
RPSI:	.BLKB	.		;SEEK INCOMPLETE
RPHNF:	.BLKB	.		;HEADER NOT FOUND
	.BLKB	.		;RP03
RPOL:	.BLKB	.		;ON LINE
	.BLKB	.		;READY

;   RPER BIT ASSIGNMENTS

.BSECT	,NOCREF

RPDER:	.BLKB	.		;DISK ERROR
RPEOP:	.BLKB	.		;END OF PACK
RPNEM:	.BLKB	.		;NON EXISTENT MEMORY
	.BLKB	.		;WRITE CHECK
	.BLKB	.		;TIMING ERROR
	.BLKB	.		;CHECKSUM ERROR
	.BLKB	.		;WORD PARITY ERROR
	.BLKB	.		;LONGITUDINAL PARITY ERROR
	.BLKB	.		;MODE ERROR
	.BLKB	.		;FORMAT ERROR
	.BLKB	.		;PROGRAM ERROR
RPNES:	.BLKB	.		;NON EXISTENT SECTOR
RPNET:	.BLKB	.		;NON EXISTENT TRACK
RPNEC:	.BLKB	.		;NON EXISTENT CYLINDER
RPSUFU:	.BLKB	.		;FILE UNSAFE VIOLATION
RPSUWP:	.BLKB	.		;WRITE PROTECTION VIOLATION

;   RPCS BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;GO
	.BLKB	.		;FUNCTION BIT 1
	.BLKB	.		;FUNCTION BIT 2
	.BLKB	.		;FUNCTION BIT 3
	.BLKB	.		;MEMORY EXTENSION BIT 1
	.BLKB	.		;MEMORY EXTENSION BIT 2
	.BLKB	.		;INTERRUPT ENABLE
RPRDY:	.BLKB	.		;READY
	.BLKB	.		;DRIVE SELECT BIT 1
	.BLKB	.		;DRIVE SELECT BIT 2
	.BLKB	.		;DRIVE SELECT BIT 3
	.BLKB	.		;HEADER
	.BLKB	.		;MODE
RPAIE:	.BLKB	.		;ATTENTION INTERRUPT ENABLE
	.BLKB	.		;HARD ERROR
RPERR:	.BLKB	.		;ERROR

.SBTTL	DSDEF:RH11

;   REGISTER OFFSETS

.DSECT	,NOCREF

RHCS1:	.BLKW			;CONTROL/STATUS 1
	.BLKW			;WORD COUNT
	.BLKW			;BUS ADDRESS
	.BLKW			;DESIRED BLOCK ADDRESS
RHCS2:	.BLKW			;CONTROL/STATUS 2
	.BLKW			;DRIVE STATUS
RHER:	.BLKW			;ERROR
RHAS:	.BLKW			;ATTENTION SUMMARY
	.BLKW			;LOOK AHEAD
	.BLKW			;DATA BUFFER
	.BLKW			;MAINTENANCE
RHDT:	.BLKW			;DRIVE TYPE

;   CONTROL/STATUS 2 BIT ASSIGNMENTS

.BSECT	,NOCREF

	.BLKB	.		;UNIT SELECT BIT 1
	.BLKB	.		;UNIT SELECT BIT 2
	.BLKB	.		;UNIT SELECT BIT 3
	.BLKB	.		;UNIBUS ADDRESS INCREMENT INHIBIT
	.BLKB	.		;PARITY TEST
RHCLR:	.BLKB	.		;CONTROLLER CLEAR
	.BLKB	.		;INPUT READY
	.BLKB	.		;OUTPUT READY
	.BLKB	.		;MASSBUS DATA BUS PARITY ERROR
	.BLKB	.		;MISS TRANSFER
	.BLKB	.		;PROGRAM ERROR
RHNEM:	.BLKB	.		;NON EXISTENT MEMORY
RHNED:	.BLKB	.		;NON EXISTENT DRIVE
	.BLKB	.		;PARITY ERROR
	.BLKB	.		;WRITE CHECK
	.BLKB	.		;DATA LATE

.EQUATE	RS03SZ,1024.,NOCREF
.EQUATE	RS04SZ,2048.,NOCREF

;   ERROR REGISTER BIT ASSIGNMENTS

.BSECT	,NOCREF
RHILF:	.BLKB	.		;ILLEGAL FUNCTION
RHILR:	.BLKB	.		;ILLEGAL REGISTER
RHRMR:	.BLKB	.		;REGISTER MODIFY REFUSED
	.BLKB	.		;BUS PARITY ERROR
	.BLKB	.		;UNUSED
	.BLKB	.		;UNUSED
	.BLKB	.		;UNUSED
	.BLKB	.		;UNUSED
	.BLKB	.		;UNUSED
RSAO:	.BLKB	.		;ADDRESS OVERFLOW
RSIAE:	.BLKB	.		;INVALID ADDRESS
RSWLE:	.BLKB	.		;WRITE LOCK
	.BLKB	.		;DRIVE TIMING
	.BLKB	.		;OPERATION INCOMPLETE
RHUNS:	.BLKB	.		;UNSAFE
	.BLKB	.		;DATA CHECK
.IIF	NDF	L$$IST,.LIST
.IIF	NDF	L$$IST,.ENABL	CRF
.IIF	NDF	L$IST&L$$IST,.NLIST
.IIF	NDF	L$IST&L$$IST,.NLIST	TOC
.IIF	NDF	L$IST&L$$IST,.DSABL	CRF
TITLE	MSCPDF,<[T]MSCP DEVICE DEFINITIONS>,0E,16-AUG-91,AJK/GPK/TPT/DBM/VAM

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

; EDIT HISTORY FOR MSCPDF

;+
;  000	AJK  03-NOV-81	ORIGINAL CODE
;  001	GPK  28-Jun-82	Added status subcodes, some cleaup
;  002  AJK  21-FEB-83  Separated MSCP definitions from DSKDEF
;  003	JHC  01-Sep-83	Remove $TYPE,$MATCH,etc. Add $OOPS for no replace
;  004	TPT  01-Nov-84	Add CM.QMR to CMT header and CM.UMR/CM.QUE to CMT
;  005	TPT  18-Dec-84	TMSCP specific stuff put in
;  006	TPT  15-Sep-85	Increase size of MU DDBs
;
;			[RSTS V9.3]
;  007  VAM  02-Jan-85	Add globals for new BBR algorithm.
;  008	TPT  14-Jan-85	Remove queueing entry point from AVLTBL entries
;  009  VAM  07-Feb-86	Bit and failure flag definitions for new BBR stuff.
;  010  VAM  14-Mar-86	US.OWL bit, $MXRCL/H and $TRANS added for BBR use.
;			Also, negate 003 above.
;  011	DBM  27-Oct-86	Add P.FMEN (TMSCP), and new tape format values
;  012  VAM  28-Oct-86	Add U.ST2 (Unit Status flags word 2) and associated
;			bits.  Also, add U.SVER (drive software rev) and
;			U.HVER (drive hardware rev) offsets.
;  013  VAM  12-Nov-86	Change size of USTSIZ (GUS save area in UCB).
;			Also, change US.VV to US.VI (to clarify it's function).
;			Add write protect flag-bits in Unit flag word (DBM)
;
;			[RSTS V9.4]
;  014  VAM  11-May-87	Add SS.ROV (Read-Only Volume Format) subcode bit.
;
;			[RSTS V9.5]
;  015	PJH  07-Jul-87	Modify MAXCLU to 64. from 16. for large cluster support
;
;			[RSTS V9.6]
;  016  VAM  10-Feb-88	Add BS.NMP (No multicopy protection) BBR flag bit.
;			Add $LGERR flag word.
;  017	KCG  16-Feb-88	Add U2.FMT to indicate FORMAT sequence in progress.
;			Add OP.FMT opcode for MSCP FORMAT command.
;  018  VAM  25-Feb-88	Make "LBN data lost" a flag instead of a status value.
;  019  VAM  24-Mar-88	Add P.TCNT (tape mark count) to Command Message offsets.
;
;			[RSTS V10.1]
;  020  VAM  15-Aug-91	Add definitions of DU.MAX and MU.MAX for INIT.
;-

.SBTTL	MSCPDF:MSCP class devices
.sbttl	********************************************
.sbttl	*           MSCP Definitions               *
.sbttl	********************************************

;+									;020
; The next two values are really defined in ROOT.MAC (by the DEVDEF	;020
; macro), but some modules in INIT need to use them at assembly time.	;020
; Therefore, they're defined here as well.  However, they're defined	;020
; here such that if anyone ever changes the values in ROOT without	;020
; changing them here also (or vice versa), a "Multiple definition"	;020
; error will occur when	INIT is linked.					;020
;-									;020

DU.MAX	==:	4.		;Maximum number of DU controllers.	;020
MU.MAX	==:	4.		;Maximum number of MU controllers.	;020

.sbttl	. Control Message Opcodes

.DSECT	,NOCREF

	.BLKB		;
OP.ABO:	.BLKB 		; ABORT Command
OP.GCS:	.BLKB 		; GET COMMAND STATUS Command
OP.GUS:	.BLKB		; GET UNIT STATUS Command
OP.SCC:	.BLKB		; SET CONTROLLER CHARACTERISTICS Command  
	.BLKB	2	;
OP.SEX:	.BLKB		; Serious Exception end msg. (see below)  
OP.AVL: .BLKB		; AVAILABLE Command
OP.ONL: .BLKB		; ONLINE Command
OP.SUC: .BLKB		; SET UNIT CHARACTERISTICS Command
OP.DAP: .BLKB		; DETERMINE ACCESS PATHS Command
	.BLKB	4	;
OP.ACC: .BLKB		; ACCESS Command
OP.CCD: .BLKB		; COMPARE CONTROLLER DATA Command
OP.ERS: .BLKB		; ERASE Command
OP.FLU: .BLKB		; FLUSH Command
OP.RPL: .BLKB		; REPLACE Command
	.BLKB	3	;
OP.FMT:	.BLKB		; FORMAT Command			;017
	.BLKB	7
OP.CMP: .BLKB 		; COMPARE HOST DATA Command
OP.RD: .BLKB		; READ Command
OP.WR: .BLKB		; WRITE Command
	.BLKB		;					;005
OP.WTM:	.BLKB		; WRITE TAPE MARK Command	(TMSCP)	;005
OP.REP:	.BLKB		; REPOSITION Command		(TMSCP)	;005
	.BLKB	32	;					;005
OP.AVA:	.BLKB		; AVAILABLE Attention Message
OP.DUP:	.BLKB		; DUPLICATE UNIT NUMBER Attention Message 
OP.ACP:	.BLKB		; ACCESS PATH Attention Message
	.BLKB	75	;
OP.END:	.BLKB		; End message flag (see note below)

;+
; Note: End packet opcodes (also called endcodes) are formed by adding
;		the end packet flag to the command opcode.
;	For example, a READ command's end packet contains the value
;		OP.RD+OP.END in its opcode field.
;	The Unknown Command End Packet contains just the end packet flag
;		(i.e., OP.END) in its opcode field.
;	The serious exception end message contains the sum of the end message
;		flag plus the serious exception opcode 
;		(i.e., OP.SEX+OP.END)
;	Command upcode bits 6 and 7 indicate the type of message (command,
;		end, or attention message).  Command opcode bits 3 through 5
;		indicate the command category (immediate, sequential, or
;		non-sequential) and whether or not the command includes a
;		buffer descriptor.
;-

.sbttl	. Generic Command modifiers

.BSECT	,NOCREF

	.BLKB	.	;
MD.RWD:	.BLKB	.	; REWIND		(TMSCP)	;005
MD.OBC:	.BLKB	.	; OBJECT COUNT		(TMSCP)	;005
MD.REV:	.BLKB	.	; REVERSE		(TMSCP)	;005
MD.UNL:	.BLKB 	.	; UNLOAD		(TMSCP)	;005
MD.WBV:	.BLKB	.	; Write-back (volatile)
MD.IMM: .BLKB	.	; IMMEDIATE COMPLETION	(TMSCP)	;005
MD.SSH: .BLKB	.	; Suppress Shadowing
MD.SER: .BLKB	.	; Suppress Error Recovery
MD.SEC: .BLKB	.	; Suppress Error Correction
MD.SCL: .BLKB	.	; Suppress Caching (low speed)
MD.SCH: .BLKB	.	; Suppress Caching (high speed)
MD.ERR: .BLKB	.	; Force Error
MD.CSE: .BLKB	.	; Clear Serious Exception
MD.CMP: .BLKB	.	; Compare
MD.EXP: .BLKB	.	; Express Request

; AVAILABLE Command Modifiers

.BSECT	,NOCREF

MD.SPD:	.BLKB	.	; Spin-down
MD.ALL:	.BLKB	.	; All Class Drivers

; FLUSH Command Modifiers

.BSECT	,NOCREF

MD.FEU: .BLKB	.	; Flush Entire Unit
MD.VOL:	.BLKB	.	; Volatile Only

; GET UNIT STATUS Command Modifiers

.BSECT	,NOCREF

MD.NXU:	.BLKB	.	; Next Unit

; ONLINE Command Modifiers

.BSECT	,NOCREF

MD.RIP:	.BLKB	.	; Allow Self Destruction
MD.IMF:	.BLKB	.	; Ignore Media Format Error

; ONLINE and SET UNIT CHARACTERISTICS Command Modifiers

.BSECT	,NOCREF

	.BLKB	.	;
	.BLKB	.	;
MD.SWP:	.BLKB	.	; Set Write Protect
MD.CWB:	.BLKB	.	; Clear Write-back Data Lost
MD.SHD:	.BLKB	.	; Shadow Unit Specified

; REPLACE Command Modifiers

.BSECT	,NOCREF

MD.PRI:	.BLKB	.	; Primary Replacement Block

.sbttl	. End Message Flags

.BSECT	,NOCREF

	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
EF.EOT:	.BLKB	.	; End of Tape				;005
EF.SEX:	.BLKB	.	; Serious Exception
EF.LOG:	.BLKB	.	; Error Log Generated
EF.BBU:	.BLKB	.	; Bad Block Unreported
EF.BBR:	.BLKB	.	; Bad Block Reported

.sbttl	. Controller Flags

.BSECT	,NOCREF

CF.576:	.BLKB	.	; 576 Byte Sectors
CF.SHD:	.BLKB	.	; Shadowing
CF.MLH:	.BLKB	.	; Multi-host
	.BLKB	.	;
CF.THS:	.BLKB	.	; Enable This Host's Error Log Messages  
CF.OTH:	.BLKB	.	; Enable Other Host's Error Log Messages 
CF.MSC:	.BLKB	.	; Enable Miscellaneous Error Log Messages
CF.ATN:	.BLKB	.	; Enable Attention Messages
	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
CF.RPL:	.BLKB	.	; Controller Initiated Bad Block Replacement

.sbttl	. Unit Flags

.BSECT	,NOCREF

UF.CMR:	.BLKB	.	; Compare Reads
UF.CMW: .BLKB	.	; Compare Writes
UF.576:	.BLKB	.	; 576 Byte sectors
	.BLKB	.	; Reserved (Data Caching)			;013
	.BLKB	.	;
	.BLKB	.	;
UF.WBN:	.BLKB	.	; Write-back (non-volatile)
UF.RMV:	.BLKB	.	; Removeable Media
UF.WPD:	.BLKB	.	; Write Protect (Data Safety)			;013
UF.EXA:	.BLKB	.	; Exclusive Access				;013
UF.SCL: .BLKB	.	; Suppress Caching (low speed)
UF.SCH: .BLKB	.	; Suppress Caching (high speed)
UF.WPS: .BLKB	.	; Write Protect (software or volume)
UF.WPH: .BLKB	.	; Write Protect (hardware)
UF.INA: .BLKB	.	; Inactive Shadow Set Unit
UF.RPL: .BLKB	.	; Controller Initiated Bad Block Rplcmnt 

.sbttl	. Command Message Offsets

.DSECT	,NOCREF

P.CRF:	.BLKB	4	; Command reference number
P.UNIT:	.BLKB	2	; Unit number
	.BLKB	2	; Reserved
P.OPCD:	.BLKB		; Opcode
	.BLKB		; Reserved
P.MOD:	.BLKB	2	; Modifiers
P.BCNT:	.BLKB	4	; Byte count
P.TCNT:			; Tape Mark Count (used in REPOSITION command)	;019
P.BUFF:	.BLKB	14	; Buffer descriptor
P.LBN:	.BLKB	4	; Logical Block Number

.EQUATE	P.LENG, 48.	; Control Message Length

.sbttl	.   ABORT and GET COMMAND STATUS Command Message Offsets

.DSECT	,NOCREF

	.BLKB	14
P.OTRF: .BLKB	4	; Outstanding reference number

.sbttl	.   ONLINE and SET UNIT CHARACTERISTICS Command Message Offsets

.DSECT	,NOCREF

	.BLKB	14	;
	.BLKB	2	; Reserved
P.UNFL:	.BLKB	2	; Unit flags
	.BLKB	14	; Reserved
P.DVPM:	.BLKB	4	; Device dependent parameters
P.SHUN:	.BLKB	2	; Shadow unit
P.CPSP:	.BLKB	2	; Copy speed

.sbttl	.   REPLACE Command Message Offsets

.DSECT	,NOCREF

	.BLKB	14	;
P.RBN:	.BLKB	14	; Replacement block number

.sbttl	.   SET CONTROLLER CHARACTERISTICS Command Message Offsets

.DSECT	,NOCREF

	.BLKB	14	;
P.VRSN:	.BLKB	2	; MSCP version
P.CNTF:	.BLKB	2	; Controller flags
P.HTMO:	.BLKB	2	; Host timeout
	.BLKB	2	; Reserved 
P.TIME:	.BLKB	10	; Quad-word time and date

.sbttl	. End and Attention Message Offsets

.sbttl	.   Generic End Message Offsets

.DSECT	,NOCREF

P.CRF:	.BLKB	4	; Command reference number
P.UNIT:	.BLKB	2	; Unit number
	.BLKB	2	; Reserved
P.OPCD:	.BLKB	1	; Opcode
P.FLGS:	.BLKB	1	; End message flags
P.STS:	.BLKB	2	; Status
P.BCNT:	.BLKB	4	; Byte count
	.BLKB	14	; Reserved
P.FBBK:	.BLKB	4	; First bad block

.sbttl	.   ABORT and GET COMMAND STATUS End Message Offsets

.DSECT	,NOCREF

	.BLKB	14	;
P.OTRF:	.BLKB	4	; Outstanding reference number
P.CMST:	.BLKB	2	; Command status

.sbttl	.   GET UNIT STATUS End Message Offsets

.DSECT	,NOCREF

	.BLKB	14	;
P.MLUN:	.BLKB	2	; Multi-unit code
P.UNFL:	.BLKB	2	; Unit flags
	.BLKB	4	; Reserved
P.UNTI:	.BLKB	10	; Unit identifer
P.MEDI:	.BLKB	4	; Media type identifier
P.SHUN:	.BLKB	2	; Shadow unit
P.SHST:	.BLKB	2	; Shadow status
P.TRCK:	.BLKB	2	; Track size
P.GRP:	.BLKB	2	; Group size
P.CYL:	.BLKB	2	; Cylinder size
	.BLKB	2	; Reserved
P.RCTS:	.BLKB	2	; RCT table size
P.RBNS:	.BLKB	1	; RBNs / track
P.RCTC:	.BLKB	1	; RCT copies

;TMSCP	SPECIFIC OFFSETS						;0??

P.FORM =: P.SHUN		;Tape format employed (density)		;0??
P.SPED =: P.SHST		;Tape speed				;0??
P.FMEN =: P.TRCK		;Tape format menu			;0??

.sbttl	.   ONLINE and SET UNIT CHAR. End Message
.sbttl	.     and AVAIL. Attention Message offsets

.DSECT	,NOCREF

	.BLKB	14	;
P.MLUN:	.BLKB	2	; Multi-unit code
P.UNFL:	.BLKB	2	; Unit flags
	.BLKB	4	; Reserved
P.UNTI:	.BLKB	10	; Unit Identifier
P.MEDI:	.BLKB	4	; Media type identifier
P.SHUN:	.BLKB	2	; Shadow unit
P.SHST:	.BLKB	2	; Shadow status
P.UNSZ:	.BLKB	4	; Unit size
P.VSER:	.BLKB	4	; Volume serial number

.sbttl	.   SET CONTROLLER CHARACTERISTICS End Message offsets

.DSECT	,NOCREF

	.BLKB	14	;
P.VRSN:	.BLKB	2	; MSCP version
P.CNTF:	.BLKB	2	; Controller flags
P.CTMO:	.BLKB	2	; Controller timeout
	.BLKB	2	; Reserved
P.CNTI:	.BLKW	10	; Controller ID

.sbttl	. Error Log Message Offsets

.sbttl	.   Generic Error Log Message Offsets

.DSECT	,NOCREF

L.CRF:	.BLKB	4	; Command reference number
L.UNIT:	.BLKB	2	; Unit number
L.SEQ:	.BLKB	2	; Sequence number
L.FMT:	.BLKB	1	; Format
L.FLGS:	.BLKB	1	; Error log message flags
L.EVNT:	.BLKB	2	; Event code
L.CNTI:	.BLKB	10	; Controller ID
L.CSVR:	.BLKB	1	; Controller software version
L.CHVR:	.BLKB	1	; Controller hardware version
L.MLUN:	.BLKB	2	; Multi-unit code
L.UNTI:	.BLKB	10	; Unit ID
L.USVR:	.BLKB	1	; Unit software version
L.UHVR:	.BLKB	1	; Unit hardware version
	.BLKB	2	; Format dependent
L.VSER:	.BLKB	4	; Volume serial number

.sbttl	.   Host Memory Access Errors with Bus Address
.sbttl	.     Error Log Message Offsets

.DSECT	,NOCREF

	.BLKB	30	;
L.BADR:	.BLKB	4	; Bus address

.sbttl	.   Disk Transfer Errors Error Log Message Offsets

.DSECT	,NOCREF

	.BLKB	42	;
L.GRP:	.BLKB	2	; Group
L.VSER:	.BLKB	4	; Volume serial number
L.CYL:	.BLKB	4	; Cylinder
L.TRCK:	.BLKB	2	; Track
L.SCTR:	.BLKB	2	; Sector
L.LBN:	.BLKB	4	; Logical block number
L.LVL:	.BLKB	1	; Level
L.RTRY:	.BLKB	1	; Retry

.sbttl	.   SDI Errors Error Log Message Offsets

.DSECT	,NOCREF

	.BLKB	42	;
L.GRP:	.BLKB	2	; Group
L.VSER:	.BLKB	4	; Volume serial number
L.CYL:	.BLKB	4	; Cylinder
L.SDI:	.BLKB	14	; SDI information

.sbttl	.   Small Disk Errors Error Log Message Offsets

.DSECT	,NOCREF

	.BLKB	42	;
L.SCYL:	.BLKB	2	; Cylinder
L.VSER:	.BLKB	4	; Volume serial number

L.LENG	=	60.	; Response length (less envelope)

.sbttl	.   Error Log Message Format Codes

.DSECT	,NOCREF

FM.CNT:	.BLKB	1	; Controller Errors
FM.BAD:	.BLKB	1	; Host Memory Access Errors with Bus Addr.
FM.DSK:	.BLKB	1	; Disk Transfer Errors
FM.SDI:	.BLKB	1	; SDI Errors
FM.SDE:	.BLKB	1	; Small Disk Errors


.sbttl	.   Error Log Message Flags

.BSECT	,NOCREF

LF.SNR:	.BLKB	.	; Sequence Number Reset
	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
	.BLKB	.	;
LF.CON:	.BLKB	.	; Operation Continuing
LF.SUC:	.BLKB	.	; Operation Successful

.sbttl	. Status and Event Code Definitions

.DSECT	,NOCREF

ST.SUC:	.BLKB		; Success
ST.CMD:	.BLKB		; Invalid Command
ST.ABO:	.BLKB		; Command Aborted
ST.OFL:	.BLKB		; Unit-Offline
ST.AVL:	.BLKB		; Unit-Available
ST.MFE:	.BLKB		; Media Format Error
ST.WPR:	.BLKB		; Write Protected
ST.CMP:	.BLKB		; Compare Error
ST.DAT:	.BLKB		; Data Error
ST.HST:	.BLKB		; Host Buffer Access Error
ST.CNT:	.BLKB		; Controller Error
ST.DRV:	.BLKB		; Drive Error
ST.FMT:	.BLKB		; FORMATTER ERROR			;005
ST.BOT:	.BLKB		; BOT ENCOUNTERED			;005
ST.TM:	.BLKB		; TAPE MARK ENCOUNTERED			;005
	.BLKB		; RESERVED				;005
ST.RDT:	.BLKB		; RECORD DATA TRUNCATED			;005
ST.POL:	.BLKB		; POSITION LOST				;005
ST.SEX:	.BLKB		; SERIOUS EXCEPTION			;005
ST.LED:	.BLKB		; LOGICAL END OF TAPE DETECTED		;005
	.BLKB	13	;					;005
ST.MSK:			; Status / event code mask
ST.DIA:	.BLKB		; Message from an internal diagnostic
ST.SUB:	.BLKB		; Sub-code multiplier


.sbttl	.   Subcode definitions

.DSECT	,NOCREF		;"Success" subcodes

SS.NOR:	.BLKB	ST.SUB	;Normal
SS.SDI:	.BLKB	.	;Spin-down ignored
SS.CON:	.BLKB	.	;Still connected
SS.DUP:	.BLKB	.	;Duplicate unit number
SS.ONL:	.BLKB	.	;Already online
SS.STO:	.BLKB	.	;Still online
	.BLKB	.	;Reserved					;014
	.BLKB	.	;Reserved					;014
SS.ROV:	.BLKB	.	;Read-Only Volume Format			;014

.DSECT	,NOCREF		;"Unit offline" subcodes

SS.UNK:	.BLKB	ST.SUB	;Unit unknown
SS.OFF:	.BLKB	.	;Unit turned off
SS.RIP:	.BLKB	.	;Unit is inoperative
SS.DUP:	.BLKB	.	;Duplicate unit number
SS.DIA:	.BLKB	.	;Disabled by diagnostic or field service

.sbttl	. Mass Storage Controller Model ID

.DSECT	,NOCREF
	.BLKB		; Reserved
HSC50:	.BLKB		; HSC
UDA50:	.BLKB		; UDA
AZTEC:	.BLKB		; Aztec

.sbttl	********************************************
.sbttl	* Class Driver/Port Driver Data Structures *
.sbttl	********************************************

;+
; This section describes the MSCP device data structures in detail. The
; following chart maps the relationships between MSCP data structures:
;
;
;
;
; RAWMEM           !			MSCP WORK AREA
; ======	   !			==============
;		   !
;   UMT		   !			    
; +-----+	   !		+----------+- - - - - - - - ->+
; !UNT 0!---!	   !            !   CCB    ! UCBs	      !
; +-----+   !	   !            !FIRST CTRL! CONTROLLER RINGS !
; 	    !	   !            !          ! RING PACKETS     !
; .     .   !	   !		!          ! OLDEST PACKETS   !
;	    !	   !	        +----------+- - - - - - - - ->+
; +-----+   !	   !            .          .
; !UNT n!   !	   !            +----------+- - - - - - - - ->+
; +-----+   !	   !      !---->!   CCB    !                  !
;	    !	   !      !     !FOR CTRL x!                  !
;	    !	   !      !     !          !                  !
;	    !	   !      !     !          !                  !
;	    !	   !      !     +----------+- - - - - - - - ->+
;	    !	   !      !     .                             .
;   CMT	    !	   !      !     .                             .
; +-----+   !	   !      !     .                             .
; !CTR 0!   !	   !      !     .                             .
; ! MAP !   !	   !	  !     .                             .
; +-----+   !      !      !     +----------+- - - - - - - - ->+
;	    !	   !      !	!   CCB	   !                  !
; .     .   !	   !      !	!LAST CTRL !                  !
;	    !	   !	  !	!          !                  !
; +-----+   !	   !	  !     !          !                  !
; !CTR x!<--!	   !	  !     +----------+- - - - - - - - ->+
; ! MAP !---------------->!
; +-----+	   !
;		   !
; .     .	   !
;		   !
; +-----+	   !
; !CTR n!	   !
; ! MAP !	   !
; +-----+	   !
;
;-


.sbttl	. Unit Mapping table (UMT)

;+
; The UMT table maps each unit to it's associated controller data
; structure.  A zero entry in this table means corresponding unit
; is unknown to the system.  Unit # times 4 is used to index into
; the UMT.
;			   *** NOTE ***
;		(I) means, must be filled in by INIT.
;		(D) means, must be filled in by the DRIVER.
;
;         UMT			UMT table format
; +-----------------+
; !Unt0 index to CMT! 		Offset to CMT table for unit 0.(I)
; +-----------------+
; !UCB offset in CCB!		Offset to unit 0 UCB.  If zero, unit unknown!
; +-----------------+		  (D)
; .		  .
; .		  .
; +-----------------+
; !Unt(n) idx to CMT!		Offset to CMT table for unit n.(I)
; +-----------------+
; !UCB offset in CCB!		Offset to unit n UCB.(D)
; +-----------------+
;				Where, N=number of MSCP units on system
;				       and n=N-1.
;-

.DSECT	,NOCREF

UM.CMT:	.BLKW	1		; Pointer to units controller entry in CMT
UM.UCB:	.BLKW	1		; UCB address
UMTSIZ:				; UMT entry size

.sbttl	. Unit Control Block (UCB) definition

;+
; The UCB contains unit characteristics and unit control
; infomation.   The list of 8 (4 extra for AZTEC) UCBs
; associated with a given controller starts immediatelly
; after the Controller Control Block (CCB).  The UCB
; is set up by the driver when it is first executed.
;-

.DSECT	,NOCREF
				; UCB STARTS IMMEDIATELY AFTER THE CCB
U.UNIT:	.BLKW	1		; Unit number.
U.STAT: .BLKW 	1		; Unit status (internal stat) word 1.	;012
U.ST2:	.BLKW	1		; Unit status (internal stat) word 2.	;012
U.RDCT:	.BLKW	1		; Redirect CMT pointer used when unit plugs
				; .. are moved from controller to controller.
				; --------------------------
				; GET UNIT STATUS save area.
				; --------------------------
U.MLUN:	.BLKB	2		; Multi-unit code
U.UNFL:	.BLKB	2		; Unit flags
	.BLKB	4		; Reserved
U.UNTI:	.BLKB	10		; Unit identifer
U.MEDI:	.BLKB	4		; Media type identifier
U.SHUN:	.BLKB	2		; Shadow Unit
U.SHST:	.BLKB	2		; Shadow status
U.TRCK:	.BLKB	2		; Track size
U.GRP:	.BLKB	2		; Group size
U.CYL:	.BLKB	2		; Cylinder size
U.SVER:	.BLKB	1		; Unit software revision code.		;012
U.HVER:	.BLKB	1		; Unit hardware revision code.		;012
U.RCTS:	.BLKB	2		; RCT table size
U.RBNS:	.BLKB	1		; RBNs / track
U.RCTC:	.BLKB	1		; RCT copies
U.UNSZ:	.BLKW	2		; Unit size save area. (obtained from ONLINE
				; .. end packet)
USTSIZ	=	.-U.MLUN	; Unit status save area size		;013
U.VSER:	.BLKW	2		; Volume serial number. (obtained from ONLINE
				; .. end packet) 
UCBSIZ:				; NEXT UCB STARTS HERE

; Flags in U.UNIT

.EQUATE	NOUNIT, 100000		; Bit indicates no unit assigned to this UCB.

;TMSCP SPECIFIC OFFSETS							;005

U.FORM = U.SHUN			;TAPE FORMAT EMPLOYED (DENSITY)		;005
U.SPED = U.SHST			;TAPE SPEED				;005
U.FMEN = U.TRCK			;TAPE FORMAT MENU (SUPPORTED DENSITIES)	;005

.SBTTL	.   U.STAT Flags

;+
; Unit Status Flags
;-

.BSECT	,NOCREF

US.AVL:	.BLKB	.	; Controller is offline to host.  Unit was made
			; available via the AVAILABLE command.  GET UNIT
			; STATUS and ONLINE must be executed to bring the
			; unit online.

US.VUS:	.BLKB	.	; Indicates unit status verification in progress
			; due to an available attention message.

US.BBR:	.BLKB	.	; BBR in progress.  Disables any further I/O until
			; BBR is done.  Also, when set, I/O done is returned
			; to BBR processor section of the driver.

US.BOL:	.BLKB	.	; This bit is used to remember that an ONLINE
			; command must be sent in behalf of this unit.
			; Set when ONLINE command must be delayed due to
			; zero command credit/debit count.

US.OLP:	.BLKB	.	; Online command in progress flag bit.

US.GUS:	.BLKB	.	; Indicates online is in progress. Unit status is being
			; obtained. Cleared when unit status is received.
US.WCK:	.BLKB	.	; Write check requests on unit.
US.RCK:	.BLKB	.	; Read check all requests on unit.
US.VI:	.BLKB	.	; Volume Invalid Flag.  If set, indicates that	;013
			; an Available attention message has been	;013
			; received for the unit (meaning that it has	;013
			; gone offline and then back online).  Cleared	;013
			; by Online processing (ONL.DU) if the volume	;013
			; has definitely not been changed, or by DUSERV	;013
			; when the volume is successfully mounted.	;013
US.UMR:	.BLKB	.	; UNIT IS STALLED PENDING UMRs
US.LCK:	.BLKB	.	; UNIT LOCKED PENDING RESOLUTION OR ECA.
US.ECK:	.BLKB	.	; UNIT IS "ERROR CHECK" STATE.
US.SYC:	.BLKB	.	; DRIVER ATTEMPTING TO SYNCHRONIZE WITH UNIT.
US.DED:	.BLKB	.	; UNIT IS DEAD.  HOLRY SHEET!
US.OWL:	.BLKB	.	; Set by BBR when a nasty replacement error occurs.
			; Tells the driver to always bring unit online with
			; the MD.SWP (Set Write Protect) modifier.
US.ONL:	.BLKB	.	; When set, unit is logically online to the driver.

;+
;	Flags in U.ST2
;-

.BSECT	,NOCREF

U2.AMU:	.BLKB	.	; Set by AVLATN (in CPH) when an attention	;012
			; interrupt is received for a unit that is	;012
			; already mounted.  Checked by DUSERV (in	;012
			; DUDSK) before servicing the unit.  If the	;012
			; unit is still mounted, DUSERV returns the	;012
			; request with an error; if the unit is not	;012
			; mounted, DUSERV clears this bit and goes	;012
			; ahead with the request.			;012
U2.FMT:	.BLKB	.	; Set by either GUSEND or FORMAT (Part 1).	;017
			; Indicates that a format operation is in	;017
			; progress.  It affects AVL.DU (DUDSK), ONLINE	;017
			; (CPH), and PROREQ (CPH).  Cleared upon 	;017
			; successful completion in FMT.DU (DUDSK) or	;017
			; UNTOFL (CPH) if failed. Only valid for disk	;017
			; units.					;017


.sbttl	. Controller Mapping Table (CMT) definition

;**********************************************************************
;* THE FOLLOWING IS INCLUDED HERE FOR DOCUMENTATION PURPOSES.  THE CMT*
;* IS DEFINED IN "KERNEL.MAC".  THIS WAS DONE, SO TBL CAN BE ASSEMBLED*
;* WITHOUT THE PREFIX FILE "MSCPDF.MAC".  TO KEEP FROM HAVING TO COPY *
;* "MSCPDF.MAC" ONTO THE DISTRIBUTION TAPE.			      *
;**********************************************************************

;+
; The CMT table resides in the low read/write monitor space.  The
; data contained in this table links controllers to their appropriate
; data structures in XBUF.  CMT table contains the following information:
;
;			   *** NOTE ***
;		(I) means, filled in by INIT.
;		(D) means, filled in by the DRIVER.
;-

.DSECT	-30,NOCREF
			; ---------------------------------
			; OFFSETS TO CMT HEADER INFORMATION
			; ---------------------------------
CM.HDR:			; Size of CMT header * -1			;007
CM.ICS:.BLKW	1	; Currently active controller CSR SAVE FOR INIT
CM.IC6:.BLKW	1	; Curr. active cont. APR6 mapping SAVE FOR INIT
CM.IMK:.BLKW	1	; Curr. active cont. init mask word SAVE FOR INIT
CM.IRG:.BLKW	1	; Curr. active cont. response RING virtual addr
			; .. SAVE FOR INIT
CM.UOF:.BLKW	1	; Offset to compute unibus address(D)
CM.DNE:.BLKW	1	; TSQ done queue				
CM.QMR:.BLKW	1	; Controller request stalled queue (UMR shortage) ;004
CM.CRQ:.BLKW	1	; Controller service request queue root word
			; INITIALLY -1 to indicate work area must be inited!
CM.CCT:.BLKB	1	; Controller count (Both tape and disk)	
CM.DCT:.BLKB	1	; Disk controller count			
CM.AWS:.BLKW	1	; Available MSCP work area size.
CM.BA6:.BLKW	1	; APR6 mapping to BBR comm. area(D)
CM.BRS:.BLKB	1	; Bad Block replacement status word
	BBR.CP=1	;   BBR waiting for command packets
	BBR.IO=2	;   BBR waiting for I/O completion
	BBR.AC=4	;   BBR active flag bit
CM.BRM:.BLKB	1	; Bit map of controllers requiring BBR
.ASSUME CM.BRS EQ -2	; THE 1S HEADER INFORAMTION MUST BE AT CMT-2
			; --------------------------------
			; OFFSETS WITHIN CMT TABLE ENTRIES
			; --------------------------------
CM.CRT:.BLKW	1	; Controller service request queue thread word
CM.UMR:.BLKW	1	; Unibus Mapping Register wait queue thread word
CM.QUE:.BLKW	1	; HEAD OF TSQ/DSQ LIST			;004
CM.AP6:.BLKW	1	; APR6 to CCB (D)
CM.COF:.BLKW	1	; Offset to CCB (D)
CM.WKA:.BLKW	1	; Work area allocated for controller
CM.CSR:.BLKW	1	; CSR/Initialize-poll register.(I)
CM.VTR:.BLKB	1	; UDA (interrupt vector)/4 save area.(I)
CM.FLG:.BLKB	1	; Controller flags (# units, disk, tape) (I)	;006
CM.RSP:.BLKB	1	; Response ring size in powers of 2 (I)
CM.CMD:.BLKB	1	; Command ring size in powers of 2 (I)
CMTSIZ:		; CMT entry size

.sbttl	.   CM.FLG Flag bit definitions
;+
; Bit assignments for CM.FLG
;-
.BSECT	,NOCREF
	.BLKB	.	; Number of units on controller (3 bits)	;006
	.BLKB	.	;  Bit 2					;006
	.BLKB	.	;  Bit 3					;006
CF.UNT	=:	.-1	; Mask to retrieve unit count			;006
	.BLKB	.	; Reserved					;006
	.BLKB	.	; Reserved					;006
	.BLKB	.	; Reserved					;006
CF.TAP:	.BLKB	.	; Controller supports tapes			;006
CF.DSK:	.BLKB	.	; Controller supports disks			;006
.ASSUME	CF.DSK	EQ 200	; Better be one byte				;006

.sbttl	. Controller Control Block (CCB) definition

;+
; The controller control block contains all flags, pointers,
; status information necessary for operating the controller.
; This information is accessed by the driver via the CMT table
; in low read/write memory of the monitor.  This area is set
; up by the driver as part of it's initialization when it is
; first called for I/O.
;-

.DSECT	,NOCREF

C.STAT:	.BLKW	1	; Controller status flags
C.CMST:	.BLKW	2	; Oldest outstanding command status words.
C.CMDS:	.BLKW	1	; Controller command limit.  Credit available.
C.PDVR:	.BLKW	1	; Port driver available table entry pointer.
C.RTRY:	.BLKW	1	; Retry count. To down count initialization.
C.CMT:	.BLKW	1	; Controller mapping table pointer
C.UMT:	.BLKW	1	; unit mapping table pointer
C.TIMR:	.BLKW	1	; Controller timer
C.NUNT:	.BLKB	1	; Number of units on controller
	.BLKB	1	; AVAILABLE FOR USE!
			; ------------------------------------------
			; Oldest outstanding commands list work area
			; ------------------------------------------
C.OLDL:	.BLKW	1	; Oldest commands outstanding list root
			; -----------------------------------------
			; Controller Ring Initialization Constants.
			; -----------------------------------------
C.RSP:	.BLKB	1	; Response ring size.
C.CMD:	.BLKB	1	; Command ring size.
C.CPKT:	.BLKW	1	; Pointer to current packet. Used to dynamically
			; init the rings within the driver.
C.INIT:	.BLKW	2	; Controller initialization state.
C.ITBL:	.BLKW	4	; Controller initialization table.
			; ------------------------------------
			; Controller Characteristics Save Area
			; ------------------------------------

C.VRSN:	.BLKB	2	; MSCP version
C.CNTF:	.BLKB	2	; Controller flags
C.CTMO:	.BLKB	2	; Controller timeout
	.BLKB	2	; Reserved
C.CNTI:	.BLKB	10	; Controller ID
CCSIZE	= .-C.VRSN	; Controller characteristics save area size
			; -------------
			; Ring Pointers
			; -------------
C.CRSP:	.BLKW	1	; Current response ring buffer pointer.
C.VCRP:	.BLKW	1	; Virtual addr of curr.resp.ring buff's packet.
C.FRSP:	.BLKW	1	; First response ring buffer pointer.
C.VFRP:	.BLKW	1	; Virtual addr of first resp.ring buff's packet.
C.LRSP:	.BLKW	1	; Last response ring buffer pointer.
C.VLRP:	.BLKW	1	; Virtual addr of last resp.ring buff's packet.
C.CCMD:	.BLKW	1	; Current command ring buffer pointer.
C.VCCP:	.BLKW	1	; Virtual addr of curr.cmd.ring buff's packet.
C.FCMD:	.BLKW	1	; First command ring buffer pointer.
C.VFCP:	.BLKW	1	; Virtual addr of 1st cmd.ring buff's packet.
C.LCMD:	.BLKW	1	; Last command ring buffer pointer.
C.VLCP:	.BLKW	1	; Virtual addr of last cmd.ring buff's packet.
CCBSIZ:			; START OF UCBs FOR CONTROLLER .


.sbttl	.   C.STAT Flag bit definitions

;+
; CCB status word definitions
;-

.BSECT	,NOCREF

CS.GCS:	.BLKB	.	; Get command status sub-state.  This state is entered
			; when the oldest command to the controller times out.

CS.SCC:	.BLKB	.	; If set, indicates virtual circuit is open.
			; Set controller charactersitics in progress.

CS.INV:	.BLKB	.	; If set, indicates controller virtual circuit
			; is being initialized.

CS.CRS:	.BLKB	.	; Controller requesting service flag bit

CS.TMO:	.BLKB	.	; Controller timed out flag bit

CS.VFU:	.BLKB	.	; Controller is verifying it's units.  It is used
			; to free p UCBs whose units have gone away.

CS.VCO:	.BLKB	.	; Virtual circuit open flag bit

CS.ONL:	.BLKB	.	; If set, controller Online.


.sbttl	.   Oldest commands outstanding list entry offsets

;+
; The oldest outstanding command list consists of a set
; of packets, ordered FIFO, each containing the command
; reference number, op code and unit number of the outstanding
; command.
;
; the offsets are:
;-

.DSECT	,NOCREF

O.CHAN:	.BLKW	1	; Packet chain word
O.OTRF:	.BLKW	2	; Outstanding command reference number
O.OPCD:	.BLKB	1	; Op code
O.OTUN:	.BLKB	1	; Unit number
OLDSIZ:			; Old packet size

.sbttl	. Bad Block Replacement (BBR) Data Structures

;+
; There is only one impure area reserved for the bad block
; replacement in the driver.
;
; 		  *** NOTE ***
; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
; !!!!! THIS AREA MUST START ON A UMM BOUNDRY !!!!!
; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;
;-

.DSECT	140000,NOCREF

;+
; BBR ROUTINE CONTEXT SAVE AREA FOR SUSPEND AND RESUME BBR ROUTINES.
; -

$SPSAV:	.BLKW	1		; STACK POINTER SAVE AT ENTRY
$SAVR1:	.BLKW	1		; SAVE I/O PACKET POINTER
$ENDCX:	.BLKW	1		; END OF SAVED DATA IN "CONTEX" SAVE AREA
$CONTX:	.BLKW	30.		; BBR context save area.		;009
$ENDSA:				; End of context save area.		;007

$UCB:	.BLKW	1		; UCB SAVE AREA
$CMT:	.BLKW	1		; CMT SAVE OF CURRENT BBR
$CCB:	.BLKW	1		; CCB SAVE OF CURRENT BBR
$DSQ:	.BLKW	1		; DSQ ADDR SAVE
$USTAT:	.BLKW	1		; UNIT STATUS SAVE AREA

;+
; I/O PARAMETERS FOR BBR
;-

$XFRSZ:	.BLKW	1		; TRANSFER SIZE

; *** NOTE ***
; DO NOT CHANGE THE ORDER OF THE FOLLOWING 2 LINES (HIGH WORD MUST COME 1ST)

$LBNH:	.BLKW	1		; HIGH BLOCK # OF BLOCK TO BE TRANSFERED
$LBNL:	.BLKW	1		; LOW BLOCK # OF BLOCK TO BE TRANSFERED

$RPLBL:	.BLKW	1		; REPLACEMENT BLOCK NUMBER (LOW ORDER)
$RPLBH:	.BLKW	1		; REPLACEMENT BLOCK NUMBER (HIGH ORDER)
$DSKBF:	.BLKW	1		; BUFFER TO TRANSFER TO/FROM
$IOMOD:	.BLKW	1		; I/O MODIFIER SAVE AREA
$UNIT:	.BLKW	1		; UNIT NUMBER
$IOFUN:	.BLKW	1		; I/O FUNCTION SAVE AREA
$BDLBN:	.BLKB	1		; Flag for "badness" of LBN;		;010
				; 0 = No errors found in any operation.	;010
				; >0 = Error in save/restore user data.	;010
				; <0 = Error in Step 7 (test patterns).	;010
$RECUR:	.BLKB	1		; Phase 2 recursion counter.		;007
$RECP2:	.BLKB	1		; Phase 2 recovery flag.		;007
	.EVEN
$TMPRF:	.BLKW	1		; Temporary RCTFLG (for internal use).	;007
$TRANS:	.BLKW	1		; Flag showing how to handle transients.;010
$LGERR:	.BLKW	1		; Error logging flag (used by $DSKIO)	;016
				;  0 = Do not log errors for this I/O	;016
				;  <>0 = Log errors for this I/O	;016

;+
; BUFFER SPACE 
;-

$LBN:	.BLKB	512.		; BUFFER FOR DATA FROM BAD LBN
$SEC0:	.BLKB	512.		; BUFFER FOR SECTOR ZERO OF REPL CONTROL TABLE
	VSN0=$SEC0		;	VOLUME SERIAL NUMBER, LOW ORDER
	VSN1=VSN0+2		;	VOLUME SERIAL NUMBER
	VSN2=VSN1+2		;	VOLUME SERIAL NUMBER
	VSN3=VSN2+2		;	VOLUME SERIAL NUMBER, HIGH ORDER
	RCTFLG=VSN3+2		;	FLAG WORD
		RF.WB=1		;		WRITE-BACK CACHING IN USE FLAG
		RF.FE=200	;		FORCED ERROR FLAG
		RF.BR=20000	;		BAD RBN FLAG
		RF.P2=40000	;		PHASE 2 REPLACEMENT IN PROGRESS
		RF.P1=100000	;		PHASE 1 REPLACEMENT IN PROGRESS
				;	RESERVED WORD
	RLBNL=RCTFLG+4		;	LBN BEING REPLACED, LOW ORDER
	RLBNH=RLBNL+2		;	LBN BEING REPLACED, HIGH ORDER
	URBNL=RLBNH+2		;	RBN BEING USED, LOW ORDER
	URBNH=URBNL+2		;	RBN BEING USED, HIGH ORDER
	RRBNL=URBNH+2		;	RBN BEING REPLACED, LOW ORDER
	RRBNH=RRBNL+2		;	RBN BEING REPLACED, HIGH ORDER
	CID0=RRBNH+2		;	CACHE ID, LOW ORDER
	CID1=CID0+2		;	CACHE ID
	CID2=CID1+2		;	CACHE ID
	CID3=CID2+2		;	CACHE ID, HIGH ORDER
	CIN0=CID3+2		;	CACHE INCARNATION NUMBER, LOW ORDER
	CIN1=CIN0+2		;	CACHE INCARNATION NUMBER, HIGH ORDER
	TIM0=CIN1+2		;	VAX FORMAT DATE AND TIME, LOW ORDER
	TIM1=TIM0+2		;	VAX FORMAT DATE AND TIME, HIGH ORDER
$RCTBF:	.BLKB	512.		; FIRST BUFFER FOR REPLACEMENT CONTROL TABLE
$RCTB1:	.BLKB	512.		; SECOND BUFFER FOR REPLACEMENT CONTROL TABLE

;+
; REPLACEMENT CONTROL TABLE - DESCRIPTOR FLAG BYTE DEFINITIONS
;-

DF.SEC=010000			; 1=SECONDARY, 0=PRIMARY
DF.ALL=020000			; 1=ALLOCATED, 0=UNALLOCATED
DF.UNU=040000			; 1=UNUSEABLE, 0=USEABLE
DF.NUL=100000			; 1=NULL ENTRY, 0=NOT NULL ENTRY

;+
; GENERAL INTERNAL STORAGE
;-

;									;009+
; $IOST is a 2-word status block that is used to hold status information
; returned in the End Message of every disk operation.  $IOST is loaded
; by $DSKIO in BBRSUB.
;
; The layout of each word is as follows;
;
;           high byte       low byte
;	--------------------------------
;      |   End Flags   |  Major Status  |      $IOST
;       --------------------------------
;
;          bits 5-15        bits 0-4
;	--------------------------------
;      |    Sub-code     | Major Status |      $IOST+2
;       --------------------------------
;									;009-

$IOST:	.BLKW	2		; I/O STATUS BLOCK FOR DISK I/O

$BLBNL:	.BLKW	1		; FIRST BAD BLOCK REPORTED BY CONTROLLER
$BLBNH:	.BLKW	1		; ...

$PLBNL:	.BLKW	1		; LBN IN FIRST COPY OF THE TABLE
$PLBNH:	.BLKW	1		; ... WHERE THE PRIMARY RBN IS STORED
$PLBNO:	.BLKW	1		; OFFSET IN $PLBNH:$PLBNL OF PRIMARY RBN

$MXRCL:	.BLKW	1		; Last LBN of RCT, low order bits.	;010
$MXRCH:	.BLKW	1		; Last LBN of RCT, high order bits.	;010

; DO NOT CHANGE THE ORDER OF THE FOLLOWING LOCATIONS

$RCTSZ:	.BLKW	1		; REPLACEMENT CONTROL TABLE SIZE
$TRKSZ:	.BLKW	1		; NUMBER OF LBNS PER TRACK
$RBNPT:	.BLKB	1		; NUMBER OF RBNS PER TRACK
$RCTCP:	.BLKB	1		; NUMBER OF REPLACEMENT CONTROL TABLE COPIES
$MXLBN:	.BLKW	2		; MAX USER ADDRESSABLE LBN

$NRBNL:	.BLKW	1		; NEW RBN FOUND BY $SRCH, LOW ORDER
$NRBNH:	.BLKW	1		; ... AND HIGH ORDER
$NLBNL:	.BLKW	1		; LBN IN TABLE WHERE $SRCH FOUND NEW RBN, LOW
$NLBNH:	.BLKW	1		; ... AND HIGH ORDER
$NLBNO:	.BLKW	1		; OFFSET IN $NLBNH:$NLBNL OF NEW RBN DESCRIPTOR

$ORBNL:	.BLKW	1		; OLD RBN FOUND BY $SRCH (MATCHING LBN), LOW
$ORBNH:	.BLKW	1		; ... AND HIGH ORDER
$OLBNL:	.BLKW	1		; LBN IN TABLE WHERE $SRCH FOUND OLD RBN, LOW
$OLBNH:	.BLKW	1		; ... AND HIGH ORDER
$OLBNO:	.BLKW	1		; OFFSET IN $OLBNH:$OLBNL OF OLD RBN DESCRIPTOR

BBRSIZ	=	<.+1>&37776	; BBR work area size.

.SBTTL	BBR Flag Bit Definitions					;009+

.BSECT	,NOCREF

;
;	These bits are located in the high byte of BBRFLG and give status
;	information.
;

BS.SUC:	.BLKB	.		;BBR was successful.
BS.PRI:	.BLKB	.		;RBN was primary.
BS.SEC:	.BLKB	.		;RBN was non-primary.
BS.OFL:	.BLKB	.		;Unit was taken offline by BBR.
BS.ONL:	.BLKB	.		;Unit was being brought online.
BS.COR:	.BLKB	.		;RCT was corrupt.
BS.NMP:	.BLKB	.		;No multicopy protection.		;016
BS.GON:	.BLKB	.		;Couldn't save data from bad LBN.	;018

.DSECT	,NOCREF

;
;	One of these values is moved into the low byte of BBRFLG to show
;	the BBR exit status.  If BBR was successful, this value	shows	;018
;	which test the LBN failed.  If BBR was unsuccessful, it shows	;018
;	what happened.							;018
;

	.BLKB			;Reserved.				;018
BF.RR0:	.BLKB			;Failure to read RCT sector 0.
BF.RR1:	.BLKB			;Failure to read RCT sector 1.
BF.WR0:	.BLKB			;Failure to write RCT sector 0.
BF.WR1:	.BLKB			;Failure to write RCT sector 1.
BF.RRT:	.BLKB			;Failure to read RCT RBN entry area.
BF.WRT:	.BLKB			;Failure to write RCT RBN entry area.
BF.IRD:	.BLKB			;Failure in initial 4-Reads test.
BF.NOR:	.BLKB			;Failure in normal data stress test.
BF.COM:	.BLKB			;Failure in complemented stress test.
BF.RES:	.BLKB			;Couldn't restore saved data back to LBN.
BF.RPL:	.BLKB			;Replace error.
BF.RCU:	.BLKB			;Recursion error.
BF.RIC:	.BLKB			;Illegal RBN descriptor code.
BF.RNZ:	.BLKB			;LBN field should have been zero and wasn't.
BF.RPN:	.BLKB			;Premature null entry in RCT.
BF.RCF:	.BLKB			;RCT was full.
BF.TRE:	.BLKB			;Transient error.

;									;009-


.sbttl	. Port Driver Available Table

;+
;
; The port driver available table enables the class driver to
; communicate with several port drivers.  Each of which may
; have its own unique physical characteristics and architecture
; sharing a common class driver.
;
; The port drivers available table is a CSECT into which each
; existing port driver ORG in the following information:
;
;-

.DSECT	,NOCREF

PD.TYP:	.BLKW	1		; Port type.
PD.XBI:	.BLKW	1		; Addr of routine to init data structures
PD.INI:	.BLKW	1		; Address of the port initialization routine.
PD.GCP:	.BLKW	1		; Addr of get command packet routine
PD.XCM:	.BLKW	1		; Address of routine for command packet
				; transfer to port.
PD.GRP:	.BLKW	1		; Addr of routine to obtain response packets
				; from port.
PD.RMP:	.BLKW	1		; Addr of release message packet routine.
PD.ERL:	.BLKW	1		; Addr of error log routine
PD.NUN:	.BLKW	1		; Number of units of this type on system
AVLSIZ:				; Available table entry size



.sbttl	. DSQ usage by driver

;+
;
; Word DSQUMT (DSQPDA) -
;     Word DSQUMT will be used to save the UMT table entry for the unit.
;
; Byte DSQSTS (DSQFAR) -						;005
;     DSQSTS byte contains DSQ status information.
;
;-

DSQUMT	=	DSQPDA		; UMT table entry pointer for unit.
DSQSTS	=	DSQFAR		; DSQ status byte.			;005
DSQBWP	=	DSQPTO		; MSCP request queue item backward pointer
DSQBBL	=	DSQOPT		; Bad LBN low
DSQBBH	=	DSQSAV		; Bad LBN high
DSQCLU	=	DSQCTO		; DCS-1 save byte


.sbttl	.   DSQSTS (DSQ status) bit definitions

.BSECT	,NOCREF			; DSQ status bit definitions.
				; DSQ request status word bits.
R.SENT:	.BLKB	.		; Request sent to the controller.
R.UMRW:	.BLKB	.		; REQUEST WAITING ON UMRs		;005
R.UMRA:	.BLKB	.		; UMRs assigned to DSQ flag bit.
R.BBR:	.BLKB	.		; Request is being processed by BBR.
R.UNTS:	.BLKB	.		; Unit search in progress
R.ECK:	.BLKB	.		; ERROR CHECK REQUEST			;005
R.ERR:	.BLKB	.		; REQUEST COMPLETED IN ERROR		;005
	.BLKB	.		; REQUEST IS ASYNCHRONOUS		;005

;+
; MSCP ENVELOPE AND PACKET LENGTH DEFINITION
;-

.DSECT	-4,NOCREF

E.LENG:	.BLKB	2	;OFFSET TO MESSAGE LENGTH
E.CRDT:	.BLKB	1	;OFFSET TO MESSAGE/CREDIT FIELD
E.VCID:	.BLKB	1	;OFFSET TO VIRTUAL CIRCUIT ID
	.BLKB	60.	;PACKET AREA
ENVLP	=	-E.LENG	;ENVELOPE SIZE
RSPLNG	=	.-E.LENG;TOTAL RESPONSE PACKET SIZE
CMDLNG	=	.-E.LENG;TOTAL COMMAND PACKET SIZE

.sbttl	. MSCP region size algorithms

;	The MSCP region size varies depending upon controller and user
;	specified parameters. The following calculations use fixed
;	values for ring entries, No. of units per controller, and maximum
;	number of commands that the controller can buffer. The number
;	of units per controller and maximum command buffer used are
;	specific to the UDA only. The number of ring entries is normally
;	specified as a dynamic parameter that may increase controller
;	performance or decrease MSCP region size as needed. During
;	controller initialization, the ring size is specified as a power
;	of 2, therfore the number of ring entries must be a number 
;	representative of a power of 2.
;
;	FIXED:	RINGHD		(Size of the ring header area in bytes)
;
;	GIVEN:	RINGS		(ring entries = 1)
;		UNITS		(No. of units per controller = 4)
;		MAXBF		(Max. command buffer =4)
;
RINGHD	=4
REXP	=0
RNGS	=1
MAXBF	=4
UNITS	=NUPUDA

CRING=	<RNGS*<CMDLNG+RNGSIZ+ENVLP>>
RRING=	<RNGS*<RSPLNG+RNGSIZ+ENVLP>>
INIWKA=	<UCBSIZ*UNITS>+RINGHD+CRING+RRING+CCBSIZ


.sbttl	. Controller Dependent Information

.sbttl	.   UDA Definitions

; UDA hardware register offsets

UDAIP	=	0		; Initialization and polling register
UDASA	=	2		; Status and Address register

; status and address register bits

ERROR	=	100000		; controller fatal error bit
STEP4	=	 40000		; Initialize step 4 bit
STEP3	=	 20000		; Initialize step 3 bit
STEP2	=	 10000		; Initialize step 2 bit
STEP1	=	  4000		; Initialize step 1 bit
ERRCOD	=	  3777		; Error code mask

BURST	=	   374		; Burst transfer mask
LFAIL	=	     2		; last fail flag
GO	=	     1		; Go bit

; Ring header offsets

CMDINT	=	-4		; Command interrupt offset (from base of ring)
RSPINT	=	-2		; Resp. interrupt offset (from base of rings)
RNGHED	=	4		; Ring header size.
;
; ring sizes
;
RNGSIZ	=	4		; Ring entry size
;
; ring entry offsets and definitions
;
LADDR	=	-2		; Low order 16 bit byte address offset
HADDR	=	 0		; High order 14 bit byte addr location and
				; flags
OWN	=	100000		; Own
FLAG	=	 40000		; Flag

;
; massage type indentifiers
;
MSGTP	=	360		; Message type mask
MSGMUL	=	20		; Message field multiplier
MSGSEQ	=	 0		; Sequential message
MSGDAT	=	 1		; Datagram message
MSGCRD	=	 2		; Credit message
MSGMNT	=	15.		; Maintenance message
CRDDBT	=	17		; Credit/debit mask
;
; Misc. UDA parameters
;
MAXCMD	=	12.		; Maximum number of commands buffered by
MAXCLU	=	64.		; Maximum cluster size			;016
NUPUDA	=	4		; Nunber of units on UDA
SCCTMO	=	10.		; SCC time out for UDA controller
UDAITO	=	10.		; UDA initialization time out



.sbttl	. Misc. Definitions

RTRYCT	=	3		; Retry counter

ERFTYP	=	5		; Error field type (for error analysis)


;+
; One of the following error codes are passed to the error logger
; by the driver to indicate what the driver was trying to do when
; the error occured.
;-

.DSECT	,NOCREF			; Define MSCP error codes

	.BLKB			; ZERO means, status of end packet was zero
				; .. but the end packet indicated that an
				; .. error log was generated.
BBRERR:	.BLKB			; Indicates BBR is doing the error logging.
				; .. To determine the error may require
				; .. examination of BBRFLG and the saved
				; .. end packet.
SNDERR:	.BLKB			; The driver was trying to send a command
				; .. when controller fatal was detected.
NOPERR:	.BLKB			; Internally, the driver thinks it should
				; .. have command packets available to it.
				; .. However, after a 2 second wait ownership
				; .. to the next command packet to be was not
				; .. freed by the controller.
DHGERR:	.BLKB			; The driver received an end packet of
				; .. which it thinks the unit being referenced
				; .. is hung.
IUSERR:	.BLKB			; Disk unit size too big.
OLFERR:	.BLKB			; Online command to controller failed.
USFERR:	.BLKB			; GUS failed, unit not functional.
CTOERR:	.BLKB			; COMMAND time out error.
COFERR:	.BLKB			; Controller online failed. Unable to
				; .. establish virtual circuit.
DTAERR:	.BLKB			; Data error on READ/WRITE command.
NOEXST:	.BLKB			; Unit does not exsist on configuration
VOLINV:	.BLKB			; Volume is invalid (spin down ocurred)
INVFUN:	.BLKB			; A DSQ with an invalid function was passed


.SBTTL	Miscellaneous TMSCP definitions

CMTMU=32			;-OFFSET TO CMT ENTRY IN DDB	;005
MUDDB=14			;-OFFSET TO DDB @ 0 (ALIAS MTQPTR+MTDDSP) ;005
MUIDX=177764			;-OFFSET TO ID BYTE IN DDB	;005
MUDUNI=177767			;-OFFSET TO UNIT # IN DDB	;005
DDBSIZ=56			;-MU DDB SIZE			;006

.SBTTL	TAPE FORMAT FLAG VALUES

; Device type flags

.DSECT	,NOCREF

TC.OLD:	.BLKB		; Old devices (Backwards compatibility)
TC.9TR:	.BLKB	.	; 9-Track devices
TC.TK5:	.BLKB	.	; "TK50" compatible cartridges
TC.RV8:	.BLKB	.	; "RV80" compatible cartridges
	.BLKB	.	; Reserved
	.BLKB	.	; Reserved
	.BLKB	.	; Reserved
	.BLKB	.	; Reserved
	.BLKB	.	; Reserved
TF.COD:			; Format code multiplier
TF.MSK =: <TF.COD - 1>	; Format bitfield mask

; Old format bitflags

.BSECT	,NOCREF

TF.800:	.BLKB	.	; NRZI 800 BPI
TF.PE:	.BLKB	.	; PHASE ENCODED 1600 BPI
TF.GCR:	.BLKB	.	; GROUP CODE RECORDING 6250 BPI
TF.BLK:	.BLKB	.	; CARTRIDGE BLOCK MODE

; 9-Track format bitflags

.BSECT	,NOCREF

TF.800:	.BLKB	.	; NRZI 800 BPI
TF.PE:	.BLKB	.	; PHASE ENCODED 1600 BPI
TF.GCR:	.BLKB	.	; GROUP CODE RECORDING 6250 BPI
	.BLKB	.	; Reserved
TF.T82:	.BLKB	.	; TU82 special high density

; "TK50" format bitflags

.BSECT	,NOCREF

TF.NOR:	.BLKB	.	; Normal (Low) density
TF.BHD:	.BLKB	.	; High density

; "RV80" format bitflags

.BSECT	,NOCREF

TF.NOR:	.BLKB	.	; Normal density

.IIF	NDF	L$IST&L$$IST,.LIST	TOC
.IIF	NDF	L$IST&L$$IST,.ENABL	CRF
.IIF	NDF	L$IST&L$$IST,.LIST
