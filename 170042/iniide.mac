	.INCLUDE /CMN:COMMON/
	.INCLUDE /CMN:KERNEL/
	.INCLUDE /INIT:INIPFX/
TITLE	INIIDE,<DISPLAY VERSION OF INIT>,0L,03-AUG-92,RVR/TG/MDS/JTC/MND/AL/FRL

;
;		COPYRIGHT (c) 1974, 1992 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR INIIDE
;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-08
;  001	TG   01-Jan-81	Changed to Version changes with base Lvl
;  002  MDS  06-APR-81	Moved to Load overlay Put date in a seperate .PSECT
;  003	JTC  22-MAY-81	Globalized INIVER so it can be patched.
;  004	MND  26-MAY-81	removed text referencing the RP07 device
;  005  AWL  29-SEP-81  added comment that AODSEDITDATE macro has date changed
;  006  AWL  11-NOV-81  Added <FF> between copyright & .SBTTL EDIT HISTORY
;                       Moved comment from AODSEDITDATE macro to above it
;  007  FRL  06-May-86	Remove vestigial references to LOGO
;  008  FRL  23-Jun-86	Fix old bug
;
;-

	ORG	INIIDE
	DEFORG	IDETXT
	DEFORG	IDECTL
	DEFORG	INIDAT

	.MACRO	I.MESS
	TMPORG	IDETXT
	.NLIST	BEX
	.ENDM	I.MESS

	.MACRO	AODSVERSION
	 .ASCII	/AODS Y01.02F/
	.ENDM	AODSVERSION

; DATE OF AODSEDITDATE IS CHANGED DURING BASELEVEL BY INIDAT.TEC
	.MACRO	AODSEDITDATE
	 .ASCII	/03-Aug-92/
	.ENDM	AODSEDITDATE


	.BSECT

V08CHK==1.		;THIS IS INIT V7.0-08

.RM80.::.BLKB	.	;BIT TO DEFINE RM80 SUPPORT
.RM05.::.BLKB	.	;BIT TO DEFINE RM05 SUPPORT
.RP07.::.BLKB	.	;BIT TO DEFINE RP07 SUPPORT
.TU78.::.BLKB	.	;BIT TO DEFINE TU78 SUPPORT
.DMP0.::.BLKB	.	;BIT TO DEFINE DMP11 SUPPORT
.DMV0.::.BLKB	.	;BIT TO DEFINE DMV11 SUPPORT
.DMR0.::.BLKB	.	;BIT TO DEFINE DMR11 SUPPORT
.PCL0.::.BLKB	.	;BIT TO DEFINE PCL11 SUPPORT
.RX04.::.BLKB	.	;BIT TO DEFINE RX04 SUPPORT

	UNORG


	.SBTTL	IDENTIFY INIT (AND MAYBE THE INSTALLED MONITOR)

	ORG	INIIDE

IDNTFY::CALL	IDEINI		;IDENTIFY THE CURRENT VERSION OF INIT
	JMPX	I.INI0		;HEY, WHAT ELSE DO YOU WANT, HUH?

; IDENTIFY THE INIT VERSION AND LEVEL

IDEKIT::REGSCR			;DON'T KNOW WHERE WE CAME FROM, SO CLEANLINESS
	CALLX	MESSAG,R5,INIVER ;ANNOUNCE THE KIT (AODS, REAL RELEASE, ETC.)
	RETURN

; IDENTIFY THE CURRENT VERSION OF INIT (AODS) AND INSTALLED SIL IF ANY

IDEINI:	REGSCR			;DON'T KNOW WHERE WE CAME FROM, SO CLEANLINESS
	CALLX	MESSAG,R5,INIVRT ;IDENTIFY THE KIT WE BELONG TO
	CALLX	MESSAG,R5,KITTYP ;ANNOUNCE INIT'S VERSION AND NEW DEVICES
	CALLX	MESSAG,R5,BUDATE ;AND ADD THE DATE
	CALLX	MESSAG,R5,KITTY2 ;END THE MESSAGE
	MOV	#$$0101,R3	;POINT TO FIRST WORD OF PATCH LISTING
	MOV	#8.,R4		;DO THIS FOR ALL EIGHT PATCH LISTING WORDS
10$:	TST	(R3)+		;ANY PATCHES HERE?
	BNE	20$		;YEP, SO WE'VE GOTTA PRINT SOMETHING
	SOB	R4,10$		;DO ANOTHER WORD
	BR	30$		;NO PATCHES FOR INIT, SO DON'T PRINT ANYTHING
20$:	CALLX	MESSAG,R5,IPLBAN ;PRINT THE INIT PATCH LISTING BANNER
	MOV	#1,R2		;COMPONENT NUMBER IS 1
	MOV	#1,R3		;SUBCOMPONENT NUMBER IS ALSO 1
	MOV	#$$0101,R4	;POINT TO INSTALLED PATCH FLAG FOR 1.1.??
	CALL	CHKCSC		;LIST ALL PATCHES INSTALLED UNDER 1.1.??
	MOV	#3,R3		;SUBCOMPONENT NUMBER IS 3 (COMP STILL 1)
	MOV	#$$0103,R4	;POINT TO INSTALLED PATCH FLAG FOR 1.3.??
	CALL	CHKCSC		;LIST ALL PATCHES INSTALLED UNDER 1.3.??
30$:	TST	SYNXSV		;IS THIS A MAGTAPE?
	BMI	40$		;YES, SO NO INSTALLED SIL YET
	TSTB	SAVDEV		;IS THIS A SAVE/RESTORE DISK?		;008
	BNE	40$		;YES, SO INSTALLED SIL NOT YET POSSIBLE
	CALLX	IDESIL		;MAYBE INSTALLED SIL, SO CHECK IT OUT, TOO
40$:	RETURN

	GLOBAL	<SYNXSV,SAVDEV>						;007


;+
; CHKCSC - CHECK A COMPONENT/SUBCOMPONENT FOR PATCHES
;
;	R2 = COMPONENT NUMBER
;	R3 = SUBCOMPONENT NUMBER
;	R4 -> FIRST WORD OF FOUR WORD PATCH LISTING
;
;	CALL	CHKCSC
;
;	ALL REGISTERS PRESERVED
;-
	.ENABL	LSB

CHKCSC::REGSCR			;SAVE THE REGISTERS
	MOV	R2,R0		;SETUP THE COMPONENT NUMBER IN THE BUFFER
	MOV	#CSTEXT,R1	;POINT TO THE COMPONENT/SUBCOMPONENT TEXT BUFR
	CALLX	DECSTR		;MAKE IT INTO A STRING
	ADD	#6,R1		;POINT BEYOND FILLED TEXT
	MOVB	#'.,(R1)+	;INSERT MANDATORY "."
	MOV	R3,R0		;NOW DO THE SUBCOMPONENT NUMBER
	CALLX	DECSTR		;MAKE IT INTO A STRING AFTER THE COMP NUMBER
	ADD	#6,R1		;POINT BEYOND FILLED TEXT
	MOVB	#'.,(R1)+	;INSERT MANDATORY "."
	CLRB	(R1)+		;MAKE SURE ASCIZ
	CLRB	(R1)+		; ROUTINES WORK
10$:	MOV	#CSTEXT,R0	;R0 -> FILLED COMPONENT/SUBCOMPONENT TEXT
	CLR	PATTGL		;FIRST TIME THROUGH DON'T RETURN THE CARRIAGE
	CLR	R3		;AND SAY PREVIOUS ISSUE NUMBER WAS ZERO
	MOV	#4,R5		;DO THIS FOUR TIMES
20$:	MOV	(R4)+,R2	;GET THE NEXT WORD OF THE PATCH LISTING
	CALL	CHKPAT		;PRINT ALL WHAT NEEDS TO BE PRINTED
	SOB	R5,20$		;REPEAT IF NECESSARY
	CLC			;DON'T SHIFT ANYTHING INTO "PATTGL"
	ROR	PATTGL		;NEED TO RETURN THE CARRIAGE?
	BCS	30$		;YEP, ODD NUMBER OF PATCHES PRINTED
	BNE	40$		;YEP, AT LEAST ONE PATCH WAS PRINTED
	BR	50$		;NOPE, DIDN'T PRINT ANYTHING
30$:	CALLX	TYPECR		;CARRIAGE NOT HOME YET, SO FIX THAT
40$:	CALLX	TYPECR		;ONE MORE <CR> FOR CLEANLINESS AFTER LISTING
50$:	RETURN			;FIX UP REGISTERS AND SKEEDADDLE

	.DSABL	LSB

;+
; CHKPAT - CHECK FOR PATCH NUMBER BITS IN A WORD
;
;	CALLS PRIPAT FOR EACH BIT SET
;	R3 = PREVIOUS ISSUE NUMBER (0 IF FIRST WORD OF PATCH LISTING)
;	R2 = PATCH LISTING WORD
;	R0 -> TEXT FOR THE COMPONENT/SUBCOMPONENT NUMBER (ASCIZ)
;
;	CALL	CHKPAT
;
;	R0,R1,R2 DESTROYED
;	R3 = (ISSUE NUMBER WHEN CALLED) + 16.
;-

CHKPAT:	MOV	#16.,R1		;WE'LL DO THIS FOR ALL 16 BITS IN THIS WORD
10$:	INC	R3		;DOING ANOTHER BIT (ISSUE NUMBER)
	ROR	R2		;IS THERE A PATCH HERE?
	BCC	20$		;NOPE, TRY ANOTHER BIT
	CALL	PRIPAT		;BIT SAYS PATCH, SO R3 CONTAINS ISSUE NUMBER
20$:	SOB	R1,10$		;CHECK THE NEXT BIT
	RETURN			;DONE WITH ENTIRE WORD
	
;+
; PRIPAT - PRINT A PATCH SEQUENCE NUMBER (COMP.SUBCOMP.ISSUE)
;
;	R0 -> TEXT FOR THE COMPONENT/SUBCOMPONENT NUMBER (ASCIZ)
;	R3 = ISSUE NUMBER
;
;	CALL	PRIPAT
;
;	R0 = ISSUE NUMBER
;-

PRIPAT:	MOV	R0,-(SP)	;SAVE R0
	MOV	R2,-(SP)	; ALSO R2
	CALLX	TYPTAB		;TYPE A TAB
	CMP	#32.,TYPEHT	;SHOULD WE TYPE ANOTHER TAB FOR NEATNESS?
	BEQ	10$		;NOPE, LEAVE CARRIAGE WHERE IT IS
	CALLX	TYPTAB		;YEP, TYPE ANUDDER TAB
10$:	CALLX	ASCIZ0		;PRINT COMP/SUBCOMP STRING (R0 -> STRING)
	MOV	R3,R0		;LOAD R0 WITH ISSUE NUMBER
	CALLX	DECZER		;NOW PRINT ISSUE NUMBER	WITH NO CARRIAGE RETN
	BIT	#1,PATTGL	;SHOULD WE RETURN THE CARRIAGE?
	BEQ	20$		;NOPE, LEAVE IT WHERE IT IS
	CALLX	TYPECR		;YES, RETURN THE CARRIAGE PLEASE
20$:	INC	PATTGL		;TOGGLE THE "TYPE CARRIAGE RETURN" FLAG
	MOV	(SP)+,R2	;RESTORE R2
	MOV	(SP)+,R0	; ALSO R0
30$:	RETURN

	GLOBAL	<TYPEHT>

.SBTTL	MISCELLANEOUS TEXT AND GARBAGE

	I.MESS

INIVRT:	.ASCII	<200><200><11>
INIVER::.ASCII	"INIT V"
	.IIF	NE,<SYSVEL&177>-'0,.ASCII	<SYSVEL&177>
	.ASCII	<SYSVEL/400&177><SYSVEE&177><SYSVEE/400&177>
	.ASCII	"-"
	.ASCIZ	<$$$VER&177><$$$VER/400&177>
	
KITTYP:	.ASCII	" [Built"
	.ASCIZ	" "
KITTY2:	.ASCIZ	"] "<200><200>

	TMPORG	INIDAT
BUDATE::AODSEDITDATE
	.BYTE	0
	.EVEN
	UNORG

IPLBAN:	.ASCIZ	<177><11>"INIT patches:"<200><200>

	.EVEN

$$0101::.BLKW0	4		;ENOUGH BITS FOR 64 NON-AODS PATCHES
$$0103::.BLKW0	4		;ENOUGH BITS FOR 64 AODS PATCHES
.AODS.::.WORD	<.RM05.!.RM80.!.RP07.> ;ONLY THESE DEVICES ARE SUPPORTED
	.BLKW0	1		;ENOUGH ROOM FOR 32. NEW DEVICES.

	TMPORG	IDECTL
PATTGL:	.WORD	0		;EVEN/ODD FOR PRINT CARRIAGE/RETURN OR DON'T
CSTEXT:	.BLKW0	8.		;COMPONENT/SUBCOMPONENT TEXT BUFFER
EOCSTX: .EVEN			;END OF COMPONENT/SUBCOMPONENT TEXT BUFFER
	UNORG

	.END
