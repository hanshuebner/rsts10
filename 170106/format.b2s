1	FUNCTION WORD FORMAT

	!********************************************************************
	!
	!	s u b p r o g r a m   t i t l e
	!
	!	  subprogram : FORMAT
	!	     version : V10.1
	!	        edit : A
	!	   edit date : 10-MAY-91
	!	   author(s) : DBM
	!
	!********************************************************************
	!
	!		  C O P Y R I G H T
	!
	!
	!		      Copyright (C) 1983, 1991 by
	!	Digital Equipment Corporation, Maynard, Mass.
	!
	!
	! This software is furnished under a license and may be used and
	! copied  only  in accordance with the terms of such license and
	! with the  inclusion  of  the  above  copyright  notice.   This
	! software  or  any  other copies thereof may not be provided or
	! otherwise made available to any other person.  No title to and
	! ownership of the software is hereby transferred.
	!
	! The information in this software is subject to change  without
	! notice  and should not be construed as a commitment by Digital
	! Equipment Corporation.
	!
	! DIGITAL assumes no responsibility for the use  or  reliability
	! of its software on equipment that is not supplied by DIGITAL.
	!
	!********************************************************************

	!********************************************************************
	!
	!	m o d i f i c a t i o n   h i s t o r y   l o g
	!
	!
	! VER/ED	EDIT DATE	REASON
	! V10.0-01	05-Nov-88	(DBM) Creation
	!
	!********************************************************************
	!
	!			d e s c r i p t i o n
	!
	!	This function formats the current request for display.
	!	It returns the length of the string as the function value.
	!
	!********************************************************************

	OPTION	TYPE = EXPLICIT

	%INCLUDE "SYSTEM:CMNDEF"		! Get request and format layouts

	MAP (FMTBUF) STRING FILL = 160%		! Reserve space for header
	MAP DYNAMIC (FMTBUF) STRING TEMP	! Work variable for FMT

	DECLARE WORD OFF			! Current offset in FMTBUF
	DECLARE WORD FUNCTION FMT(WORD, STRING)	! Func to insert str in FMTBUF
	DECLARE STRING CONSTANT			! String constants:	      &
		RANGLE = ">>>>>>>>>>>>>>>  ",	!   Beginning of banner line  &
		LANGLE = "  <<<<<<<<<<<<<<<"	!   End of banner line

 MAIN:
	OFF = FMT( 0%, CR.LF + RANGLE)		! <CR><LF> + ">>>>>>>>>>>>>>>  "
	OFF = FMT(OFF, "OMS " + P.VER + "  ")	! Version information
	OFF = FMT(OFF, TRM$(DATE$(REQ.DATE))+SP)! Date of request
	OFF = FMT(OFF, TRM$(TIME$(REQ.TIME)))	! Time of request
	OFF = FMT(OFF, LANGLE + CR.LF)		! "  <<<<<<<<<<<<<<<" + <CR><LF>

	IF REQ.TYP AND ML.MSG THEN
	  OFF = FMT(OFF, "Message ")
	ELSE
	  OFF = FMT(OFF, "Request ")
	END IF

	OFF = FMT(OFF, NUM1$(REQ.NUM))

	IF (REQ.TYP AND ML.REP) THEN
	  SELECT REQ.STS AND STS.MSK
	    CASE STS.ABO
	      OFF = FMT(OFF, " aborted")
	    CASE STS.ANS
	      OFF = FMT(OFF, " answered")
	    CASE STS.PEN
	      OFF = FMT(OFF, " pending")
	  END SELECT
	  OFF = FMT(OFF, " by ")
	ELSE
	  OFF = FMT(OFF, " from ")
	  OFF = FMT(OFF, TRM$(REQ.FAC) + ", ") IF REQ.FAC <> "USER"
	END IF

	IF REQ.FLG AND FLG.OMS
	THEN
	  OFF = FMT(OFF, "OMS")
	ELSE
	  IF REQ.FLG AND FLG.OPR
	  THEN
	    OFF = FMT(OFF, "operator [")
	  ELSE
	    OFF = FMT(OFF, "user [")
	  END IF

	  OFF = FMT(OFF, NUM1$(BYTE.TO.WORD(REQ.PROJ)) + "," +		      &
			NUM1$(BYTE.TO.WORD(REQ.PROG)))

	  IF REQ.KB < 0%
	  THEN
	    OFF = FMT(OFF, "], Detached")
	  ELSE
	    OFF = FMT(OFF, "] on _KB" + NUM1$(REQ.KB) + ":")
	  END IF

	  OFF = FMT(OFF, ", job " + NUM1$(REQ.JOB))
	END IF
	FORMAT = FMT(OFF, CR.LF)
	EXIT FUNCTION

	DEF WORD FMT(WORD OFF, STRING S)
	  JUNK = LEN(S)
	  REMAP (FMTBUF) STRING FILL = OFF, TEMP = JUNK
	  TEMP = S
	  FMT = OFF + JUNK
	END DEF

	END FUNCTION
