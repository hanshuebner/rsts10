1	!
	!	p r o g r a m   t i t l e
	!
	!	   program : OMSMGR.B2S
	!	   version : V10.1
	!	      edit : A
	!	 edit date : 10-MAY-91
	!	 author(s) : DBM
	!
	!********************************************************************
	!
	!		  C O P Y R I G H T
	!
	!
	!		      Copyright (C) 1987, 1991 by
	!	Digital Equipment Corporation, Maynard, Mass.
	!
	!
	! This software is furnished under a license and may be used and
	! copied  only  in accordance with the terms of such license and
	! with the  inclusion  of  the  above  copyright  notice.   This
	! software  or  any  other copies thereof may not be provided or
	! otherwise made available to any other person.  No title to and
	! ownership of the software is hereby transferred.
	!
	! The information in this software is subject to change  without
	! notice  and should not be construed as a commitment by Digital
	! Equipment Corporation.
	!
	! DIGITAL assumes no responsibility for the use  or  reliability
	! of its software on equipment that is not supplied by DIGITAL.
	!
	!********************************************************************
	!
	!	m o d i f i c a t i o n   h i s t o r y   l o g
	!
	!
	! VER/ED	EDIT DATE	REASON
	!
	! T10.0-01	07-Oct-88	(DBM) Creation
	!
	!********************************************************************

	!********************************************************************
	!
	!	p r o g r a m   d e s c r i p t i o n
	!
	!	OMSMGR.B2S manages most of the operator related commands.
	!	It uses the Common User Interface (CUI) as its command parser.
	!
	!********************************************************************
	!
	!	c h a n n e l   a s s i g n m e n t s
	!
	!	channel #	file-spec	description
	!	=========	=========	===========
	!	  0		_KB:		User keyboard (BP2 default)
	!	  SYS.CHNL (1)	OMS$:OMS.SYS    OMS work file
	!	  OUT.CHNL (2)	user-specified	SHOW command /OUTPUT
	!
	!********************************************************************

	!********************************************************************
	!
	!	C o m p i l e   O P T I O N s
	!
	!********************************************************************

	OPTION	TYPE = EXPLICIT

	!********************************************************************
	!
	!	I N C L U D E   r e q u i r e d   M A P s , C O M M O N s
	!
	!********************************************************************

	%INCLUDE "CUI:CUICMN.E2S"		! Include CUI data section
	%INCLUDE "SYSTEM:CMNDEF.B2S"		! Include OMS common defs
	%INCLUDE "SYSTEM:OMSKEY.B2S"		! Include CUI key defs

	%IF (%OMSMGR = 0%)			! Check compile variant
	%THEN
	  %ABORT "OMSMGR variant not specified"	!   Abort compile if illegal
	%END %IF

	!********************************************************************
	!
	!	D E F I N E   C O N S T A N T S
	!
	!********************************************************************

	EXTERNAL WORD CONSTANT			! Define RSTS error codes:    &
						! (LB:ERR.STB)		      &
						! 			      &
			CTRLCE,			!   ?programmable ^C trap     &
			EOF,			!   ?End of file	      &
			NODEVC,			!   ?Invalid device	      &
			PRVIOL			!   ?Protection violation

	!********************************************************************
	!
	!	D E C L A R E   V A R I A B L E S
	!
	!********************************************************************
	
	DECLARE	WORD	ENT.TY,			! Entry type (RUN, DCL, etc.) &
			I, J			! Loop indices		      &

	DECLARE	STRING	TEMP			! Temporary string storage

 MAIN:	!
	!
	!	M A I N    C O D I N G    A R E A
	!
	ON ERROR GOTO STANDARD_ERR		! Set up standard error trap
	GOSUB INIT				! Initialize constants
	IF ENT.TY = 0%				! Is this a RUN entry?
	THEN
	  PRINT P.NAM; SP; P.VER; SP; ERT$(0%)	! Yes, print banner
	END IF
	CALL U.INI (U.CMN, ENT.TY)		! Initialize CUI tables

 GET_COMMAND:
	!	P E R F O R M   C O M M A N D   P R O C E S S I N G
	!
	!
	ON ERROR GOTO STANDARD_ERR		! Ensure standard error trap
	FQB = SYS(DROP.PRIVS)			! Ensure tmp privs are dropped
	JUNK = RCTRLC				! Ensure ^C trap is off
	CLOSE #I FOR I = 1% TO 12%		! Ensure all channels are closed
	CALL GETCLS BY REF			! Make sure GETREQ knows it
	PRINT IF CCPOS(0%)			! Print to get to left margin
	CALL U.DIA				! Get user command
	GOTO WRAP_UP IF U.STAT = EOF		! Exit program on CTRL/Z
	GOTO GET_COMMAND IF U.STAT		! Reprompt; CUI printed error
	!
	!
	!	P A R S E     C O M M A N D
	!
	!
	OUT.CHNL = 0%				! Default /OUTPUT=_KB:
	DEBUG = FALSE				! Default to /NODEBUG
	SEND = TRUE				! Default to /SEND

	%IF %DEBUG
	%THEN	
	  CALL FET$CQ (DBG.Q)			! Check if /[NO]DEBUG specified
	  DEBUG = NOT (U.NO) IF U.PRES 		! Set the flag accordingly
	  CALL FET$CQ (SND.Q)			! Check if /[NO]SEND specified
	  SEND = NOT (U.NO) IF U.PRES		! Set the flag accordingly
	  PRINT "(Debug mode, ";SEG$("no", 1%, 2% * (SEND + 1%));"send)"      &
	    IF DEBUG
	%END %IF

	CALL FET$CQ (OUT.Q)			! /OUTPUT specified?
	IF U.PRES THEN				! Yes
	  IF U.NO THEN				!   Was it /NOOUTPUT?
	    OUT.CHNL = 3%			!     Yes, set channel number
	    TEMP = "_NL:"			!     File is the bit bucket
	    OPEN TEMP AS #OUT.CHNL		!     Open it
	  ELSE					!   It was /OUTPUT
	    CALL FET$A				!     Get filespec, if any
	    IF U.PRES THEN			!     If specified,
	      OUT.CHNL = 3%			!	set channel number
	      TEMP = LEFT$(U.STR, U.LEN)	!	Fetch the file_spec
	      ON ERROR GOTO OUTPUT_ERR		!	Set up local error trap
	      OPEN TEMP FOR OUTPUT AS #OUT.CHNL	!	Then open it
	      CAUSE ERROR NODEVC		!	Don't use it if...    &
		IF STATUS AND 256%		!	  device is NFS...    &
		  UNLESS STATUS AND 2048%	!	  unless CCPOS() valid
	      ON ERROR GOTO STANDARD_ERR	! Ensure standard error trap
	    END IF
	  END IF
	  %IF %DEBUG
	  %THEN
	    PRINT "(Output to ";TEMP;")" IF OUT.CHNL IF DEBUG
	  %END %IF
	END IF

	SELECT U.CMDC				! Select the given command

	  CASE RPLY.C				!   REPLY
	    CALL FET$CQ (VMS.T)			!     VMS compatibility command?
	    IF U.PRES				!     /DISABLE, /ENABLE, /STATUS
	    THEN
	      CALL VMSCMD			!     Yes, go handle it
	    ELSE
	      CALL REPLY			!     No, standard REPLY command
	    END IF
	  CASE RQST.C				!   REQUEST
	    CALL REQEST
	  CASE SETO.C				!   SET OPERATOR_SERVICES
	    CALL SETOMS
	  CASE SHOP.C				!   SHOW OPERATOR_SERVICES
	    CALL SHOOMS
	  CASE SHRQ.C				!   SHOW REQUESTS
	    CALL SHOREQ
	  CASE STRT.C				!   START/OPERATOR_SERVICES
	    CALL STROMS
	  CASE STOP.C				!   STOP/OPERATOR_SERVICES
	    CALL STPOMS
	  CASE ELSE				!   Anything else
	    PRINT "?Command not installed"

	END SELECT				! End of the commands
	GOTO GET_COMMAND			! Get next command

 OUTPUT_ERR:
	CALL FET$CS				! Fetch the command line
	IF (U.STAT = 0%) THEN			! If we got it,
	  PRINT RECORD 32%, LEFT$(U.STR, U.LEN)	!   Repaint command line
	  PRINT RECORD 32%, TAB(U.POS - 1%);"^"	!   Point to the problem
	END IF
	PRINT ERT$(ERR)				! Tell the user what's wrong
	RESUME GET_COMMAND

10000	! S U B R O U T I N E S
	!
 INIT:
	! Initialize Constants

	SYS.CHNL = 1%				! Channel for work file access
	LOG.CHNL = 2%				! Channel for log file access
	FQB = SYS("6"C + "26"C)			! Return job info
	JOB.NO = FQJOB / 2%			! Save job number
	KB.NO = FIRQB(4%)			! Save user's KB number
	KB.NO = NOT(KB.NO) IF (KB.NO < 0%)	! correct it if detached
	PROJ = FQPROT				! Save project #
	PROG = FQPFLG				! Save programmer #

	FQB = SYS(UU.TRM + NL + "255"C)		! Return user kb info
	KB.WIDTH = BYTE.TO.WORD(FIRQB(5%)) - 1%	! Save width

	BITVAL(I) = 2% ^ I FOR I = 0% TO 15%	! Create BITVAL array

	RETURN

19000	!
 STANDARD_ERR:
	!	s t a n d a r d   e r r o r   h a n d l i n g

	SELECT ERR				! Select the error code

	  CASE CTRLCE				! Control/C received
	    RESUME WRAP_UP			!   Quit

	  CASE ELSE				! Any other error
	    PRINT "?Program failure in ";P.NAM	!   This may be a bug
	    PRINT ERT$(ERR); " in ";ERN$	!   Display error and module

	END SELECT

	RESUME GET_COMMAND			! Resume to get next command

30500	!	D C L   e n t r y   p o i n t

	ENT.TY = 16%				! set DCL entry type
	GOTO MAIN				! and branch to main

 WRAP_UP:
	!	e n d - o f - p r o g r a m   p r o c e s s i n g

	CLOSE #I FOR I = 1% TO 12%		!close all channels
	CALL GETCLS BY REF			!Make sure GETREQ knows it
	FQB = SYS("6"C + "22"C)			!Ensure receiver is removed
	FQB = SYS("9"C)				!exit to user's KBM

	END
