	.INCLUDE /CMN:COMMON/
	.INCLUDE /CMN:KERNEL/
	.INCLUDE /DSK:DSDEF/
TITLE	DSDSK,<RH11/RS03/RS04 DISK DRIVER>,0H,20-DEC-91,JDM/GW/ABC/WRM

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR DSDSK
;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-07
;
;		[RSTS/E V10.1]
;
;  001  VAM  19-Dec-91	Add "support" for functions >= IFUN
;			(treat them as no-ops)
;-

	DEFORG	DSDSK

	INCLUDE	<CMNDSK,RHDDSK,ERLDSK>

	DSKDEF	DS

.SBTTL	ERROR LOGGING

	ERRENT	LOG$DS

	CALLX	ERLDSK,R5	;;;USE COMMON ROUTINE
	  .BYTE	ERC$DS		;;;ERROR CODE
	  .BYTE	0		;;;NON-OVERLAPPED SEEK
	  .BYTE	RHCS1,9.	;;;OFFSET, 9. REGISTERS
	  .BYTE	RHMR,2		;;;OFFSET, 2 REGISTERS
	  .BYTE	0,0		;;;THAT'S ALL
	RETURN			;;; AND BACK

.SBTTL	FORM THE PHYSICAL ADDRESS AND SET UP DSQ

QDS$DS::ASL	R1		;SHIFT DISK ADDRESS FOR 128. WORD BLOCKS
	CMP	MID$XX(R5),#RS04ID ;IS THIS AN RS03 (64. WORD BLOCKS) ?
	BHIS	10$		;NOPE, IT'S AN RS04
	ASL	R1		;SHIFT AGAIN FOR 64. WORD BLOCKS
10$:	MOV	R1,DSQPDA(R4)	;SAVE THAT TIL WE START THE TRANSFER
	CALL	@(SP)+		;RETURN WITH ADDRESS ALL SET UP

.SBTTL	RETURNS HERE IF FIRST ENTRY IN QUEUE

.ENABL	LSB

DSKGDS:	CALLX	RHDSEL		;;SELECT AN RH11 DISK
	BNE	10$		;;MASSBUS ID MISMATCH, FATAL
	CMPB	DSQSAV(R4),#IFUN;;Is this an IFUN (or greater)?		;001
	BHIS	20$		;;Yes, just ignore it.			;001
	MOV	DSQPDA(R4),-(R1) ;;LOAD DISK ADDRESS
	CALLX	RHDADR		;;MAP THE TRANSFER, IF REQUIRED
	CALLRX	RHDSRT		;;START AN RH11 DISK DEVICE

.SBTTL	INTERRUPT SERVICE (PR5)

INT$DS::MOV	CSR.DS,R3	;;GET THE CSR ADDRESS
	MOV	#DQS$DS,R0	;;GET QUEUE ROOT POINTER
	MOV	(R0),R4		;;GET TOP OF QUEUE REQUEST
	BEQ	40$		;;NONE, SO IGNORE INTERRUPT
	CALL	@RELUMR		;;RELEASE ANY MAPPING REGISTERS
	TST	(R3)		;;ONE, ANY SPECIAL CONDITION?
	BPL	20$		;;NO, SO NO ERROR POSSIBLE
	MOV	RHER(R3),R2	;;YES, GET THE ERROR REGISTER
TMO$DS::LOG$DS			;;ERROR (OR TIMEOUT), SO LOG ERROR
	BIT	RHCS2(R3),#RHNED!RHNEM ;;HARD CONTROL ERROR?
	BNE	10$		;;YES (Z=0)
	BIT	R2,#RHUNS!RSAO!RSIAE!RSWLE!RHRMR!RHILR!RHILF ;;NO, HARD DISK ERROR?
10$:	CALLX	DFINT4		;;CHECK CC'S AND/OR MASSBUS PARITY ERROR
	BMI	DSKGDS		;;MORE RETRIES LEFT, SO RETRY
20$:	CALLX	DFINT9		;;DONE, SAY IDLE, DE-QUEUE, AND HOUSEKEEP
30$:	MOV	(R0),R4		;;ANOTHER REQUEST IN QUEUE?
	BNE	DSKGDS		;;YES, PROCESS IT NOW
40$:	RETURN			;;ELSE EXIT

UMR$DS::TST	DSO$XX(R0)	;;ARE WE IDLE?
	BGE	30$		;;YES, CONTINUE OPERATIONS
	RETURN			;;NO, IGNORE THIS CALL

.DSABL	LSB

GLOBAL	<MID$XX,CSR.DS,DQS$DS,RELUMR,DSO$XX>

.END

