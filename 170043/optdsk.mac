	.INCLUDE /CMN:COMMON/
	.INCLUDE /CMN:KERNEL/
TITLE	OPTDSK,<DISK QUEUE OPTIMIZATION>,0A,10-MAY-91,MHB

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR OPTDSK
;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-07
;
;-

	DEFORG	OPTDSK

;+
; OPTDSK - OPTIMIZE A DISK QUEUE.
;
;	R0 -> QUEUE ROOT
;
;	CALL	OPTDSK,R5,<OPTIMIZATION TABLE>
;
;	R4 -> BEST DSQ
;-

OPTDSK:	MOV	(R5)+,R4	;;GET TABLE BASE ADDRESS
	REGSAV			;;SAVE ALL REGISTERS
	MOV	(R0),R2		;;SET 1ST AS CURRENT ENTRY
	;MOV	R0,R0		;;SET CURRENT PREVIOUS AS QUEUE ROOT
	MOV	R2,R1		;;SET BEST AS 1ST
	MOV	R0,-(SP)	;;SET PREVIOUS TO BEST AS QUEUE ROOT
	MOV	#177777,R5	;;THIS IS THE DISTANCE TO BEAT
10$:	CLR	R3		;;GUESS AT FAIRNESS COUNT EXPIRED (0 DISTANCE)
	CMPB	DSQFAR(R2),FARCNT ;;DID THE COUNT REALLY EXPIRE?
	BHIS	30$		;;YES, SO DO THIS REQUEST NEXT
	INCB	DSQFAR(R2)	;;COUNT AS PASS THROUGH QUEUE
	MOVB	DSQOUN(R2),R3	;;NOW GET PHYSICAL UNIT TIMES 2
	ADD	R4,R3		;; AND ADD IN BASE OF TABLE WE ARE LOOKING AT
	MOV	(R3),R3		;;THIS IS THE CURRENT 'BEST' POSITION
	SUB	DSQOPT(R2),R3	;;FIND DISTANCE TO WHERE WE WOULD LIKE TO BE
	BHIS	20$		;;CORRECTING FOR BOTH DIRECTIONS
	NEG	R3		;; IF NEEDED...
20$:	CMP	R3,R5		;;IS THIS DISTANCE THE BEST SO FAR?
	BHIS	40$		;;NOPE, SOMEONE IS BETTER (OR THE SAME)
30$:	MOV	R2,R1		;;REMEMBER THIS AS THE BEST SO FAR
	MOV	R0,(SP)		;; ALSO SAVING THE PREVIOUS TO BEST SO FAR
	MOV	R3,R5		;;SET A NEW DISTANCE TO BEAT
	BEQ	50$		;;EXIT IMMEDIATELY ON 0 DISTANCE
40$:	MOV	R2,R0		;;MAKE CURRENT ENTRY THE PREVIOUS NOW
	MOV	(R2),R2		;; AND GET A NEW CURRENT ENTRY
	BNE	10$		;;IF THERE IS ANOTHER...
50$:	MOV	(R1),@(SP)+	;;DEQUEUE THE BEST FROM THE QUEUE
	MOV	(SP),R0		;;RESTORE THE QUEUE ROOT POINTER
	MOV	(R0),(R1)	;;NOW LINK QUEUE ONTO THE BEST REQUEST
	MOV	R1,(R0)		;; AND PUT BEST ON TOP OF THE QUEUE
	MOVB	DSQOUN(R1),R3	;;GET PHYSICAL UNIT TIMES 2 OF BEST
	ADD	R4,R3		;; AND ADD IN BASE OF OUR TABLE
	MOV	DSQOPT(R1),(R3)	;;SET THE NEW TABLE ENTRY FOR BEST REQUEST
	CALLX	REGRES,R5	;;RESTORE REGISTERS
	MOV	(R0),R4		;;GET POINTER TO THE BEST REQUEST
	RETURN	R5		;; AND EXIT

GLOBAL	<FARCNT>

.END

