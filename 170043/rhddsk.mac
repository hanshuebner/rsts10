	.INCLUDE /CMN:COMMON/
	.INCLUDE /CMN:KERNEL/
TITLE	RHDDSK,<COMMON RH11 DISK DRIVER ROUTINES>,0A,10-MAY-91,MHB/GW

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR RHDDSK
;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-07
;
;-

	DEFORG	RHDDSK

.SBTTL	COMMON RH11 DISK ERROR CHECKING

;+
; DFINT4 - CHECK FOR MASSBUS PARITY ERROR ALSO.
;
;	R3 -> RHCS1 OF THE MASSBUS CONTROLLER
;	R4 -> DSQ
;	Z-BIT = 1 IF A SOFT ERROR
;
;	CALL	DFINT4
;
;	R1 =  RANDOM
;
;	IF N=1 THEN A SOFT ERROR AND MORE RETRIES ALLOWED
;	IF N=0 THEN A HARD ERROR OR NO MORE RETRIES LEFT
;-

DFINT4::BEQ	20$		;;Z=1, SO CALL IT A SOFT ERROR
	MOV	#RHMCPE,R1	;;HARD, GET THE MASSBUS PARITY ERROR BIT
	BIC	(R3),R1		;;IF MASSBUS PARITY THEN SET Z=1
	CALLX	DFINT1		;;NOW CHECK THE ERROR AND RETRIES
	BMI	10$		;;MORE RETRIES, EXIT N=1
	SETERR	HNGDEV,DSQERR(R4) ;;ELSE SET THE HARD ERROR
	;CLN			;; AND EXIT N=0
10$:	RETURN			;;NOW EXIT

20$:	JMPX	DFINT3		;;CHECK THE SOFT TYPE ERROR

.SBTTL	COMMON RH11 DISK UNIT SELECTION

;+
; RHDSEL - SELECT RH11 DISK.
;
;	R3 -> CSR
;	R4 -> DSQ
;
;	CALL	RHDSEL
;
;	R1 -> CSR @ RHCS2
;	R2 =  FIP UNIT NUMBER TIMES 2
;
;	IF Z=1 THEN CORRECT MASSBUS ID
;	IF Z=0 THEN MASSBUS ID MISMATCH
;-

RHDSEL::MOV	R3,R1		;;COPY THE CSR POINTER
	ADD	#RHCS2,R1	;; AND INDEX TO RHCS2
	MOV	#RHCLR,(R1)	;;DO A SUBSYSTEM CLEAR
	;CLC			;;C=0 FROM 'ADD' ABOVE
	ADC	RHAS(R3)	;;CLEAR ANY ACTIVE ATTN LINE
	MOVB	DSQPUN(R4),(R1)	;;SELECT THE MASSBUS UNIT
	MOVB	#RHESET,(R3)	;;NOW DO A DRIVE RESET
	MOVB	DSQUNT(R4),R2	;;GET FIP UNIT NUMBER
	ASL	R2		;; TIMES 2
	CMP	RHDT(R3),MID$XX(R2) ;;SET Z=1 IF MASSBUS ID MATCHES
	RETURN			;;EXIT

GLOBAL	<MID$XX>

.SBTTL	COMMON RH11 BAE / UNIBUS MAP PROCESSING

;+
; RHDADR - HANDLE ADDRESSING FOR RH11 DISK.
;
;	IF AN RH DISK HAS A BAE, WE USE IT TO SET THE PHYSICAL ADDRESS.
;	IF NOT, WE ALLOCATE UNIBUS MAPPING REGISTERS AND SET THE RESULTING
;	UNIBUS ADDRESS (WHICH IS THE PHYSICAL ADDRESS IF THIS CPU
;	DOESN'T HAVE UNIBUS MAPPING) INTO THE CONTROLLER.  IN EITHER CASE,
;	WE ALSO SET THE -(WORD COUNT).
;
;	R3 -> CSR
;	R4 -> DSQ
;		DSQMAM =  HIGH PHYSICAL ADDRESS
;		DSQMAL =  LOW PHYSICAL ADDRESS
;		DSQCNT =  -(WORD COUNT)
;	PRIORITY IS PR5
;
;	CALL	RHDUMR
;
;	IF SUCCESSFUL:
;		C  =  0
;		CONTROLLER SET UP WITH ADDRESS & COUNT
;
;	IF UNSUCCESSFUL:
;		C  =  1
;-

RHDADR::REGSCR			;;PRESERVE REGISTERS
	MOV	DSQCNT(R4),R0	;;GET -(WORD COUNT)
	MOVB	DSQMAM(R4),R1	;;GET HIGH ADDRESS
	MOV	DSQMAL(R4),R2	;;GET LOW ADDRESS
	JMPX	RHMADR		;;GO DO COMMON RH11 DEVICE SET UP

.SBTTL	COMMON RH11 DISK I/O INITIATION

;+
; RHDSRT - START RH11 DISK.
;
;	R0 -> QUEUE ROOT
;	R3 -> CSR
;	R4 -> DSQ
;		DSQRFN =  RH11 FUNCTION
;		DSQCNT =  -(WORD COUNT)
;
;	CALL	RHDSRT
;
;	R0 =  RANDOM
;	R1 =  RANDOM
;	R2 =  RANDOM
;	R4 =  RANDOM
;	R5 =  RANDOM
;-

RHDSRT::MOVB	#-5.,DSO$XX+1(R0) ;;SET 5. SECOND TIMEOUT
	MOVB	DSQRFN(R4),(R3)	;;LOAD FUNCTION AND GO...
	RETURN			;; THEN EXIT

GLOBAL <DSO$XX>

.END

