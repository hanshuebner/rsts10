1	!******************************************************************** &
	!								      &
	!	p r o g r a m   t i t l e				      &
	!								      &
	!	   program : TERMGR.B2S					      &
	!	   version : V10.1					      &
	!	      edit : A						      &
	!	 edit date : 10-MAY-91					      &
  	!	 author(s) : JJT,BGN,SEL				      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1983, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! V9.1-05	23-Jul-85	(JJT) Fix problem with terminal	      &
	!				macros with continuation lines	      &
	! V9.1-05	07-Aug-85	(JJT) Handle error returned when      &
	!				setting speed on Autobaud lines	      &
	! V9.1-05	15-Aug-85	(JJT) Fix /[NO]INTERACTIVE and	      &
	!				/DEVICE_TYPE together problem	      &
	! V9.1-05	16-Aug-85	(JJT) Allow users without HWCFG	      &
	!				priv to display their perm char	      &
	! V9.2-02	22-Oct-85	(JJT) Handle ?Not a valid device error &
	! V9.3-14	08-Aug-86	(JJT) Check for owned KB	      &
	! V9.4-04	04-May-87	(JJT) Look for err 8, not err 6	      &
	! V9.7-06	02-Mar-89	(JJT) Check for owned KB	      &
	! V9.7-07	20-Apr-89	(JJT) Always change terminal's width  &
	! V10.0-0A	27-Jul-89	(SEL) Add /[NO]OUTPUT to SHOW command &
	! V10.0-0D	02-Oct-89	(SEL) Fix error handling for /OUTPUT  &
	! V10.0-0D	06-Oct-89	(SEL) Change /OUTPUT error handling   &
	!					to display only 1 error msg   &
	!								      &

									      &

10	!******************************************************************** &
	!								      &
	!	p r o g r a m   d e s c r i p t i o n			      &
	!								      &
	!	TERMGR.B2S is used to set and display the terminal	      &
	!	characteristics of the terminals on the system.		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	c h a n n e l   a s s i g n m e n t s			      &
	!								      &
	!	channel #	file-spec	description		      &
	!	=========	=========	===========		      &
	!								      &
	!	1		_SY:$TERMAC.SYS	System dependent Macro file   &
	!			_SY:$TERDFL.SYS	Default characteristics to be &
	!					accessed when /INQUIRE fails  &
	!			_SY:$TERSPD.SYS	Speeds that are allowed by the &
	!					system manager for the KBs    &
	!			KB:		Used by /INQUIRE to determine &
	!					the terminal's characteristics &
	!			KBn:		The terminal /SETUP will send &
	!					the setup file		      &
	!	2		<user-defined>	The setup file to initialize  &
	!					a terminal		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b r o u t i n e s   u s e d				      &
	!								      &
	!	name			description			      &
	!	====			===========			      &
	!	FET$P BY REF		fetch a parameter		      &
	!	FET$CQ BY REF		fetch command qualifier		      &
	!	FET$A BY REF		fetch a non-keyword argument	      &
	!	FET$KA BY REF		fetch a keyword argument	      &
	!	U.INI BY REF		initialize CUI tables		      &
	!	U.DIA BY REF		get user command via CUI	      &
	!	TERPAR			Parse SET TERMINAL command	      &
	!	TERSHO			Execute SHOW TERMINAL command	      &
	!	DISPLY			Display messages		      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	f u n c t i o n s   u s e d				      &
	!								      &
	!	line #	name		description			      &
	!	======	====		===========			      &
	!								      &
	!	15000	FNCHECK.NUM%	Converts a numeric string to an	      &
	!				integer and returns an error if	      &
	!				the conversion failed		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	c o m m o n   d e c l a r a t i o n s			      &
	!								      &
	!	line #	name	description				      &
	!	======	====	===========				      &
	!	   700	CUICMN	CUI common data (%INCLUDE CUI:CUICMN.B2S)     &
	!	   700	TERKEY	CUI constants (%INCLUDE TERKEY.B2S)	      &
	!								      &
	!******************************************************************** &

									      &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
									      &
	%INCLUDE "SYSTEM:TERKEY.B2S"		!include CUI constants	      &

	!******************************************************************** &
	!								      &
	!	D E F I N E   C O N S T A N T S				      &
	!								      &
	!******************************************************************** &
									      &
	EXTERNAL WORD CONSTANT			! Define RSTS error codes:    &
						! (LB:ERR.STB)		      &
						!			      &
			CTRLCE,			!   ?programmable ^C trap     &
			EOF,			!   ?End of file	      &
			NODEVC,			!   ?Invalid device	      &
			PRVIOL			!   ?Protection violation     &
									      &

760	COMMON	(PARCMN)			!TERPAR common data	      &
									      &
	MACRO$ = 16%,		SETUP.FILE$ = 32%,	SETUP.FILE%,	      &
	SAVE.DEVICE.POS%,	KB%,			PERM%,		      &
	DELTA.WIDTH%,		CHECK.USER.MACRO%,	INQUIRE.FLAG%,	      &
	TERM.POS%,		OUR.KB%					      &


910	DIM FIRQB%(30%),			!Terminal SYScall array	      &
	SAVE.FIRQB%(30%),			!Store the Term SYScall array &
						!while processing a user macro &
	SAVE.FQBEXT%(30%),			!Store the Term SYScall II    &
						!while processing a user macro &
	FQBEXT%(30%),				!Extended Firqb array	      &
	FIRQ2%(30%)				!General Purpose SYScall array &

1000	!	s e t   u p   f o r   R U N   e n t r y			      &
	!								      &
	!								      &
	TER.VER$ = "V10.1-A"			!TERMGR program version	      &
\	TER.EDT$ = ""				!TERMGR program edit level    &
\	ENT.TY% = 0%				!init as a RUN entry	      &
\	HDNG% = -1%				!enable program heading	      &


2000	!	s e t   u p   f o r   c o m m a n d   p r o c e s s i n g     &
	!								      &
	!								      &
	ON ERROR GOTO 19000			!init standard error trap     &
									      &
\	INDENT.COLUMN% = 0%			!Indent commands to 0	      &
\	IF HDNG% THEN				!if heading enabled,	      &
		PRINT "TERMGR "+TER.VER$+TER.EDT$+"   "+		      &
			     ERT$(0%)		!  print program heading      &
\		HDNG% = 0%			!  and clear heading flag     &

2100	CALL U.INI BY REF (U.CMN%,ENT.TY%,INDENT.COLUMN%) !init CUI tables    &
									      &
\	TERM.WIDTH%=ASCII(SEG$(SYS(CHR$(6%)+	!Get this KB's width	      &
		CHR$(16%)+CHR$(0%)+CHR$(255%)),5%,5%))-1%		      &
\	CHANGE SYS(CHR$(6%)+CHR$(26%)) TO FIRQ2%!return job info	      &
\	PPN% = FIRQ2%(21%)+SWAP%(FIRQ2%(22%))	!save user PPN		      &
\	JOB.NO% = FIRQ2%(3%)/2%			!Save user Job number	      &
\	KB.NO% = FIRQ2%(4%)			!save user kb no.	      &
\	TRUE% = -1%				!Set up the constant for true &
\	FALSE% = NOT TRUE%			!Set up the constant for false &
\	GAIN.PRIVS$ = CHR$(6%)+CHR$(-21%)+CHR$(0%) !Constant to gain privs    &
\	DROP.PRIVS$ = CHR$(6%)+CHR$(-21%)+CHR$(255%) !Constant to drop privs  &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &
\	HWCFG.PRIV% = ((ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !CHECK FOR &
		   STRING$(3%,0%)+"HWCFG"),3%,3%))) = 0%)! HWCFG PRIV	      &

									      &

3000	!								      &
	!	G E T   C O M M A N D					      &
	!								      &
	IF DELTA.WIDTH% THEN			! If the width changed,	      &
		TERM.WIDTH% = FIRQB%(5%) - 1%	!   Get the new width	      &
\		DELTA.WIDTH% = FALSE%		!   Clear Width Changed flag  &
\	END IF								      &
\	FIRQB%(I%), 				! Clear the FIRQB array	      &
	SAVE.FIRQB%(I%),			! and the save FIRQB array    &
	SAVE.FQBEXT%(I%),			! and the save FQBEXT array   &
	FQBEXT%(I%) = 0% FOR I% = 1% TO 30%	! and the Extended FIRQB      &
\	ERRSTS% = FALSE%			! Clear the error flag	      &
\	SETUP.FILE% = FALSE%			! Clear the Setup file flag   &
\	CHECK.USER.MACRO% = FALSE%		! Clear the User Macro flag   &
\	COUNT.USER.MACRO% = 0%			! Clear the Number of macros  &
\	INQUIRE.FLAG% = FALSE%			! Clear the Inquire flag      &
\	PERM% = FALSE%				! Clear the Permanent flag    &
\	KB% = 255%				! Default to user's own KB    &
\	OUR.KB% = FALSE%			! Init if it's our KB Flag    &
\	JUNK% = RCTRLO%(0%)			! Cancel CTRL/O		      &
\	CLOSE #12%				! Close the output channel    &
\	CALL U.DIA BY REF			!  get user command	      &
\	IF U.STAT% = 11% THEN			!  if EOF (CTRL/Z),	      &
		GOTO 32000			!    exit program	      &
	ELSE	IF U.STAT% <> 0%		!  else if any other error,   &
		GOTO 3000			!    reprompt		      &

									      &

4000	!	p r o c e s s     c o m m a n d s			      &
									      &
									      &
	SELECT	U.CMDC%				!Select the command given     &
\	  CASE	SET.K%				!  SET TERMINAL		      &
									      &
\	    CALL TERPAR (FIRQB%(), FQBEXT%(), ERRSTS%)			      &
						! call SET TERMINAL processor &
\		GOTO 2100 IF ERRSTS%		! Go reinitialize if error    &
		 AND ((CHECK.USER.MACRO% = -2%)	!  and working on a User macro &
		 OR (INQUIRE.FLAG% = -2%))	!  or working on INQUIRE cmnd &
\	    GOTO 3000 IF ERRSTS%		! Get next command if error   &
\	    GOTO 4100				! GO DO THE SYS CALL	      &
									      &
\	  CASE	SHO.K%				!  SHOW TERMINAL	      &
\	    GOSUB SHOWTERM			! call SHOW TERMINAL processor &
\	    GOTO 3000				! and re-prompt		      &
									      &
\	END SELECT				! That's all the commands     &
\	GOTO 3000				! Go reprompt		      &
									      &

									      &

4100	!								      &
	!	D O    T H E    S Y S    C A L L			      &
	!								      &
	GOTO 4200 IF CHECK.USER.MACRO% < 0%	!GO CHECK THE USER'S MACROS   &
\	GOTO 4300 IF INQUIRE.FLAG% < 0%		!GO CHECK THE DEFAULT FILE    &
\	ON ERROR GOTO 4120			!SET LOCAL ERROR TRAP	      &
\	TO.DO% = FALSE%				!DEFAULT TO NOTHING TO DO     &
\	TO.DO% = TRUE% IF FQBEXT%(I%) <> 0%	!SET THE FLAG		      &
			FOR I% = 5% TO 30%	! IF SOMETHING IS IN THERE    &
\	IF TO.DO% THEN				!IF SOMETHING TO DO	      &
		FQBEXT%(0%) = 30%		!  SET UP THE SYS CALL	      &
\		FQBEXT%(1%) = 6%		!  SUB CALL TO FIP	      &
\		FQBEXT%(2%) = 16%		!  SET TERMINAL SUBFUNCTION   &
\		FQBEXT%(3%) = 1%		!  PART II		      &
\		FQBEXT%(4%) = KB%		!  PUT IN KB NUMBER	      &
\		FQBEXT%(21%) = PERM%		!  PUT IN PERMANENT FLAG      &
\		CHANGE FQBEXT% TO FQBEXT$	!  FORM THE SYS CALL STRING   &
\		IF  (OUR.KB% = TRUE%) AND	!  IF OUR KB WAS SPECIFIED AND &
		    (PERM% <> 255%) AND		!  /PERMANENT WASN'T SPECIFIED &
		    (FQBEXT%(22%) = 0%) THEN	!  AND NO /BUFFER_QUOTA	      &
			V$ = SYS(GAIN.PRIVS$)	!    REGAIN TEMP PRIVILEGES   &
\		END IF							      &
\		CHANGE SYS(FQBEXT$) TO FQBEXT%	!  DO THE SYS CALL	      &
\		IF  (OUR.KB% = TRUE%) AND	!  IF OUR KB WAS SPECIFIED AND &
		    (PERM% <> 255%) AND		!  /PERMANENT WASN'T SPECIFIED &
		    (FQBEXT%(22%) = 0%) THEN	!  AND NO /BUFFER_QUOTA	      &
			V$ = SYS(DROP.PRIVS$)	!    DROP TEMP PRIVILEGES     &
\		END IF							      &
\	END IF								      &
\	TO.DO% = FALSE%				!DEFAULT TO NOTHING TO DO     &
\	TO.DO% = TRUE% IF FIRQB%(I%) <> 0%	!SET THE FLAG		      &
			FOR I% = 5% TO 30%	! IF SOMETHING IS IN THERE    &
\	IF TO.DO% THEN				!IF SOMETHING TO DO	      &
		FIRQB%(0%) = 30%		!  SET UP THE SYS CALL	      &
\		FIRQB%(1%) = 6%			!  SUB CALL TO FIP	      &
\		FIRQB%(2%) = 16%		!  SET TERMINAL SUBFUNCTION   &
\		FIRQB%(3%) = 0%			!  PART I		      &
\		FIRQB%(4%) = KB%		!  PUT IN KB NUMBER	      &
\		FIRQB%(21%) = PERM%		!  PUT IN PERMANENT FLAG      &
\		CHANGE FIRQB% TO FIRQB$		!  FORM THE SYS CALL STRING   &
\		IF  (OUR.KB% = TRUE%) AND	!  IF OUR KB WAS SPECIFIED AND &
		    (PERM% <> 255%) THEN	!  /PERMANENT WASN'T SPECIFIED &
			V$ = SYS(GAIN.PRIVS$)	!    REGAIN TEMP PRIVILEGES   &
\		END IF							      &
\		CHANGE SYS(FIRQB$) TO FIRQB%	!  DO THE SYS CALL	      &
\		IF  (OUR.KB% = TRUE%) AND	!  IF OUR KB WAS SPECIFIED AND &
		    (PERM% <> 255%) THEN	!  /PERMANENT WASN'T SPECIFIED &
			V$ = SYS(DROP.PRIVS$)	!    DROP TEMP PRIVILEGES     &
\		END IF							      &
\	END IF								      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	GOSUB 12400 IF DELTA.WIDTH%		!GO CHANGE THE WIDTH ON THE   &
						!VT100 IF IT WAS CHANGED      &
\	GOSUB 14000 IF SETUP.FILE%		!PRINT SET-UP FILE IF NEEDED  &
\	GOTO 3000				!GET NEXT COMMAND	      &

4120	IF ERR = 8% THEN			!If ?Device not available err &
		U.POS% = 0%			!  Clear the position	      &
\		U.POS% = TERM.POS%		!  Restore the device position &
			IF (CHECK.USER.MACRO% =  0%) AND !If no User macro and &
			   (INQUIRE.FLAG% = 0%)	!	  no undefined KB's   &
\		CALL DISPLY ("?Terminal disabled") !Print error message	      &
\		RESUME 32000			!  EXIT			      &
\	END IF								      &
\	GOTO 19000 IF ERR <> 10%		!GOTO STANDARD ERROR TRAP     &
						! IF NOT ?Protection violation &
\	IF ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !IF WE DON'T HAVE      &
		STRING$(3%,0%)+"HWCFG"),3%,3%)) THEN    !THE RIGHT PRIVILEGE  &
		PRINT "?HWCFG privilege needed"	   !PRINT WHICH PRIV IS NEEDED &
	ELSE					!THE OTHER REASON FOR ERR 10  &
		IF PERM% = 255% THEN		!  IS CHANGING PERMANENT SPEED &
		  PRINT "?Permanent speed not settable for Autobaud terminals" &
		ELSE				!  OR CHANGING CURRENT SPEED  &
		  PRINT				!  OF AUTOBAUD TERMINALS      &
	       "?Current speed not settable for logged-out Autobaud terminals" &
\		END IF							      &
\	END IF								      &
\	RESUME 32000				!EXIT			      &


4200	!								      &
	!	C H E C K    U S E R    M A C R O			      &
	!								      &
	GOTO 4220 IF CHECK.USER.MACRO% = -2%	!GO AROUND IF ON SECOND PASS  &
\	ON ERROR GOTO 4210			!SET FILE ERROR TRAP	      &
\	V$ = SYS(GAIN.PRIVS$)			!Gain temporary privileges    &
\	OPEN "_SY:$TERMAC.SYS/RO" FOR INPUT AS FILE 1%!OPEN USER'S MACRO FILE &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &

4205	ERR.% = FNGET.LINE%			!GET A LINE FROM THE FILE     &
\	GOTO 4215 IF ERR.%			!GOTO ERROR ROUTINE IF ERROR  &
\	C$ = C2$				!GET THE INPUT LINE	      &
\	C0$ = SEG$(C$,1%,POS(C$,"/",1%)-1%)	!EXTRACT THE MACRO NAME	      &
\	C1$ = SEG$(C$,POS(C$,"/",1%),LEN(C$))	!EXTRACT THE MACRO	      &
\	GOTO 4205 IF C0$ <> TRM$(MACRO$)	!GET NEXT IF THIS ISN'T IT    &
\	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	CLOSE 1%				!CLOSE THE FILE		      &
\	C1$ = "SE TE" + C1$			!PUT ON THE COMMAND	      &
\	IF LEN(C1$) > 127% THEN			!CORE COMMON IS ONLY 127 LONG &
		CALL DISPLY("?Macro too long")	!    SAY SO AND		      &
\		GOTO 2100			!    GO REINITIALIZE	      &
\	END IF								      &
\	COUNT.USER.MACRO% = COUNT.USER.MACRO% + 1% !INCREMENT THE COUNTER OF  &
						!THE NUMBER OF NESTED MACROS  &
\	IF COUNT.USER.MACRO% > 50% THEN		!ALLOW A MAXIMUM OF 50	      &
		PRINT "?User macros nested too deep" ! SAY SO AND	      &
\		GOTO 2100			!      GO REINITIALIZE	      &
\	END IF								      &
\	CHECK.USER.MACRO% = -2%			!SET FLAG TO SECOND PASS      &
\	GOSUB 11000				!GO SET UP CUI		      &
\	GOTO 2100 IF U.STAT%			!ERROR, GO REINITIALIZE	      &
\	GOTO 4000				!GO PROCESS COMMANDS	      &

4210	RESUME 4215				!CLEAR THE ERROR FLAG
4215	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	CLOSE 1%				!CLOSE THE MACRO FILE	      &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &
\	U.POS% = SAVE.DEVICE.POS%		!RESTORE THE POSITION	      &
\	CALL DISPLY("?Invalid device")		!PRINT THE ERROR	      &
\	GOTO 2100				!GO REINITIALIZE	      &

4220	GOSUB 11050				!GO RESET CUI		      &
\	CHECK.USER.MACRO% = 1%			!ALL DONE SET THE FLAG TO DONE &
\	GOTO 4100				!GO DO THE SYS CALL	      &


4300	!								      &
	!	G E T   D E F A U L T   C H A R A C T E R I S T I C S	      &
	!								      &
	GOTO 4320 IF INQUIRE.FLAG% = -2%	!GO AROUND IF ON SECOND PASS  &
\	ON ERROR GOTO 4314			!SET FILE ERROR TRAP	      &
\	KB% = KB.NO% IF KB% = 255%		!GET OUR ACTUAL KB NUMBER     &
\	V$ = SYS(GAIN.PRIVS$)			!Gain temporary privileges    &
\	OPEN "_SY:$TERDFL.SYS/RO" FOR INPUT AS FILE 1%!OPEN THE DEFAULT FILE  &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &
\	ON ERROR GOTO 4310			!SET FILE HANDLING ERROR TRAP &

4305	ERR.% = FNGET.LINE%			!GET A LINE FROM THE FILE     &
\	GOTO 4311 IF ERR.%			!GOTO ERROR ROUTINE IF ERROR  &
\	C$ = C2$				!GET THE INPUT LINE	      &
\	K$ = SEG$(C$,1%,POS(C$,":",1%))		!EXTRACT THE KB NUMBER	      &
\	C$ = SEG$(C$,POS(C$,":",1%)+1%,LEN(C$))	!STRIP OFF THE KB	      &
\	S% = POS(K$,"-",1%)			!CHECK FOR A RANGE	      &
\	IF S% THEN				!IF THERE IS A RANGE	      &
		K1$ = SEG$(K$,S%+1%,LEN(K$))	!  GET THE SECOND KB	      &
\		K$ = SEG$(K$,1%,S%-1%)		!  GET THE FIRST KB	      &
\		K$ = K$ + ":" UNLESS POS(K$,":",1%) !ADD ":" IF NEEDED	      &
\		K1$ = K1$ + ":" UNLESS POS(K1$,":",1%) !ADD ":" IF NEEDED     &
\		CHANGE FSS$(K$,1%) TO FIRQ2%	!  DO THE FSS ON THE FIRST KB &
\		GOTO 4305 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEVICES &
\		GOTO 4305 IF (STATUS AND 255%) <> 2% !IGNORE NON-KB DEVICES   &
\		GOTO 4305 IF FIRQ2%(26%) = 0%	!   IGNORE NO UNIT NUMBER     &
\		K0% = FIRQ2%(25%)		!  GET THE KB NUMBER	      &
\		CHANGE FSS$(K1$,1%) TO FIRQ2%	!  DO THE FSS ON THE 2ND KB   &
\		GOTO 4305 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEVICES &
\		GOTO 4305 IF (STATUS AND 255%) <> 2% !IGNORE NON-KB DEVICES   &
\		GOTO 4305 IF FIRQ2%(26%) = 0%	!   IGNORE NO UNIT NUMBER     &
\		K1% = FIRQ2%(25%)		!  GET THE KB NUMBER	      &
	ELSE								      &
		S% = POS(C$,"-",1%)		!CHECK FOR A RANGE	      &
\		IF S% THEN			!IF THERE IS A RANGE	      &
			K1$=SEG$(C$,S%+1%,POS(C$,":",1%))!GET THE SECOND KB   &
\			C$=SEG$(C$,POS(C$,":",1%)+1%,LEN(C$))!STRIP OFF THE KB &
\			CHANGE FSS$(K$,1%) TO FIRQ2%!DO THE FSS ON THE 1ST KB &
\		GOTO 4305 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEVICES &
\			GOTO 4305 IF (STATUS AND 255%) <> 2%!IGNORE NON-KB DEV'S &
\			GOTO 4305 IF FIRQ2%(26%) = 0%	!IGNORE NO UNIT NUMBER &
\			K0% = FIRQ2%(25%)		!GET THE KB NUMBER    &
\			CHANGE FSS$(K1$,1%) TO FIRQ2%!DO THE FSS ON THE 2ND KB &
\		GOTO 4305 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEVICES &
\			GOTO 4305 IF (STATUS AND 255%) <> 2%!IGNORE NON-KB DEV'S &
\			GOTO 4305 IF FIRQ2%(26%) = 0%	!IGNORE NO UNIT NUMBER &
\			K1% = FIRQ2%(25%)		!GET THE KB NUMBER    &
		ELSE							      &
			CHANGE FSS$(K$,1%) TO FIRQ2%!DO THE FSS ON THE KB     &
\		GOTO 4305 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEVICES &
\			GOTO 4305 IF (STATUS AND 255%) <> 2%!IGNORE NON-KB DEV'S &
\			GOTO 4305 IF FIRQ2%(26%) = 0%!   IGNORE NO UNIT NUMBER &
\			K0%, K1% = FIRQ2%(25%)	!  GET THE KB NUMBER	      &
\		END IF							      &
\	END IF								      &
\	IF (K0%<0%) OR (K0%>127%) OR		!CHECK FOR INVALID KB'S	      &
	   (K1%<0%) OR (K1%>127%) OR					      &
	   (K0%>K1%) THEN			!OR INVALID RANGE	      &
	    PRINT IF CCPOS(0%)			!PRINT A BLANK LINE IF NEEDED &
\	    PRINT "%Invalid Keyboard numbers"; K0%;",";K1%;"in Default file"  &
\	    GOTO 4305				!  SAY SO, AND GET NEXT LINE  &
\	END IF								      &
\	GOTO 4305 IF (KB% < K0%) OR (KB% > K1%) !GET NEXT IF NOT IT	      &
\	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	CLOSE 1%				!CLOSE THE FILE		      &
\	C1$ = "SE TE" + C$			!PUT ON THE COMMAND	      &
\	IF LEN(C1$) > 127% THEN			!CORE COMMON IS ONLY 127 LONG &
		PRINT IF CCPOS(0%)		!PRINT A BLANK LINE IF NEEDED &
\		PRINT "?Default macro for KB";NUM1$(KB%);": too long"	      &
\		KB% = 255% IF KB% = KB.NO%	!PUT THE KB NUMBER BACK	      &
\		GOTO 3000			!  SAY SO AND GET NEXT COMMAND &
\	END IF								      &
\	INQUIRE.FLAG% = -2%			!SET FLAG TO SECOND PASS      &
\	GOSUB 11000				!GO SET UP CUI		      &
\	KB% = 255% IF KB% = KB.NO%		!PUT THE KB NUMBER BACK	      &
\	GOTO 2100 IF U.STAT%			!ERROR, GO REINITIALIZE	      &
\	GOTO 4000				!GO PROCESS COMMANDS	      &

4310	ERR.% = ERR				!SAVE THE ERROR		      &
\	RESUME 4311				!CLEAR THE ERROR FLAG
4311	GOTO 4315 IF ERR.% = 11%		!GO PRINT DOESN'T EXIST ERROR &
\	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	CLOSE 1%				!CLOSE THE DEFAULT FILE	      &
\	PRINT IF CCPOS(0%)			!PRINT A BLANK LINE IF NEEDED &
\	PRINT ERT$(ERR.%); " opening/reading Default file" !PRINT THE ERROR   &
\	KB% = 255% IF KB% = KB.NO%		!PUT THE KB NUMBER BACK	      &
\	GOTO 3000				!GET NEXT COMMAND	      &

4314	RESUME 4315				!CLEAR THE ERROR FLAG
4315	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	CLOSE 1%				!CLOSE THE MACRO FILE	      &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &
\	PRINT IF CCPOS(0%)			!PRINT A BLANK LINE IF NEEDED &
\	PRINT "?Terminal type for KB";NUM1$(KB%);": could not be determined"  &
						!PRINT ERROR MESSAGE	      &
\	KB% = 255% IF KB% = KB.NO%		!PUT THE KB NUMBER BACK	      &
\	GOTO 3000				!GET NEXT COMMAND	      &

4320	GOSUB 11050				!GO RESET CUI		      &
\	INQUIRE.FLAG% = 1%			!ALL DONE SET THE FLAG TO DONE &
\	GOTO 4100				!GO DO THE SYS CALL	      &

									      &
									      &

11000	!								      &
	!	S E T   U P   C U I					      &
	!								      &
	V$ = SYS(CHR$(8%)+C1$)			!LOAD CORE COMMON	      &
\	SAVE.FIRQB%(I%) = FIRQB%(I%) IF SAVE.FIRQB%(I%) = 0% !SAVE FIRQB      &
		FOR I% = 5% TO 30%		!  WITHOUT OVERWRITING WHAT   &
						!  IS ALREADY THERE	      &
\	SAVE.FQBEXT%(I%) = SAVE.FQBEXT%(I%) OR FQBEXT%(I%) !SAVE FQBEXT	      &
		FOR I% = 5% TO 30%					      &
\	FIRQB%(I%) = 0% FOR I% = 1% TO 30%	!CLEAR THE FIRQB ARRAY	      &
\	FQBEXT%(I%) = 0% FOR I% = 1% TO 30%	!CLEAR THE FQBEXT ARRAY	      &
\	IF ENT.TY% <> 16% THEN			!IF NOT DCL ENTRY	      &
		CALL U.INI BY REF (U.CMN%,16%)	!TELL CUI TO READ CORE COMMON &
\	END IF								      &
\	CALL U.DIA BY REF			!READ COMMAND FROM CORE COMMON &
\	RETURN					!GO BACK		      &

11050	!								      &
	!	R E S E T   C U I					      &
	!								      &
	IF ENT.TY% <> 16% THEN			!IF NOT DCL ENTRY	      &
		CALL U.INI BY REF (U.CMN%,ENT.TY%,INDENT.COLUMN%)!PUT CUI BACK &
								 !WHERE IT WAS &
\	END IF								      &
\	FIRQB%(I%) = SAVE.FIRQB%(I%) IF SAVE.FIRQB%(I%) <> 0%!MERGE THE ARRAYS &
			FOR I% = 5% TO 30%				      &
\	FQBEXT%(I%) = SAVE.FQBEXT%(I%) IF SAVE.FQBEXT%(I%) <> 0%	      &
			FOR I% = 5% TO 22%	!MERGE THE SECOND SET	      &
\	FQBEXT%(I%) = FQBEXT%(I%) OR SAVE.FQBEXT%(I%)			      &
			FOR I% = 23% TO 28%	!MERGE THE REST		      &
	!								      &
	!	The following commands deal with the premise that	      &
	!	the qualifiers the user explicitly typed, stored in	      &
	!	the SAVE.FQBEXT% array, must override the qualifiers	      &
  	!	in the user-defined macro, which are stored in the	      &
  	!	FQBEXT% array.  For each capability, ANSI, Katakana,	      &
  	!	Regis, etc., there is a bit to set the capability and	      &
	!	a corresponding bit to clear the capability.  The	      &
	!	following commands will clear in the FQBEXT% array, the	      &
	!	complement bits that are set in the SAVE.FQBEXT% array.	      &
									      &
\	FQBEXT%(I%) = FQBEXT%(I%) AND NOT(SAVE.FQBEXT%(47%-I%))		      &
			FOR I% = 23% TO 24%	!CLEAR THE APPROPRIATE	      &
						!SET/CLEAR FLAG BITS	      &
\	FQBEXT%(I%) = FQBEXT%(I%) AND NOT(SAVE.FQBEXT%(52%-I%))		      &
			FOR I% = 25% TO 27% STEP 2% !CLEAR THE APPROPRIATE    &
						!SET/CLEAR FLAG BITS	      &
\	FQBEXT%(I%) = FQBEXT%(I%) AND NOT(SAVE.FQBEXT%(54%-I%))		      &
			FOR I% = 26% TO 28% STEP 2% !CLEAR THE APPROPRIATE    &
						!SET/CLEAR FLAG BITS	      &
\	RETURN					!GO BACK		      &


12400		!							      &
		!	C H A N G E   V T 1 0 0   S C R E E N		      &
		!	T O   8 0   O R   1 3 2   C O L U M N S		      &
		!							      &

12410	Z%=FIRQB%(4%)							      &
	\ Z%=KB.NO% IF FIRQB%(4%)=255%					      &
	\ IF Z%=KB.NO% THEN						      &
		IF (FIRQB%(9%)=255%) AND (FIRQB%(11%)=255%) AND		      &
					 (FIRQB%(13%)=1%) THEN		      &
			PRINT CHR$(155%);"<";CHR$(155%);"[?3l";		      &
				IF FIRQB%(5%)<82%			      &
	\ 		PRINT CHR$(155%);"<";CHR$(155%);"[?3h";		      &
				IF FIRQB%(5%)>81%			      &
		! GET KB NUMBER FROM SYS CALL ARRAY			      &
		! USE OUR OWN KB NUMBER IF 255				      &
		! IF WIDTH CHANGE IS TO OUR OWN KB,			      &
		!	IF KB TYPE IS A VT100,				      &
		!		SEND ESC SEQ TO CHANGE TO 80-COL MODE	      &
		!			IF WIDTH CHANGE WENT BELOW 81	      &
		!		SEND ESC SEQ TO CHANGE TO 132-COL MODE	      &
		!			IF WIDTH CHANGE WENT ABOVE 80	      &

12500	RETURN								      &


13000									      &
 SHOWTERM:								      &
\	GOSUB 13150				!Check for /OUTPUT qualifier  &
\	CALL FET$P BY REF (KB.T%)		!KBn SPECIFIED?		      &
\	KB% = 255%				!DEFAULT TO OUR KB	      &
\	TERM.POS% = U.POS%			!Save the position	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
\		Z$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT IT		      &
\		Z$ = Z$ + ":"			!  ADD THE : THAT CUI REMOVED &
\		CHANGE FSS$(Z$,1%) TO FIRQ2%	!  DO THE FSS ON THE DEVICE   &
\		IF (STATUS AND 255%) <> 2% THEN	!  IS IT A KB?		      &
			CALL DISPLY("?Device is not a terminal")	      &
						!     ONLY KB'S		      &
\			RETURN			!     GO BACK		      &
\		END IF							      &
\		IF FIRQ2%(26%) <> 0% THEN	!  IF WE HAVE A KB NUMBER     &
			KB% = FIRQ2%(25%)	!  GET THE KB NUMBER	      &
\		END IF							      &
\	END IF								      &
\	OUR.KB% = (KB% = 255%) OR (KB% = KB.NO%)!SET FLAG IF IT'S OUR KB      &
\	IF (OUR.KB% = FALSE%) AND 		!IF NOT OUR KB		      &
	   (HWCFG.PRIV% = 0%) THEN		!  AND NO HWCFG PRIV	      &
		ON ERROR GOTO 13120		!    SET LOCAL ERROR TRAP     &
\		V$ = SYS(GAIN.PRIVS$)		!    REGAIN TEMP PRIVS	      &
\		KB.JOB% =			!  GET THE OWNER OF THE KB    &
		 ASCII(SEG$(SYS(CHR$(6%)+CHR$(16%)+CHR$(0%)+CHR$(KB%)),3%,3%)) &
\		V$ = SYS(DROP.PRIVS$)		! DROP TEMP PRIVS	      &
\		ON ERROR GOTO 19000		!    RESET ERROR TRAP	      &
\		IF ((((KB.JOB% AND 126%)/2%)=JOB.NO%) AND !IF WE OWN THE KB   &
		     ((KB.JOB% AND   1%)    = 0%)) THEN   ! AND NOT DISABLED  &
			OUR.KB% = TRUE%		!          FLAG THAT WE OWN IT &
		ELSE				!     ELSE WE DON'T OWN IT    &
			PRINT "?HWCFG privilege required"! PRINT ERROR MSG    &
\			RETURN			!	   AND GO BACK	      &
\		END IF							      &
\	END IF								      &
\	KB.FIRST%, KB.LAST% = KB%		!SET THE LOOP FOR THIS KB     &
\	IF NOT (U.PRES%) THEN			!IF KB WAS NOT SPECIFIED      &
		CALL FET$CQ BY REF (ALL.Q%)	!/ALL SPECIFIED?	      &
\		IF U.PRES% THEN			!IF PRESENT		      &
			KB.FIRST% = 0%		!  START AT KB0:	      &
\			KB.LAST% = ASCII(SEG$(SYS(CHR$(6%)+CHR$(-3%)),3%,3%)) &
\		END IF				!  END AT KB.CNT	      &
\	END IF								      &
\	FULL% = 0%				!DEFAULT TO BRIEF DISPLAY     &
\	CALL FET$CQ BY REF (FUL.Q%)		!/FULL SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FULL% = -1%			!  SET THE FLAG		      &
\	END IF								      &
\	PERM% = 0%				!DEFAULT TO /NOPERMANENT      &
\	CALL FET$CQ BY REF (DEF.Q%)		!/[NO]PERMANENT SPECIFIED?    &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF NOT (U.NO%) THEN		!  IF PERMANENT		      &
			PERM% = 128%		!    SET THE FLAG	      &
\		END IF							      &
\	END IF								      &
\ FOR KB% = KB.FIRST% TO KB.LAST%		!LOOP THROUGH THE KB'S	      &
\	ON ERROR GOTO 13120			!SET LOCAL ERROR TRAP	      &
\	V$ = SYS(GAIN.PRIVS$)			!Gain temporary privileges    &
		IF (OUR.KB% = TRUE%) 		!If it's our KB		      &
			AND (PERM% = 128%)	!    and we want perm char    &
			AND (KB.FIRST% = KB.LAST%) ! and it's not /ALL	      &
\	FIRQB$ = SYS(CHR$(6%)+CHR$(16%)+CHR$(0%)+CHR$(KB%)+STRING$(16%,0%)+   &
			CHR$(PERM%)+STRING$(9%,0%))!GET TERM CHARACTERISTICS  &
\	CHANGE FIRQB$ TO FIRQB%			!STORE THEM INTO FIRQB%()     &
\	FQBEXT$ = SYS(CHR$(6%)+CHR$(16%)+CHR$(1%)+CHR$(KB%)+STRING$(16%,0%)+  &
			CHR$(PERM%)+STRING$(9%,0%))!GET TERM EXTENDED CHAR    &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &
		IF (OUR.KB% = TRUE%) 		!If it's our KB		      &
			AND (PERM% = 128%)	!    and we want perm char    &
			AND (KB.FIRST% = KB.LAST%) ! and it's not /ALL	      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	CHANGE FQBEXT$ TO FQBEXT%		!STORE THEM INTO FQBEXT%()    &
\	KB% = KB.NO% IF KB% = 255%		!GET OUR ACTUAL KB NUMBER     &
\	CHANGE FSS$("KB"+NUM1$(KB%)+":",1%) TO FIRQ2% !DO THE FSS ON THE KB   &
\	KB% = 255% IF KB.LAST% = 255%		!PUT IT BACK IF WE CHANGED IT &
\	FIRQ2%(I%) = 0% FOR I% = 0% TO 22%	!CLEAR OUT WHAT ISN'T NEEDED  &
\	FIRQ2%(0%) = 30%			!30 BYTES		      &
\	FIRQ2%(1%) = 6%				!SYS CALL TO FIP	      &
\	FIRQ2%(2%) = 34%			!THE CFG SYS CALL CODE	      &
\	CHANGE FIRQ2% TO FIRQ2$			!CHANGE THE ARRAY TO A STRING &
\	V$ = SYS(GAIN.PRIVS$)			!Gain temporary privileges    &
\	CHANGE SYS(FIRQ2$) TO FIRQ2%		!DO THE SYS CALL	      &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges
13005	GET.TYPE% = FQBEXT%(5%)			!GET THIS KB'S TERMINAL TYPE  &
\	IF GET.TYPE% < 2% THEN			!IF AN UNKNOWN TERMINAL TYPE  &
		C1$ = "Unknown ("+NUM1$(GET.TYPE%)+")" !SET UP TO PRINT IT AND &
\		GOTO 13100			!  GO PRINT REST	      &
\	END IF								      &
\	CHECK.USER.MACRO% = GET.TYPE%		!SET UP TO GET THE MACRO NAME &
\	CALL TERPAR (FIRQB%(), FQBEXT%(), ERRSTS%) !GO GET THE NAME	      &
\	GOTO 13010 IF ERRSTS%			!NOT STANDARD, GO CHECK USER'S &
\	C1$ = EDIT$(MACRO$,2%)			!STORE NAME WITHOUT SPACES    &
\	GOTO 13100				!WE HAVE IT, GO PRINT THE REST &

13010	ON ERROR GOTO 13030			!SET FILE ERROR TRAP	      &
\	V$ = SYS(GAIN.PRIVS$)			!Gain temporary privileges    &
\	OPEN "_SY:$TERMAC.SYS/RO" FOR INPUT AS FILE 1%!OPEN USER'S MACRO FILE &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &
\	IF ENT.TY% <> 16% THEN			!IF NOT DCL ENTRY	      &
		CALL U.INI BY REF (U.CMN%,16%)	! TELL CUI TO READ CORE COMMON &
\	END IF								      &

13020	ERR.% = FNGET.LINE%			!GET A LINE FROM THE FILE     &
\	GOTO 13031 IF ERR.%			!GOTO ERROR ROUTINE IF ERROR  &
\	C$ = C2$				!GET THE INPUT LINE	      &
\	C0$ = SEG$(C$,1%,POS(C$,"/",1%)-1%)	!EXTRACT THE MACRO NAME	      &
\	C1$ = SEG$(C$,POS(C$,"/",1%),LEN(C$))	!EXTRACT THE MACRO	      &
\	C1$ = "SE TE" + C1$			!PUT ON THE COMMAND	      &
\	IF LEN(C1$) > 127% THEN			!CORE COMMON IS ONLY 127 LONG &
		GOTO 13020			!    GO GET NEXT LINE	      &
\	END IF								      &
\	V$ = SYS(CHR$(8%)+C1$)			!LOAD CORE COMMON	      &
\	CALL U.DIA BY REF			!HAVE CUI PARSE COMMAND	      &
\	GOTO 13020 IF U.STAT%			!ERROR, GO GET NEXT LINE      &
\	CALL FET$CQ BY REF (TYP.Q%)		!SEE IF /TYPE IS ON THIS LINE &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE ARGUMENT	      &
\		Z$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT IT		      &
\		Z% = VAL(Z$)			!  GET IT AS AN INTEGER	      &
\		GOTO 13020 IF (Z%<0%) OR (Z%>255%)!GET NEXT LINE IF NOT GOOD  &
\		GOTO 13020 IF Z% <> GET.TYPE%	!  GET NEXT LINE IF ISN'T IT  &
\		C1$ = C0$			!  SET UP TO PRINT IT	      &
\		GOTO 13040			!  GO PRINT IT AND THE REST   &
	ELSE					!IF IT WASN'T THERE	      &
		GOTO 13020			!  GET THE NEXT LINE	      &
\	END IF								      &

13030	RESUME 13031				!CLEAR THE ERROR FLAG
13031	C1$ = "Unknown ("+NUM1$(GET.TYPE%)+")"	!SET UP TO PRINT "Unknown (n)" &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &

13040	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	CLOSE 1%				!CLOSE THE MACRO FILE	      &
\	IF ENT.TY% <> 16% THEN			!IF NOT DCL ENTRY	      &
		CALL U.INI BY REF (U.CMN%,ENT.TY%,INDENT.COLUMN%)!PUT CUI BACK &
\	END IF								      &

13100	C1$ = C1$ + SPACE$(14%-LEN(C1$))	!PAD DEVICE TYPE TO 14 SPACES &
\	C1$ = C1$ + "Permanent Characteristics" IF PERM% !ADD PERM IF TRUE    &
\	CALL TERSHO (FIRQB%(),FQBEXT%(),FIRQ2%(),C1$,FULL%)!GO PRINT IT OUT   &
\	PRINT #OUT.CHN%, IF KB.FIRST% <> KB.LAST% !PRINT A BLANK IF MORE THAN 1
13110									      &
   NEXT KB%					!NEXT KB		      &
\	RETURN					!GET NEXT COMMAND	      &

13120	IF ERR = 8% THEN			!If ?Device not available err &
		IF KB.FIRST% = KB.LAST% THEN	! If one specific terminal    &
		  U.POS% = TERM.POS%		!  Restore terminal position  &
\		  CALL DISPLY ("?Terminal disabled") !Print error message     &
\		  RESUME 32000			!  Exit			      &
		ELSE				! If a range of terminals     &
		  PRINT "Terminal: KB"; NUM1$(KB%); ":"; TAB(23%); "Disabled" &
\		  PRINT				!  Print a disable message    &
\		  RESUME 13110			!  Go display the next one    &
\		END IF							      &
\	END IF								      &
\	GOTO 19000 IF ERR <> 10%		!GOTO STANDARD ERROR TRAP     &
						! IF NOT ?Protection violation &
\	PRINT "?HWCFG privilege required"	!PRINT WHICH PRIV IS NEEDED   &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &
\	RESUME 32000				!EXIT			      &

13150	!								      &
	!	Check for /OUTPUT qualifier				      &
	!								      &
\	OUT.CHN% = 0%				!Default output to KB:	      &
\	CALL FET$CQ BY REF (OUT.Q%)		!/OUTPUT?		      &
\	RETURN IF NOT U.PRES%			! No, so output to KB:	      &
\	IF U.NO% THEN				! /NOOUTPUT?		      &
	   OPEN "_NL:" FOR OUTPUT AS FILE 12% 	! Yes, so open null device    &
	ELSE								      &
	   CALL FET$A BY REF			! /OUTPUT=FILENAME?	      &
\  	   RETURN IF NOT U.PRES%		! No, so output to KB:	      &
\	   ON ERROR GOTO 13155			! Set up local error trap     &
\	   OPEN SEG$(U.STR$,1%,U.LEN%) FOR OUTPUT AS FILE 12%	! Open file   &
\	   CAUSE ERROR NODEVC			! Don't use it if...	      &
		IF STATUS AND 256%              !     device is NFS...	      &
		UNLESS STATUS AND 2048%		!     unless CCPOS() is valid &
\	   CAUSE ERROR PRVIOL			! Don't use it if...	      &
		IF STATUS AND 1024%             !       we don't have access  &
\	   ON ERROR GOTO 19000			! Ensure standard error trap  &
\	END IF					! File okay		      &
\	OUT.CHN% = 12%				! Channel # to pass to TERSHO &
\	RETURN					! Go back		      &

13155	CALL DISPLY (ERT$(ERR)) 		! Print error		      &
\	RESUME 3000				! Get next command	      &


14000	!								      &
	!	S E T U P						      &
	!								      &
	ON ERROR GOTO 14100			!SET OPEN KB ERROR TRAP	      &
\	IF KB% AND 128% THEN			!IF OUR OWN KB		      &
		OPEN "_KB:TERMGR.OUT" FOR OUTPUT AS FILE 1% ! OPEN OUR KB     &
	ELSE	OPEN "_KB"+NUM1$(KB% AND 127%)+":TERMGR.OUT"		      &
			FOR OUTPUT AS FILE 1%	!	      OPEN KB	      &

14010	ON ERROR GOTO 14090			!SET OPEN FILE ERROR TRAP     &
\	OPEN SETUP.FILE$+"/RO" FOR INPUT AS FILE 2%!OPEN THE FILE	      &
\	ON ERROR GOTO 14080			!SET FILE HANDLING ERROR TRAP &

14020	GET #2%					!GET A BLOCK		      &
\	PUT #1%+SWAP%(2%), RECORD 1%		!OUTPUT TO KB		      &
\	GOTO 14020				!DO IT AGAIN		      &

14080	RESUME 14085				!ERROR READING SETUP FILE
14085	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	CLOSE 1%, 2%				!CLOSE THE KB AND THE FILE    &
\	RETURN IF ERR = 11%			!GO BACK IF JUST EOF	      &
\	PRINT ERT$(ERR); " reading Setup file "; SETUP.FILE$ !PRINT ERROR     &
\	RETURN					!GO BACK		      &

14090	RESUME 14095				!ERROR OPENING SETUP FILE
14095	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	CLOSE 1%, 2%				!CLOSE THE KB AND THE FILE    &
\	PRINT ERT$(ERR); " opening Setup file "; SETUP.FILE$ !PRINT ERROR     &
\	RETURN					! GO BACK		      &

14100	RESUME 14105
14105	ON ERROR GOTO 19000			!RESET THE ERROR TRAP	      &
\	CLOSE 1%				!CLOSE THE KB		      &
\	U.POS% = SAVE.DEVICE.POS%		!RESTORE THE KB'S POSITION    &
\	CALL DISPLY ("?Terminal not available")	!PRINT ERROR MESSAGE	      &
\	RETURN					! AND GO BACK		      &
									      &


15300	!								      &
	!	F N G E T . L I N E %					      &
	!								      &
	!	This function is used to get a line from the		      &
	!	$TERMAC.SYS file or the $TERDFL.SYS file.  Blank	      &
	!	lines and comments lines are ignored.  Also, comments	      &
	!	are stripped off.  If a line has the continuation	      &
	!	character, "-", the subsequent line(s) are appended.	      &
	!								      &
	!	Input:				File open on channel 1	      &
	!								      &
	!	Output:		C2$		Line from the file	      &
	!			FNGET.LINE%	   0% - No error	      &
	!					<> 0% - Error returned	      &
	!								      &
	DEF FNGET.LINE%				!DEFINE THE FUNCTION	      &
\	FNGET.LINE% = 0%			!ASSUME NO ERRORS	      &
\	ON ERROR GOTO 15350			!SET THE LOCAL ERROR TRAP     &
\	GOSUB 15340				!GO GET A LINE FROM THE FILE  &
\	C2$ = C3$				!GET THE LINE		      &
\	UNTIL ASCII(RIGHT(C2$,LEN(C2$))) <> 45% !LOOP UNTIL NO MORE	      &
						! CONTINUATION CHARACTERS     &
\		C2$ = LEFT(C2$,LEN(C2$)-1%)	!   STRIP OFF THE "-"	      &
\		GOSUB 15340			! GO GET THE NEXT LINE	      &
\		C2$ = C2$ + C3$			! APPEND THE CONTINUATION LINE &
\	NEXT								      &
\	FNEXIT					!THAT'S ALL FOLKS	      &

15340	LINPUT #1%, C3$				!INPUT A LINE FROM MACRO FILE &
\	C3$ = EDIT$(C3$,2%+4%+32%+256%)		!GET RID OF GARBAGE	      &
\	GOTO 15340 UNLESS LEN(C3$)		!GET NEXT LINE IF BLANK	      &
\	GOTO 15340 IF ASCII(C3$) = 33%		!GET NEXT LINE IF A COMMENT   &
\	S% = POS(C3$,"!",1%)			!SEARCH FOR EMBEDDED COMMENT  &
\	IF S% THEN				!IF THERE IS ONE	      &
		C3$ = SEG$(C3$,1%,S%-1%)	!  GET EVERYTHING BEFORE IT   &
\	END IF								      &
\	RETURN					!RETURN			      &

15350	FNGET.LINE% = ERR			!SET THE FUNCTION = THE ERROR &
\	RESUME 15399				!EXIT			      &

15399	FNEND					!END OF FUNCTION	      &
									      &

									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
\	PRINT "??Program failure in "+ERN$	!print severe error msg	      &
\	PRINT ERT$(ERR)+" at line "+NUM1$(ERL)				      &
\	RESUME 32000				!resume to exit		      &


30500	!	D C L   e n t r y   p o i n t				      &
	!								      &
	!								      &
	ENT.TY% = 16%				!set DCL entry type	      &
\	HDNG% = 0%				!no program heading	      &
\	GOTO 2000				!and branch to main	      &


31000	!	C H A I N   e n t r y   p o i n t			      &
	!								      &
	!								      &
	ENT.TY% = 2%				!set CHAIN entry type	      &
\	HDNG% = 0%				!no program heading	      &
\	GOTO 2000				!and branch to main	      &


32000	!	e n d - o f - p r o g r a m   p r o c e s s i n g	      &
	!								      &
	!								      &
	CLOSE #Z% FOR Z% = 1% TO 12%		!close all channels	      &
\	Z$ = SYS (CHR$(9%))			!exit to user's KBM	      &


32767	END
