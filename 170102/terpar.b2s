1	SUB TERPAR (FIRQB%(), FQBEXT%(), ERRSTS%)			      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : TERPAR					      &
	!	     version : V10.1					      &
	!	        edit : I					      &
	!	   edit date : 31-JAN-92				      &
	!	   author(s) : JJT,DBM,SEL				      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1992 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL TERPAR (FIRQB%(), FQBEXT%(), ERRSTS%)		      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!	FIRQB%()	O	Terminal Characteristics Part I	      &
	!	FQBEXT%()	O	Terminal Characteristics Part II      &
	!	ERRSTS%		O	Error flag			      &
	!	DELTA.WIDTH%	O	Change in the terminal's width flag   &
	!	KB.PERM%	O	KB number in low byte		      &
	!				Permanent flag in high byte	      &
	!	SETUP.FILE%	O	Print set-up file flag		      &
	!	SETUP.FILE$	O	Set-up filename			      &
	!	SAVE.DEVICE.POS% O	Position of Device in Command string  &
	!	MACRO$		O	User macro name			      &
	!	CHECK.USER.MACRO% O	Access User Macro file flag	      &
	!	INQUIRE.FLAG%	O	Check default file flag		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! V9.1-05	30-Jul-85	(JJT) Fix error handling for	      &
	!				Terminal not available		      &
	! V9.1-05	06-Aug-85	(JJT) Fix /INQUIRE for LA120's + LA12s &
	! V9.1-05	07-Aug-85	(JJT) Change order of 8-bit/NO8-bit   &
	! V9.1-05	12-Aug-85	(JJT) Implement new strategy	      &
	!					for Set Term/Inquire	      &
	! V9.1-05	16-Aug-85	(JJT) Add ability to get Macro name   &
	! V9.2-02	22-Oct-85	(JJT) Handle ?Not a valid device error &
	! V9.2-03	22-Nov-85	(JJT) Stop setting parity with /DEVICE &
	! V9.3-13	04-Aug-86	(JJT) Add support for LA75	      &
	!				(JJT) Check for owned terminal	      &
	! V9.4-02	18-Feb-87	(JJT) Add support for VT330/VT340     &
	! V9.4-04	04-May-87	(JJT) Look for err 8; not err 6	      &
	! V9.4-05	10-May-87	(JJT) Fix Error 8 with no HWCFG	      &
	! V9.5-07	14-Sep-87	(JJT) Add support for VT320	      &
	! V9.6-10	22-May-88	(KCG) Use XON/XOFF mode for /INQUIRE  &
	! V9.7-01	12-Sep-88	(JJT) Always set AVO + WIDE for VT125 &
	! V9.7-03	06-Jan-89	(JJT) Add /ANSWERBACK		      &
	! V9.7-04	26-Jan-89	(JJT) If /ANSWERBACK, then check /AUTO &
	! V9.7-06	02-Mar-89	(JJT) Separate /ANSWERBACK + /NOANSWER &
	! V9.7-07	20-Apr-89	(JJT) Support LA324		      &
	! V10.0-B	17-Jul-89	(DBM) Add /OPERATOR_SERVICES	      &
	! V10.0-B	25-Jul-89	(SEL) Add /[NO]LINE_EDITING, /INSERT, &
	!					  and /OVERSTRIKE	      &
	! V10.0-B	25-Jul-89	(SEL) HOST_SYNC & RESUME=ANY conflict &
	! V10.0-B	27-Jul-89	(SEL) If /AUTOBAUD, then check /ANSWER &
	! V10.0-C	31-Aug-89	(SEL) Change syscalls for /INSERT,    &
	!					/OVERSTRIKE, /[NO]LINE_EDITING &
	!					and /OPERATOR_SERVICES	      &
	! V10.0-C	31-Aug-89	(SEL) Add /[NO]RECALL		      &
	! V10.0-E	18-Oct-89	(SEL) Remove /[NO]RECALL & /[NO]LINE  &
	!				      Change device macros to leave   &
	!					ESCAPE_SEQUENCE unchanged     &
	! V10.0-F	31-Oct-89	(SEL) Change syscalls for /INSERT and &
	!					/OVERSTRIKE.		      &
	! V10.0-F1	14-Nov-89	(SEL) Put /RECALL, /LINE_EDIT, /INSERT &
	!					and /OVERSTRIKE back as in BLC &
	! V10.0-F1	20-Nov-89	(SEL) Change syscalls for /INSERT and &
	!					/OVERSTRIKE again.	      &
	! V10.0-G	12-Dec-89	(SEL) /BUFFER qualifier requires /PERM &
	! V10.0-I	01-Feb-90	(SEL) Calculate /BUFFER_QUOTA using a &
	!					28 character buffer, not 30.  &
	! V10.0-I	14-Feb-90	(SEL) Fix bug in /AUTOBAUD (QAR#100083) &
	! V10.0-K	18-Apr-90	(SEL) Add /PROTOCOL={NONE,DDCMP}      &
	!				(JJT) Default to a VT340 IF LEVEL 3   &
	! V10.0-K+	17-May-90	(SEL) Trap error if nonexistent tty   &
	!				(JJT) Stop changing width for /VT100  &
	! V10.0-L	23-May-90	(SEL) Support VT420		      &
	! V10.0-L	31-May-90	(SEL) Clear private delimiter before  &
	!					doing a /INQUIRE	      &
	! V10.0-L	01-Jun-90	(SEL) Don't allow 8 bit characters as &
	!					private delimiters.	      &
	! V10.0-L+	04-Jun-90	(SEL) Trap priv err when checking for &
	!					nonexistent tty		      &
	! V10.1-A	04-Mar-91	(SEL) Change VT420 terminal type to 52 &
	! V10.1-H	06-Dec-91	(SEL) Support LN05,LN06,LN08 and LA70 &
	! V10.1-I	31-Jan-92	(SEL) Removed RT02,LA30/30S,VT50/50H  &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:TERKEY.B2S"		!include CUI constants	      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%	!DISPLY common data	      &

760	COMMON	(PARCMN)			!TERPAR common data	      &
									      &
	MACRO$ = 16%,		SETUP.FILE$ = 32%,	SETUP.FILE%,	      &
	SAVE.DEVICE.POS%,	KB%,			PERM%,		      &
	DELTA.WIDTH%,		CHECK.USER.MACRO%,	INQUIRE.FLAG%,	      &
	TERM.POS%,		OUR.KB%					      &

770	MAP (OMSSUD)				! Patch points for OMSSUB     &
			OMS$LO%,		!   OMS Local Object Type     &
			OMS$MM%,		!   Message Max for declare   &
			OMS$PD%,		!   Raise privs for declare   &
			OMS$PS%			!   Raise privs for send      &

780	MAP (PARBUF)	PARBUF$ = 24%		! Parameter buff for OMSSUB   &
\	MAP (PARBUF)	OMSCMD%,		! Command to execute	      &
			REQ.RTN$ = 6%,		! Return receiver name	      &
			REQ.CTX%,		! Return context value	      &
			FILL%(2%),		! Not used by TERMGR	      &
			OMSERR%,		! Error code returned by subr &
			FILL%(4%)		! Not used by TERMGR	      &

800	DECLARE STRING CONSTANT	PERM.REQ = "?/PERMANENT qualifier required",  &
				HWCFG.REQ = "?HWCFG privilege required",      &
				OPER.REQ = "?OPER privilege required",	      &
				DEV.REQ = "?DEVICE privilege required",	      &
		HST.RES = "?Qualifiers HOST_SYNC and RESUME=ANY conflict"     &

910	DIM FIRQ2%(30%),			!General Purpose SYScall array &
	S(16%),					!Array to load speed array    &
	S%(128%,16%),				!Store KB speeds user allows  &
	SPEED%(10%,16%),			!Store KB speeds by interface &
	PARM%(20%)				!Array for ANSI argument list &

1000	!	m a i n    s u b p r o g r a m    l o g i c		      &
	!								      &
	!								      &

2100	TERM.WIDTH%=ASCII(SEG$(SYS(CHR$(6%)+	!Get this KB's width	      &
		CHR$(16%)+CHR$(0%)+CHR$(255%)),5%,5%))-1%		      &
\	TERM.POS% = 0%				!Clear terminal param position &
\	CHANGE SYS(CHR$(6%)+CHR$(26%)) TO FIRQ2%!return job info	      &
\	PPN% = FIRQ2%(21%)+SWAP%(FIRQ2%(22%))	!Save user PPN		      &
\	JOB.NO% = FIRQ2%(3%)/2%			!Save user Job number	      &
\	KB.NO% = FIRQ2%(4%)			!Get KB number		      &
\	TRUE% = -1%				!Set up the constant for true &
\	FALSE% = NOT TRUE%			!Set up the constant for false &
\	GAIN.PRIVS$ = CHR$(6%)+CHR$(-21%)+CHR$(0%) !Constant to gain privs    &
\	DROP.PRIVS$ = CHR$(6%)+CHR$(-21%)+CHR$(255%)!Constant to drop privs   &
\	HWCFG.PRIV% = ((ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !CHECK FOR &
		   STRING$(3%,0%)+"HWCFG"),3%,3%))) = 0%)! HWCFG PRIV	      &
\	OPER.PRIV% = ((ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !CHECK FOR &
		   STRING$(3%,0%)+"OPER"),3%,3%))) = 0%)! OPER PRIV	      &
\	DEVICE.PRIV% = ((ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !CHECK FOR &
		   STRING$(3%,0%)+"DEVICE"),3%,3%))) = 0%)! DEVICE PRIV	      &

3000	GOTO 3100 IF (CHECK.USER.MACRO% < 2%) OR!Go do SET TERMINAL if we are &
		(CHECK.USER.MACRO% > 255%)	!not looking up the Macro name &
\	GOSUB GETMACRO				!Go get it		      &
\	SUBEXIT					! and exit		      &

3100	GOSUB SETTERM				!Do the SET TERMINAL command  &
\	SUBEXIT					! and exit		      &


8000	DATA	"*SPEEDS*",						      &
   0, 0, -1,-1, -1, -1,-1, -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, &
   2,-1,110,-1,150,300,-1, -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, &
   4, 0, -1,-1, -1, -1,-1, -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, &
   6, 0, -1,-1, -1, -1,-1, -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, &
   8, 0, -1,-1, -1, -1,-1, -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, &
  10, 0, -1,-1, -1, -1,-1, -1, -1, -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1,  -1, &
  12,-1,  0,50, 75,110,134.5,150,200,300, 600,1200,1800,2400,4800,9600,  -2,  -3, &
  14,-1,  0,50, 75,110,134.5,150,300,600,1200,1800,2000,2400,3600,4800,7200,9600, &
  16,-1,  0,75,110,134.5,150,300,600,1200,1800,2000,2400,4800,-1,9600,19200,-1 &


8500	DATA "*MACRO*",							      &
	     VT100,							      &
		81,128,128,128,255,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,6,5,0,250,3			      &

8502	!     VT100,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	6,			Terminal Type code		      &
	!	5,							      &
	!	0,							      &
	!	250,							      &
	!	3							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8510	DATA VT52,							      &
		81,128,128,128,128,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,0,0,0,0,0,3,0,0,255,3			      &

8512	!     VT52,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	128,			No Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	0,			No Resume change		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	3,			Terminal Type code		      &
	!	0,							      &
	!	0,							      &
	!	255,							      &
	!	3							      &
	!				No ANSI				      &
	!				No Advanced Video		      &
	!				No 132 Columns			      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8520	DATA VT220,							      &
		81,128,128,128,255,128,255,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,18,143,3,112,0			      &

8522	! VT220,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	18,			Terminal Type code		      &
	!	143,							      &
	!	3,							      &
	!	112,							      &
	!	0							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				Select Erase			      &
	!				Loadable Characters		      &
	!				User Defined Keys		      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &


8530	DATA VT240,							      &
		81,128,128,128,255,128,255,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,19,191,3,64,0			      &

8532	! VT240,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	19,			Terminal Type code		      &
	!	191,							      &
	!	3,							      &
	!	64,							      &
	!	0							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				Regis				      &
	!				Sixel				      &
	!				Select Erase			      &
	!				Loadable Characters		      &
	!				User Defined Keys		      &
	!				No Katakana			      &


8535	DATA VT241,							      &
		81,128,128,128,255,128,255,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,20,191,3,64,0			      &

8537	! VT241,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	20,			Terminal Type code		      &
	!	191,							      &
	!	3,							      &
	!	64,							      &
	!	0							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				Regis				      &
	!				Sixel				      &
	!				Select Erase			      &
	!				Loadable Characters		      &
	!				User Defined Keys		      &
	!				No Katakana			      &


8540	DATA LA36,							      &
		133,255,128,128,128,128,128,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,0,0,0,0,0,2,4,0,251,247			      &

8542	! LA36,								      &
	!	133,			Width 132			      &
	!	255,			No Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	128,			No Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	0,			No Resume change		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	2,			Terminal Type code		      &
	!	4,							      &
	!	0,							      &
	!	251,							      &
	!	247							      &
	!				132 Columns			      &
	!				No ANSI				      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8550	DATA LA12,							      &
		81,128,255,128,255,128,128,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,8,5,0,250,3			      &

8552	! LA12,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	8,			Terminal Type code		      &
	!	5,							      &
	!	0,							      &
	!	250,							      &
	!	3							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8560	DATA LA50,							      &
		81,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,12,101,9,154,246		      &

8562	! LA50,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	12,			Terminal Type code		      &
	!	101,							      &
	!	9,							      &
	!	154,							      &
	!	246							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Sixel				      &
	!				Katakana			      &
	!				Loadable Characters		      &
	!				No Interactive			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Select Erase			      &
	!				No User Defined Keys		      &


8565	DATA LN03,							      &
		81,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,35,39,9,216,246			      &

8567	! LN03,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	35,			Terminal Type code		      &
	!	39,							      &
	!	9,							      &
	!	216,							      &
	!	246							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Advanced Video			      &
	!				Sixel				      &
	!				No Katakana			      &
	!				Loadable Characters		      &
	!				No Interactive			      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Select Erase			      &
	!				No User Defined Keys		      &


8570	DATA LA100,							      &
		133,128,255,128,255,128,128,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,9,37,0,218,247			      &

8572	! LA100,							      &
	!	133,			Width 132			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	9,			Terminal Type code		      &
	!	37,							      &
	!	0,							      &
	!	218,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Sixel				      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8580	DATA LA120,							      &
		133,128,255,128,255,128,128,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,0,0,0,0,0,7,5,0,250,247			      &

8582	! LA120,							      &
	!	133,			Width 132			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			No Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	0,			No Resume change		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	7,			Terminal Type code		      &
	!	5,							      &
	!	0,							      &
	!	250,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8590	DATA LA180S,							      &
		133,255,255,128,255,128,128,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,5,4,8,251,247			      &

8592	! LA180S,							      &
	!	133,			Width 132			      &
	!	255,			No Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	5,			Terminal Type code		      &
	!	4,							      &
	!	8,							      &
	!	251,							      &
	!	247							      &
	!				132 Columns			      &
	!				No Interactive			      &
	!				No ANSI				      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8600	DATA LA34,							      &
		133,128,255,128,255,128,128,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,10,5,0,250,247			      &

8602	! LA34,								      &
	!	133,			Width 132			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	10,			Terminal Type code		      &
	!	5,							      &
	!	0,							      &
	!	250,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8610	DATA LA38,							      &
		133,128,255,128,255,128,128,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,11,5,0,250,247			      &

8612	! LA38,								      &
	!	133,			Width 132			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	11,			Terminal Type code		      &
	!	5,							      &
	!	0,							      &
	!	250,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8620	DATA VT55,							      &
		81,128,128,128,128,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,0,0,0,0,0,4,0,0,247,3			      &

8622	! VT55,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	128,			No Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	0,			No Resume change		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	4,			Terminal Type code		      &
	!	0,							      &
	!	0,							      &
	!	247,							      &
	!	3							      &
	!				No ANSI				      &
	!				No Advanced Video		      &
	!				No 132 Columns			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8630	DATA VT101,							      &
		81,128,128,128,255,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,13,13,0,242,247			      &

8632	! VT101,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	13,			Terminal Type code		      &
	!	13,							      &
	!	0,							      &
	!	242,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				No Advanced Video		      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8640	DATA VT102,							      &
		81,128,128,128,255,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,14,15,0,240,247			      &

8642	! VT102,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	14,			Terminal Type code		      &
	!	15,							      &
	!	0,							      &
	!	240,							      &
	!	247							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8650	DATA VT105,							      &
		81,128,128,128,255,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,21,15,0,240,247			      &

8652	! VT105,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	21,			Terminal Type code		      &
	!	15,							      &
	!	0,							      &
	!	240,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				No Advanced Video		      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8660	DATA VT125,							      &
		81,128,128,128,255,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,15,31,0,224,3			      &

8662	! VT125,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	15,			Terminal Type code		      &
	!	31,							      &
	!	0,							      &
	!	224,							      &
	!	3							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				Regis				      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8670	DATA VT131,							      &
		81,128,128,128,255,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,16,15,0,240,247			      &

8672	! VT131,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	16,			Terminal Type code		      &
	!	15,							      &
	!	0,							      &
	!	240,							      &
	!	247							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8680	DATA VT132,							      &
		81,128,128,128,255,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,17,15,0,240,247			      &

8682	! VT132,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	17,			Terminal Type code		      &
	!	15,							      &
	!	0,							      &
	!	240,							      &
	!	247							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8690	DATA VK100,							      &
		85,128,128,128,255,128,255,255,1,0,16,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,22,27,0,228,247			      &

8692	! VK100,							      &
	!	85,			Width 84			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	16,			No Parity change/No Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	22,			Terminal Type code		      &
	!	27,							      &
	!	0,							      &
	!	228,							      &
	!	247							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				Printer Port			      &
	!				Regis				      &
	!				No 132 Columns			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8770	DATA LA210,							      &
		133,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,44,37,8,218,247			      &

8772	! LA210,							      &
	!	133,			Width 132			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	44,			Terminal Type code		      &
	!	37,							      &
	!	8,							      &
	!	218,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Sixel				      &
	!				No Interactive			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &
									      &


8780	DATA LQP02,							      &
		133,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,46,5,8,250,247			      &

8782	! LQP02,							      &
	!	133,			Width 132			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	46,			Terminal Type code		      &
	!	5,							      &
	!	8,							      &
	!	250,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				No Interactive			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &
									      &


8790	DATA LQP03,							      &
		133,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,45,5,8,250,247			      &

8792	! LQP03,							      &
	!	133,			Width 132			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	45,			Terminal Type code		      &
	!	5,							      &
	!	8,							      &
	!	250,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				No Interactive			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &


8800	DATA LA75,							      &
		81,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,47,101,9,154,246		      &

8802	! LA75,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	47,			Terminal Type code		      &
	!	101,							      &
	!	9,							      &
	!	154,							      &
	!	246							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Sixel				      &
	!				Katakana			      &
	!				Loadable Characters		      &
	!				No Interactive			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Select Erase			      &
	!				No User Defined Keys		      &
									      &


8810	DATA VT330,							      &
		81,128,128,128,255,128,255,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,48,191,3,64,0			      &

8812	! VT330,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	48,			Terminal Type code		      &
	!	191,							      &
	!	3,							      &
	!	64,							      &
	!	0							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				Regis				      &
	!				Sixel				      &
	!				Select Erase			      &
	!				Loadable Characters		      &
	!				User Defined Keys		      &
	!				No Katakana			      &
									      &


8820	DATA VT340,							      &
		81,128,128,128,255,128,255,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,49,191,3,64,0			      &

8822	! VT340,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	49,			Terminal Type code		      &
	!	191,							      &
	!	3,							      &
	!	64,							      &
	!	0							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				Regis				      &
	!				Sixel				      &
	!				Select Erase			      &
	!				Loadable Characters		      &
	!				User Defined Keys		      &
	!				No Katakana			      &


8830	DATA VT320,							      &
		81,128,128,128,255,128,255,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,50,143,3,112,0			      &

8832	! VT320,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	50,			Terminal Type code		      &
	!	143,							      &
	!	3,							      &
	!	112,							      &
	!	0							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				Select Erase			      &
	!				Loadable Characters		      &
	!				User Defined Keys		      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &


8840	DATA LA324,							      &
		133,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,51,37,8,218,247			      &

8842	! LA324,							      &
	!	133,			Width 132			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	51,			Terminal Type code		      &
	!	37,							      &
	!	8,							      &
	!	218,							      &
	!	247							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Sixel				      &
	!				No Interactive			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Katakana			      &
	!				No Select Erase			      &
	!				No Loadable Characters		      &
	!				No User Defined Keys		      &

8850	DATA VT420,							      &
		81,128,128,128,255,128,255,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,52,143,3,112,0			      &

8852	! VT420,							      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	128,			No Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	255,			Scope				      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	52,			Terminal Type code		      &
	!	143,							      &
	!	3,							      &
	!	112,							      &
	!	0							      &
	!				ANSI				      &
	!				Advanced Video			      &
	!				132 Columns			      &
	!				Printer Port			      &
	!				Select Erase			      &
	!				Loadable Characters		      &
	!				User Defined Keys		      &
	!				No Regis			      &
	!				No Sixel			      &
	!				No Katakana			      &
	!				NRCS				      &
	!				TCS				      &
	!				Windowing			      &
	!				Session Management		      &
	!				Horizontal Scrolling		      &

8860	DATA LA70,							      &
		81,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,53,101,9,154,246		      &

8862	! LA70,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	53,			Terminal Type code		      &
	!	101,							      &
	!	9,							      &
	!	154,							      &
	!	246							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Sixel				      &
	!				Katakana			      &
	!				Loadable Characters		      &
	!				No Interactive			      &
	!				No Advanced Video		      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Select Erase			      &
	!				No User Defined Keys		      &
									      &

8870	DATA LN05,							      &
		81,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,54,39,9,216,246			      &

8872	! LN05,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	54,			Terminal Type code		      &
	!	39,							      &
	!	9,							      &
	!	216,							      &
	!	246							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Advanced Video			      &
	!				Sixel				      &
	!				No Katakana			      &
	!				Loadable Characters		      &
	!				No Interactive			      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Select Erase			      &
	!				No User Defined Keys		      &

8880	DATA LN06,							      &
		81,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,55,39,9,216,246			      &

8882	! LN06,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	55,			Terminal Type code		      &
	!	39,							      &
	!	9,							      &
	!	216,							      &
	!	246							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Advanced Video			      &
	!				Sixel				      &
	!				No Katakana			      &
	!				Loadable Characters		      &
	!				No Interactive			      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Select Erase			      &
	!				No User Defined Keys		      &

8890	DATA LN08,							      &
		81,128,255,128,255,128,128,255,1,0,24,0,255,128,0,0,0,	      &
		0,128,255,0,128,0,0,0,0,56,39,9,216,246			      &

8892	! LN08,								      &
	!	81,			Width 80			      &
	!	128,			Tab				      &
	!	255,			Form				      &
	!	128,			Lowercase Output		      &
	!	255,			Hostsync			      &
	!	128,			No Local Echo			      &
	!	128,			Hardcopy			      &
	!	255,			Lowercase Input			      &
	!	1,			CRFill 0			      &
	!	0,			No Speed change			      &
	!	24,			No Parity change/Eight bit	      &
	!	0,			No Speed change			      &
	!	255,			TTSync				      &
	!	128,			Up Arrow			      &
	!	0,			Reserved			      &
	!	0,			No Data/Stop/Parity features	      &
	!	0,			Reserved for Permanent flag	      &
	!	0,			No change to Escape Sequence	      &
	!	128,			No Delimiter			      &
	!	255,			No Alt Mode			      &
	!	0,			No Control/R or Control/T change      &
	!	128,			Resume=Control/C		      &
	!	0,			No Break key change		      &
	!	0,			No Broadcast change		      &
	!	0,			Reserved			      &
	!	0,			Reserved			      &
	!	56,			Terminal Type code		      &
	!	39,							      &
	!	9,							      &
	!	216,							      &
	!	246							      &
	!				ANSI				      &
	!				132 Columns			      &
	!				Advanced Video			      &
	!				Sixel				      &
	!				No Katakana			      &
	!				Loadable Characters		      &
	!				No Interactive			      &
	!				No Printer Port			      &
	!				No Regis			      &
	!				No Select Erase			      &
	!				No User Defined Keys		      &
									      &

8990	DATA ""								      &


10000	!								      &
	!	S E T    T E R M I N A L    C H A R A C T E R I S T I C S     &
	!								      &
 SETTERM:								      &
\	CALL FET$P BY REF (KB.T%)		!KBn SPECIFIED?		      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		Z$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT IT		      &
\		Z$ = Z$ + ":"			!  ADD THE : THAT CUI REMOVED &
\		TERM.POS% = U.POS%		!  SAVE THE POSITION	      &
\		CHANGE FSS$(Z$,1%) TO FIRQ2%	!  DO THE FSS ON THE DEVICE   &
\		IF (STATUS AND 255%) <> 2% THEN	!  IS IT A KB?		      &
		       CALL DISPLY("?Device is not a terminal")		      &
						!     ONLY KB'S		      &
\			ERRSTS% = TRUE%		!     SET ERROR FLAG	      &
\			RETURN			!     GO BACK		      &
\		END IF							      &
\		IF FIRQ2%(26%) <> 0% THEN	!  IF WE HAVE A KB NUMBER     &
			KB% = FIRQ2%(25%)	!    GET THE KB NUMBER	      &
\		END IF							      &
\		ON ERROR GOTO 10205		!  See if terminal exists     &
\		CHANGE SYS(CHR$(6%)+CHR$(16%)+CHR$(0%)+CHR$(KB%)+	      &
		 STRING$(24%,0%)) TO FIRQ2% 	!			      &
\	END IF								      &

10003	ON ERROR GOTO 19000			!  Reset standard error trap  &
\	OUR.KB% = (KB% = 255%) OR (KB% = KB.NO%)!SET FLAG IF IT'S OUR KB      &
\	IF (OUR.KB% = FALSE%) AND 		!IF NOT OUR KB		      &
	   (HWCFG.PRIV% = 0%) THEN		!  AND NO HWCFG PRIV	      &
		ON ERROR GOTO 10210		!    SET LOCAL ERROR TRAP     &
\		V$ = SYS(GAIN.PRIVS$)		!    REGAIN TEMP PRIVS	      &
\		KB.JOB% =			!  GET THE OWNER OF THE KB    &
		 ASCII(SEG$(SYS(CHR$(6%)+CHR$(16%)+CHR$(0%)+CHR$(KB%)),3%,3%)) &
\		V$ = SYS(DROP.PRIVS$)		! DROP TEMP PRIVS	      &
\		ON ERROR GOTO 19000		!    RESET ERROR TRAP	      &
\		IF ((((KB.JOB% AND 126%)/2%)=JOB.NO%) AND !IF WE OWN THE KB   &
		     ((KB.JOB% AND   1%)    = 0%)) THEN   ! AND NOT DISABLED  &
			OUR.KB% = TRUE%		!          FLAG THAT WE OWN IT &
		ELSE				!     ELSE WE DON'T OWN IT    &
			PRINT HWCFG.REQ		! PRINT ERROR MSG	      &
\			ERRSTS% = TRUE%		!	   SET ERROR FLAG     &
\			RETURN			!	   AND GO BACK	      &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (DEF.Q%)		!/[NO]PERMANENT SPECIFIED?    &
\	IF U.PRES% THEN				!IF PRESENT		      &
		PERM% = 0% IF U.NO%		!  IF NOPERMANENT	      &
\		PERM% = 255% IF NOT (U.NO%)	!  IF PERMANENT		      &
\	END IF								      &
\	CALL FET$CQ BY REF (RST.Q%)		!/RESET SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		V$ = SYS(GAIN.PRIVS$)		!  REGAIN TEMP PRIVS	      &
			IF (OUR.KB% = TRUE%)	!IF IT'S OUR KB		      &
\		ON ERROR GOTO 10220		! SET LOCAL ERROR TRAP	      &
\		CHANGE SYS(CHR$(6%)+CHR$(16%)+CHR$(0%)+CHR$(KB%)+ !GET THE    &
		 STRING$(16%,0%)+CHR$(128%)+STRING$(9%,0%)) TO FIRQ2% !CHAR   &
\		FIRQB%(23%) = 128%		!  ALWAYS CLEAR DELIMITERS    &
\		SPEED.14% = FIRQB%(14%)		!  SAVE THE RECV SPEED	      &
\		SPEED.16% = FIRQB%(16%)		!  SAVE THE XMIT SPEED	      &
\		FOR I% = 5% TO 28%		!  START LOADING THE FIRQB    &
\			FIRQB%(I%) = FIRQ2%(I%) UNLESS FIRQB%(I%)!DON'T	      &
				AND ((I% < 14%) OR (I% > 16%)) !OVERWRITE     &
						!	WHAT'S THERE	      &
\			FIRQB%(I%) = FIRQ2%(I%) OR FIRQ2%(29%) !SPECIAL CASE  &
				IF I% = 15%	!    PARITY/EIGHT_BIT	      &
\		NEXT I%				!  NEXT CHARACTERISTIC	      &
\		IF (FIRQB%(5%) <> 0%) AND	!If width changed	      &
		   ((KB%=255%) OR (KB%=KB.NO%)) THEN	!and our KB then      &
			DELTA.WIDTH% = TRUE%		!  Set the flag	      &
\		END IF							      &
\		CHANGE SYS(CHR$(6%)+CHR$(16%)+CHR$(1%)+CHR$(KB%)+ !GET THE    &
		 STRING$(16%,0%)+CHR$(128%)+STRING$(9%,0%)) TO FIRQ2% !X-CHAR &
\		ON ERROR GOTO 19000		! RESET STANDARD ERROR TRAP   &
\		V$ = SYS(DROP.PRIVS$)		! DROP TEMP PRIVS	      &
			IF (OUR.KB% = TRUE%)	!IF IT'S OUR KB		      &
\		FQBEXT%(5%)  = FIRQ2%(5%)  UNLESS FQBEXT%(5%) !STORE TERM TYPE &
\		IF (FIRQ2%(23%) AND 16%) = 0% THEN !IF /NOAUTOBAUD	      &
			FIRQB%(14%) = SPEED.14% UNLESS FIRQB%(14%) !SET RECV  &
\			FIRQB%(16%) = SPEED.16% UNLESS FIRQB%(16%) !SET XMIT  &
\		END IF							      &
\		IF FQBEXT%(23%) = 0% THEN	!  IF NOTHING THERE NOW	      &
			FQBEXT%(23%) = FIRQ2%(23%)!CONTROL FLAGS	      &
\			FQBEXT%(24%) = 255%	!  INIT TO CLEAR ALL FLAGS    &
\			FQBEXT%(24%) = FQBEXT%(24%) AND NOT(FIRQ2%(23%))      &
						!  SET APPROPRIATE CLR FLAGS  &
\		END IF							      &
\		IF FQBEXT%(25%) = 0% THEN	!  IF NOTHING THERE NOW	      &
			FQBEXT%(25%) = FIRQ2%(25%)!CAPABILITY FLGS	      &
\			FQBEXT%(27%) = 255%	!  INIT TO CLEAR ALL FLAGS    &
\			FQBEXT%(27%) = FQBEXT%(27%) AND NOT(FIRQ2%(25%))      &
						!  SET APPROPRIATE CLR FLAGS  &
\		END IF							      &
\		IF FQBEXT%(26%) = 0% THEN	!  IF NOTHING THERE NOW	      &
			FQBEXT%(26%) = FIRQ2%(26%)!CAPABILITY FLGS	      &
\			FQBEXT%(28%) = 255%	!  INIT TO CLEAR ALL FLAGS    &
\			FQBEXT%(28%) = FQBEXT%(28%) AND NOT(FIRQ2%(26%))      &
						!  SET APPROPRIATE CLR FLAGS  &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (INQ.Q%)		!/INQUIRE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		GOSUB 11500			!  GO FIND OUT THE TERM TYPE  &
\		RETURN IF ERRSTS% = -2%		!  EXIT IF FATAL ERROR	      &
\		IF ERRSTS% = TRUE% THEN		!  IF ERROR,		      &
			INQUIRE.FLAG% = TRUE% 	!   SET FLAG TO CHECK DEF FILE &
\			ERRSTS% = FALSE%	!   CLEAR THE ERROR FLAG      &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (DEVT.Q%)		!/DEVICE_TYPE SPECIFIED?      &
\	IF U.PRES% THEN 			!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE ARG		      &
\		Z$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT IT		      &
\		SAVE.DEVICE.POS% = U.POS%	!  SAVE THE POSITION	      &
\		MACRO$ = EDIT$(Z$,-2%)		!  STORE THE MACRO CMND	      &
\		GOSUB 10500			!  LOOKUP MACRO IN DATA TABLE &
\	END IF								      &
\	CALL FET$CQ BY REF (LA34.Q%)		!/LA34 SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		MACRO$ = "LA34"			!  SET THE MACRO TO LA34      &
\		GOSUB 10500			!  LOOKUP MACRO IN DATA TABLE &
\	END IF								      &
\	CALL FET$CQ BY REF (LA36.Q%)		!/LA36 SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		MACRO$ = "LA36"			!  SET THE MACRO TO LA36      &
\		GOSUB 10500			!  LOOKUP MACRO IN DATA TABLE &
\	END IF								      &
\	CALL FET$CQ BY REF (LA38.Q%)		!/LA38 SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		MACRO$ = "LA38"			!  SET THE MACRO TO LA38      &
\		GOSUB 10500			!  LOOKUP MACRO IN DATA TABLE &
\	END IF								      &
\	CALL FET$CQ BY REF (LA120.Q%)		!/LA120 SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		MACRO$ = "LA120"		!  SET THE MACRO TO LA120     &
\		GOSUB 10500			!  LOOKUP MACRO IN DATA TABLE &
\	END IF								      &
\	CALL FET$CQ BY REF (VT52.Q%)		!/VT52 SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		MACRO$ = "VT52"			!  SET THE MACRO TO VT52      &
\		GOSUB 10500			!  LOOKUP MACRO IN DATA TABLE &
\	END IF								      &
\	CALL FET$CQ BY REF (VT100.Q%)		!/VT100 SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		MACRO$ = "VT100"		!  SET THE MACRO TO VT100     &
\		GOSUB 10500			!  LOOKUP MACRO IN DATA TABLE &
\	END IF								      &
\	CALL FET$CQ BY REF (BUF.Q%)		!/BUFFER_QUOTA SPECIFIED?     &
\	IF U.PRES% THEN				!IF PRESENT		      &
	   IF PERM% <> 255% THEN		!  If /PERMANENT wasn't there &
		CALL DISPLY (PERM.REQ)		!     Display the error msg   &
\		ERRSTS% = TRUE%			!     Set error flag	      &
\		RETURN				!     Go back		      &
\	   END IF							      &
\	   CALL FET$A BY REF			!  GET THE ARGUMENT	      &
\	   Z% = U.LOW%				!   AS AN INTEGER	      &
\	   Z% = Z% / 28%			!  GET THE NUMBER OF BUFFERS  &
\	   FQBEXT%(22%) = Z%			!  STORE IT		      &
\	END IF								      &
\	CALL FET$CQ BY REF (CTL.Q%)		!/CONTROL SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$KA BY REF (CNC.K%)	!  =C			      &
\		IF U.PRES% THEN			!  /IF PRESENT		      &
			FQBEXT%(23%) = FQBEXT%(23%) OR 1%	 !SET SET FLAG &
\			FQBEXT%(24%) = FQBEXT%(24%) AND NOT (1%) !CLR CLR FLAG &
\		END IF							      &
\		CALL FET$KA BY REF (CTT.K%)	!  =T			      &
\		IF U.PRES% THEN			!  /IF PRESENT		      &
			FQBEXT%(23%) = FQBEXT%(23%) OR 2%	 !SET SET FLAG &
\			FQBEXT%(24%) = FQBEXT%(24%) AND NOT (2%) !CLR CLR FLAG &
\		END IF							      &
\		CALL FET$KA BY REF (CTR.K%)	!  =R			      &
\		IF U.PRES% THEN			!  /IF PRESENT		      &
!			FIRQB%(25%) = 255%	    IF CONTROL=R	      &
			FQBEXT%(23%) = FQBEXT%(23%) OR 4%	 !SET SET FLAG &
\			FQBEXT%(24%) = FQBEXT%(24%) AND NOT (4%) !CLR CLR FLAG &
\		END IF							      &
\		CALL FET$KA BY REF (CTX.K%)	!  =X			      &
\		IF U.PRES% THEN			!  /IF PRESENT		      &
			FQBEXT%(23%) = FQBEXT%(23%) OR 8%	 !SET SET FLAG &
\			FQBEXT%(24%) = FQBEXT%(24%) AND NOT (8%) !CLR CLR FLAG &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (NCL.Q%)		!/NOCONTROL SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$KA BY REF (CNC.K%)	!  =C			      &
\		IF U.PRES% THEN			!  /IF PRESENT		      &
			FQBEXT%(23%) = FQBEXT%(23%) AND NOT (1%) !CLR SET FLAG &
\			FQBEXT%(24%) = FQBEXT%(24%) OR 1%	 !SET CLR FLAG &
\		END IF							      &
\		CALL FET$KA BY REF (CTT.K%)	!  =T			      &
\		IF U.PRES% THEN			!  /IF PRESENT		      &
			FQBEXT%(23%) = FQBEXT%(23%) AND NOT (2%) !CLR SET FLAG &
\			FQBEXT%(24%) = FQBEXT%(24%) OR 2%	 !SET CLR FLAG &
\		END IF							      &
\		CALL FET$KA BY REF (CTR.K%)	!  =R			      &
\		IF U.PRES% THEN			!  /IF PRESENT		      &
!			FIRQB%(25%) = 128%	    IF NOCONTROL=R	      &
			FQBEXT%(23%) = FQBEXT%(23%) AND NOT (4%) !CLR SET FLAG &
\			FQBEXT%(24%) = FQBEXT%(24%) OR 4%	 !SET CLR FLAG &
\		END IF							      &
\		CALL FET$KA BY REF (CTX.K%)	!  =X			      &
\		IF U.PRES% THEN			!  /IF PRESENT		      &
			FQBEXT%(23%) = FQBEXT%(23%) AND NOT (8%) !CLR SET FLAG &
\			FQBEXT%(24%) = FQBEXT%(24%) OR 8%	 !SET CLR FLAG &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (ABD.Q%)		!/[NO]AUTOBAUD specified?     &
\	IF U.PRES% THEN				!If present		      &
	   IF PERM% <> 255% THEN		!  If /PERMANENT wasn't there &
		CALL DISPLY (PERM.REQ)		!     Display the error msg   &
\		ERRSTS% = TRUE%			!     Set error flag	      &
\		RETURN				!     Go back		      &
\	   END IF							      &
\	   AUTO.NO% = U.NO%			! Save value of U.NO%	      &
\	   IF NOT U.NO% THEN			! /AUTOBAUD specified	      &
	      CALL FET$CQ BY REF (NAN.Q%)	! /[NO]ANSWERBACK specified?  &
\	      IF NOT U.PRES% THEN		! If not present	      &
	        CHANGE 				!   lookup current settings   &
		SYS(CHR$(6%)+CHR$(16%)+CHR$(1%)+CHR$(KB%)+STRING$(24%,0%))    &
		TO FIRQ2%						      &
\		IF (FIRQ2%(26%) AND 16%) = 16% THEN			      &
		  CALL DISPLY ("?Conflicts with terminal setting /ANSWERBACK") &
\		  RETURN			! Print error and exit	      &
\	   	END IF							      &
\	      END IF							      &
\   	   END IF							      &
\	   V% = FNSET.CLEAR%(23%, 24%, 16%, NOT AUTO.NO%) !OK,Set/Clear flags &
\	END IF								      &
!									      &
\	FETCH.QUAL% = TAB.Q%			!Look for /[NO]TAB	      &
\	SET.INDEX% = 6%				!Change FIRQB%(6%)	      &
\	GOSUB CHECK_QUAL_2			!Set flag accordingly	      &
!									      &
\	FETCH.QUAL% = FRM.Q%			!Look for /[NO]FORM_FEED      &
\	SET.INDEX% = 7%				!Change FIRQB%(7%)	      &
\	GOSUB CHECK_QUAL_3			!Set flag accordingly	      &
!									      &
\	CALL FET$CQ BY REF (HST.Q%)		!Look for /[NO]HOST_SYNC      &
\	GOTO 10005 IF NOT U.PRES% 		!Go process next qual	      &
\	IF U.NO%							      &
	     THEN							      &
		FIRQB%(9%) = 128%  		! Set tty to /NOHOST_SYNC     &
\		GOTO 10005			!  Go do next qualifier	      &
	     ELSE							      &
	   	CALL FET$CQ BY REF (RES.Q%)	! Check for /RESUME=ANY qual  &
\	   	IF U.PRES% THEN			! If /RESUME present	      &
		   CALL FET$KA BY REF (ANY.K%)	!  get keyword arg=ANY	      &
\	   	   IF U.PRES% THEN		!  If present		      &
			CALL DISPLY (HST.RES) 	!    Qualifiers conflict      &
\			RETURN			!    Print error and exit     &
		   ELSE							      &
			FIRQB%(9%) = 255%  	!  Set tty to /HOST_SYNC      &
\			GOTO 10005		!  Go do next qualifier	      &
\		   END IF						      &
\		END IF							      &
\ 		CHANGE							      &
		 SYS(CHR$(6%)+CHR$(16%)+CHR$(0%)+CHR$(KB%)+STRING$(24%,0%))   &
		 TO FIRQ2% 			! Lookup current settings     &
\		IF FIRQ2%(26%) = 255% THEN 	! Tty can't be set RESUME=ANY &
		   CALL DISPLY ("?Conflicts with terminal setting /RESUME=ANY") &
\		   RETURN			! Print error and exit	      &
\	   	END IF							      &
\	     	FIRQB%(9%) = 255%  		! Set tty to /HOST_SYNC	      &
\	END IF								      &
!									      &

10005	FETCH.QUAL% = EKO.Q%			!Look for /[NO]LOCAL_ECHO     &
\	SET.INDEX% = 10%			!Change FIRQB%(10%)	      &
\	GOSUB CHECK_QUAL_3			!Set part I flags accordingly &
\	V% = FNSET.CLEAR%(26%, 28%, 4%, U.NO%)	!Set/Clear part II flags      &
		IF U.PRES%			!  If qualifier was there     &
!									      &
\	CALL FET$CQ BY REF (SCP.Q%)		!/SCOPE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(11%) = 255% 		!  SET THE SCOPE VALUE	      &
\	END IF								      &
\	CALL FET$CQ BY REF (HRD.Q%)		!/HARDCOPY SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(11%) = 128%		!  SET THE HARDCOPY VALUE     &
\	END IF								      &
!									      &
\	FETCH.QUAL% = TTS.Q%			!Look for /[NO]TTSYNC	      &
\	SET.INDEX% = 17%			!Change FIRQB%(17%)	      &
\	GOSUB CHECK_QUAL_3			!Set flag accordingly	      &
!									      &
\	FETCH.QUAL% = UPA.Q%			!Look for /[NO]UP_ARROW	      &
\	SET.INDEX% = 18%			!Change FIRQB%(18%)	      &
\	GOSUB CHECK_QUAL_2			!Set flag accordingly	      &
!									      &
\	FETCH.QUAL% = ESQ.Q%			!Look for /[NO]ESCAPE_SEQUENCE &
\	SET.INDEX% = 22%			!Change FIRQB%(22%)	      &
\	GOSUB CHECK_QUAL_3			!Set flag accordingly	      &
!									      &
\	FETCH.QUAL% = ALT.Q%			!Look for /[NO]ALT_MODE	      &
\	SET.INDEX% = 24%			!Change FIRQB%(24%)	      &
\	GOSUB CHECK_QUAL_2			!Set flag accordingly	      &
!									      &
\	FETCH.QUAL% = BRK.Q%			!Look for /[NO]BREAK	      &
\	SET.INDEX% = 27%			!Change FIRQB%(27%)	      &
\	GOSUB CHECK_QUAL_3			!Set flag accordingly	      &
!									      &
\	FETCH.QUAL% = BRD.Q%			!Look for /[NO]BROADCAST      &
\	SET.INDEX% = 28%			!Change FIRQB%(28%)	      &
\	GOSUB CHECK_QUAL_2			!Set flag accordingly	      &
!									      &
\	CALL FET$CQ BY REF (BT8.Q%)		!/[NO]EIGHT_BIT SPECIFIED?    &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(15%) = FIRQB%(15%) OR 16% IF U.NO%     !IF NOEIGHT_BIT &
\		FIRQB%(15%) = FIRQB%(15%) AND NOT 8% IF U.NO% ! CLEAR BIT 3   &
\		FIRQB%(15%) = FIRQB%(15%) OR 24% IF NOT U.NO% !IF EIGHT_BIT   &
\	END IF								      &
!									      &
\	CALL FET$CQ BY REF (TYP.Q%)		!/TYPE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE ARG		      &
\		Z% = U.LOW%			!  CHECK THE NUMBER	      &
\		FQBEXT%(5%)= Z%			!  STORE IT		      &
\	END IF								      &

10010	CALL FET$CQ BY REF (WID.Q%)		!/WIDTH SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE ARG		      &
\		Z% = U.LOW%			!  EXTRACT IT		      &
\		FIRQB%(5%) = Z% + 1%		!  STORE IT IN THE ARRAY      &
\		IF (KB%=255%) OR (KB%=KB.NO%) THEN !  IF IT WAS OUR KB	      &
			DELTA.WIDTH% = TRUE%	!	SET THE WIDTH CHANGED &
\		END IF							      &
\	END IF								      &
!									      &
\	CALL FET$CQ BY REF (RES.Q%)		!/RESUME specified?	      &
\	GOTO 10015 IF NOT U.PRES% 		! Do next qual if not present &
\	CALL FET$KA BY REF (CTC.K%)		! Get keyword arg CONTROL_C   &
\	IF U.PRES% THEN							      &
	   FIRQB%(26%) = 128% 			! Set tty /RESUME=CONTROL_C   &
\	   GOTO 10015				! Go process next qualifier   &
\	END IF								      &
\	CALL FET$KA BY REF (ANY.K%)		! Get keyword arg ANY	      &
\	IF U.PRES% THEN				! If present		      &
	   CALL FET$CQ BY REF (HST.Q%)		!  Check for /HOSTSYNC qual   &
\	   IF U.PRES% THEN			!  If present		      &
	      IF U.NO% 				!  /NOHOST specified	      &
		THEN FIRQB%(26%) = 255%		!    so RESUME=ANY is ok      &
\	   	     GOTO 10015			!    go process next qual     &
		ELSE CALL DISPLY (HST.RES) 	!  /HOST specified	      &
\		     RETURN			!   Qualfiers conflict	      &
\	      END IF							      &
\	   END IF							      &
\	   CHANGE SYS(CHR$(6%)+CHR$(16%)+CHR$(0%)+CHR$(KB%)+STRING$(24%,0%))  &
		TO FIRQ2% 			! Lookup current settings     &
\	   IF FIRQ2%(9%) = 255% THEN 		!   If HOSTSYNC tty	      &
		   CALL DISPLY ("?Conflicts with terminal setting /HOST_SYNC") &
\		   RETURN			!    Print error and exit     &
\	   END IF							      &
\	   FIRQB%(26%) = 255%			! Set tty /RESUME=ANY	      &
\	END IF								      &

10015	CALL FET$CQ BY REF (LOW.Q%)		!/LOWERCASE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		INP.FLAG%,OUT.FLAG% = FALSE% 	!  CLEAR I/O FLAG	      &
\		CALL FET$KA BY REF (IN1.K%) 	!  GET THE ARG INPUT	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			INP.FLAG% = TRUE%		!    SET INPUT	      &
\		END IF							      &
\		CALL FET$KA BY REF (OU1.K%) 	!  GET THE ARG OUTPUT	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			OUT.FLAG% = TRUE% 	!    SET OUTPUT		      &
\		END IF							      &
\		IF OUT.FLAG% = FALSE% AND INP.FLAG% = FALSE% THEN !IF NEITHER &
			OUT.FLAG%, INP.FLAG% = TRUE% !  IS SET, THEN SET BOTH &
\		END IF							      &
\		FIRQB%(8%)  = 128% IF OUT.FLAG% !  LC OUTPUT		      &
\		FIRQB%(12%) = 255% IF INP.FLAG% !  LC INPUT		      &
\	END IF								      &
\	CALL FET$CQ BY REF (UPP.Q%)		!/UPPERCASE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		INP.FLAG%,OUT.FLAG% = FALSE% 	!  CLEAR I/O FLAG	      &
\		CALL FET$KA BY REF (IN2.K%) 	!  GET THE ARG INPUT	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			INP.FLAG% = TRUE%	!    SET INPUT		      &
\		END IF							      &
\		CALL FET$KA BY REF (OU2.K%) 	!  GET THE ARG OUTPUT	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			OUT.FLAG% = TRUE% 	!    SET OUTPUT		      &
\		END IF							      &
\		IF OUT.FLAG% = FALSE% AND INP.FLAG% = FALSE% THEN !IF NEITHER &
			OUT.FLAG%, INP.FLAG% = TRUE% !  IS SET, THEN SET BOTH &
\		END IF							      &
\		FIRQB%(8%)  = 255% IF OUT.FLAG% !  NO LC OUTPUT		      &
\		FIRQB%(12%) = 128% IF INP.FLAG% !  NO LC INPUT		      &
\	END IF								      &
\	CALL FET$CQ BY REF (FIL.Q%)		!/[NO]CRFILL SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(13%) = 1%		!  DEFAULT TO NO FILL	      &
\		IF NOT U.NO% THEN		!  IF CRFILL[=n]	      &
			CALL FET$A BY REF	!    GET THE INTEGER ARG      &
\			IF U.PRES% THEN		!    IF PRESENT		      &
				Z% = U.LOW%	!      EXTRACT IT	      &
\				FIRQB%(13%) = Z% + 1% !STORE IT IN THE ARRAY  &
\			END IF						      &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (PAR.Q%)		!/PARITY SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF NOPARITY		      &
			FIRQB%(15%) = FIRQB%(15%) OR 1% !  SET THE BIT	      &
\			FIRQB%(15%) = FIRQB%(15%) AND NOT 2% ! CLEAR BIT 1    &
\		END IF							      &
\		IF NOT U.NO% THEN		!  IF PARITY		      &
			CALL FET$KA BY REF (EVN.K%) !     GET ARG EVEN	      &
\			IF U.PRES% THEN		!     IF PRESENT	      &
				FIRQB%(15%) = FIRQB%(15%) OR 2% !SET THE BIT  &
\				FIRQB%(15%) = FIRQB%(15%) AND NOT 1%!CLR BIT 0 &
\			END IF						      &
\			CALL FET$KA BY REF (ODD.K%) !     GET ARG ODD	      &
\			IF U.PRES% THEN		!     IF PRESENT	      &
				FIRQB%(15%) = FIRQB%(15%) OR 3% !SET THE BITS &
\			END IF						      &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (DLM.Q%)		!/DELIMITER SPECIFIED	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
	   IF U.NO% THEN			!  IF NODELIMITER	      &
		FIRQB%(23%) = 128%		!     SET IT		      &
\	   ELSE 				!  IF DELIMITER		      &
		CALL FET$A BY REF		!     GET THE ARG	      &
\		Z$ = SEG$(U.STR$,1%,U.LEN%)	!     EXTRACT IT	      &
\		Z$ = EDIT$(Z$,2%+4%+256%) 	!     GET OUT JUNK	      &
\		GOOD% = FALSE%			!     DEFAULT TO NOGOOD	      &
\		IF U.LEN% = 3% AND		!     CHECK FOR "x"	      &
	     	   ASCII(Z$) = ASCII(SEG$(Z$,3%,3%)) AND 	  ! BEG = END &
		  ((ASCII(Z$) = 34%) OR (ASCII(Z$) = 39%)) AND    ! " or '    &
		   ASCII(SEG$(Z$,2%,2%)) > 0% AND	 !DISALLOW 8 BIT AND  &
		   ASCII(SEG$(Z$,2%,2%)) < 128% THEN     !OTHER INVALID CHARS &
			FIRQB%(23%) = 128% + ASCII(SEG$(Z$,2%,2%)) ! STORE IT &
\			GOOD% = TRUE%		!     SET TO GOOD	      &
		ELSE				!     CHECK FOR AN ASCII VAL  &
			Z$ = SEG$(Z$,1%,U.LEN%)	!    GET THE NUM	      &
\			Z% = FNCHECK.NUM%(Z$)	!  CHECK THE NUM	      &
\			IF (Z% < 1%) OR (Z% > 127%) OR	!IF OUT OF RANGE      &
			   (ERRSTS% = TRUE%) THEN	!OR BAD NUMBER	      &
				CALL DISPLY("?Invalid private delimiter")     &
\				ERRSTS% = TRUE%	!     SET ERROR FLAG	      &
\				RETURN		!  SAY SO AND GO BACK	      &
\			END IF						      &
\			FIRQB%(23%) = 128% + Z%	!  STORE IT		      &
\			GOOD% = TRUE%		!  SET TO GOOD		      &
\		END IF							      &
\		IF NOT GOOD% THEN		!  IF NOT A GOOD DELIMITER    &
			CALL DISPLY("?Invalid private delimiter")	      &
\			ERRSTS% = TRUE%		!     SET ERROR FLAG	      &
\			RETURN			!  SAY SO AND GO BACK	      &
\		END IF							      &
\	   END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (SPD.Q%)		!/SPEED SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE ARG		      &
\		Z$ = SEG$(U.STR$,1%,U.LEN%) 	!     EXTRACT IT	      &
\		C1$ = Z$			!     SAVE IT		      &
\		GOSUB 12200			!     CONVERT IT	      &
\		IF E% THEN			!     IF ERROR		      &
			CALL DISPLY("?Invalid speed") UNLESS E% = -2% ! SAY SO &
\			ERRSTS% = TRUE%		!       SET ERROR FLAG	      &
\			RETURN			!       AND GO BACK	      &
\		END IF							      &
\		FIRQB%(16%) = V%		!     STORE IT		      &
\		CALL FET$A BY REF		!     GET THE NEXT ARG	      &
\		IF NOT U.PRES% THEN		!     IF NOT PRESENT	      &
			FIRQB%(14%) = FIRQB%(16%) !     SET OUTPUT = INPUT    &
\		END IF							      &
\		IF U.PRES% THEN			!     IF PRESENT	      &
			Z$ = SEG$(U.STR$,1%,U.LEN%) !   GET OTHER SPEED	      &
\			C1$ = Z$		!       SAVE IT		      &
\			GOSUB 12200		!       CONVERT IT	      &
\			IF E% THEN		!       IF ERROR	      &
				CALL DISPLY("?Invalid speed") UNLESS E% = -2% &
						!	  SAY SO	      &
\				ERRSTS% = TRUE%	!	  SET ERROR FLAG      &
\				RETURN		!	  AND GO BACK	      &
\			END IF						      &
\			FIRQB%(14%) = V%	!     STORE IT		      &
\		END IF							      &
\	END IF								      &
\	IF SETUP.FILE% = FALSE% THEN		!IF NO SETUP FILE ALREADY     &
		CALL FET$CQ BY REF (SUP.Q%)	!  /SETUP=filename SPECIFIED? &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			CALL FET$A BY REF	!    GET THE FILENAME	      &
\			Z$ = SEG$(U.STR$,1%,U.LEN%) !EXTRACT IT		      &
\			FSPEC$ = Z$		!    SET UP TO FORM FILESPEC  &
\			GOSUB 11100		!    FORM A COMPLETE FILESPEC &
\			SETUP.FILE$ = FSPEC$	!    STORE IT		      &
\			SETUP.FILE% = TRUE%	!    SET THE FLAG	      &
\		END IF							      &
\	END IF								      &
!									      &
!	Check for /OPERATOR qualifier					      &
!									      &
\	SET.INDEX% = 19%			!Set flag is FQBEXT%(19%)     &
\	CLR.INDEX% = 20%			!Clear flag is FQBEXT%(20%)   &
!									      &
\	CALL FET$CQ BY REF (NOPR.Q%)		! /NOOPERATOR?		      &
\	IF U.PRES% THEN				! Yes, so check privs	      &
	   IF OPER.PRIV% = 0% THEN		!   If underprivileged user   &
	  	CALL DISPLY (OPER.REQ)		!     Display the error msg   &
\		ERRSTS% = TRUE%			!     Set error flag	      &
\		RETURN				!     Go back		      &
\	   END IF							      &
\	   BIT.VALUE% = 3%			! Clear both bits	      &
\	   U.NO% = NOT U.NO%			! Opposite meaning for qual   &
\	   V% = FNSET.CLEAR%(SET.INDEX%, CLR.INDEX%, BIT.VALUE%, NOT U.NO%)   &
\	   GOTO CHECK_LINE_EDIT 		! Done, so do next qual	      &
\	END IF								      &
!									      &
\	CALL FET$CQ BY REF (OPER.Q%)		! /OPERATOR_SERVICES?	      &
\	GOTO CHECK_LINE_EDIT UNLESS U.PRES% 	! No, so do next qual	      &
\	IF OPER.PRIV% = 0% THEN			!   If underprivileged user   &
	  	CALL DISPLY (OPER.REQ)		!     Display the error msg   &
\		ERRSTS% = TRUE%			!     Set error flag	      &
\		RETURN				!     Go back		      &
\	END IF								      &
\	BIT.VALUE% = 0%				! Start with no bits set      &
!									      &
\ CHECK_OPER_ARGS_LOOP:				! Look for arguments	      &
\	CALL FET$K BY REF			! Get args in order specified &
\	IF U.PRES% THEN				! Argument found?	      &
	  SELECT U.KEY%				! Which argument?	      &
\	    CASE MESS.K%			! /OPER=MESSAGES?	      &
\	      BIT.VALUE% = 1%			!   Bit to set/clear	      &
\	      V% = FNSET.CLEAR%(SET.INDEX%, CLR.INDEX%, BIT.VALUE%, NOT U.NO%) &
\ 	      GOTO CHECK_OPER_ARGS_LOOP		!   Check for next argument   &
\	    CASE RQST.K%			! /OPER=REQUESTS?	      &
\	      BIT.VALUE% = 2%			!   Bit to set/clear	      &
\	      V% = FNSET.CLEAR%(SET.INDEX%, CLR.INDEX%, BIT.VALUE%, NOT U.NO%) &
\ 	      GOTO CHECK_OPER_ARGS_LOOP		!   Check for next argument   &
\	    CASE ALL.K%				! /OPER=ALL?		      &
\	      BIT.VALUE% = 3%			!   Bits to set/clear	      &
\	      V% = FNSET.CLEAR%(SET.INDEX%, CLR.INDEX%, BIT.VALUE%, NOT U.NO%) &
\ 	      GOTO CHECK_OPER_ARGS_LOOP		!   Check for next argument   &
\	    CASE NON.K%				! /OPER=NONE?		      &
\	      U.NO% = -1%			!   Clear all bits	      &
\	      BIT.VALUE% = 3%			!   Bits to set/clear	      &
\	      V% = FNSET.CLEAR%(SET.INDEX%, CLR.INDEX%, BIT.VALUE%, NOT U.NO%) &
\ 	      GOTO CHECK_OPER_ARGS_LOOP		!   Check for next argument   &
\	  END SELECT							      &
\	END IF								      &
\	IF BIT.VALUE% = 0% THEN 		! /OPERATOR? (no arguments)   &
	      U.NO%=0%				!   default to /OPER=ALL      &
\	      BIT.VALUE% = 3%			!   set both bits	      &
\	      V%=FNSET.CLEAR%(SET.INDEX%, CLR.INDEX%, BIT.VALUE%,NOT U.NO%)   &
\	END IF								      &
!									      &
\ CHECK_LINE_EDIT:							      &
\	BIT.VALUE% = 4%				!Value for /[NO]LINE_EDIT     &
\	FETCH.QUAL% = LIN.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 8%				!Value for /[NO]RECALL	      &
\	FETCH.QUAL% = REC.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 128%			!Value for /INSERT	      &
\	FETCH.QUAL% = INS.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 128%			!Value for /OVERSTRIKE	      &
\	FETCH.QUAL% = OVR.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1A			!Look for it		      &
!									      &
\	SET.INDEX% = 25%			!Set flag is FQBEXT%(25%)     &
\	CLR.INDEX% = 27%			!Clear flag is FQBEXT%(27%)   &
!									      &
\	BIT.VALUE% = 1%				!Value for /[NO]ANSI	      &
\	FETCH.QUAL% = ANS.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 2%				!Value for /[NO]ADVANCED_VIDEO &
\	FETCH.QUAL% = AVO.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 4%				!Value for /[NO]132_COLUMNS   &
\	FETCH.QUAL% = W132.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 8%				!Value for /[NO]PRINTER_PORT  &
\	FETCH.QUAL% = PPT.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 16%			!Value for /[NO]REGIS	      &
\	FETCH.QUAL% = REG.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 32%			!Value for /[NO]SIXEL	      &
\	FETCH.QUAL% = SIX.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 64%			!Value for /[NO]KATAKANA      &
\	FETCH.QUAL% = KAN.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 128%			!Value for /[NO]SELECT_ERASE  &
\	FETCH.QUAL% = SEC.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	SET.INDEX% = 26%			!Set flag is FQBEXT%(26%)     &
\	CLR.INDEX% = 28%			!Clear flag is FQBEXT%(28%)   &
!									      &
\	BIT.VALUE% = 1%				!Value for /[NO]LOADABLE_CHAR &
\	FETCH.QUAL% = LOD.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	BIT.VALUE% = 2%				!Value for /[NO]USER_DEFINED_ &
\	FETCH.QUAL% = UDK.Q%			!CUI value of qualifier	      &
\	GOSUB CHECK_QUAL_1			!Look for it		      &
!									      &
\	CALL FET$CQ BY REF (INT.Q%)		!Look for /[NO]INTERACTIVE    &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF PERM% <> 255% THEN		!  IF /PERMANENT WASN'T THERE &
			CALL DISPLY (PERM.REQ)	!     Display the error msg   &
\			ERRSTS% = TRUE%		!     SET ERROR FLAG	      &
\			RETURN			!     GO BACK		      &
\		END IF							      &
\		V% = FNSET.CLEAR%(26%, 28%, 8%, U.NO%) !Set/Clr proper flags  &
\	END IF								      &
\	CALL FET$CQ BY REF (ANB.Q%)		!/ANSWERBACK		      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF PERM% <> 255% THEN		!  IF /PERMANENT WASN'T THERE &
			CALL DISPLY (PERM.REQ)	!     Display the error msg   &
\			ERRSTS% = TRUE%		!     SET ERROR FLAG	      &
\			RETURN			!     GO BACK		      &
\		END IF							      &
\		V$ = SYS(GAIN.PRIVS$)		!  REGAIN TEMP PRIVS	      &
			IF (OUR.KB% = TRUE%)	!   IF IT'S OUR KB	      &
\		ON ERROR GOTO 10220		! SET LOCAL ERROR TRAP	      &
\		CHANGE SYS(CHR$(6%)+CHR$(16%)+CHR$(1%)+CHR$(KB%)+ !GET	      &
		 STRING$(16%,0%)+CHR$(128%)+STRING$(9%,0%)) TO FIRQ2%	      &
						!  EXTENDED-SET		      &
\		ON ERROR GOTO 19000		! RESET STANDARD ERROR	      &
\		V$ = SYS(DROP.PRIVS$)		! DROP TEMP PRIVS	      &
			IF (OUR.KB% = TRUE%)	!  IF IT'S OUR KB	      &
\		IF ((FIRQ2%(23%) AND 16%) = 16%) AND !IF AUTOBAUD AND	      &
		  ((FQBEXT%(24%) AND 16%) =  0%) THEN ! NO /NOAUTOBAUD	      &
		   CALL DISPLY ("?Conflicts with terminal setting /AUTOBAUD") &
\		   SUBEXIT			! PRINT ERROR AND EXIT	      &
\		END IF							      &
\		FQBEXT%(26%) = FQBEXT%(26%) OR 16%	 !SET SET FLAG	      &
\		FQBEXT%(28%) = FQBEXT%(28%) AND NOT (16%)!CLR CLR FLAG	      &
\	END IF								      &
\	CALL FET$CQ BY REF (NAN.Q%)		!/NOANSWERBACK		      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF PERM% <> 255% THEN		!  IF /PERMANENT WASN'T THERE &
			CALL DISPLY (PERM.REQ)	!     Display the error msg   &
\			ERRSTS% = TRUE%		!     SET ERROR FLAG	      &
\			RETURN			!     GO BACK		      &
\		END IF							      &
\		FQBEXT%(26%) = FQBEXT%(26%) AND NOT (16%)!CLR SET FLAG	      &
\		FQBEXT%(28%) = FQBEXT%(28%) OR 16%	 !SET CLR FLAG	      &
\	END IF								      &
!									      &
\	CALL FET$CQ BY REF (MDM.Q%)		!/[NO]DIALUP		      &
\	ON ERROR GOTO 10220			!SET LOCAL ERROR TRAP	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF PERM% <> 255% THEN		!  IF /PERMANENT WASN'T THERE &
			CALL DISPLY (PERM.REQ)	!     Display the error msg   &
\			ERRSTS% = TRUE%		!     SET ERROR FLAG	      &
\			RETURN			!     GO BACK		      &
\		END IF							      &
\		KB% = KB.NO% IF KB% = 255%	!  GET OUR ACTUAL KB NUMBER   &
\		CHANGE FSS$("_KB"+NUM1$(KB%)+":",1%) TO FIRQ2% !DO THE FSS    &
\		KB% = 255% IF KB% = KB.NO%	!  RESTORE KB NUMBER FLAG     &
\		FIRQ2%(I%) = 0% FOR I% = 0% TO 22%!CLEAR OUT UNNEEDED BYTES   &
\		FIRQ2%(0%) = 30%		!  30 BYTES		      &
\		FIRQ2%(1%) = 6%			!  SYS CALL TO FIP	      &
\		FIRQ2%(2%) = 34%		!  CFG SYS CALL CODE	      &
\		FIRQ2%(5%) = 4%			!  CHANGE DIALUP FLAG	      &
\		FIRQ2%(6%) = 4% IF NOT (U.NO%)	!  SET DIALUP IF /DIALUP      &
\		CHANGE FIRQ2% TO FIRQ2$		!  CHANGE THE ARRAY TO STRING &
\		FIRQ2$ = SYS(FIRQ2$)		!  DO THE SYS CALL	      &
\	END IF								      &
\	CALL FET$CQ BY REF (RTC.Q%)		!/[NO]RESTRICTED	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		KB% = KB.NO% IF KB% = 255%	!  GET OUR ACTUAL KB NUMBER   &
\		CHANGE FSS$("_KB"+NUM1$(KB%)+":",1%) TO FIRQ2% !DO THE FSS    &
\		KB% = 255% IF KB% = KB.NO%	!  RESTORE KB NUMBER FLAG     &
\		FIRQ2%(I%) = 0% FOR I% = 0% TO 22%!CLEAR OUT UNNEEDED BYTES   &
\		FIRQ2%(0%) = 30%		!  30 BYTES		      &
\		FIRQ2%(1%) = 6%			!  SYS CALL TO FIP	      &
\		FIRQ2%(2%) = 34%		!  CFG SYS CALL CODE	      &
\		FIRQ2%(5%) = 2%			!  CHANGE RESTRICT FLAG	      &
\		FIRQ2%(6%) = 2% IF NOT (U.NO%)	!  RESTRICT IT IF /RESTRICTED &
\		CHANGE FIRQ2% TO FIRQ2$		!  CHANGE THE ARRAY TO STRING &
\		FIRQ2$ = SYS(FIRQ2$)		!  DO THE SYS CALL	      &
\	END IF								      &
\	ON ERROR GOTO 19000			!RESET THE STANDARD ERROR TRAP &
!									      &
\	CALL FET$CQ BY REF (PRO.Q%)		!/PROTOCOL={NONE,DDCMP}	      &
\	IF U.PRES% THEN							      &
	   IF DEVICE.PRIV% = 0% THEN		!If underprivileged user      &
	  	CALL DISPLY (DEV.REQ)		!     Display the error msg   &
\		ERRSTS% = TRUE%			!     Set error flag	      &
\		RETURN				!     Go back		      &
\	   END IF							      &
\	   KB% = KB.NO% IF KB% = 255%		!Get our actual KB number     &
\	   IF KB% = 0% THEN			!Console terminal specified?  &
	     U.POS% = TERM.POS%			!  Restore the KB position    &
\	     CALL DISPLY ("?The protocol of the console terminal cannot be changed") &
\	     ERRSTS% = TRUE%			!  Set error flag	      &
\	     KB% = 255% IF KB% = KB.NO%		!  Restore KB number flag     &
\	     RETURN							      &
\	   END IF							      &
\	   GOSUB 10300 				!   Go setup protocol	      &
\	END IF								      &

10200	RETURN					!ALL DONE, GO BACK	      &

10205	IF ERR = 8% THEN			!?Not a valid device	      &
		U.POS% = TERM.POS%		!  Restore the kb position    &
\		CALL DISPLY("?Terminal not available")			      &
\		ERRSTS% = TRUE%			!  Set error flag	      &
\		RESUME 10200			!  Exit			      &
\	END IF								      &
\	RESUME 10003 IF ERR = 10% 		!?Priv error		      &
\	RESUME 19000				!Unexpected error!	      &

10210	V$ = SYS(DROP.PRIVS$)			!DROP TEMP PRIVS	      &
\	IF ERR = 8% THEN			!IF ?Device not available     &
		U.POS% = TERM.POS%		!  RESTORE THE KB POSITION    &
\		CALL DISPLY ("?Terminal disabled")!PRINT ERROR MESSAGE	      &
\		ERRSTS% = TRUE%			!  SET ERROR FLAG	      &
\		RESUME 10200			!  EXIT			      &
\	END IF								      &

10220	IF ERR = 66% THEN			!IF ?Missing special feature  &
		U.POS% = TERM.POS%		!  RESTORE THE KB POSITION    &
\		CALL DISPLY ("?No dialup support for this terminal")!PRINT ERR &
\		ERRSTS% = TRUE%			!  SET ERROR FLAG	      &
\		RESUME 10200			!  EXIT			      &
\	END IF								      &
\	IF ERR = 3% THEN			!IF ?Account or device in use &
		U.POS% = TERM.POS%		!  RESTORE THE KB POSITION    &
\		CALL DISPLY ("?Terminal in use")!  PRINT ERROR MESSAGE	      &
\		ERRSTS% = TRUE%			!  SET ERROR FLAG	      &
\		RESUME 10200			!  EXIT			      &
\	END IF								      &
\	GOTO 19000				!GOTO STANDARD ERROR TRAP     &
		IF (ERR <> 10%) AND		! IF NOT ?Protection violation &
		   (ERR <> 8%)			!AND NOT ?Device not available &
\	IF ((ERR = 8%) AND (HWCFG.PRIV% <> 0%)) OR !IF ERR 8 AND HWCFG PRIV   &
	    (ERR = 6%) THEN			!   Or ?Not a valid device    &
		U.POS% = TERM.POS%		!  RESTORE THE KB POSITION    &
\		CALL DISPLY ("?Terminal disabled")!PRINT ERROR MESSAGE	      &
\		ERRSTS% = TRUE%			!  SET ERROR FLAG	      &
\		RESUME 10200			!  EXIT			      &
\	END IF								      &
\	RESUME 10230				!Goto error handler	      &
		IF (ERR = 10%)			! IF ?Protection violation    &
		AND (HWCFG.PRIV% <> 0%)		!  AND USER HAS HWCFG	      &
\	NO.PRIV$ = "HWCFG"			!DEFAULT TO NO HWCFG PRIV     &
\	NO.PRIV$ = NO.PRIV$ + " and DEVICE" IF ERR = 8%	!ADD DEVICE IF CORRECT &
\	PRINT "?"+NO.PRIV$+" privilege required"!PRINT WHICH PRIV IS NEEDED   &
\	ERRSTS% = TRUE%				!SET ERROR FLAG		      &
\	RESUME 10200				!EXIT			      &

10230	INTF% = ASCII(SEG$(SYS(CHR$(6%)+CHR$(16%)+ !LOOKUP THE		      &
		CHR$(0%)+CHR$(KB%)),19%,19%))   !INTERFACE TYPE		      &
\	INTF$ = "this interface"		!INIT THE INTERFACE TYPE      &
\	INTF$ = "Single line interfaces"	!SET IT TO A DL11-TYPE	      &
		IF INTF% < 8%			! IF TRUE		      &
\	INTF$ = "Pseudo keyboards"		!SET IT TO A PSEUDO KB	      &
		IF INTF% = 8%			! IF TRUE		      &
\	CALL DISPLY ("?Not valid for "+INTF$)	!PRINT ERROR MESSAGE	      &
\	ERRSTS% = TRUE%				!      SET ERROR FLAG	      &
\	GOTO 10200				!      AND EXIT		      &

10300	CALL FET$K BY REF			!GET THE PROTOCOL TYPE	      &
\	IF U.KEY% = DDC.K% THEN			!IF DDCMP		      &
	  CHANGE FSS$("_KB"+NUM1$(KB%)+":",1%) TO FIRQ2% 	!DO THE FSS   &
\	  FIRQ2%(I%) = 0% FOR I% =  0% TO 22%	!  CLEAR OUT UNNEEDED BYTES   &
\	  FIRQ2%(I%) = 0% FOR J% = 27% TO 30%				      &
\	  FIRQ2%(0%) = 30%			!  30 BYTES		      &
\	  FIRQ2%(1%) = 6%			!  SYS CALL TO FIP	      &
\	  FIRQ2%(2%) = 34%			!  CFG SYS CALL CODE	      &
\	  CHANGE FIRQ2% TO FIRQ2$		!  CHANGE THE ARRAY TO STRING &
\	  V$ = SYS(GAIN.PRIVS$)			!  REGAIN TEMP PRIVS	      &
\	  CHANGE SYS(FIRQ2$) TO FIRQ2%		!  DO THE SYS CALL	      &
\	  V$ = SYS(DROP.PRIVS$)			!  DROP TEMP PRIVS	      &
\	  RETURN IF FIRQ2%(7%) = 5% 		!  STOP IF ALREADY SET DDCMP  &
\	  FUNC% = 3%				!  Turn ASYNC on	      &
	ELSE								      &
	  FUNC% = 4%				!  Turn ASYNC off	      &
\	END IF								      &
\	ON ERROR GOTO 10350			!  SET LOCAL ERROR TRAP	      &

10310	OPEN "_NO0:" AS FILE #1%		!  OPEN THE DDCMP DRIVER      &
\	ON ERROR GOTO 10360			!  SET LOCAL ERROR TRAP	      &
\	I% = SPEC%(FUNC%,KB%,1%,42%)		!  .SPEC CALL		      &

10320	CLOSE 1%				!  CLOSE THE DDCMP DRIVER     &
\	KB% = 255% IF KB% = KB.NO%		!  RESTORE KB NUMBER FLAG     &
\	ON ERROR GOTO 19000			!  RESET STANDARD ERROR TRAP  &
\	RETURN								      &

10350	RESUME 10310 IF ERR = 3% 		!IF ?Account or device in use &
\	IF ERR = 6% THEN			!IF ?Not a valid device	      &
	  PRINT "?Asynchronous DDCMP Driver not loaded"			      &
\	  ERRSTS% = TRUE%			!  SET ERROR FLAG	      &
\	  RESUME 10320				!  EXIT			      &
\	END IF								      &
\	KB% = 255% IF KB% = KB.NO%		!RESTORE KB NUMBER FLAG	      &
\	RESUME 19000				!ALL OTHER ERRORS	      &

10360	U.POS% = TERM.POS%			!RESTORE THE KB POSITION      &
\	ERRSTS% = TRUE%				!SET ERROR FLAG		      &
\	IF ERR = 6% THEN			!If NODEVC		      &
	  CALL DISPLY ("?This terminal cannot be used for Asynchronous DDCMP") &
\	  RESUME 10320				!GOTO TO COMMON EXIT	      &
\	END IF								      &
\	IF ERR = 8% THEN			!If NOTAVL		      &
	  CALL DISPLY ("?Device not available")				      &
\	  RESUME 10320				!GOTO TO COMMON EXIT	      &
\	END IF								      &
\	CLOSE 1%				!CLOSE THE DDCMP DRIVER	      &
\	KB% = 255% IF KB% = KB.NO%		!RESTORE KB NUMBER FLAG	      &
\	RESUME 19000				!GOTO STANDARD ERROR	      &
									      &


10500	!								      &
	!	L O O K U P   M A C R O					      &
	!								      &
\	RESTORE					!RESTORE DATA POINTER	      &
\	MATCH% = TRUE%				!DEFAULT TO A MATCH	      &
\	READ C1$ UNTIL C1$ = "*MACRO*"		!FIND THE MACRO TABLE	      &
\	READLOOP:				!START OF THE READ LOOP	      &
\	READ C1$				!READ THE DATA		      &
\	C1$ = EDIT$(C1$,34%)			!NOSPACES & NOLOWERCASE	      &
\	MATCH% = FALSE% UNLESS LEN(C1$)		!SET NO MATCH		      &
						!UNLESS NOT AT END	      &
\	IF (TRM$(MACRO$) <> C1$) AND (MATCH%=TRUE%) THEN !DO WE HAVE A MATCH? &
		READ C1% FOR I% = 1% TO 31%	!NO, READ THE REST	      &
\		GOTO READLOOP			!GO READ THE NEXT MACRO	      &
\	END IF								      &
\	IF MATCH% THEN				!IF WE DID HAVE A MATCH	      &
		READ FIRQB%(I%) FOR I% = 5% TO 30%  !READ THE SYS CALL	      &
						    !PARAMETERS		      &
\		READ FQBEXT%(5%)		    !READ IN THE DEVICE TYPE  &
\		READ FQBEXT%(25%)		    !TERMINAL ATTRIBUTES      &
\		READ FQBEXT%(26%)		    !TERMINAL ATTRIBUTES-2    &
\		READ FQBEXT%(27%)	    	    !ATTRIBUTES TO TURN OFF   &
\		READ FQBEXT%(28%)	    	    !ATTRIBUTES-2 TO TURN OFF &
	ELSE CHECK.USER.MACRO% = TRUE%		! NO MATCH, CHECK USER'S MACRO &
\	END IF								      &
\	RETURN								      &
\		IF (FIRQB%(5%) <> 0%) AND	    !IF WIDTH CHANGED	      &
		   ((KB%=255%) OR (KB%=KB.NO%)) THEN !AND OUR KB THEN	      &
			DELTA.WIDTH% = TRUE%	     !SET THE FLAG	      &
\		END IF							      &


11100	!	b u i l d   c o m p l e t e   f i l e - s p e c		      &
	!								      &
	!								      &
	!inputs:	FSPEC$		-	file-spec string	      &
	!								      &
	!outputs:	FSPEC$		-	complete file-spec string     &
	!		DEV$		-	device name		      &
	!		PPN$		-	PPN			      &
	!		FILNAM$		-	filename		      &
	!		TYP$		-	type			      &
	!								      &
	!								      &
	CHANGE FSS$(FSPEC$,1%) TO FIRQ2%	!FSS the file-spec	      &
\	FLAG% = FIRQ2%(29%) + SWAP%(FIRQ2%(30%))!save flag word 2	      &
									      &

11110	IF (FLAG% AND 8192%) = FALSE% THEN	!if no device found,	      &
		DEV$ = "_SY:"			!  use system disk	      &
	ELSE	DEV$ = "_"+CHR$(FIRQ2%(23%))+CHR$(FIRQ2%(24%))		      &
						!else use phys device name    &
\		DEV$ = DEV$ + NUM1$(FIRQ2%(25%))!    add unit no.	      &
			IF FIRQ2%(26%) <> 0%	!      if any given	      &
\		DEV$ = DEV$ + ":"		!    add colon		      &

11120	IF (FLAG% AND 128%) = FALSE% THEN	!if no PPN found,	      &
		PPN$ = "["+NUM1$(SWAP%(PPN%) AND 255%)+","+		      &
			NUM1$(PPN% AND 255%)+"]"!  default to user's PPN      &
	ELSE	PPN$ = "["+NUM1$(FIRQ2%(6%))+","+NUM1$(FIRQ2%(5%))+"]"	      &
						!else use PPN specified	      &

11130	FILNAM$ = RAD$(FIRQ2%(7%)+SWAP%(FIRQ2%(8%)))+ !build filnam	      &
		  RAD$(FIRQ2%(9%)+SWAP%(FIRQ2%(10%)))			      &
\	IF (FLAG% AND 8%) = FALSE% THEN		!if no dot found,	      &
		TYP$ = ".ESC"			!  use default type of .ESC   &
	ELSE	TYP$ = "." + RAD$(FIRQ2%(11%)+SWAP%(FIRQ2%(12%)))!else use    &
						!	     typ specified    &

11140	FSPEC$ = DEV$ + PPN$ + FILNAM$ + TYP$ 	!build the complete spec      &

11150	RETURN					!exit			      &


11500	!								      &
	!	I N Q U I R E						      &
	!								      &

11510	ERRSTS% = FALSE%			!Clear the error flag	      &
\	V$ = SYS(CHR$(6%)+CHR$(26%)+CHR$(0%)+CHR$(2%)) !CHECK FOR BATCH ACCESS &
\	GOTO 11515 UNLESS ASCII(SEG$(V$,15%,15%)) = 2% !CONT IF IT ISN'T BATCH &
\	U.POS% = 0%				!Clear the qual position      &
\	CALL DISPLY ("%/INQUIRE qualifier ignored in BATCH") !PRINT ERROR MSG &
\	RETURN					!GO BACK		      &

11515	ON ERROR GOTO 11810		!Set local error trap		      &
\	CHANGE SYS(CHR$(6%)+CHR$(16%)+CHR$(0%)+CHR$(KB%)+STRING$(18%,0%)+     &
		 CHR$(128%)+STRING$(5%,0%)) TO FIRQ2% 	!Clear private delim. &
\	IF KB% AND 128% THEN			!If our own KB		      &
		OPEN "_KB:TERMGR.OUT" FOR INPUT AS FILE 1%, MODE 1%+32%+16384% &
						! Open our KB		      &
	ELSE	V$ = SYS(GAIN.PRIVS$)		! Regain temp privs	      &
\		OPEN "_KB"+NUM1$(KB% AND 127%)+":TERMGR.OUT"		      &
			FOR INPUT AS FILE 1%, MODE 1%+32%+16384% ! OPEN KB    &
\		V$ = SYS(DROP.PRIVS$)		!Drop temporary privileges    &
\	END IF								      &
\	CMND$ = ""			!Clear the command string variable    &
\	Esc$ = CHR$(27%)		!Define constant for <esc>	      &
\	Ctrl.x$ = CHR$(11%)+CHR$(1%)	!Define cancel typeahead constant     &
\	Ctrl.c% = 0%			!Init CTRL-C flag		      &

11520	SEND$ = Esc$+"Z"		!Send DECID request		      &
\	GOSUB 11750			!Get a terminal response	      &
\	GOTO 11735 IF CTRL.C%		!Exit if CTRL-C was typed	      &
\	IF ERRSTS% THEN			!If no response with <esc>Z	      &
		SEND$ = Esc$+"[c"	!  Try it with the ANSI ID sequence   &
\		ERRSTS% = FALSE%	!  Clear the error flag		      &
\		GOSUB 11750		!  Get the response		      &
\		GOTO 11735 IF ERRSTS%	!  Exit if there was an error	      &
			OR CTRL.C%	!   or CTRL-C was typed		      &
\	END IF								      &
\	NOT.IN.ANSI% = FALSE%		!Assume we are in ANSI mode	      &
\	NOT.IN.ANSI% = TRUE% UNLESS ASCII(REPLY$) = 91%!Change it unless true &
\	IF REPLY$="/Z" THEN		!If response is VT100/200 in VT52 mode &
		SEND$ = Esc$+"<"+Esc$+"[c"+Esc$+"[?2l" !Switch to VT100	      &
\		GOSUB 11750		!  get another response		      &
\		GOTO 11735 IF ERRSTS%	!  Exit if there was an error	      &
			OR CTRL.C%	!   or CTRL-C was typed		      &

11530	ANSI%,VIDEO%,AVO%,EIGHTBIT%,WIDE%,PPORT%,REGIS%,SIXEL%,		      &
		KANA%,SEC%,DRCS%,UDK%=FALSE%	!Set all option flags to off  &
\	IF ASCII(REPLY$)=47%		!Check for VT52-style format	      &
	THEN	TERM$=""		!Clear the terminal type	      &
\		VIDEO%=TRUE%		!Mark it as a video terminal	      &
\		TERM$="VT52" IF REPLY$="/K" OR REPLY$="/M" !Set VT52 if VT52  &
\		PPORT% = TRUE% IF REPLY$="/M" !Set the printer port flag      &
\		GOTO 11730 IF LEN(TERM$)!Continue if we have a known type     &
\		GOTO 11735		!Go to error handler if unknown type  &

11540	GOTO 11735 IF SEG$(REPLY$,1%,2%)<>"[?" OR !Goto error handler if the  &
						!response doesn't begin	      &
						!with "[?" or		      &
		     SEG$(REPLY$,LEN(REPLY$),LEN(REPLY$))<>"c" !end with "c"  &
\	ANSI% = TRUE%				!We must be ANSI if we're here &
\	PARM%(I%)=0% FOR I%=0% TO 20%		!Clear the parameter array    &
\	PARM%=0%				!Init the parameter counter   &
\	REPLY$=SEG$(REPLY$,3%,LEN(REPLY$)-1%)+";" !Isolate the parameter      &
						!   portion and tack on a ";" &
\	S% = 0%					!Init the search pointer      &
\	WHILE S% <> LEN(REPLY$)			!Loop until no more ";"	      &
\		S1% = POS(REPLY$,";",S%+1%)	! Get the next ";"	      &
\		PARM%(PARM%) = VAL(SEG$(REPLY$,S%+1%,S1%-1%)) !Get a parameter &
\		PARM%=PARM%+1%			! Increment parameter counter &
\		S% = S1%			! Set up the next parameter   &
\	NEXT					!Next parameter		      &
\	TERM%=PARM%(0%)				!Save the term type code      &

11550	SELECT TERM%				!SELECT the terminal type     &
\	CASE	1%				!Type 1 is VT100 (or VT101)   &
\		TERM$="VT100"			!Set the terminal type	      &

11560	CASE	2%				!Type 2 is LA120	      &
\		TERM$="LA120"			!Set the terminal type	      &
\		WIDE%=TRUE%			!It has wide paper	      &
\		GOTO 11730			!Go get the characteristics   &

11570	CASE	3%				!Type 3 is LA34		      &
\		TERM$="LA34"			!Set the terminal type	      &
\		WIDE%=TRUE%			!It has wide paper	      &
\		KANA%=TRUE% IF PARM%(1%)=2%	!Set Katakana char if true    &
\		GOTO 11730			!Go get the characteristics   &

11580	CASE	4%				!Type 4 is VT132	      &
\		TERM$="VT132"			!Set the terminal type	      &

11590	CASE	5%				!Type 5 is a VK100 or VT100J  &
\	IF PARM%(1%)=2% THEN			!If VT100J		      &
		TERM$="VT100J"			!  Set it as such	      &
\		CMND$ = "VT100"			!Same characteristics as VT100 &
\		GOTO 11720			!  Exit			      &
	ELSE								      &
		TERM$="VK100"			!It is a VK100 (GIGI)	      &
\		CMND$="VK100"						      &
\		VIDEO%,PPORT%,REGIS%=TRUE%	!Set appropriate char	      &
\		GOTO 11730			!Go get the characteristics   &
\	END IF								      &

11600	CASE	6%				!Type 6 is VT102	      &
\		TERM$="VT102"			!Set the terminal type	      &
\		VIDEO%,AVO%,PPORT%,WIDE%=TRUE%	!Set appropriate char	      &
\		GOTO 11730			!Go get the characteristics   &

11610	CASE	7%				!Type 7 is VT131	      &
\		TERM$="VT131"			!Set the terminal type	      &
\		VIDEO%,AVO%,PPORT%,WIDE%=TRUE%	!Set appropriate char	      &
\		GOTO 11730			!Go get the characteristics   &

11620	CASE	8%				!Type 8 is VT278	      &
\		TERM$="VT278"			!Set the terminal type	      &
\		CMND$ = "VT100"			!Same characteristics as VT100 &
\		VIDEO%,PPORT%=TRUE%		!Set video characteristics    &
\		GOTO 11730			!Go get the characteristics   &

11630	CASE	10%				!Type 10 is LA100 or LA210    &
\		TERM$="LA100"			!Default to LA100	      &
\		WIDE%=TRUE%			!Set wide characteristic      &
\		IF PARM%(1%) = 3% THEN		!If it has eight bit	      &
			TERM$ = "LA210"		!  Set it to a LA210	      &
\			EIGHTBIT% = TRUE%	!  Set eight bit	      &
\		END IF							      &
\		GOTO 11730			!Go get the characteristics   &

11640	CASE	11%				!Type 11 is Katakana LA120    &
\		TERM$="LA120"			!Set the terminal type	      &
\		WIDE%,KANA%=TRUE%		!Set appropriate char	      &
\		GOTO 11730			!Go get the characteristics   &

11650	CASE	12%				!Type 12 is VT125	      &
\		TERM$="VT125"			!Set the terminal type	      &
\		AVO%,VIDEO%,REGIS%,PPORT%,WIDE%=TRUE% !Set appropriate char   &
\		GOTO 11730			!Go get the characteristics   &

11660	CASE	13%				!Type 13 is LQP02	      &
\		TERM$="LQP02"			!Set the terminal type	      &
\		GOTO 11730			!Go get the characteristics   &

11670	CASE	15%				!Type 15 is LA12 or VT102J    &
\		IF PARM% > 0% THEN		!If LA12		      &
			TERM$="LA12"		!  Set it as such	      &
\			GOTO 11730		!  Go get the characteristics &
		ELSE							      &
			TERM$="VT102J"		!  Set the terminal type      &
\			CMND$ = "VT102"		!  Set it same as VT102	      &
\			AVO%,WIDE%,VIDEO%,KANA%=TRUE% !Set appropriate char   &
\			GOTO 11730		!  Go get the characteristics &
\		END IF							      &

11690	CASE	17%				!Type 17 is LA50 printer      &
\		TERM$="LA50"			!Set the terminal type	      &
\		EIGHTBIT%=TRUE%			!Set eightbit characteristic  &
\		GOTO 11730			!Go get the characteristics   &

11692	CASE	24%				!Type 13 is LQP03	      &
\		TERM$="LQP03"			!Set the terminal type	      &
\		EIGHTBIT%=TRUE%			!Set eightbit characteristic  &
\		GOTO 11730			!Go get the characteristics   &

11698	CASE	26%				!Type 26 is LN03 printer      &
\		TERM$="LN03"			!Set the terminal type	      &
\		EIGHTBIT%=TRUE%			!Set eightbit characteristic  &
\		GOTO 11730			!Go get the characteristics   &

11700	CASE	61% TO 69%, 71% TO 79%		!SRM terminal level codes     &
\		LEVEL%=TERM%-TERM%/10%*10%	!Compute level number	      &
\		TERM$="SRM Terminal level "+NUM1$(LEVEL%)!Set term type	      &
\		VIDEO%,AVO%=TRUE% IF TERM%<70%	!Set video char if true	      &
\		EIGHTBIT%=TRUE% IF LEVEL%>=2%	!Set eightbit char if true    &
\		CMND$ = "VT220"			!Default to a VT220	      &
\		CMND$ = "VT340"	IF LEVEL%=3%	!Default to a VT340 IF LEVEL 3 &
\		CMND$ = "VT420"	IF LEVEL%=4%	!Default to a VT420 IF LEVEL 4 &
\		FOR I%=1% TO PARM%-1%		!For each argument	      &
\			OPT%=PARM%(I%)		!  Get this argument	      &
\			WIDE%=WIDE% OR (OPT%=1%)!  Set Wide if true	      &
\			PPORT%=PPORT% OR (OPT%=2%)!  Set Printer Port if true &
\			REGIS%=REGIS% OR (OPT%=3%)!  Set Regis if true	      &
\			SIXEL%=SIXEL% OR (OPT%=4%)!  Set Sixel if true	      &
\			KANA%=KANA% OR (OPT%=5%)!  Set Katakana if true	      &
\			SEC%=SEC% OR (OPT%=6%)	!  Set Sel. Eraseable Char    &
\			DRCS%=DRCS% OR (OPT%=7%)!  Set Loadable Characters    &
\			NRCS%=NRCS% OR (OPT%=9%)!  Set NRCS		      &
\			TCS%=TCS% OR (OPT%=15%)	!  Set TCS		      &
\			WIND%=WIND% OR (OPT%=18%) !  Set Windowing	      &
\			SESS%=SESS% OR (OPT%=19%) !  Set Session Mgmt	      &
\			HORZ%=HORZ% OR (OPT%=21%) !  Set Horizontal Scrolling &
\		NEXT I%				!Next argument		      &
\		FIRQB%(9%) = 255%		!Hostsync		      &
\		FIRQB%(17%) = 255%		!TTSync			      &
\		FIRQB%(8%) = 128%		!LC Output		      &
\		FIRQB%(12%) = 255%		!LC Input		      &
\		FIRQB%(26%) = 128%		!Resume=Control_C	      &
\		SEND$ = Esc$+"[>c"		!Ask for Secondary attributes &
\		SEND$ = Esc$+"<"+Esc$+"[>c"+Esc$+"[?2l" !Switch to VT200 first &
			IF NOT.IN.ANSI%		!   If we are in VT52 mode    &
			   AND TERM% < 70%	!    and it is a VT200 term   &
\		GOSUB 11750			!  Get the response	      &
\		GOTO 11735 IF CTRL.C%		!  Exit if CTRL-C was typed   &
\		GOTO 11730 IF ASCII(SEG$(REPLY$,2%,2%)) <> 62%!Exit if not ">" &
		     OR SEG$(REPLY$,LEN(REPLY$),LEN(REPLY$))<>"c" !or end in c &
\		S% = INSTR(1%,REPLY$,";")	!Look for first separator ";" &
\		RP$ = SEG$(REPLY$,3%,S%-1%)	!Extract the ID code	      &
\		CMND$ = "VT240" IF RP$ = "2"	!A VT240?		      &
\		CMND$ = "VT241" IF RP$ = "3"	!A VT241?		      &
\		CMND$ = "LA75" IF RP$ = "16"	!A LA75			      &
\		CMND$ = "LA324" IF RP$ = "38"	!A LA324		      &
\		CMND$ = "VT320" IF RP$ = "24"	!A VT320?		      &
\		CMND$ = "VT330" IF RP$ = "18"	!A VT330?		      &
\		CMND$ = "VT340" IF RP$ = "19"	!A VT340?		      &
\		CMND$ = "VT420" IF RP$ = "41"	!A VT420?		      &
\		CMND$ = "LA70"  IF RP$ = "45"	!A LA70			      &
\		CMND$ = "LN05"  IF RP$ = "46"	!A LN05 (aka DEClaser 2100)   &
\		CMND$ = "LN06"  IF RP$ = "47"	!A LN06 (aka DEClaser 2200)   &
\		CMND$ = "LN08"  IF RP$ = "53"	!A LN08 (aka DEClaser 3200)   &
\		GOTO 11730			!Go get the characteristics   &

11710	CASE	ELSE				!Nothing recognizable	      &
\	GOTO 11735				!Go set the error flag	      &

11715	END SELECT				!That's all of them	      &

11720						!VT100 family common code     &
	VIDEO%,WIDE%=TRUE%			!They have video & wide screen &
\	AVO%=TRUE% IF PARM%(1%) AND 2%		!Set Advanced Video if true   &
\	PPORT%=TRUE% IF PARM%(1%)=11%		!Set Printer Port if true     &

11730	CMND$ = TERM$ IF LEN(CMND$) = 0%	!Set it to the type	      &
\	RESTORE					!Restore the Data pointer     &
\	READ C1$ UNTIL C1$ = "*MACRO*"		!Find the Macro table	      &
\	MACROLOOP:				!Start the Macro search loop  &
\	READ C1$				!Read the Macro		      &
\	C1$ = EDIT$(C1$,34%)			!No Spaces, No Lowercase      &
\	GOTO 11735 IF C1$ = ""			!Go set error if at the end   &
\	IF CMND$ <> C1$ THEN			!Do we have a match?	      &
		READ C1% FOR I% = 1% TO 31%	!  No, read the rest	      &
\		GOTO MACROLOOP			!  Go read the next	      &
\	END IF								      &
\	FOR I% = 5% TO 30%			!For each element of the Firqb &
\		READ C1%			!  Read in the parameter      &
\		FIRQB%(I%) = C1% UNLESS FIRQB%(I%)!Don't overwrite what is    &
			AND I% <> 15%		!   already there	      &
\		FIRQB%(I%) = FIRQB%(I%) OR C1%	!  Special case parity/8 Bit  &
			IF I% = 15%					      &
\	NEXT I%					!Next parameter		      &
\	FIRQB%(15%) = FIRQB%(15%) OR 24% IF EIGHTBIT% !Set 8-Bit	      &
\	FIRQB%(5%) = 0% IF ((TERM.WIDTH% = 80%) OR! DON'T CHANGE WIDTH IF = 80 &
			    (TERM.WIDTH% =132%)) AND !   OR IF ITS 132 ALREADY &
			    (WIDE% <> 0%)	! AND IT SUPPORTS 132 COLUMNS &
\	IF (FIRQB%(5%) <> 0%) AND		!If width changed	      &
	   ((KB%=255%) OR (KB%=KB.NO%)) THEN	!and our KB then	      &
		DELTA.WIDTH% = TRUE%		!  Set the flag		      &
\	END IF								      &
\	READ FQBEXT%(5%)			!Read the terminal type code  &
\	READ FQBEXT%(25%)			!TERMINAL ATTRIBUTES	      &
\	READ FQBEXT%(26%)		 	!TERMINAL ATTRIBUTES-2	      &
\	READ FQBEXT%(27%)		    	!ATTRIBUTES TO TURN OFF	      &
\	READ FQBEXT%(28%)		    	!ATTRIBUTES-2 TO TURN OFF     &
\	V% = FNSET.CLEAR%(25%,27%,1%,ANSI%)	!SET/CLEAR ANSI FLAG	      &
\	V% = FNSET.CLEAR%(25%,27%,2%,AVO%)	!SET/CLEAR AVO FLAG	      &
\	V% = FNSET.CLEAR%(25%,27%,4%,WIDE%)	!SET/CLEAR WIDE FLAG	      &
\	V% = FNSET.CLEAR%(25%,27%,8%,PPORT%)	!SET/CLEAR PRT-PORT FLAG      &
\	V% = FNSET.CLEAR%(25%,27%,16%,REGIS%)	!SET/CLEAR REGIS FLAG	      &
\	V% = FNSET.CLEAR%(25%,27%,32%,SIXEL%)	!SET/CLEAR SIXEL FLAG	      &
\	V% = FNSET.CLEAR%(25%,27%,64%,KANA%)	!SET/CLEAR KATAKANA FLAG      &
\	V% = FNSET.CLEAR%(25%,27%,128%,SEC%)	!SET/CLEAR SEC FLAG	      &
\	V% = FNSET.CLEAR%(26%,28%,1%,DRCS%)	!SET/CLEAR DRCS FLAG	      &
\	V% = FNSET.CLEAR%(26%,28%,2%,UDK%)	!SET/CLEAR UDK FLAG	      &
\	GOTO 11740							      &

11735	ERRSTS% = TRUE%				!Set the error flag	      &

11740	ON ERROR GOTO 19000			!Reset the error trap	      &
\	V$ = SYS(DROP.PRIVS$)			!Drop temporary privileges    &
\	PRINT IF CCPOS(0%)			!Print a blank line if needed &
\	RETURN					!Go back		      &

11750	!	G e t   r e q u e s t   e s c   s e q   f r o m   K B	      &
									      &
									      &
	On error goto 11810						      &
\	IF KB% AND 128% THEN			!IF OUR OWN KB		      &
		OPEN "_KB:TERMGR.OUT" FOR INPUT AS FILE 1%, MODE 1%+32%+16384% &
						! OPEN OUR KB		      &
	ELSE	V$ = SYS(GAIN.PRIVS$)		! REGAIN TEMP PRIVS	      &
\		OPEN "_KB"+NUM1$(KB% AND 127%)+":TERMGR.OUT"		      &
			FOR INPUT AS FILE 1%, MODE 1%+32%+16384% ! OPEN KB    &
\		V$ = SYS(DROP.PRIVS$)		!Drop temporary privileges    &
\	END IF								      &
\	Z$ = Sys(Ctrl.X$)						      &
		! Trap own errors					      &
		! Open own KB in binary + transparent ctrls mode	      &
		! Cancel any typeahead					      &
\	Ctrl.C% = 0%							      &
\	Reply$ = ""							      &
\	State% = 1%							      &
		! Show no CTRL/C detected				      &
		! Init null esc sequence				      &
		! Init current state					      &
									      &
\	Print #1%, record 16%, Send$;					      &
		! Send request sequence					      &
									      &
\	While State% > 0%						      &
		! Do while current state is positive:			      &

11760		Wait 2%							      &
\		Get #1%, Record 256%					      &
\		Move from #1%, Chars$ = Recount				      &
\		Print #1%, Chr$(13%);					      &
		!	Set max secs to wait for KB input		      &
		!	Get KB input if any, insuring its from the KB	      &
		!	Move chars to string				      &
		!	Print a <cr> so CUI doesn't get confused	      &

11770		For Idx% = 1% until	(Idx% > Len(Chars$)) or		      &
					(State% = 0%)			      &
\			Char% = Ascii(Mid(Chars$,Idx%,1%))		      &
\			Char% = Char% and 127%				      &
\			Char$ = Chr$(Char%)				      &
		!	For each char received:				      &
		!		Get ascii value of next char		      &
		!		Strip 8th bit				      &
		!		Build char string			      &

11780			If Char% = 3% then				      &
				Print #1%, Char$			      &
\				Ctrl.C% = -1%				      &
\				Return					      &
		!		If CTRL/C char,				      &
		!			Display it			      &
		!			Set CTRL/C flag			      &
		!			Exit				      &

11790			On State% Gosub					      &
				11830, 	! Get start of esc seq		      &
				11850,	! Get char after <esc>		      &
				11890,	! Get char following <esc>/	      &
				11910	! Get chars following <esc>[	      &
\		Next Idx%						      &
\	Next								      &
		!		Call state processor			      &
		!	Next input char					      &
		! Repeat until state = 0				      &

11800	Z$ = Sys(Ctrl.X$)						      &
		If Bufsiz(1%)						      &
\	Close 1%							      &
\	Return								      &
		! Cancel any remaining typeahead			      &
		!  If the KB is still open				      &
		! Close KB channel					      &
		! Exit							      &

11810	IF ERL = 11515 THEN			!If error opening the KB      &
		U.POS% = TERM.POS%		!  Restore the term's position &
\		CALL DISPLY ("?Terminal not available") !Print error message  &
\		ERRSTS% = -2%			!  Set special error flag     &
\		RESUME 11740			!  and exit		      &
\	END IF								      &

11815	REPLY$ = ""				!Null any chars received      &
\	ERRSTS% = TRUE%				!Set the error flag	      &
\	RESUME 11800				! and exit		      &
									      &
									      &

11830	!	P r o c e s s   K B   e s c a p e   s e q   s t a t e s	      &
									      &
									      &
	! State 1 - wait for start of escape sequence			      &
									      &
									      &
	If Char$ = Esc$ then						      &
		State% = 2%						      &
\		Return							      &
		! If <esc> char,					      &
		!	Set next state					      &
		!	Exit						      &

11840	Return								      &
		! Ignore anything else					      &
		! Leave state unchanged					      &
		! Exit							      &

11850	! State 2 - Process char following <esc>			      &
									      &
									      &
	If Char$ = "/" then						      &
		Reply$ = Char$						      &
\		State% = 3%						      &
\		Return							      &
		! If next char is /,					      &
		!	Save it in esc seq string			      &
		!	Set next state					      &
		!	Exit						      &

11860	If Char$ = "[" then						      &
		Reply$ = Char$						      &
\		State% = 4%						      &
\		Return							      &
		! If next char is [,					      &
		!	Save it in esc seq string			      &
		!	Set next state					      &
		!	Exit						      &

11870	If Char$ = "?" then						      &
		Reply$ = "[" + Char$					      &
\		State% = 4%						      &
\		Return							      &
		! If next char is ?,					      &
		!	Assume [? as start of seq			      &
		!	Set next state					      &
		!	Exit						      &

11875	If Char$ = ">" then						      &
		Reply$ = "[" + Char$					      &
\		State% = 4%						      &
\		Return							      &
		! If next char is >,					      &
		!	Assume [> as start of seq			      &
		!	Set next state					      &
		!	Exit						      &

11880	Reply$ = ""							      &
\	State% = 0%							      &
\	Return								      &
		! Anything else is unexpected				      &
		! Null any chars received so far			      &
		! Set state for completion				      &
		! Exit							      &

11890	! State 3 - Get alphabetic char following <esc>/		      &
									      &
									      &
	If Char$ >= "A" and Char$ <= "Z" then				      &
		Reply$ = Reply$ + Char$					      &
\		State% = 0%						      &
\		Return							      &
		! If A-Z character,					      &
		!	Append char to esc seq string			      &
		!	Set state for completion			      &
		!	Exit						      &

11900	Reply$ = ""							      &
\	State% = 0%							      &
\	Return								      &
		! Anything else is unexpected				      &
		! Null chars received so far				      &
		! Set state for completed				      &
		! Exit							      &

11910	! State 4 - Get next char in ANSI escape sequence		      &
									      &
									      &
	Reply$ = Reply$ + Char$						      &
\	State% = 0%							      &
		If Char$ = "c"						      &
\	Return								      &
		! Append character to esc seq string			      &
		! Change state for completion				      &
		!	If escape terminator (c),			      &
		! Exit							      &

									      &

12200	!								      &
	!	S P E E D S						      &
	!								      &
									      &
									      &
									      &

12220	  IF C1$ = "EXTA" THEN			!IF EXTERNAL CLOCK A SPECIFIED &
		V% = -2%			!  SET INTERNAL VALUE	      &
	\	GOTO 12230			!  CONTINUE		      &
	\ END IF							      &
	\ IF C1$ = "EXTB" THEN			!IF EXTERNAL CLOCK B SPECIFIED &
		V% = -3%			!  SET INTERNAL VALUE	      &
	\	GOTO 12230			!  CONTINUE		      &
	\ END IF							      &
	\ ON ERROR GOTO 12360			!SET LOCAL ERROR TRAP	      &
	\ V=VAL(C1$)				!GET THE SPEED AS A NUMBER    &
	\ V%=V					!MAKE AN INTEGER OUT OF IT    &
	\ V%=-V% IF V=134.5			!CONVERT 134.5 TO -134	      &
	\ ON ERROR GOTO 19000			!RESET ERROR TRAP	      &

12230	IF V%=2741% THEN			!IF 2741 TYPE TERMINAL	      &
		M%=-1%				!SET APPROPRIATE VALUE	      &
	\	GOTO 12350			!GO EXIT		      &

12240	I0% = (KB% AND 255%) + 1%		!GET KB NUMBER		      &
\	I0% = KB.NO% + 1% IF KB% AND 128%	!USE OUR OWN IF NONE SPECIFIED &

12250	ON ERROR GOTO 12390			!Set local error trap	      &
\	INF% = ASCII(SEG$(SYS(CHR$(6%)+CHR$(16%)+!GET THE INTERFACE TYPE      &
		CHR$(0%)+CHR$(I0%-1%)),19%,19%)) !FOR THE KB FROM THE DDB     &
\	ON ERROR GOTO 19000			!Reset standard error trap    &
		!    VALUE	INTERFACE TYPE				      &
		!	0	KL11					      &
		!	2	DC11					      &
		!	4	DL11					      &
		!	6	DE11					      &
		!	8	PK11					      &
		!	10	DJ11					      &
		!	12	DH11					      &
		!	14	DZ11					      &
		!	16	VH11					      &

12260	INF% = INF%/2% + 1%			!CONVERT TO ARRAY VALUE	      &
						! (0 - 16) = (1 - 9)	      &
\	GOTO 12280 IF SPEED%(0%,0%) < 0%	!GO AROUND IF ALREADY SET     &
\	RESTORE					!RESTORE THE DATA POINTER     &
	\ T$=""					!INIT THE DATA VARIABLE	      &
	\ READ T$ UNTIL T$="*SPEEDS*"		!FIND THE SPEED TABLE	      &

12270	FOR J% = 1% TO 9%			!FOR THE 9 INTERFACES	      &
\		READ E%,S(0%),S(1%),S(2%),S(3%),S(4%),S(5%), !READ THE	      &
		S(6%),S(7%),S(8%),S(9%),S(10%),S(11%), !VALID SPEEDS	      &
		S(12%),S(13%),S(14%),S(15%),S(16%)!PER INTERFACE	      &
\		FOR Z%=0% TO 16%		!  FOR EACH SPEED	      &
\			S(Z%)=-134. IF S(Z%)=134.5!  CONVERT 134.5 TO -134    &
\			SPEED%(J%,Z%) = S(Z%)	!    STORE THE SPEED	      &
\		NEXT Z%				!  NEXT SPEED		      &
\	NEXT J%					!NEXT INTERFACE		      &
\	SPEED%(0%,0%) = -1%			!SET THE SPEED FILE INUSE FLAG &

12280	GOTO 12290 IF SPEED%(INF%,0%)<0%	!CONTINUE IF THIS KB HAS      &
						!SPEED SETTINGS		      &
	\ V%,E%=0%				!SPEED NOT SETTABLE	      &
	\ RETURN				!GO BACK		      &

12290	FOR M%=1% TO 16%			!LOOK TO SEE IF SPEED IS VALID &
	\	GOTO 12310 IF SPEED%(INF%,M%)=V%!  YES IT IS
12300	NEXT M%					!NEXT SPEED TO CHECK	      &
	\ E%=TRUE%				!SPEED NOT FOUND, SET ERROR   &
	\ RETURN				!GO BACK		      &

12310	IF S%(0%,0%)<0% THEN			!IF SPEED FILE WAS USED	      &
		GOTO 12330			!  THEN CONTINUE	      &
	ELSE	ON ERROR GOTO 12380		!  SET FILE OPEN ERROR TRAP   &
	\	S%(0%,0%)=-1%			!  SET THE INUSE FLAG	      &
	\	V$ = SYS(GAIN.PRIVS$)		!  REGAIN TEMP PRIVS	      &
	\	OPEN "_SY:$TERSPD.SYS/RO" FOR INPUT AS FILE 1%!OPEN SPEED FILE &
	\	V$ = SYS(DROP.PRIVS$)		!  DROP TEMP PRIVS	      &
	\	ON ERROR GOTO 12370		!  SET FILE ACCESS ERROR TRAP &

12320	LINPUT #1%, S$				!INPUT A LINE FROM SPEED FILE &
\	S$ = EDIT$(S$,2%+4%+32%+256%)		!GET RID OF GARBAGE	      &
\	GOTO 12320 UNLESS LEN(S$)		!GET NEXT LINE IF BLANK	      &
\	GOTO 12320 IF ASCII(S$) = 33%		!GET NEXT LINE IF A COMMENT   &
\	S% = POS(S$,"!",1%)			!SEARCH FOR EMBEDDED COMMENT  &
\	IF S% THEN				!IF THERE IS ONE	      &
		S$ = SEG$(S$,1%,S%-1%)		!  GET EVERYTHING BEFORE IT   &
\	END IF								      &
\	K$ = SEG$(S$,1%,POS(S$,":",1%))		!EXTRACT THE KB NUMBER	      &
\	S$ = SEG$(S$,POS(S$,":",1%)+1%,LEN(S$))	!STRIP OFF THE KB	      &
\	S% = POS(K$,"-",1%)			!CHECK FOR A RANGE	      &
\	IF S% THEN				!IF THERE IS A RANGE	      &
		K1$ = SEG$(K$,S%+1%,LEN(K$))	!  GET THE SECOND KB	      &
\		K$ = SEG$(K$,1%,S%-1%)		!  GET THE FIRST KB	      &
\		K$ = K$ + ":" UNLESS POS(K$,":",1%) !ADD ":" IF NEEDED	      &
\		K1$ = K1$ + ":" UNLESS POS(K1$,":",1%) !ADD ":" IF NEEDED     &
\		CHANGE FSS$(K$,1%) TO FIRQ2%	!  DO THE FSS ON THE FIRST KB &
\		GOTO 12320 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEV'S  &
\		GOTO 12320 IF (STATUS AND 255%) <> 2% !IGNORE NON-KB DEVICES  &
\		GOTO 12320 IF FIRQ2%(26%) = 0%	!   IGNORE NO UNIT NUMBER     &
\		K0% = FIRQ2%(25%)		!  GET THE KB NUMBER	      &
\		CHANGE FSS$(K1$,1%) TO FIRQ2%	!  DO THE FSS ON THE 2ND KB   &
\		GOTO 12320 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEV'S  &
\		GOTO 12320 IF (STATUS AND 255%) <> 2% !IGNORE NON-KB DEVICES  &
\		GOTO 12320 IF FIRQ2%(26%) = 0%	!   IGNORE NO UNIT NUMBER     &
\		K1% = FIRQ2%(25%)		!  GET THE KB NUMBER	      &
	ELSE								      &
		S% = POS(S$,"-",1%)		!CHECK FOR A RANGE	      &
\		IF S% THEN			!IF THERE IS A RANGE	      &
			K1$=SEG$(S$,S%+1%,POS(S$,":",1%))!GET THE SECOND KB   &
\			S$=SEG$(S$,POS(S$,":",1%)+1%,LEN(S$))!STRIP OFF THE KB &
\			CHANGE FSS$(K$,1%) TO FIRQ2%!DO THE FSS ON THE 1ST KB &
\		GOTO 12320 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEV'S  &
\			GOTO 12320 IF (STATUS AND 255%) <> 2%!IGNORE NON-KB'S &
\			GOTO 12320 IF FIRQ2%(26%) = 0%	!IGNORE NO UNIT NUMBER &
\			K0% = FIRQ2%(25%)		!GET THE KB NUMBER    &
\			CHANGE FSS$(K1$,1%) TO FIRQ2%!DO THE FSS ON THE 2ND KB &
\		GOTO 12320 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEV'S  &
\			GOTO 12320 IF (STATUS AND 255%) <> 2%!IGNORE NON-KB'S &
\			GOTO 12320 IF FIRQ2%(26%) = 0%	!IGNORE NO UNIT NUMBER &
\			K1% = FIRQ2%(25%)		!GET THE KB NUMBER    &
		ELSE							      &
\			CHANGE FSS$(K$,1%) TO FIRQ2%!DO THE FSS ON THE KB     &
\		GOTO 12320 IF (FIRQ2%(30%) AND 128%) = 128%!IGNORE BAD DEV'S  &
\			GOTO 12320 IF (STATUS AND 255%) <> 2%!IGNORE NON-KB'S &
\			GOTO 12320 IF FIRQ2%(26%) = 0%!  IGNORE NO UNIT NUMBER &
\			K0%, K1% = FIRQ2%(25%)	!  GET THE KB NUMBER	      &
\		END IF							      &
\	END IF								      &
\	K0% = K0% + 1%							      &
\	K1% = K1% + 1%							      &
\	IF (K0%<1%) OR (K0%>128%) OR		!CHECK FOR INVALID KB'S	      &
	   (K1%<1%) OR (K1%>128%) OR					      &
	   (K0%>K1%) THEN			!OR INVALID RANGE	      &
	  PRINT "%Invalid Keyboard numbers";K0%-1%;",";K1%-1%;"in $TERSPD.SYS" &
\	  GOTO 12320				!  SAY SO, AND GET NEXT LINE  &
\	END IF								      &
\	S%(I%,0%) = -1% FOR I% = K0% TO K1%	!SET THE INUSE FLAG	      &
\	FOR Z% = 1% TO 16%			!UP TO 16 SPEEDS	      &
\		S0$ = SEG$(S$,1%,POS(S$+",",",",1%)-1%)!  EXTRACT A SPEED     &
\		GOTO 12320 UNLESS LEN(S0$)	!  EXIT IF NO MORE	      &
\		S$ = SEG$(S$,POS(S$+",",",",1%)+1%,LEN(S$)) !STRIP IT OFF     &
\		IF S0$ = "EXTA" THEN		!  IF EXT CLOCK A	      &
			S%(I%,Z%) = -2% FOR I% = K0% TO K1% !STORE ITS FLAG   &
\			GOTO 12325		!     PROCESS NEXT SPEED      &
\		END IF							      &
\		IF S0$ = "EXTB" THEN		!  IF EXT CLOCK B	      &
			S%(I%,Z%) = -3% FOR I% = K0% TO K1% !STORE ITS FLAG   &
\			GOTO 12325		!     PROCESS NEXT SPEED      &
\		END IF							      &
\		S0 = VAL(S0$)			!  MUST BE A SPEED	      &
\		S0% = S0			!  MAKE INTO AN INT	      &
\		S0% = -S0% IF S0 = 134.5	!  CNV 134.5 TO -134	      &
\		S%(I%,Z%) = S0% FOR I% = K0% TO K1%!  STORE THE VALUE
12325	NEXT Z%					!NEXT SPEED		      &
\	IF LEN(S$) <> 0% THEN			!IF MORE THAN 16 SPEEDS	      &
	      PRINT "%More than 16 speeds specified for KB";NUM1$(K0%-1%);":" &
\	END IF								      &
\	GOTO 12320				!GET NEXT LINE		      &

12330	GOTO 12350 UNLESS S%(I0%,0%) < 0%	!WAS THIS KB IN THE FILE?     &
\	FOR J% = 1% TO 16%			!CHECK IF SPEED ALLOWED	      &
\		GOTO 12350 IF S%(I0%,J%) = V%	!THAT SPEED IS ALLOWED	      &
\	NEXT J%								      &
\	CALL DISPLY("?Speed is not allowed for KB"+NUM1$(I0%-1%)+":")	      &
\	E% = -2%				!NOT GOOD FOR THIS KB	      &
\	RETURN								      &

12350	V%=M%					!RETURN THE APPROPRIATE VALUE &
	\ E%=FALSE%				!CLEAR THE ERROR FLAG	      &
	\ RETURN				!GO BACK		      &

12360	RESUME 12365				!BAD BAUD RATE
12365	ON ERROR GOTO 19000			!RESET THE ERROR TRAP	      &
	\ E%=TRUE%				!SET ERROR FLAG		      &
	\ RETURN				!GO BACK		      &

12370	RESUME 12375				!SPEED FILE READ ERRORS
12375	ON ERROR GOTO 19000			!RESET THE ERROR TRAP	      &
	\ CLOSE 1%				!CLOSE THE SPEED FILE	      &
	\ GOTO 12330 IF ERR=11%			!CONTINUE IF JUST EOF	      &
	\ PRINT ERT$(ERR); " reading Speed file"!PRINT THE ERROR MESSAGE      &
	\ V%,E%=FALSE%				!CLEAR THE SPEED VALUE & ERROR &
	\ RETURN				!GO BACK		      &

12380	RESUME 12385				!SPEED FILE OPEN ERRORS
12385	ON ERROR GOTO 19000			!RESET THE ERROR TRAP	      &
	\ CLOSE 1%				!CLOSE THE SPEED FILE	      &
	\ V$ = SYS(DROP.PRIVS$)			!DROP TEMP PRIVS	      &
	\ GOTO 12350 IF ERR=5%			!CONTINUE IF FILE NOT FOUND   &
	\ PRINT ERT$(ERR); " opening Speed file"!PRINT THE ERROR MESSAGE      &
	\ V%,E%=FALSE%				!CLEAR THE SPEED VALUE & ERROR &
	\ RETURN				!GO BACK		      &

12390	GOTO 19000 IF ERR <> 8%			!Handle unexpected errors     &
\	RESUME 12395				!Clear the error flag
12395	ON ERROR GOTO 19000			!Reset the standard error trap &
\	U.POS% = TERM.POS%			!Restore the terminal position &
\	CALL DISPLY ("?Terminal disabled")	!Print the error message      &
\	V%,E%=FALSE%				!CLEAR THE SPEED VALUE & ERROR &
\	RETURN					!GO BACK		      &

									      &

13000	!								      &
	!	G E T   T H E   M A C R O   N A M E			      &
	!								      &
  GETMACRO:								      &
	ERRSTS% = FALSE%			!INIT TO SUCCESS	      &
\	GET.TYPE% = CHECK.USER.MACRO%		!GET THE TERMINAL TYPE	      &
\	RESTORE					!RESTORE DATA POINTER	      &
\	READ C1$ UNTIL C1$ = "*MACRO*"		!FIND THE MACRO TERMINAL TABLE &
\ TYPELOOP:					!START OF THE LOOP	      &
\	READ C1$				!READ THE TERMINAL TYPE	      &
\	GOTO 13010 IF LEN(C1$) = 0%		!GO ON IF AT THE END OF TABLE &
\	READ C1% FOR I% = 1% TO 26%		!SKIP OVER THE FIRQB CONTENTS &
\	READ TER.TYPE%				!READ THE TERMINAL TYPE CODE  &
\	READ C1% FOR I% = 1% TO 4%		!READ OVER EXTENDED ATTRIBUTE &
\	GOTO TYPELOOP IF GET.TYPE% <> TER.TYPE%	!READ NEXT IF THIS ISN'T IT   &
\	MACRO$ = C1$				!STORE THE NAME		      &
\	RETURN					!WE HAVE IT, EXIT	      &

13010	ERRSTS% = TRUE%				!NO MATCH, SET THE ERROR FLAG &
\	RETURN					!EXIT			      &

14000	!								      &
	!	C H E C K   F O R   Q U A L I F I E R			      &
	!								      &
  CHECK_QUAL_1:								      &
	CALL FET$CQ BY REF (FETCH.QUAL%)	!Look for the qualifier	      &
\	V% = FNSET.CLEAR%(SET.INDEX%, CLR.INDEX%, BIT.VALUE%, NOT U.NO%)      &
		IF U.PRES%			!Set/Clr flags if presesnt    &
\	RETURN								      &
									      &
\ CHECK_QUAL_1A:							      &
\	CALL FET$CQ BY REF (FETCH.QUAL%)	!Look for the qualifier	      &
\	U.NO% = NOT U.NO%			!Opposite meaning for qual    &
\	V% = FNSET.CLEAR%(SET.INDEX%, CLR.INDEX%, BIT.VALUE%, NOT U.NO%)      &
		IF U.PRES%			!Set/Clr flags if presesnt    &
\	RETURN								      &
									      &
\ CHECK_QUAL_3:								      &
\	CALL FET$CQ BY REF (FETCH.QUAL%)	!Look for the qualifier	      &
\	U.NO% = NOT U.NO%			!Opposite meaning for qual    &
\	GOTO CHECK_CONT_2			!Join up		      &
									      &
\ CHECK_QUAL_2:								      &
\	CALL FET$CQ BY REF (FETCH.QUAL%)	!Look for the qualifier	      &
\ CHECK_CONT_2:								      &
\	FIRQB%(SET.INDEX%) = (128% OR U.NO%) IF U.PRES% ! Set flag as needed  &
\	RETURN								      &
									      &

15000	!								      &
	!	F U N C T I O N S					      &
	!								      &
	DEF FNCHECK.NUM%(N$)			!DEFINE FUNC TO CHECK NUMBERS &
\	ON ERROR GOTO 15090			!SET OWN ERROR TRAP	      &
\	ERRSTS% = FALSE%			!DEFAULT TO NO ERROR	      &
\	FNCHECK.NUM% = VAL(N$)			!GET THE VAL OF THE STRING    &
\	GOTO 15100				!MUST HAVE BEEN GOOD, SO EXIT &

15090	ERRSTS% = TRUE%				!SET ERROR VALUE	      &
\	RESUME 15100				!AND EXIT		      &

15100	FNEND					!EXIT			      &

15150	DEF FNSET.CLEAR%(SET%,CLR%,BIT.%,FLAG%)				      &
\	FNSET.CLEAR% = 0%			!DUMMY VALUE		      &
\	FQBEXT%(SET%) = FQBEXT%(SET%) OR BIT.% IF FLAG%!SET SET FLAG	      &
\	FQBEXT%(CLR%) = FQBEXT%(CLR%) AND NOT (BIT.%) IF FLAG%!CLR CLR FLAG   &
\	FQBEXT%(CLR%) = FQBEXT%(CLR%) OR BIT.% IF NOT(FLAG%)!SET CLR FLAG     &
\	FQBEXT%(SET%) = FQBEXT%(SET%) AND NOT (BIT.%) IF NOT(FLAG%)!CLR SET   &
\	FNEND								      &
									      &


19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	KB.PERM% = KB% AND SWAP%(PERM%)		!Combine the KB and PERM flag &
\	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
