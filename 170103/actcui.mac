TITLE	ACTCUI,<ACTMGR CUI COMMAND TABLES>,02,7-SEP-89,WJS/JJT/SEL

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	ACTCUI Edit History
;+
; EDIT	BY   DATE	REASON
;
; 001	SEL  9/7/89	Add NO prefix to the /OUTPUT qualifier 
; 002   SEL  6/21/90	Make filename argument to /OUTPUT qualifier optional 
;-


.sbttl	Set up MACRO parameters

	.enabl	lc
	.list	me
	.list	meb
	.list	bex



.sbttl	Define and order the CSECT's


	DEFORG	ACTCUI,psect	space=D



.sbttl	Include CUI macros

	.mcall	$CUI, LOOKUP, $DISALLOW
	$CUI	table			; Define CUI tables

.sbttl	Top-level command keyword parse tables

Cmdtbl::					; Command table entry

	$thr
	$rdcmd	prompt=Cmd.p			; Read ACTMGR command

	$parkey					; Parse command keyword

	 $onkey	CR.A.k	CRAcmd			;  CREATE/ACCOUNT command

	 $onkey	SEA.k	SEAcmd			;  SET ACCOUNT command
	 $onkey	SEP.k	SEPcmd			;  SET PASSWORD command

	 $onkey	SHA.k	SHAcmd			;  SHOW ACCOUNT command

	 $onkey	DE.A.k	DEAcmd			;  DELETE/ACCOUNT command

	$endkey
	$endthr


.sbttl	Prompt text

Cmd.p:	.ascic	^"'Actmgr> '"			; Command-level prompt

ACT.p:	.ascic	^"'Account: '"			; Account prompt
	.even

.sbttl	CREATE ACCOUNT command

CRAcmd:	

$thr
 $defcmd	u.cmdc=CR.A.k	qual=CRAtbl			; CREATE/ACCOUNT
  $parm		 DVP.t  type=U$ACCR  prompt=ACT.p		; Parameter is dev: PPN
  $FETCQ	NOU.Q						;FETCH /NOUSER
  $IF		PRESENT						;IF THERE
    $DO								;BEGIN A MACRO
	MOV	U.POS(R4),CONFPOS				;POS OF /NOUSER
    $ENDDO
    $DISALLOW	<ACC.C>,U.CNFE					;NO ACCOUNT QUALIFIERS ALLOWED
     $DO							;BEGIN A MACRO
	CLR	CONFPOS						;RESET POS
     $ENDDO
   $ENDIF
 $endcmd
$endthr



	global	<DVP.t,U.POS,CONFPOS,U.CNFE>

.sbttl	CREATE ACCOUNT command qualifiers

CRAtbl:

defqual	EXP.q		arg=opt  conf=<NOE.q> CLASS=<ACC.C>	; /EXPIRE=
 defarg	 type=u$date						;   datespec
 endarg
defqual	LOG.q		flags=qf.neg				; /[NO]LOG
defqual	LOO.q		flags=qf.neg		 CLASS=<ACC.C>;/[NO]LOOKUP
defqual	NAM.q		arg=REQ					; /NAME=
 defarg	 type=u$any						;       string
 endarg
defqual	NOE.q			conf=<EXP.q>	CLASS=<ACC.C>	; /NOEXPIRE
defqual	PRV.q		arg=req  flags=qf.alis	CLASS=<ACC.C>	;/PRIVILEGE
 defarg	 type=u$any						; =STRING
 endarg
DEFQUAL	CAP.Q		FLAGS=QF.NEG 		CLASS=<ACC.C>	;/[NO]CAPTIVE
DEFQUAL	REM.Q		FLAGS=QF.NEG 		CLASS=<ACC.C>	;/[NO]REMOTE
DEFQUAL	NET.Q		FLAGS=QF.NEG 		CLASS=<ACC.C>	;/[NO]NETWORK
DEFQUAL	LIN.Q		FLAGS=QF.NEG		CLASS=<ACC.C>;/[NO]INTERACTIVE
DEFQUAL	PPT.Q		FLAGS=QF.NEG 		CLASS=<ACC.C>;/[NO]PASSWORD_PROMPT
DEFQUAL	NOU.Q			CONF=<USE.Q> 			;/NOUSER
DEFQUAL USE.Q			CONF=<NOU.Q>			;/USER
DEFQUAL	DET.Q		ARG=REQ	     		CLASS=<ACC.C>;/DETACHED_JOB_QUOTA=
 DEFARG	UNLI.K						;	UNLIMITED
 DEFARG	TYPE=U$U8	MINVAL=0, MAXVAL=63		;	integer
 ENDARG
DEFQUAL	JOB.Q		ARG=REQ	     		CLASS=<ACC.C>	;/JOB_QUOTA=
 DEFARG	UNLI.K						;	UNLIMITED
 DEFARG	TYPE=U$U8	MINVAL=0, MAXVAL=63		;	integer
 ENDARG
DEFQUAL	MES.Q		ARG=REQ	     		CLASS=<ACC.C>  ;/MESSAGE_QUOTA
 DEFARG	UNLI.K						;	UNLIMITED
 DEFARG	TYPE=U$U16					;	INTEGER
 ENDARG
DEFQUAL	RIB.Q		ARG=REQ	     		CLASS=<ACC.C>	;/RIB_QUOTA=
 DEFARG	UNLI.K						;	UNLIMITED
 DEFARG	TYPE=U$U16	MINVAL=0, MAXVAL=256		;	INTEGER
 ENDARG

;and the Directory qualifiers on the following page are part of the Account table, too...

.sbttl	DIRECTORY qualifiers

defqual	CLU.q		arg=req					; /CLUSTERSIZE=
 defarg	 type=u$u8	minval=1, maxval=16			;	       nn
 endarg
defqual	DEB.q							; /DEBUG ** debugging **
;defqual	DIA.q		flags=qf.neg				; /[NO]DIALOGUE
defqual	INQ.q		arg=req					; /IN_QUOTA=
 defarg	 UNLI.k							;	    UNLIMITED
 defarg	 type=u$u32	minval=0	maxval=16777214		;	    nn
 endarg
defqual	LOG.q		flags=qf.neg				; /[NO]LOG
defqual	OUQ.q		arg=req					; /OUT_QUOTA=
 defarg	 UNLI.k							;	     UNLIMITED
 defarg	 type=u$u32	minval=0	maxval=16777214		;	     nn
 endarg
defqual	POS.q		arg=req					; /POSITION=
 defarg	 MIDD.k							;	    MIDDLE
 defarg	 INDE.k							;	    INDEX
 defarg	 type=u$u32	minval=0				;	    nn
 endarg
;defqual	RSV.q		arg=req					; /RESERVE_QUOTA=
; defarg	 type=u$u32	minval=0	maxval=16777214		;	         nn
; endarg
defqual	SIZ.q		arg=req					; /SIZE=
 defarg	 type=u$u8	minval=1, maxval=7			;       nn
 endarg
defqual	TEM.q		arg=req					; /TEMPLATE=
 defarg	 type=devppn						;	    dev:[p,pn]
 endarg

endqual

.sbttl	SET ACCOUNT commands

SEACMD:			; SET ACCOUNT

$thr
 $defcmd	u.cmdc=SEA.k	qual=SEAtbl			; SET ACCOUNT
  $parm		 DVP.t  type=U$ACCR  prompt=ACT.p		; Parameter is dev: PPN
  $FETCQ	NOU.Q						;FETCH /NOUSER
  $IF		PRESENT						;IF THERE
    $DO								;BEGIN A MACRO
	MOV	U.POS(R4),CONFPOS				;POS OF /NOUSER
    $ENDDO
    $DISALLOW	<ACC.C>,U.CNFE					;NO ACCOUNT QUALIFIERS ALLOWED
     $DO							;BEGIN A MACRO
	CLR	CONFPOS						;RESET POS
     $ENDDO
   $ENDIF
 $endcmd
$endthr



	global	<DVP.t,ACC.C>

.sbttl	SET ACCOUNT command qualifiers

SEAtbl:

defqual	EXP.q		arg=opt  conf=<NOE.q>	CLASS=<ACC.C>	; /EXPIRE
 defarg	 type=u$date						;	  datespec
 endarg
defqual	NAM.q		arg=REQ					; /NAME=
 defarg	 type=u$any						;       string
 endarg
defqual	NOE.q		conf=<EXP.q>		CLASS=<ACC.C>	; /NOEXPIRE
defqual	PRV.q		arg=req  flags=qf.alis	CLASS=<ACC.C>	; /PRIVILEGES=
 defarg	 type=u$any						;	      strings
 endarg
defqual	LOO.q		flags=qf.neg		CLASS=<ACC.C>	;/[NO]LOOKUP
DEFQUAL	LIN.Q		FLAGS=QF.NEG		CLASS=<ACC.C>;/[NO]INTERACTIVE
DEFQUAL	PPT.Q		FLAGS=QF.NEG		CLASS=<ACC.C>;/[NO]PASSWORD_PROMPT
DEFQUAL	CAP.Q		FLAGS=QF.NEG		CLASS=<ACC.C>	;/[NO]CAPTIVE
DEFQUAL	REM.Q		FLAGS=QF.NEG		CLASS=<ACC.C>	;/[NO]REMOTE
DEFQUAL	NET.Q		FLAGS=QF.NEG		CLASS=<ACC.C>	;/[NO]NETWORK
DEFQUAL	DET.Q		ARG=REQ			CLASS=<ACC.C>	;/DETACHED_JOB_QUOTA=
 DEFARG	UNLI.K						;	UNLIMITED
 DEFARG	TYPE=U$U8	MINVAL=0, MAXVAL=63		;	integer
 ENDARG
DEFQUAL	JOB.Q		ARG=REQ			CLASS=<ACC.C>;/JOB_QUOTA=
 DEFARG	UNLI.K						;	UNLIMITED
 DEFARG	TYPE=U$U8	MINVAL=0, MAXVAL=63		;	integer
 ENDARG
DEFQUAL	MES.Q		ARG=REQ			CLASS=<ACC.C>;/MESSAGE_QUOTA=
 DEFARG	UNLI.K						;	UNLIMITED
 DEFARG	TYPE=U$U16					;	INTEGER
 ENDARG
DEFQUAL	RIB.Q		ARG=REQ			CLASS=<ACC.C>;/RIB_QUOTA=
 DEFARG	UNLI.K						;	UNLIMITED
 DEFARG	TYPE=U$U16	MINVAL=0, MAXVAL=256		;	INTEGER
 ENDARG
DEFQUAL	NOU.Q			CONF=<USE.Q> 			;/NOUSER
DEFQUAL USE.Q			CONF=<NOU.Q>			;/USER

defqual	DEB.q							; /DEBUG ** debugging **
defqual	INQ.q		arg=req					; /IN_QUOTA=
 defarg	 UNLI.k							;	    UNLIMITED
 defarg	 type=u$u32	minval=0	maxval=16777214		;	    nn
 endarg
defqual	LOG.q		flags=qf.neg				; /[NO]LOG
defqual	OUQ.q		arg=req					; /OUT_QUOTA=
 defarg	 UNLI.k							;	     UNLIMITED
 defarg	 type=u$u32	minval=0	maxval=16777214		;	     nn
;defqual	RSV.q		arg=req					; /RESERVE_QUOTA=
; defarg	 type=u$u32	minval=0	maxval=16777214		;	     nn
; endarg

endqual

.sbttl	SET PASSWORD command

SEPcmd:

$thr
 $defcmd	u.cmdc=SEP.k	qual=SEPtbl			; SET PASSWORD
  $FETCQ	 SYS.Q						; /SYSTEM?
  $IF		 ABSENT						; IF ABSENT
  $parm		 DVP.t  type=U$ACCR  FLAGS=PF.OPT		; Parameter is dev: PPN
  $ENDIF
 $endcmd
$endthr


.sbttl	SET PASSWORD command qualifiers

SEPtbl:

defqual	DEB.q							; /DEBUG ** debugging **
defqual	LOG.q		flags=qf.neg				; /[NO]LOG

defqual	SYS.q				conf=<DVP.T>		; /SYSTEM

endqual



	global	<DVP.t>

	.sbttl	SHOW ACCOUNT command

SHAcmd:

$thr
 $defcmd	u.cmdc=SHA.k	qual=SHAtbl			; SHOW ACCOUNT
  $parm		 DVP.t  type=U$ACCR  FLAGS=PF.OPT		; Parameter is dev: PPN
  $FETCQ	BRI.Q						;FETCH /BRIEF
  $IF		PRESENT						;IF THERE
    $DO								;BEGIN A MACRO
	MOV	U.POS(R4),CONFPOS				;POS OF /BRIEF
    $ENDDO
    $DISALLOW	<RES.Q>,U.CNFE					;/RESET NOT ALLOWED WITH /BRIEF
     $DO							;BEGIN A MACRO
	CLR	CONFPOS						;RESET POS
     $ENDDO
   $ENDIF
   $FETCQ	OUT.Q						;FETCH /OUTPUT
   $IF		PRESENT						;IF THERE
      PUTCQ	FOR.Q						;  IMPLY /FORM
   $ENDIF
 $endcmd
$endthr


.sbttl	SHOW ACCOUNT command qualifiers

SHAtbl:

defqual	BRI.q		 		conf=<FUL.q,ACC.Q>	; /BRIEF
defqual	DEB.q							; /DEBUG ** debugging **
defqual	FUL.q				conf=<BRI.q,ACC.Q>	; /FULL
defqual	FOR.q		arg=opt					; /FORM=
 defarg	 type=u$u8	minval=15				;       nn
 endarg
defqual	OUT.q	arg=opt		FLAGS=QF.NEG			; /[NO]OUTPUT ;2
 defarg	 type=lf.n						; filespec
 endarg
DEFQUAL	RES.Q			FLAGS=QF.NEG			; /[NO]RESET
DEFQUAL	NOU.Q				CONF=<USE.Q> 		;/NOUSER
DEFQUAL USE.Q				CONF=<NOU.Q>		;/USER
DEFQUAL	ACC.Q				CONF=<FUL.Q,BRI.Q>	;/ACCOUNTING
DEFQUAL	ALL.Q							;/ALL
endqual


.sbttl	DELETE ACCOUNT command

DEAcmd:

$thr
 $defcmd	u.cmdc=DE.A.k	qual=DLTtbl				; DELETE/ACCOUNT
  $parm		 DVP.t  type=U$ACCR  FLAGS=PF.OPT		; Parameter is dev: PPN
 $endcmd
$endthr



.sbttl	DELETE command qualifiers

DLTtbl:

defqual	DEB.q							; /DEBUG ** debugging **
defqual	LOG.q		flags=qf.neg				; /[NO]LOG
defqual	PUR.q		ARG=OPT CONF=<NPR.Q>			; /PURGE
 DEFARG	QER.K							;  =QUERY
 ENDARG
DEFQUAL	NPR.Q			CONF=<PUR.Q>			; /NOPURGE
defqual	RES.q		ARG=OPT CONF=<NRS.Q>			; /RESET
 DEFARG	QER.K							;  =QUERY
 ENDARG
DEFQUAL	NRS.Q			CONF=<RES.Q>			; /NORESET
defqual	QER.q		FLAGS=QF.NEG				; /[NO]QUERY
DEFQUAL	NOU.Q			CONF=<USE.Q> 			;/NOUSER
DEFQUAL USE.Q			CONF=<NOU.Q>			;/USER

endqual


	.end
