	.INCLUDE /CMN:COMMON/
	.INCLUDE /CMN:KERNEL/
	.INCLUDE /CMN:FLDEF/
TITLE	DLN,<DELETE/RENAME>,0A,10-MAY-91,MHB/ABC/SJK/JTC/GPK/KPH/FRL

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR DLN

;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-07
;  001	JTC  11-Oct-81	Add "SGNRES" to FQFSRT
;
;				[RSTS V9.0]
;  002	GPK  28-Mar-83	Multiple privileges
;  003	GPK  22-Sep-83	New permanent file handling; bugfix
;  004	GPK  17-Apr-84	Privilege name changes
;  005	KPH  29-Aug-84	Changes for APR5 FIP pool
;  006	KPH  19-Nov-84	Save PPN pointer for TRYDEL
;  007  FRL  12-Apr-85  TMPPRV support
;
;-

	IONLY			;Request I-only versions of FIP macros	;005

FQFSRT	DLN,LODABL							;005

;+
; DLNFQ - DELETE A FILE.
;
;	R4 -> FIRQB
;		FQPPN  =  PPN (0=>SELF)
;		FQNAM1 =  FILE NAME (2 WORDS)
;		          0 AND FILE ID FOR FILE ID DELETE
;		FQEXT  =  EXTENSION
;		FQDEV,FQDEVN = DEVICE TO USE
;-

.ENABL	LSB

	FQFENT	DLN,,<>		;DELETE A FILE

	CALLX	GUN,R5		;DECODE DEVICE NAME, SETUP UNIT
	 BR	30$		;DEVICE IS DISK
	CMP	R0,#DTAHND	;IS IT DECTAPE?
	BEQ	20$		;YES
	CMP	R0,#MTAHND	;NO, IS IT MAGTAPE?
	BNE	110$		;NO, OTHERS ARE NO-OPERATIONS
10$:	ERROR	PRVIOL		;PROTECTION VIOLATION

20$:	FJMPDV	DT,DLN		;DECTAPE DELETE, SO DO IT

30$:	MOV	@#FIPUNT,R1	;SAVE FIPUNT AND FIPGEN
	MOV	R4,R0		;SET UP POINTER
	ADD	#FQPPN,R0	; TO SEARCH ARGUMENT
	TST	2(R0)		;FILE NAME SUPPLIED?
	BNE	70$		;YES, SO NAMED DELETE
	TST	4(R0)		;IS THIS THE FID DELETE?
	BNE	50$		;YES
40$:	ERROR	BADNAM		;BLANK NAME IS NO GOOD

50$:	TST	FQDEVN(R4)	;SPECIFIC DEVICE?
	BEQ	40$		;NO, ERROR IN NAMING
	CALLX	SDFID		;SEARCH USING FILE ID
	BCS	60$		;Not found, error			;003
	MOV	UNAM(R5),FQNAM1(R4) ;Make sure name is set		;003
	MOV	UNAM+2(R5),FQNAM1+2(R4) ; and part 2			;003
	MOV	UNAM+4(R5),FQEXT(R4) ; and extension			;003
	BR	80$		;Now go delete it			;003

60$:	ERROR	NOSUCH		;ELSE AN ERROR

GLOBAL	<FIPUNT>

70$:	CALLX	SDU		;SEARCH FOR THE FIRST INSTANCE OF THE FILE
	BCS	60$		;IF NOT FOUND, THEN ERROR
80$:	BITB	USTAT(R5),#US.UFD!US.NOK ;UFD AND/OR NO DELETE?
	BNE	10$		;YES, DELETION ILLEGAL, ERROR
	MOV	R1,-(SP)	;Save FIPUNT/FIPGEN value		;002
	MOV	R0,-(SP)	;And save PPN pointer			;006
	MOV	(R0),R0		;Copy file's PPN			;003
	MOVB	UPROT(R5),R1	;Pick up the protection code		;003
	MOVB	@#FIPUNT,R5	;GET THE UNIT INVOLVED
	ASL	R5		; TIMES 2 FOR WORD ADDRESSING
	BIT	#UC.WLO,UNTCNT(R5) ;UNIT WRITE LOCKED?
	BNE	10$		;YES, PROTECTION VIOLATION
	CALLX	CHKACC		;Check access rights to file		;002
	BIT	#DDWLO,R0	;Write access denied?			;002
	BNE	10$		;Yes, so don't allow deletion		;002
	MOV	(SP)+,R0	;Restore PPN pointer for SDU		;006
	MOV	(SP)+,R1	;Restore FIPUNT/FIPGEN value		;002
	CALLX	XFL		;NOW DO THE REAL DELETE
	BIT	R1,#377*400	;WAS THE ORIGINAL SEARCH GENERAL?
	BEQ	110$		;NO, DONE AFTER ONE DELETION
TRYDEL:	MOV	R1,@#FIPUNT	;RESTORE FIPUNT AND FIPGEN
	CALLX	SDU		; TO SEARCH AGAIN
	BCC	80$		;IF FOUND, GO DELETE IT
110$:	RETURN			;DONE

.DSABL	LSB

GLOBAL	<FIPUNT,UNTCNT,FIUSER>						;002

FQFEND									;007

FQFSRT									;007

.SBTTL	RENAME A FILE

;+
; RENFQ - RENAME A FILE.
;
;	R4 -> FIRQB
;		FQPPN  =  PPN (0=>SELF)
;		FQNAM1 =  FILE NAME (2 WORDS)
;		FQEXT  =  EXTENSION
;		FQSIZ  =  -1 => DELETE ANY FILES BY NEW NAME
;		       <> -1 => DO NO DELETIONS
;		FQNAM2 =  NEW FILE NAME/EXTENSION (3 WORDS)
;		FQPROT =  NEW PROTECTION
;		FQDEV,FQDEVN = DEVICE TO USE
;-

	FQFENT	REN,,<>		;RENAME A FILE

	ADD	#FQNAM2-FQNAM1,R4; OFFSET TO POINT AT NEW NAME
	CALLX	CHKNAM		; CHECK THE NEW FILE NAME
	SUB	#FQNAM2-FQNAM1,R4;  POINT BACK TO BEGINNING OF FIRQB
	CALLX	GUN,R5		;GET THE UNIT AND CHECK DEVICE
	 BR	30$		;BRANCH HERE IF DISK
	CMP	R0,#DTAHND	;DECTAPE?
	BEQ	20$		;YES
	CMP	R0,#MTAHND	;MAGTAPE?
	BEQ	10$		;YES, ERROR TO RENAME ON MAGTAPE
	RETURN			;ALL OTHERS ARE NO-OPERATIONS

10$:	ERROR	PRVIOL

20$:	FJMPDV	DT,REN		;DO DECTAPE RENAME

30$:	ASR	R0		;MAKE UNIT NUMBER TIMES 1
	BIT	#UC.PRI,(R1)	;REFERENCE TO PUBLIC PACK?
	BNE	40$		;NOPE
	MOVB	@#SYSUNT,R0	;YEP, SET SYSTEM UNIT AND
	BIS	(PC)+,R0	; GENERAL SEARCHES FOR NEW NAME
	 .BYTE	0,-1
40$:	MOV	R0,-(SP)	;SAVE FIPUNT AND FIPGEN			;002
	MOV	FQPPN(R4),R0	;Get file's PPN				;002
	CLR	R1		;Dummy up a protection code		;002
	CALLX	CHKACC		;Check our access to this file		;002
	BIT	#DDPRVO,R0	;Owner's rights?			;002
	BEQ	10$		;No, so error				;002
	MOV	R4,R0		;Copy FIRQB pointer			;002
	ADD	#FQPPN,R0	;Point to PPN for SDU			;002
	TST	FQNAM1(R4)	;Legal file name?			;002
	BEQ	45$		;No, error				;007
	CALLX	SDU		;O.K., SO SEARCH FOR IT
	BCC	50$		;IF FOUND, THEN O.K.
	ERROR	NOSUCH		;IF NOT, THEN GIVE ERROR

45$:	ERROR	BADNAM		;No filename				;007

GLOBAL	<SYSUNT,FIUSER>

50$:	BITB	#US.UFD,USTAT(R5) ;DID WE FIND A UFD?
	BNE	10$		;YES, ERROR				;002
	MOV	(SP)+,R1	;Pick up FIPUNT/FIPGEN for existence check ;002
	MOVB	@#FIPUNT,R2	;GET THE UNIT AND
	ASL	R2		; CHECK TO SEE IF
	BIT	#UC.WLO,UNTCNT(R2) ;  IT IS WRITE LOCKED
	BNE	10$		;ERROR IF SO				;002
	MOV	(R0)+,R2	;GET THE PPN, POP POINTER
	CMP	(R0)+,FQNAM2+0(R4) ;NOW CHECK TO SEE
	BNE	60$		;IF THE NAME AND EXTENSION MATCH
	CMP	(R0)+,FQNAM2+2(R4) ;REALLY?
	BNE	60$		;NO MATCH
	CMP	(R0)+,FQNAM2+4(R4) ;FINAL CHECK...
	BEQ	90$		;BRANCH HERE IF ONLY PROTECTION CHANGE
60$:	BITB	#US.NOK,USTAT(R5) ;IS THIS FILE RENAMEABLE??
	BNE	10$		;NOPE, AN ERROR				;002
	MOV	R3,-(SP)	;YEP, SAVE THE LINK
	MOV	@#FIPUNT,-(SP)	;SAVE FIPUNT AND FIPGEN(=0) ON STACK
	MOV	@#FIBFBN+F.FBNL,-(SP) ;SAVE THE BLOCK NUMBER
	MOV	@#FIBFBN,-(SP)	; (BOTH WORDS)
	MOV	R4,R0		;Copy FIRQB pointer			;002
	ADD	#FQNAM2,R0	;Point to new name to use		;002
	TST	(R0)		;Legal new name?			;002
	BEQ	45$		;No, error				;007
	MOV	-(R0),-(SP)	;Save the deletion indicator		;002
.ASSUME	FQSIZ EQ FQNAM2-2						;002
	MOV	R2,(R0)		;Set same PPN as before with new name	;002
	INC	(SP)+		;DO DELETION(S) (FQSIZ=-1)?
	BEQ	70$		;YEP
	MOV	R1,@#FIPUNT	;NOPE, RESTORE RESEARCH FIPUNT AND FIPGEN
	CALLX	SDU		;TRY TO FIND THE NEW NAME
	BCS	80$		;WE MUST NOT FIND THAT NAME
	ERROR	FIEXST		; OR SAY THE FILE EXISTS

70$:	FCALL	TRYDEL		;Do deletion(s) first			;007
80$:	MOV	(SP)+,R3	;GET THE BLOCK NUMBER
	MOV	(SP)+,R2	; BACK INTO R2,R3
	MOV	(SP)+,@#FIPUNT	;  AND THE OLD FIPUNT AND FIPGEN
	CALLX	READ		;NOW READ THAT BLOCK
	MOV	(SP)+,R3	;GET BACK THE LINK
	CALLX	RDE		; AND READ IT

GLOBAL	<FIPUNT,UNTCNT,FIBFBN>

90$:	CALLX	SNE		;IS THIS FILE OPEN?
	BCS	100$		;NO, NO CHANGES TO FCB
	ADD	#F$NAM,R1	;YES, POINT TO NAME FIELD IN FCB
	MOV	FQNAM2+0(R4),(R1)+ ;SET NEW NAME
	MOV	FQNAM2+2(R4),(R1)+ ; INTO NAME FIELD
	MOV	FQNAM2+4(R4),(R1)+ ;  OF FCB
100$:	MOV	R5,R2		;COPY THE N.E. POINTER
	TST	(R2)+		;SKIP THE LINK WORD
	ADD	#FQNAM2,R4	;POINT TO THE NEW NAME.EXT<PROT>
	MOV	(R4)+,(R2)+	;SET WORD 1 OF NEW NAME
	MOV	(R4)+,(R2)+	;SET WORD 2 OF NEW NAME
	MOV	(R4)+,(R2)+	;SET NEW EXTENSION
	INC	R2		;SKIP "USTAT" BYTE
	TSTB	(R4)+		;NEW PROT SUPPLIED?
	BEQ	150$		;NO, SO LEAVE OLD PROT
	MOVB	(R4),R0		;YES, SO GET NEW PROT
	BPL	120$		;Skip priv check if not setting UP.PRV	;007
.ASSUME	UP.PRV EQ 200							;007
	BITB	#UP.RUN,R0	;Setting UP.RUN?			;007
	BEQ	110$		;No, check for SYSIO			;007
	TSTPRV	TMPPRV,@#FIPRVM	;Yes, TMPPRV?				;007
	BNE	120$		;Yes, he has carte blanche		;007
	BR	115$		;No, nuke UP.PRV			;007

110$:	TSTPRV	SYSIO,@#FIPRVM	;SYSIO?					;007
	BNE	120$		;Yes, anything goes			;007
115$:	BICB	#UP.PRV,R0	;Turn off UP.PRV bit			;007
120$:	MOVB	R0,-(SP)	;COPY NEW PROTECTION CODE TO CHECK UP.RUN ;007
	BICB	(R2),(SP)	;ALL IS OK IF OLD CODE HAD UP.RUN ON
	BITB	#UP.RUN,(SP)+	;IS HE TURNING ON UP.RUN?
	BEQ	140$		;NO, OFF IN NEW OR ALREADY ON IN OLD
	MOV	R3,R2		;YES, MUST CHECK THE RTS NAME, SAVE N.E. LINK
	CALLX	RAESV		;READ ACCOUNTING ENTRY, SAVING NAME ENTRY
	TST	URTS(R5)	;IS THERE A VALID RTS NAME?
	BNE	130$		;YES, IT CAN BE COMPILED
	BICB	#UP.RUN,R0	;NO, IT CANNOT BE COMPILED
130$:	MOV	R2,R3		;GET NAME ENTRY LINK BACK
	CALLX	RDE		; AND RE-READ IT
140$:	MOVB	R0,UPROT(R5)	;SET NEW PROT
	TST	R1		;IS THE FILE OPEN?
	BEQ	150$		;NOPE
	MOVB	R0,F$PROT-<F$NAM+6>(R1) ;YES, SET PROTECTION CODE IN FCB
150$:	MARK	FIBUF		;MARK BUFFER FOR WRITE
	RETURN			;NOW EXIT

GLOBAL	<FIUSER,FIPRVM>							;007

FQFEND

.END
