.INCLUDE /CMN:COMMON/							;013
.INCLUDE /CMN:KERNEL/							;013
.INCLUDE /CMN:FLDEF/							;013
.INCLUDE /CMN:MTDEF/							;013
TITLE	ASS,<ASSIGN/REASSIGN/DEASSIGN>,0A,13-MAY-91,ABC/SJK/SRM/DRP/WJS/GPK/KPH

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR ASS

;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-07
;  001  SRM  25-Mar-81	Add feature patch to make reassigning a device
;			a privileged function.
;  002	DRP  04-Oct-82	Remove reassigning feature patch and allow reassigning
;			of devices by non-priv. users if target job is in the
;			same account as current job.
;  003	WJS  29-Oct-82	New UUOENT for EMT Logger
;
;				[RSTS V9.0]
;  004	GPK  28-Mar-83	Multiple privileges
;  005	GPK  20-Sep-83	Add SYSMGR privilege
;  006	DRP  03-Oct-83	Table changes to UNTCNT, UNTCLU/UNTERR and 
;			UNTOWN/UNTOPT
;  007	KPH  29-Feb-84	Return current owner when doing assign/reassign/snag
;			Fix snagging assign of disks.
;			Fix privilege check for assigning disks.
;			Return errors when unable to assign a disk.
;  008	GPK  17-Apr-84	Change multi-priv names
;  009	GPK  17-Apr-85	Fix UU.DEA not to fail on restricted devices
;
;			[RSTS V9.1]
;  010  KPH  31-May-85	Bugfixes
;
;			[RSTS V9.2]
;  011  KPH  25-Jul-85	Add job control region
;
;			[RSTS V9.3]
;  012	DRP  21-Apr-86	Autosize disk units on assigns
;
;			[RSTS V9.6]
;  013  KPH  12-Oct-87	Add .INCLUDEs
;			Change device search loop for INIT-created devices
;
;			[RSTS V10.0]
;  014	DRP  19-Dec-89	Add support for QUEUED/NOQUEUED access when allocating
;			an application terminal.
;  015	DRP  06-Jan-90	Moved changes made in 014 to KBDVR.
;
;			[RSTS V10.1]
;  016	FEK  16-Apr-91	Allow Disk ownership to be transfered
;-

FQFSRT	ASS

.SBTTL	ASSIGN AND REASSIGN

;+
; ASSFQ - ASSIGN AND REASSIGN.
; UU.ASS - ASSIGN AND REASSIGN.
;
;	R0 =  Job # * 2
;	R4 -> FIRQB
;		FQNAM1 =  JOB NUMBER FOR REASSIGN
;		FQEXT  =  DOS/ANSI FOR MAGTAPE ASSIGN
;		FQMODE =  100001 FOR 'SNAGGING' (RE)ASSIGN
;			  100002 NOQUEUED access (LAT)			;015
;			  100004 QUEUED access (LAT)			;015
;			  
;		FQDEV,FQDEVN = DEVICE TO USE
;									;015
; On return:								;015
;	R4 -> FIRQB							;015
;		FQFIL   = Previous owner's job # * 2			;015
;	        FQFIL+1 = Terminal type					;015
;			  0 = Interactive				;015
;			  1 = Application				;015
;-

	FQFENT	ASS,,<FQFIL>		;ASSIGN AND REASSIGN		;007

	UUOENT	ASS,,,LOGABL,DOLOG	;ASSIGN

.ENABL	LSB

	MOV	R0,R3		;GET CALLER'S JOB NUMBER TIMES 2	;011
	CALLX	GUNOWN,R5	;Get the unit, allowing owned disks	;007
	 BR	140$		;ASSIGNMENT OF DISKS			;015
	MOVB	DDJBNO(R1),R5	;GET THE JOB NUMBER OF THE CURRENT OWNER
	MOVB	R5,FQFIL(R4)	;Return the current owner to caller	;007
	ASRB	FQFIL(R4)	;But make it times one			;007
	BEQ	10$		;NOBODY OWNS IT, SO LET'S GET IT
	CMPB	R5,R3		;ARE WE THE OWNER?
	BNE	50$		;NO, GO CHECK FOR SNAGGING ASSIGNMENT
10$:	CALLX	GETDEV		;GET THE DEVICE				;015
	CMPB	R3,DDJBNO(R1)	;DID WE REALLY GET IT (NL: CASE)?
	BNE	110$		;NO, JUST EXIT
	CALL	190$,R0		;CHECK FOR POSSIBLE REASSIGNMENT
	 BR	90$		;NO REASSIGNMENT DESIRED
	 BR	30$		;ERROR IN REASSIGNMENT JOB NUMBER
	BIT	#DDPRVO,(R1)	;IS THIS A PRIV'D OWNERSHIP DEVICE?
	BNE	15$		;YES, THEN CALLER MUST BE PRIVILEGED
	MOV	JOBTBL(R5),R2	;GET THE JDB -> OF THE TARGET JOB
	MOV	JDJDB2(R2),R2	; AND THE JDB2 -> OF THE TARGET JOB
	CMP	@#FIUSER,J2PPN(R2) ;SAME PPN?
	BEQ	20$		;YES, THEN ALLOW REASSIGNING OF THE DEVICE
15$:	TSTPRV	HWCTL,@#FIPRVM	;Privileged enough to do this?		;008
	BEQ	130$		;No, reject it				;004
20$:	TSTB	DDCNT(R1)	;CAN WE REASSIGN NOW?
	BEQ	70$		;YES, SO DO IT
	;CALLX	RETDEV		;NO, RETURN DEVICE (NEVER A RETURN HERE...)
	ERROR	INUSE		;SAY REASSIGNMENT NOT POSSIBLE NOW

30$:	CALLX	RETDEV		;(POSSIBLY) RETURN THE DEVICE
40$:	ERROR	BDNERR		;SAY "ILLEGAL NUMBER"

GLOBAL	<FIJOB,FIPRVM,FIUSER>

.DSECT			;CHECK DDB ORDERING

DDIDX:	.BLKB		;DRIVER INDEX
DDSTS:	.BLKB		;STATUS AND ACCESS CONTROL BYTE
DDJBNO:	.BLKB		;OWNER JOB NUMBER TIMES 2 (0 IF FREE)
	.BLKB		;DEVICE UNIT NUMBER
DDTIME:	.BLKW		;TIME ASSIGNED OR INITED
DDCNT:	.BLKW		;INIT COUNT AND ASSIGNMENT CONTROL

	UNORG

50$:	CMP	FQMODE(R4),#100001 ;OWNED BY ANOTHER, DO WE WANT TO SNAG IT?
	BNE	120$		;NO, IT'S NOT AVAILABLE
	TSTPRV	HWCTL,@#FIPRVM	;ARE WE PRIVILEGED TO DO IT?		;008
	BEQ	120$		;NOPE					;004
	ROR	R5		;ASSIGNED TO AN ODD JOB*2? (EG NSP)
	BCS	120$		;YES, CAN'T SNAG IT
	CMP	DDCNT(R1),#DDASN ;SIMPLY ASSIGNED (NOT OPEN OR UTILTIY)?
	BNE	120$		;IF NOT, CAN'T SNAG IT
	CALL	190$,R0		;WE CAN TAKE IT! TRY FOR REASSIGNMENT
	 BR	60$		;NO REASSIGNMENT, SO GIVE IT TO US
	 BR	40$		;ERROR IN REASSIGNMENT JOB NUMBER
	BR	70$		;REASSIGN TO SPECIFIED JOB

60$:	MOV	R3,R5		;SNAG IT AND ASSIGN IT TO CURRENT JOB
70$:	CMP	(R1)+,(R1)+	;POINT TO THE TIME
	MOV	(R1),R3		;GET TIME OF START OF OWNERSHIP
	MOV	@#TIME,(R1)	; THEN RESET THE TIME OF OWNERSHIP
	SUB	(R1)+,R3	;FIND THE ELAPSED TIME OF OWNERSHIP
	BPL	80$		;NO MIDNIGHT CORRECTION NEEDED
	ADD	#1440.,R3	; ELSE CORRECT FOR THROUGH MIDNIGHT
80$:	CLR	(R1)		;SET ACCESS CONTROL TO ZERO
	CMP	-(R1),-(R1)	;BACK UP TO JOB NUMBER
	MOV	R0,-(SP)	;Save the driver index			;011
	MOVB	(R1),R0		;Pick up the old job number		;011
	MOVB	R5,(R1)		;Set the new job number
	BIC	#DDSTAT,-(R1)	;ALWAYS CLEAR THIS STATUS BIT
	MOV	R1,-(SP)	;Save DDB pointer for device		;011
	CALLX	MAPJCR		;Map the JCR for the old owner		;011
	ADD	R3,JCDEV(R1)	;Charge the old job for his time	;011
	MOV	(SP)+,R1	;Restore DDB pointer			;011
	MOV	(SP)+,R0	;Restore handler index			;011
	MAP	FIPPOL		;And restore FIP pool mapping		;011
90$:	BIS	#DDASN,DDCNT(R1) ;SAY DEVICE IS EXPLICITLY ASSIGNED
	SUB	#MTAHND,R0	;IS IT MAGTAPE?				;015
	BNE	110$		;NO
	CMP	FQEXT(R4),#^RDOS ;DOS LABELING?
	BEQ	100$		;YES, R0=0 FROM 'SUB' ABOVE
	COM	R0		;NO, GUESS AT ANSI LABELS NOW
	CMP	FQEXT(R4),#^RANS ;GOOD GUESS?
	BNE	110$		;NO
100$:	MOVB	R0,MTLBLI+MTDDSP(R1) ;YES, SET THE DOS/ANSI INDICATOR
110$:	RETURN			;EXIT

120$:	ERROR	NOTAVL		;Device not available error

130$:	CALLX	RETDEV		;NOT PRIV'D, RETURN DEVICE (POSSIBLY)
135$:	ERROR	PRVIOL		; AND SAY ERROR				;007

GLOBAL	<FIPRVM,JOBTBL>							;004

140$:	MOVB	UNTOWN(R0),FQFIL(R4) ;Return the current owner		;007
	ASRB	FQFIL(R4)	;But make it times one			;007
	CMP	(R1),#UC.MNT	;IS UNIT MOUNTED NOW?
	BEQ	150$		;NOT NOW MOUNTED, SO GET IT IF PRIVILEGED
	BHI	120$		;NOT AT ALL MOUNTABLE (Disabled)
	CMP	(R1),#UC.PRI!UC.NFS ;IS UNIT PRIVATLY OWNED AND FREE?
	BNE	240$		;NO, SO FORGET IT			;016
	CMPB	R3,UNTOWN(R0)	;YES, BY OUR CALLER??
	BEQ	160$		;YES, WE CAN REASSIGN IT BECAUSE WE OWN IT
	CMP	FQMODE(R4),#100001 ;OWNED BY ANOTHER, IS THIS A SNAG?
	BNE	120$		;No, so tell them device is in use	;007
150$:	TSTPRV	HWCTL,@#FIPRVM	;NOT MOUNTED OR SNAGGING ASSIGN, CAN WE? ;008
	BEQ	135$		;NOT A PRAYER				;007
160$:	CALL	190$,R0		;CHECK FOR POSSIBLE REASSIGNMENT
	 BR	170$		;NO REASSIGNMENT DESIRED, JUST ASSIGN
	 BR	250$		;ERROR IN REASSIGNMENT JOB NUMBER	;016
	MOV	R5,R3		;O.K., USE THIS JOB NUMBER
170$:	CALLX	AUTOSZ		;Autosize the unit			;012
	MOV	#UC.PRI!UC.NFS,(R1) ;MOUNT DISK AS PRIVATLY OWNED
	CLR	UNTOPT(R0)	;With no options			;006
	CLR	UNTERR(R0)	; or errors				;006
	MOVB	DEVCLU(R0),UNTCLU(R0) ;SET THE DEVICE CLUSTER SIZE	;006
175$:	MOVB	R3,UNTOWN(R0)	; BY THIS JOB				;016
180$:	RETURN			;NOW EXIT

190$:	MOV	FQNAM1(R4),R5	;GET POSSIBLE REASSIGN JOB NUMBER
	BEQ	210$		;NONE, TAKE 1ST EXIT
	CMP	R5,#JOBMAX	;ONE, IS IT LEGAL?
	BHI	200$		;NO, TAKE 2ND EXIT
	ASL	R5		;LEGAL, MAKE IT TIMES 2
	TST	JOBTBL(R5)	;IS THERE A JOB??
	BEQ	200$		;NO JOB, TAKE 2ND EXIT
	TST	(R0)+		;ALL O.K., TAKE 3RD EXIT
200$:	TST	(R0)+		;TAKE 2ND EXIT
210$:	RETURN	R0		;TAKE 1ST EXIT

240$:	CMPB	R3,UNTOWN(R0)	;Mounted, and we already own it?	;016
	BNE	120$		; No, not us, so give up		;016
	BIT	#UC.CNT,UNTCNT(R0) ;Any files open?			;016
	BNE	260$		; Yes, so can't do it			;016
	CALL	190$,R0		;CHECK FOR POSSIBLE REASSIGNMENT	;016
	 BR	175$		;NO REASSIGNMENT DESIRED, JUST ASSIGN	;016
	 BR	250$		;ERROR IN REASSIGNMENT JOB NUMBER	;016
	MOV	R5,R3		;O.K., USE THIS JOB NUMBER		;016
	BR	175$		;Go change the owning job number	;016

250$:	ERROR	BDNERR		;SAY "ILLEGAL NUMBER"			;016

260$:	ERROR	DTOOOF		; Sorry, files are open			;016

.DSABL	LSB

GLOBAL	<UNTOWN,DEVCLU,UNTCLU,UNTOPT,UNTERR,FIPRVM,JOBMAX,JOBTBL>	;006
FQFEND

FQFSRT
.SBTTL	DEASSIGN A DEVICE

;+
; DEAFQ - DEASSIGN A DEVICE.
; UU.DEA - DEASSIGN A DEVICE.
;
;	R4 -> FIRQB
;		FQDEV,FQDEVN = DEVICE TO USE
;-

.ENABL	LSB

	FQFENT	DEA,,<>		;DEASSIGN A DEVICE

	UUOENT	DEA,,,LOGABL,DOLOG	;DEASSIGN A DEVICE

	CALL	GUNDEA,R5	;GET THE UNIT				;009
	 BR	20$		;DISK DEASSIGNMENT
	BCS	70$		;NOT NOW ASSIGNED IS A NOP
10$:	BIC	#DDASN,DDCNT(R1) ;CLEAR THE ASSIGNMENT BIT
	CALLRX	RETDEV		;NOW RETURN THE DEVICE AND EXIT		;015

20$:	MOV	UNTCNT(R0),R2	;GET UNIT'S STATUS
	BIC	#UC.CNT,R2	;REMOVE THE OPEN COUNT
	CMP	R2,#UC.PRI!UC.NFS ;IS IT MOUNTED NFS & PRIVATE?
	BNE	70$		;NOPE, NOT ASSIGNED, FORGET IT
	CMPB	UNTOWN(R0),@#FIJOB ;IS THIS THE OWNER?
	BNE	70$		;NOPE, FORGET IT
	BIC	#UC.PRI,UNTCNT(R0) ;YEP, NO LONGER "PRIVATE"
	CMP	UNTCNT(R0),#UC.NFS ;IS THE UNIT FREE NOW?
	BNE	70$		;NO, STILL IN USE
	MOV	R0,R1		;YES, COPY UNIT TIMES 2 TO HERE
	CALLRX	ZAPUNT		; AND EXIT ZAPPING THE UNIT

GLOBAL	<UNTCNT,UNTOWN,FIJOB>

.SBTTL	DEASSIGN ALL DEVICES

;+
; DALFQ - DEASSIGN ALL DEVICES.
; UU.DAL - DEASSIGN ALL DEVICES.
;-

	FQFENT	DAL,,<>		;DEASSIGN ALL DEVICES

	UUOENT	DAL,,,LOGABL,DOLOG	;DEASSIGN ALL COMES HERE

	MOV	R4,-(SP)	;Get a work register			;013
	MOV	#DEVPTR+DEVOKB,R3 ;Point to DDB pointer table at keyboards ;013
30$:	MOV	<DEVCNT-DEVPTR>(R3),R4 ;Get max unit # of this device type ;013
	INC	R4		;Now get the actual count		;013
	MOV	(R3)+,R5	;Get pointer table for this device type	;013
40$:	MOV	(R5)+,R1	;Get a device DDB			;013
	CMPB	@#FIJOB,DDJBNO(R1) ;IS IT OWNED BY THE CALLING JOB?
	BNE	50$		;NO
	CALL	10$		;YES, SO DEASSIGN IT
50$:	SOB	R4,40$		;Loop for all units of this type	;013
	CMP	R3,#DEVPTE	;The end?				;013
	BLO	30$		;If not, then loop 			;013
	CLR	R0		;NOW START AT DISK UNIT 0
60$:	CALL	20$		;CHECK FOR DEASSIGNMENT
	TST	(R0)+		;ADVANCE TO NEXT UNIT NUMBER                
	CMP	R0,#MAXUN2	;MORE?
	BLOS	60$		;YES, LOOP
	MOV	(SP)+,R4	;Restore work register			;013
70$:	RETURN			;EXIT
                                                                            
.DSABL	LSB

GLOBAL	<DEVPTR,DEVOKB,DEVCNT,FIJOB,DEVPTE,MAXUN2>			;013

;+
; GUNDEA - Get unit for Deassign operation
;                                                                        
;	R4 -> FIRQB
;		FQDEV, FQDEVN = DEVICE NAME/UNIT
;
;	CALL	GUNDEA,R5
;
;	FIRST EXIT MEANS DISKS
;
;	R0 =  UNIT TIMES 2
;	R1 -> UNIT COUNT LIST ENTRY
;	R2 =  RANDOM
;	FIPUNT = UNIT
;	FIPGEN = -1 IF NO UNIT (GENERAL) ELSE 0 (SPECIFIC UNIT)
;
;	SECOND EXIT MEANS NON-DISK
;
;	R0 =  HANDLER INDEX
;	R1 -> DDB
;	R2 =  RANDOM
;	FIPUNT = UNIT
;	FIPGEN = -1 IF NO UNIT (GENERAL) ELSE 0 (SPECIFIC UNIT)
;
;	IF C=0 THEN DEVICE IS OWNED
;	IF C=1 THEN DEVICE IS NOT OWNED
;-

GUNDEA:	CLRB	@#FIPGEN	;CLEAR FIPGEN (SPECIFIC)		;010
	CALLX	GUNSUB,R5	;SORT OUT NAME AND UNIT			;009
	 ERROR	NODEVC		;NO SUCH DEVICE ERROR			;009
	BEQ	50$		;NO UNIT NUMBER WAS SPECIFIED		;009
20$:	ASL	R2		;GET UNIT TIMES 2			;009
	ADD	DEVPTR(R0),R2	;FORM POINTER TO DDB TABLE		;009
	CMP	R0,#DEVOKB	;DID WE FIND A DISK??			;009
	BGE	60$		;NOPE					;009
30$:	MOV	R2,R1		;YES, SO COPY ACCESS COUNTER POINTER	;009
	SUB	#UNTCNT,R2	; AND FIND THE FIP UNIT NUMBER (TIMES 2) ;009
	MOV	R2,R0		;SET TO RETURN UNIT TIMES 2		;009
	ASR	R2		;NOW MAKE INTO FIP UNIT NUMBER		;009
	MOVB	R2,@#FIPUNT	; AND SAVE THE FIP UNIT NUMBER		;010
	RETURN	R5		; Done					;009
									;009
50$:	COMB	@#FIPGEN	;INDICATE GENERAL DEVICE (NO UNIT)	;010
	CMP	R0,#DEVOKB	;IS THE DEVICE KB:??			;009
	BNE	20$		;NOPE					;009
	MOV	@#FIJBDA,R2	;Yes, get JDB pointer			;009
	MOV	(R2),R2		; and get channel #0 IOB entry pointer	;009
60$:	ADD	#2,R5		;Take second exit			;009
	MOV	(R2),R1		;GET THE REAL DDB ADDRESS		;009
	MOVB	DDUNT(R1),@#FIPUNT ;SET THE UNIT NUMBER			;010
	MOVB	(R1),R0		;GET THE DRIVER INDEX FROM DDB		;009
	MOVB	$FLGTBL(R0),R0	;NOW RETURN THE HANDLER INDEX		;009
	CMPB	DDJBNO(R1),@#FIJOB ;DOES THE USER OWN THIS DDB??	;010
	BEQ	80$		;YES, SO EXIT (C=0)			;009
	SEC			;INDICATE USER NOT OWNER		;009
80$:	RETURN	R5		;NOW EXIT				;009

GLOBAL	<FIPGEN,DEVPTR,DEVOKB,UNTCNT,FIPUNT,FIJBDA>			;009
GLOBAL	<$FLGTBL,FIJOB>							;009

FQFEND

.END

