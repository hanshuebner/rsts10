TITLE	INPUTX,<INPUT ONE LINE FROM CONSOLE TERMINAL>,0A,10-MAY-91,SJK

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

;+
; INPUTX - INPUT ONE LINE FROM THE CONSOLE TERMINAL
;
;	CALLX	INPUTX,R5,<BUFSIZ-1,BUFFER>
;
;	R5 -> BUFFER
;
;	C = 1  AND V = 1 (FAILURE)
;	IF AN ERROR WAS DETECTED (SUCH AS ^Z) WHILE INPUTING THE V-BIT
;	WILL BE SET, ALL CHARACTERS FETCHED WILL BE IN THE BUFFER. THE
;	ERROR CONDITION TERMINATES THE INPUT.
;
;	C = 1  AND V = 0   (FAILURE)
;	STRING MADE ASCIZ. STRING IS IN BUFFER, BUT DURING THE INPUT
;	IT WAS DETERMINED THAT THE STRING WOULD OVERFLOW THE BUFFER
;	THEREFORE ONLY THE FIRST BUFSIZ-1 BYTES ARE IN THE BUFFER.
;	THE REST ARE LOST
;
;	C = 0  AND V = 0   (SUCCESS)
;	STRING READ FROM CONSOLE TERMINAL, TERMINATED WITH LF, ESC, OR FF
;	STRING MADE ASCIZ, BUT DELIMITER NOT STRIPPED
;-

SEVC	=	SEC!SEV		; INSTRUCTION TO SET C AND V BITS

.CSECT

.MCALL	.TTYIN

INPUTX::MOV	R0,-(SP)	; SAVE R0
	MOV	R1,-(SP)	; SAVE R1
	MOV	(R5)+,R1	; R1 =  BUFSIZ
	MOV	R5,-(SP)	; SAVE R5
	MOV	(R5),R5		; R5 -> BUFFER

10$:	CALLX	$TTYIN		; GET CHARACTER
	BCS	70$		;  AN ERROR OCCURRED ON THE READ
	CMPB	R0,#33		; IS IT AN ESC?
	BEQ	40$		; YES
	CMPB	R0,#12		; IS IT A LINE FEED?
	BEQ	40$		; YES
	CMPB	R0,#14		; IS IT A FORM FEED?
	BEQ	40$		; YES
	.BR	30$		; NO

30$:	TST	R1		; ARE WE IN OVERFLOW MODE?
	BEQ	10$		; YES, SO WE ARE JUST WAITING FOR A TERMINATOR
	MOVB	R0,(R5)+	; SET IN THE BYTE
	DEC	R1		; DECREMENT THE BUFFER SIZE LEFT
	BNE	10$		;  AND GET NEXT BYTE IF NO OVERFLOW IN SIGHT
	CLRB	-(R5)		; OVERFLOW! CLEAR LAST BYTE
	BR	10$		;  AND CONTINUE IN LOOP

40$:	TST	R1		; IS THERE AN OVERFLOW?
	BEQ	50$		; YES
	MOVB	R0,(R5)+	; NO, SAVE THE TERMINATOR
	CLRB	(R5)		; MAKE THE STRING ASCIZ
	;CLC			; ACCOMPLISHED BY THE CLRB
	BR	60$		;  AND EXIT NORMALLY

50$:	SEC			; SAVE AN ERROR OCCURED
60$:	MOV	(SP)+,R5	; RESTORE R5
	MOV	(SP)+,R1	; RESTORE R1
	MOV	(SP)+,R0	; RESTORE R0
	MOV	(R5)+,(SP)	; RETURN R5 -> BUFFER
	RETURN	R5

70$:	TST	R1		; ARE WE IN OVER FLOW MODE?
	BEQ	80$		; YES
	MOVB	R0,(R5)+	; NO, SAVE THE TERMINATING BYTE (GARBAGE)
	CLRB	(R5)		; MAKE THE STRING ASCIZ, IN CASE HE WANTS IT
80$:	MOV	(SP)+,R5	; RESTORE R5
	MOV	(SP)+,R1	; RESTORE R1
	MOV	(SP)+,R0	; RESTORE R0
	MOV	(R5)+,(SP)	; RETURN R5 -> BUFFER
	SEVC			; SET THE V-BIT AND C-BITS
	RETURN	R5		;  AND RETURN

.END

