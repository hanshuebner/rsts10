1	SUB UJOB							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UJOB					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT,BGN					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UJOB						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! V9.1-04	09-Jul-85	(JJT) Add defaults to /PRIORITY	      &
	!				       and /RUNBURST		      &
	! V9.2-03	12-Dec-85	(JJT) Trap for nonexistant jobs	      &
	! V9.2-03	12-Dec-85	(JJT) Change error message	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &


910	DIM	FIRQB%(30%)			!SYScall array		      &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

2000	JOB.NO% = ASCII(SYS(CHR$(6%)+CHR$(26%)))/2%	!GET OUR JOB NUMBER   &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


4500	!SET JOB							      &
									      &
	USER.RTS$ = ""				!INIT THE RTS NAME	      &
\	CALL FET$P BY REF (JOB.T%)		!GET JOB NUMBER		      &
\	IF NOT U.PRES% THEN			!IF NOT PRESENT		      &
		JOB.NUM% = JOB.NO%		!  DEFAULT TO OUR JOB	      &
\		JOB.POS% = 0%			!  ZERO THE POSITION	      &
	ELSE								      &
		JOB.NUM% = U.LOW%		!  GET THE NUMBER	      &
\		JOB.POS% = U.POS%		!  SAVE THE POSITION	      &
\	END IF								      &
\	CALL FET$CQ BY REF (KBM.Q%)		!/KEYBOARD_MONITOR SPECIFIED? &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF JOB.NUM% <> JOB.NO% THEN	!  IF NOT OUR JOB NUMBER      &
			CALL DISPLY ("?Only current job allowed")	      &
\			SUBEXIT						      &
\		END IF							      &
\		CALL FET$A BY REF		!  GET THE RTS NAME	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			USER.RTS$ = SEG$(U.STR$,1%,U.LEN%) !EXTRACT IT	      &
\			USER.RTS$ = EDIT$(USER.RTS$,-2%)   !CLEAN IT UP	      &
\		END IF							      &
\		CALL USWTCH (USER.RTS$)		!  GO CHECK IT OUT	      &
\	END IF								      &
									      &
\	CALL FET$CQ BY REF (PRV.Q%)		!/PRIVILEGES SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF JOB.NUM% <> JOB.NO% THEN	!  IF NOT OUR JOB NUMBER      &
			CALL DISPLY ("?Only current job allowed")	      &
\			SUBEXIT						      &
\		END IF							      &
\		CALL USPRIV			!GO SET THE PRIVILEGES	      &
\	END IF								      &
									      &
\	PRIV.NEED$ = "TUNE"			!WE COULD NEED TUNE PRIV      &
\	TUNE.PRIV% = (ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+	      &
			STRING$(3%,0%)+PRIV.NEED$),3%,3%)) = 0%)	      &
						!SEE IF WE HAVE IT	      &
\	QUAL.POS% = 0%				!CLEAR THE POS OF QUALIFIER   &
\	QUALIFIER.FOUND% = 0%			!DEFAULT TO NOQUALIFIERS FOUND &
									      &
\	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYSCALL TO FIP		      &
\	FIRQB%(2%) = -13%			!SUBFUNCTION CODE	      &
\	FIRQB%(3%) = JOB.NUM%			!PUT IN JOB NUMBER	      &
									      &
\	CALL FET$CQ BY REF (HLD.Q%)		!/HOLD SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF NOT(TUNE.PRIV%) THEN		!   IF NO TUNE PRIV	      &
			CALL DISPLY ("?"+PRIV.NEED$ + " privilege required")  &
\			SUBEXIT			!  SAY SO AND EXIT	      &
\		END IF							      &
\		IF JOB.NUM%<>JOB.NO% THEN	!DON'T ALLOW HOLD OF CUR JOB  &
			FIRQB%(4%) = 255%	!CHANGE PRIORITY	      &
\			FIRQB%(5%) = -128%	!CHANGE IT TO -128	      &
\			QUALIFIER.FOUND% = -1%	!FLAG WE FOUND A QUALIFIER    &
		ELSE							      &
			U.POS% = JOB.POS%	!RESTORE THE POINTER	      &
\			CALL DISPLY("?Own job number not allowed")	      &
\			SUBEXIT						      &
\		END IF							      &
\	END IF								      &
									      &
\	CALL FET$CQ BY REF (REL.Q%)		!/RELEASE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(4%) = 255%		!  CHANGE PRIORITY	      &
\		FIRQB%(5%) = -8%		!  CHANGE IT TO -8	      &
\		QUALIFIER.FOUND% = -1%		!  FLAG WE FOUND A QUALIFIER  &
\		QUAL.POS% = U.POS% UNLESS QUAL.POS% ! SAVE THE POS OF THE QUAL &
\	END IF								      &
									      &
\	CALL FET$CQ BY REF (PRI.Q%)		!/PRIORITY SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		QUAL.POS% = U.POS% UNLESS QUAL.POS% ! SAVE THE POS OF THE QUAL &
\		CALL FET$A BY REF		!  GET THE ARGUMENT	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			Z% = U.LOW%		!    GET THE NUMBER	      &
		ELSE				!  IF NOT PRESENT	      &
			Z% = -8%		!    SET IT TO THE DEFAULT    &
\		END IF							      &
\		FIRQB%(4%) = 255%		!  CHANGE PRIORITY	      &
\		FIRQB%(5%) = Z%			!  CHANGE IT TO Z%	      &
\		QUALIFIER.FOUND% = -1%		!  FLAG WE FOUND A QUALIFIER  &
\	END IF								      &
\	CALL FET$CQ BY REF (RUN.Q%)		!/RUN_BURST SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		QUAL.POS% = U.POS% UNLESS QUAL.POS% ! SAVE THE POS OF THE QUAL &
\		CALL FET$A BY REF		!  GET THE ARGUMENT	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			Z% = U.LOW%		!    GET THE NUMBER	      &
		ELSE				!  IF NOT PRESENT	      &
			Z% = 6%			!    SET IT TO THE DEFAULT    &
\		END IF							      &
\		FIRQB%(6%) = 255%		!  CHANGE RUN_BURST	      &
\		FIRQB%(7%) = Z%			!  CHANGE IT TO Z%	      &
\		QUALIFIER.FOUND% = -1%		!  FLAG WE FOUND A QUALIFIER  &
\	END IF								      &
\	CALL FET$CQ BY REF (SIZ.Q%)		!/SIZE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		QUAL.POS% = U.POS% UNLESS QUAL.POS% ! SAVE THE POS OF THE QUAL &
\		CALL FET$A BY REF		!  GET THE ARGUMENT	      &
\		Z% = U.LOW%			!  GET THE NUMBER	      &
\		FIRQB%(8%) = 255%		!  CHANGE SIZE		      &
\		FIRQB%(9%) = Z%			!  CHANGE IT TO Z%	      &
\		QUALIFIER.FOUND% = -1%		!  FLAG WE FOUND A QUALIFIER  &
\	END IF								      &
									      &
\	IF QUALIFIER.FOUND% THEN		!IF WE FOUND A QUALIFIER      &
		IF NOT(TUNE.PRIV%) THEN		!   IF NO TUNE PRIV	      &
			U.POS% = QUAL.POS%	!     RESTORE THE POSITION    &
\			CALL DISPLY ("?"+PRIV.NEED$ + " privilege required")  &
\			SUBEXIT			!  PRINT ERROR AND EXIT	      &
\		END IF							      &
\		CHANGE FIRQB% TO FIRQB$		!  GET ARRAY AS STRING	      &
\		ON ERROR GOTO 4550		!  SET LOCAL ERROR TRAP	      &
\		V$ = SYS(FIRQB$)		!  DO THE SYSCALL	      &
\		ON ERROR GOTO 19000		!  RESET THE ERROR TRAP	      &
\	END IF								      &
									      &
\	IF LEN(USER.RTS$) > 0% THEN		!IF THERE IS A KBM	      &
		V$ = SYS(CHR$(9%)+USER.RTS$)	!  SWITCH INTO IT	      &
\	END IF								      &

4510	SUBEXIT 				!GO GET THE NEXT COMMAND      &

4550	GOTO 19000				!USE STANDARD ERROR TRAP      &
		IF ERR <> 18%			! IF NOT ?Illegal SYS() usage &
\	U.POS% = JOB.POS%			!RESTORE THE POINTER	      &
\	CALL DISPLY ("?Job does not exist")	!PRINT THE ERROR MESSAGE      &
\	RESUME 4510				! AND EXIT		      &

									      &
									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
