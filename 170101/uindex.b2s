1	SUB UINDEX							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UINDEX					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UINDEX						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &
									      &


910	DIM	FIRQB%(30%),			!SYScall array		      &
		FIRQ2%(30%)			!Second SYScall array	      &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


5400	!LOAD/INDEX							      &
	!UNLOAD/INDEX							      &
									      &
	PRIV.NEED$ = "SWCTL"			!WE NEED SWCTL PRIV	      &
\	IF ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !IF WE DON'T HAVE      &
		STRING$(3%,0%)+PRIV.NEED$),3%,3%)) THEN !THE RIGHT PRIV	      &
		PRINT "?"+PRIV.NEED$ + " privilege required" !PRINT ERROR MSG &
\		SUBEXIT				! AND EXIT		      &
\	END IF								      &
\	CALL FET$P BY REF (DEV.T%)		!GET THE DEVICE		      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		Z$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT IT		      &
	ELSE					!IF NOT PRESENT		      &
		Z$ = "_SY0:"			!  DEFAULT TO THE SYSTEM DISK &
\	END IF								      &
\	Z$ = Z$ + ":" UNLESS POS(Z$,":",1%)	!ADD A COLON IF NEEDED	      &
\	CHANGE FSS$(Z$,1%) TO FIRQB%		!DO THE FILENAME STRING SCAN  &
\	IF (STATUS AND 255%) <> 0% THEN		!IF DEVICE IS NOT A DISK      &
		CALL DISPLY ("?Device is not a disk") !SAY SO		      &
\		SUBEXIT							      &
\	END IF								      &
\	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYS CALL TO FIP	      &
\	FIRQB%(2%) = 3%				!DISK PACK STATUS SUBFUNCTION &
\	FIRQB%(3%) = 8% IF U.CMDC% = LIX.K%	!LOAD/INDEX		      &
\	FIRQB%(3%) = 10% IF U.CMDC% = UIX.K%	!UNLOAD/INDEX		      &
\	FIRQB%(I%) = 0% FOR I% = 4% TO 22%	!CLEAR UNNEEDED BYTES	      &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE THE ARRAY TO A STRING &
\	ON ERROR GOTO 6050			!SET LOCAL ERROR TRAP	      &
\	CHANGE SYS(FIRQB$) TO FIRQB%		!DO THE SYS CALL	      &
\	ON ERROR GOTO 19000			!RESET THE STANDARD ERROR TRAP &
\	IF U.CMDC% = LIX.K% THEN		!IF LOAD/INDEX		      &
		PRINT USING "##.##",(FIRQB%(13%)+SWAP%(FIRQB%(14%)))/2048.;   &
\		PRINT "K used to load the index"!  PRINT AMOUNT OF MEMORY USED &
	ELSE					!IF UNLOAD/INDEX	      &
		PRINT "Index unloaded"		!  SAY SO		      &
\	END IF								      &
\	SUBEXIT					!EXIT			      &

6050		IF ERR = 7% THEN		!?I/O channel already open    &
			CALL DISPLY ("?Index already loaded") !PRINT ERROR    &
	ELSE	IF ERR = 9% THEN		!?I/O channel not open	      &
			CALL DISPLY ("?Index was not loaded")!PRINT ERROR     &
	ELSE	IF ERR = 14% THEN		!?Device hung or write locked &
			CALL DISPLY ("?Disk is write locked")!PRINT ERROR     &
	ELSE	IF ERR = 32% THEN		!?No buffer space available   &
			CALL DISPLY ("?No room in XBUF to load the index")    &
	ELSE	GOTO 19000			!?UNKNOWN ERROR		      &

6060	RESUME 32767				!EXIT			      &

									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
