1	SUB UULOG							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UULOG					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT,SEL					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UULOG						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	! V9.7-01	21-Sep-88	(JJT) Remove default of SY:	      &
	! V10.0-01	07-Jul-89	(SEL) Print to OUT.CHN% (/OUTPUT)     &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &

760	MAP	(LOGICL)			!User Logicals buffer	      &
			BYTE PROG,		!Assigned Programmer Number   &
			BYTE PROJ,		!Assigned Project Number      &
			BYTE PROT.FLAG,		!Protection Code Flag	      &
			BYTE PROT,		!Protection Code	      &
			WORD LOG.ARRAY(3%,3%)	!Array of the Logical Names   &
									      &


910	DIM	FIRQB%(30%)			!SYScall array		      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


6800	!SHOW LOGICAL							      &
									      &
	ALL% = 0%				!DEFAULT FLAG TO NO /ALL      &
\	CALL FET$CQ BY REF (ALL.Q%)		!/ALL SPECIFIED?	      &
\	ALL% = -1% IF U.PRES%			!SET THE FLAG IF PRESENT      &
\	CALL FET$P BY REF (LOG.T%)		!GET THE LOGICAL TO LIST      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		Z$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT IT		      &
\		Z$ = EDIT$(Z$,-2%)		!  REMOVE ALL JUNK	      &
\		Z$ = SEG$(Z$,1%,LEN(Z$)-1%)	!  REMOVE THE COLON	      &
		  IF SEG$(Z$,LEN(Z$),LEN(Z$)) = ":"! IF THERE IS ONE	      &
\		ALL% = 0%			!  CLEAR THE /ALL FLAG	      &
\	END IF								      &
\	FOUND% = 0%				!INIT FLAG TO NONE FOUND      &
\	CALL GETLOG				!GET THE USER LOGICALS	      &
\ USERLOG_LOOP:								      &
	FOR I% = 0% TO 3%			!FOR THE 4 USER LOGICALS      &
\		ITERATE USERLOG_LOOP IF LOG.ARRAY(I%,0%) = 0% !CONTINUE IF    &
						!	NO LOGICAL HERE	      &
\		EXIT USERLOG_LOOP IF LOG.ARRAY(I%,0%) = -1% AND I% = 3%	      &
						!  EXIT IF IN BLOCK OF PPN'S  &
\		M$ = RAD$(LOG.ARRAY(I%,0%)) +	!  GET THE LOGICAL	      &
		     RAD$(LOG.ARRAY(I%,1%))	!   NAME		      &
\		ITERATE USERLOG_LOOP IF SEG$(M$,1%,LEN(Z$)) <> Z$ IF NOT ALL% &
						!  GET NEXT LOGICAL IF NO     &
						!  MATCH AND WE DON'T WANT ALL &
\		PRINT #OUT.CHN%, M$; TAB(8%); "= ";	!  PRINT THE LOGICAL NAME &
\		DEV$ = CHR$(LOG.ARRAY(I%,2%)) +	!  GET DEVICE		      &
			CHR$(SWAP%(LOG.ARRAY(I%,2%))) !NAME		      &
\		IF EDIT$(DEV$,-2%) <> "" THEN	! IF A DEVICE IS THERE	      &
			PRINT #OUT.CHN%, DEV$;		!  PRINT THE DEVICE NAME &
\			PRINT #OUT.CHN%, NUM1$(LOG.ARRAY(I%,3%) AND 255%); !PRINT UNIT # &
			IF (SWAP%(LOG.ARRAY(I%,3%)) AND 255%) = 255% !IF VALID &
\			PRINT #OUT.CHN%, ":";		!  PRINT COLON FOR THE DEVICE &
\		END IF							      &
\		PRINT #OUT.CHN%, "[";NUM1$(SWAP%(LOG.ARRAY(3%,I%+1%)) AND 255%);","; &
			NUM1$(LOG.ARRAY(3%,I%+1%) AND 255%);"]"; ! PRINT PPN  &
			IF LOG.ARRAY(3%,0%) = -1% AND ! IF THERE ARE PPN'S AND &
			   LOG.ARRAY(3%,I%+1%) <> 0%  !  THIS PPN IS VALID AND &
			   IF I% < 3%		      !  NOT IN PPN BLOCK     &
\		PRINT #OUT.CHN%			!  BRING THE CURSOR BACK      &
\		FOUND% = -1%			!  FLAG THAT WE FOUND ONE     &
\	NEXT I%								      &
\	IF FOUND% = 0% THEN			!IF NO MATCHES FOUND	      &
		IF ALL% = 0% THEN		!  IF WE WANTED A MATCH	      &
			CALL DISPLY ("?User Logical not found")		      &
\			SUBEXIT		!    PRINT ERROR AND GO BACK	      &
		ELSE				!IF WE WANTED ALL & NONE FOUND &
			PRINT "%No User Logicals assigned" !PRINT ERROR	      &
\			SUBEXIT		!	     AND GO BACK	      &
\		END IF							      &
\	END IF								      &
\	SUBEXIT								      &

									      &
									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
