1	SUB USCMND							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : USCMND					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT,BGN,SEL				      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL USCMND						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! 10.0-01	13-Jul-89	(SEL) Print to OUT.CHN% (/OUTPUT)     &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &


910	DIM	FIRQB%(30%)			!SYScall array		      &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


5700	!SHOW COMMAND/SYSTEM						      &
									      &
	PRIV.NEED$ = "INSTAL"			!WE COULD USE INSTAL PRIV     &
\	PRIV% = (ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !FLAG IF WE DON'T &
		STRING$(3%,0%)+PRIV.NEED$),3%,3%))) = 0%    !HAVE THE PRIV    &
\	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(0%))	!GET RDMEM PRIV		      &
\	ALL% = 0%				!DEFAULT FLAG TO NOT ALL      &
\	CALL FET$CQ BY REF (ALL.Q%)		!/ALL SPECIFIED?	      &
\	ALL% = -1% IF U.PRES%			!SET THE FLAG IF PRESENT      &
\	CALL FET$P BY REF (KEY.T%)		!GET THE COMMAND TO LIST      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		Z$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT IT		      &
\		Z$ = EDIT$(Z$,-2%)		!  REMOVE ALL JUNK	      &
\		S% = POS(Z$,"-",1%)		!  LOOK FOR POSSIBLE "-"      &
\		S% = POS(Z$,"*",1%) IF S% = 0%	!  LOOK FOR POSSIBLE "*"      &
\		IF S% THEN			!  IF FOUND		      &
		       Z$ = SEG$(Z$,1%,S%-1%)+SEG$(Z$,S%+1%,LEN(Z$))!REMOVE IT &
\		END IF							      &
\		ALL% = 0%			!CLEAR THE /ALL FLAG	      &
\	END IF								      &
\	FOUND% = 0%				!INIT FLAG TO NONE FOUND      &
\	CHANGE SYS(CHR$(6%)+CHR$(-12%)) TO FIRQB%! GET MONITOR TABLES PART II &
\	D% = FIRQB%(27%) + SWAP%(FIRQB%(28%))	!GET THE BASE TO THE COMMANDS &
\	IF D% <> 0% THEN			!IF THERE IS A BASE	      &
		V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(0%)) !REGAIN TEMP PRIVS     &
\		IF PEEK(D%) = 0% THEN		!  IF NO COMMANDS	      &
			PRINT "%No Commands defined" ! PRINT MESSAGE	      &
\			V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%)) !DROP PRIVS  &
\			SUBEXIT		!	 AND GO BACK		      &
\		END IF							      &
\		V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%)) !DROP PRIVS	      &
	ELSE					!NO BASE TO THE COMMANDS      &
		PRINT "%No Commands defined"	!  PRINT MESSAGE	      &
\		SUBEXIT			!  AND GO BACK			      &
\	END IF								      &
\	WHILELOOP:							      &
	WHILE D% <> 0%				!LOOP WHILE THERE ARE COMMANDS &
\		GOSUB 11500			!  GET THE NEXT COMMAND	      &
\		EXIT WHILELOOP UNLESS D%	!  EXIT LOOP UNLESS	      &
						!    THERE IS A COMMAND	      &
\		IF NOT ALL% THEN		!  IF WE DON'T WANT ALL	      &
			m$=""			!    INIT MATCH VARIABLE      &
\			m$=m$+CHR$(FIRQB%(i%)) FOR i%=13% TO 21% !FORM KEYWORD &
\			ITERATE WHILELOOP UNLESS SEG$(m$,1%,LEN(z$))=z$	      &
						!	GET NEXT COMMAND      &
						!	UNLESS WE HAVE A MATCH &
\		END IF							      &
\		Q% = 13%			!  SET UP TO CALCULATE	      &
						!    POINT OF UNIQUENESS      &
\		INNERLOOP:						      &
		WHILE 1% = 1%			!  LOOP FOREVER		      &
\			PRINT #OUT.CHN%, "-"; IF Q%=FIRQB%(4%)+13%!PRINT "-" UNIQUENESS &
						!	CHARACTER IF THERE    &
\			EXIT INNERLOOP IF (FIRQB%(Q%) AND 255%) = 0% OR	      &
					  (FIRQB%(Q%) AND 255%) = 255%	      &
						!	EXIT IF DONE	      &
\			PRINT #OUT.CHN%, CHR$(FIRQB%(Q%));	!PRINT OUT THIS CHAR &
\			Q% = Q% + 1%		!	INCREMENT POINTER     &
\		NEXT				!  NEXT CHARACTER	      &
\		FOUND% = -1%			!  FLAG THAT WE FOUND ONE     &
\		IF NOT (PRIV%) THEN		!  IF NO INSTAL PRIV	      &
			PRINT #OUT.CHN%,		!    END THIS OUTPUT LINE &
\			ITERATE WHILELOOP	!    GET NEXT COMMAND	      &
\		END IF							      &
\		PRINT #OUT.CHN%, TAB(11%); "= ";	!  TAB TO COLUMN 11, PRINT = &
\		IF FIRQB%(23%)<>0% THEN		!  IF THERE IS A DEVICE	      &
			PRINT #OUT.CHN%, " "; IF FIRQB%(26%) = 0% !PAD A SPACE IF NO UNIT &
\			PRINT #OUT.CHN%, CHR$(FIRQB%(23%))+CHR$(FIRQB%(24%)); !PRINT NAME &
\			PRINT #OUT.CHN%, NUM1$(FIRQB%(25%) AND 255%); IF FIRQB%(26%)<>0% &
						!    PRINT UNIT # IF IT EXISTS &
\			PRINT #OUT.CHN%, ":";		!    PRINT A COLON    &
		ELSE				!  IF NO DEVICE SPECIFIED     &
			PRINT #OUT.CHN%, " SY:";		!    PRINT THE SYSTEM DISK &
\		END IF							      &
\		IF FIRQB%(5%) <> 0% THEN	!  IF THERE IS A PPN	      &
			P$ = NUM1$(FIRQB%(6%))	!    GET THE PROJECT NUMBER   &
\			PRINT #OUT.CHN%, "[";SPACE$(3%-LEN(P$));P$;!PAD THE # TO 3 CHAR &
\			P$ = NUM1$(FIRQB%(5%) AND 255%)!GET THE PROG NUMBER   &
\			PRINT #OUT.CHN%, ",";P$;SPACE$(3%-LEN(P$));"]";!PADDED TO 3 CHAR &
\		END IF							      &
\		PRINT #OUT.CHN%, TAB(26%);RAD$(FIRQB%(7%))+RAD$(FIRQB%(9%))+"."; &
						!  PRINT FILENAME	      &
\		IF FIRQB%(11%) <> -1% THEN	!  IF A NON-WILDCARD FILETYPE &
			PRINT #OUT.CHN%, RAD$(FIRQB%(11%));!PRINT FILETYPE    &
		ELSE	PRINT #OUT.CHN%, "*";		!PRINT THE WILDCARD   &
\		END IF							      &
\		PRINT #OUT.CHN%, TAB(37%);		!  TAB TO COLUMN 37   &
\		PRINT #OUT.CHN%, "/LINE=";FNCVT.LINE$(FIRQB%(29%) AND 32767%);!PRINT LINE &
\		PRINT #OUT.CHN%, TAB(48%);"/PRIVILEGE" IF FIRQB%(29%)<0%      &
						!  PRINT /PRIV IF IT IS	      &
\		PRINT #OUT.CHN%, IF CCPOS(OUT.CHN%)	!  RETURN THE CURSOR IF NEEDED &
\	NEXT								      &
\	IF FOUND% = 0% THEN			!IF NO MATCHES FOUND	      &
		CALL DISPLY ("?Command not found")			      &
\		SUBEXIT			!    PRINT ERROR & GO BACK	      &
\	END IF								      &
\									      &
	SUBEXIT								      &

									      &
									      &

11500	!								      &
	!	GET THE NEXT SYSTEM-WIDE COMMAND			      &
	!								      &
	!RETURNS:							      &
	!	D% =  0% - NO MORE COMMANDS				      &
	!	D% <> 0% - THERE IS A COMMAND				      &
	!								      &
	!	FIRQB%() - SET UP WITH THE DATA				      &
	!								      &
	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(0%))	!REGAIN TEMP PRIVS	      &
\	D% = PEEK(D%)				!GET NEXT COMMAND	      &
\	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%))!DROP PRIVS		      &
\	RETURN UNLESS D%			!EXIT UNLESS THERE'S A COMMAND &
\	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(0%))	!REGAIN TEMP PRIVS	      &
\	FIRQB%(I%) = PEEK(D%+I%+1%) FOR I% = 1% TO 29% STEP 2%		      &
						!  SET UP THE TABLE FOR	      &
\	FIRQB%(I%) = SWAP%(FIRQB%(I%-1%)) AND 255% !BYTE REFERENCES	      &
				FOR I% = 2% TO 30% STEP 2%		      &
\	FIRQB%(I%) = FIRQB%(I%) AND 255% FOR I% = 1% TO 29% STEP 2%	      &
\	FIRQB%(4%) = PEEK(D%+28%)-D%-14%	!SET UNIQUENESS POINTER	      &
\	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%))!DROP PRIVS		      &
\	FIRQB%(I%) = FIRQB%(I%)+SWAP%(FIRQB%(I%+1%))			      &
				FOR I% = 1% TO 29% STEP 2%		      &
						!RESET WORD REFERENCES	      &
\	RETURN					!GO BACK		      &

									      &
									      &

15000	!								      &
	!	F U N C T I O N S					      &
	!								      &

15010	DEF FNCVT.LINE$(Q%)						      &
	!								      &
	! FUNCTION:	FNCVT.LINE$	RETURN LINE NUMBER KEYWORD OF	      &
	!				LINE NUMBER Q%			      &
	! INPUT:			LINE NUMBER			      &
	! RETURNS:			1) CCL IF LINE NUMBER = 30000	      &
	!				2) DCL IF LINE NUMBER = 30500	      &
	!				3) CHAIN IF LINE NUMBER = 31000	      &
	!				4) LINE NUMBER IF NO MATCH	      &
	!								      &
\	FNCVT.LINE$ = NUM1$(Q%)		!DEFAULT TO THE LINE NUMBER	      &
\	FNCVT.LINE$ = "CCL" IF Q% = 30000%! CCL LINE NUMBER		      &
\	FNCVT.LINE$ = "DCL" IF Q% = 30500%! DCL LINE NUMBER		      &
\	FNCVT.LINE$ = "CHAIN" IF Q% = 31000% ! CHAIN LINE NUMBER	      &
\	FNEND								      &

									      &
									      &
									      &
									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
