1	SUB USHSYS							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : USHSYS					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : BGN,JJT,SEL				      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL USHSYS						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! V9.1-05	30-Jul-85	(JJT) Put a <SP> in density display   &
	! V9.6-07	11-Feb-88	(JJT) Add in SHOW CONFIG stuff	      &
	! V9.6-08	04-Mar-88	(JJT) Display statistics info	      &
	! V9.7-01	07-Nov-88	(JJT) Add Dynamic region quota	      &
	! V9.7-03	06-Jan-89	(JJT) Add Monitor, Swap max, Answerback &
	! V10.0-01	13-Jul-89	(SEL) Print to OUT.CHN% (/OUTPUT)     &
	! V10.0-C	15-Sep-89	(SEL) Add Asynchronous DDCMP status   &
	! V10.0-E	13-Nov-89	(SEL) Change swap max limits to 34-66 &
	! V10.0-F2	17-Nov-89	(SEL) Comment out Async DDCMP status  &
	! V10.0-G	12-Dec-89	(SEL) Change display to 3 columns     &
	! V10.0-K	11-Apr-90	(SEL) Check new async enabled bit     &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &
\	MAP	(CONFIG)	BYTE	VERSION, !MAP THE CONFIG.SYS FILE     &
				BYTE	REV.LEVEL,			      &
				WORD	FLAG.BITS,			      &
				BYTE	PK.NO,				      &
				STRING	FILL = 1,			      &
				BYTE	SWAP.MAX,			      &
				STRING	FILL = 1,			      &
				STRING	MON.NAME = 6,			      &
				STRING	FILL = 498			      &
									      &
\	MAP	(INIBUF)	STRING	FILL = 58, !MAP INIT.SYS	      &
				WORD	SILPTR,				      &
				STRING	FILL = 452			      &
									      &


910	DIM	FIRQB%(30%)			!SYScall array		      &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


6900	! SHOW SYSTEM							      &
									      &
	COL% = 33%				!COLUMN TO PUT DATA IN	      &
\	REGAIN.PRIV$ = CHR$(6%)+CHR$(-21%)+CHR$(0%) !REGAIN PRIVS STRING      &
\	DROP.PRIV$ = CHR$(6%)+CHR$(-21%)+CHR$(255%) !DROP PRIVS STRING	      &
									      &
\	PRINT #OUT.CHN%, "System name:";TAB(COL%);	!LABEL		      &
\	PRINT #OUT.CHN%, EDIT$(MID(SYS(CHR$(6%)+CHR$(9%)+CHR$(0%)),3%,30%),128%) &
\	WREAD.PRIV% = (ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !DO WE HAVE &
		STRING$(3%,0%)+"WREAD"),3%,3%)) = 0%) !WREAD PRIV	      &
\	TUNE.PRIV% = (ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !DO WE HAVE &
		STRING$(3%,0%)+"TUNE"),3%,3%)) = 0%) !TUNE PRIV		      &
\	V$ = SYS(REGAIN.PRIV$)			!RAISE TEMP PRIVS	      &
\	ON ERROR GOTO 6990			!SET LOCAL ERROR TRAP	      &
\	GOTO 6905 UNLESS WREAD.PRIV%		!GO AROUND IF NOT PRIV'ED     &
\	OPEN "_SY0:[0,1]INIT.SYS" FOR INPUT AS FILE 2%, !OPEN INIT.SYS	      &
		ORGANIZATION	VIRTUAL,				      &
		ACCESS		READ,					      &
		MAP		INIBUF					      &
\	GET #2%, BLOCK 1%			!GET THE 1ST BLOCK	      &
\	SILBLK% = SILPTR/512% + 1%		!GET THE BLOCK # OF SIL NAME  &
\	SILOFF% = SILPTR - ((SILBLK%-1%)*512%)	!GET THE OFFSET TO SIL NAME   &
\	GET #2%, BLOCK SILBLK%			!GET THAT BLOCK		      &
\	MOVE FROM #2%, STRING	FILL = SILOFF%,	!GET THE DATA		      &
		       		SILNAME1%,	!FIRST WORD OF SIL NAME	      &
		       		SILNAME2%	!SECOND WORD		      &
\	CUR.MON$ = RAD$(SILNAME1%)+RAD$(SILNAME2%) !FORM THE MONITOR NAME     &
\	PRINT #OUT.CHN%, "Currently installed Monitor:";TAB(COL%);CUR.MON$; !PRINT IT OUT &
\	CLOSE 2%				!CLOSE THE FILE		      &
\	OPEN "_SY0:[0,1]CONFIG.SYS/RO" FOR INPUT AS FILE 1%, !OPEN CONFIG FILE &
		ORGANIZATION	VIRTUAL,				      &
		MAP 		CONFIG					      &
\	GET #1%, BLOCK 1%			!GET THE FIRST BLOCK	      &
\	CUR.MON$ = EDIT$(CUR.MON$,2%)		!Remove any spaces	      &
\	MON.NAME$ = EDIT$(MON.NAME,4%)		!Remove any nulls	      &
\	IF (CUR.MON$ <> MON.NAME$) AND		!IF SILS ARE DIFFERENT	      &
	   (EDIT$(MON.NAME$,-2%) <> "") THEN	! AND SOMETHING'S THERE	      &
		PRINT #OUT.CHN%, TAB(COL%+15%);"Upon reboot: "; MON.NAME$     &
\	END IF					!PRINT OUT THE NEW ONE	      &

6905	PRINT #OUT.CHN%, IF CCPOS(OUT.CHN%)	!BRING CURSOR BACK IF NEEDED  &
\	GOTO 6906 UNLESS TUNE.PRIV%		!GO AROUND IF NOT PRIV'ED     &
\	NULRTS% = SWAP%(CVT$%(SEG$(SYS(CHR$(6%)+CHR$(-29%)),27%,28%)))	      &
\		SWAP.MAX% = PEEK(NULRTS%+28%) AND 255% !GET SWAP MAX	      &
						!NOTE - 28 IS R.SIZE	      &
\	PRINT #OUT.CHN%, "Swap Maximum:";TAB(COL%);NUM1$(SWAP.MAX%)+"K";      &
\	IF BUFSIZ(1%) THEN			!IF CONFIG FILE IS OPEN	      &
		IF (SWAP.MAX >=34%) AND (SWAP.MAX <= 66%) AND !IF WITHIN RANGE &
		   (SWAP.MAX <> SWAP.MAX%) THEN	! AND IS DIFFERENT	      &
			PRINT #OUT.CHN%, TAB(COL%+15%);"Upon reboot: ";	      &
			 NUM1$(SWAP.MAX)+"K"	! PRINT OUT THE THE NEW VALUE &
\		END IF							      &
\	END IF								      &

6906	PRINT #OUT.CHN%, IF CCPOS(OUT.CHN%)	!BRING CURSOR BACK IF NEEDED  &
\	V$ = SYS(DROP.PRIV$)			!DROP TEMP PRIVS	      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYS CALL TO FIP	      &
\	FIRQB%(2%) = 34%			!SUBFUNCTION		      &
\	FIRQB%(3%) = 2%				!SYSTEM DEFAULTS	      &
\	FIRQB%(I%) = 0% FOR I%=4% TO 30%	!CLEAR THE REST		      &
\	CHANGE FIRQB% TO FIRQB$			!CONVERT TO A STRING	      &
\	CHANGE SYS(FIRQB$) TO FIRQB%		!CONVERT RESULT TO AN ARRAY   &
\	PRINT #OUT.CHN%, "Date format:";TAB(COL%);			      &
\	PRINT #OUT.CHN%, "Numeric" IF FIRQB%(7%) = 1% !NUMERIC		      &
\	PRINT #OUT.CHN%, "Alphabetic" IF FIRQB%(7%) = 255%	!ALPHABETIC   &
\	PRINT #OUT.CHN%, "Stardate" IF FIRQB%(7%) = 0%	!STARDATE	      &
									      &
\	IF (FIRQB%(7%) <> 0%) THEN		! IF NO STARDATE	      &
		PRINT #OUT.CHN%, "Time format:";TAB(COL%);		      &
\		IF FIRQB%(8%) = 1% THEN		!  WHICH ON		      &
			PRINT #OUT.CHN%, "24_Hour"		!    24_HOUR  &
		ELSE				!  OR			      &
			PRINT #OUT.CHN%, "AM_PM"		!    AM_PM    &
\		END IF							      &
\	END IF								      &
									      &
\	PRINT #OUT.CHN%, "Magtape label default:";TAB(COL%);		      &
\	IF FIRQB%(9%) = 1% THEN			!  WHICH ON		      &
		PRINT #OUT.CHN%, "DOS"			!    DOS	      &
	ELSE					!  OR			      &
		PRINT #OUT.CHN%, "ANSI"			!    ANSI	      &
\	END IF								      &
									      &
\	PRINT #OUT.CHN%, "Magtape density default:";TAB(COL%);		      &
\	DENS% = FIRQB%(11%) + SWAP%(FIRQB%(12%)) !FORM THE DENSITY	      &
\	IF DENS% = 1% THEN			! MINIMUM?		      &
		PRINT #OUT.CHN%, "Minimum"			!   YES	      &
	ELSE								      &
		IF DENS% = 32767% THEN		! MAXIMUM?		      &
			PRINT #OUT.CHN%, "Maximum"		!   YES	      &
		ELSE							      &
			IF DENS% = 0% THEN	! IF NO DEFAULT		      &
				PRINT #OUT.CHN%, "None"	!   SAY SO	      &
			ELSE			!			      &
				PRINT #OUT.CHN%, NUM1$(DENS%);" BPI" ! PRINT THE VALUE &
\			END IF						      &
\		END IF							      &
\	END IF								      &
									      &
\	DELAY% = FIRQB%(5%)+SWAP%(FIRQB%(6%))	!  GET DELAY FROM FIRQB	      &
\	PRINT #OUT.CHN%, "Power fail restart delay:";TAB(COL%);		      &
\	PRINT #OUT.CHN%, NUM1$(DELAY%);			!  # of seconds	      &
\	PRINT #OUT.CHN%, " seconds"			!  let them know it's seconds &
									      &
\	DYN.QUO = FIRQB%(13%)+SWAP%(FIRQB%(14%))! Get Dynamic Region Quota    &
\	DYN.QUO = 65536. + DYN.QUO IF DYN.QUO < 0% !Make it an Unsigned word  &
\	DYN.QUO$ = NUM1$(DYN.QUO)+"K words"	!  Make a string out of it    &
\	PRINT #OUT.CHN%, "Dynamic Region Limit:"; TAB(COL%); DYN.QUO$	      &
									      &
\	V$ = SYS(REGAIN.PRIV$)			!RAISE TEMP PRIVS	      &
\	CHANGE SYS(CHR$(6%)+CHR$(34%)+CHR$(3%)) TO FIRQB% !GET FEATURE PATCHES &
\	V$ = SYS(DROP.PRIV$)			!DROP TEMP PRIVS	      &
\	BITS.SET% = FIRQB%(5%) + SWAP%(FIRQB%(6%)) ! SET BITS		      &
\	PRINT #OUT.CHN%, "Hangup:"; TAB(COL%);		!HEADER		      &
\	PRINT #OUT.CHN%, "Immediate" IF (BITS.SET% AND 1%) = 1%! IS IT IMMEDIATE &
\	PRINT #OUT.CHN%, "Delayed" IF (BITS.SET% AND 1%) = 0%! OR IS IT DELAYED &
\	V$ = SYS(CHR$(6%)+CHR$(34%)+CHR$(6%)+CHR$(3%)) !GET STATS INFO	      &
\	PRINT #OUT.CHN%, "Monitor Statistics:"; TAB(COL%);	!PRINT HEADER &
\	STATS% = (ASCII(RIGHT(V$,4%)) = 0%)		!GET THE VALUE	      &
\	PRINT #OUT.CHN%, "Enabled" IF STATS%		!PRINT ENABLED IF TRUE &
\	PRINT #OUT.CHN%, "Disabled" UNLESS STATS%		!PRINT DISABLED IF TRUE &
\	V$ = SYS(REGAIN.PRIV$)			!RAISE TEMP PRIVS	      &
\	MAXCNT% = 				!JOB LIMIT		      &
SWAP%(PEEK(SWAP%(CVT$%(MID(SYS(CHR$(6%)+CHR$(-12%)),13%,2%))))) AND 255%      &
\	V$ = SYS(DROP.PRIV$)			!DROP TEMP PRIVS	      &
\	CURJOB% = ASCII(MID(SYS(CHR$(6%)+CHR$(-29%)),15%,1%))!CURRENT	      &
\	PRINT #OUT.CHN%, "Job limit:";TAB(COL%);		!PRINT LABEL  &
\	IF MAXCNT% <= 1% THEN			!NO LOGINS?		      &
		PRINT #OUT.CHN%, "Further logins have been disabled"	      &
	ELSE								      &
		PRINT #OUT.CHN%, NUM1$(MAXCNT%)	!Current setting	      &
\	END IF								      &
\	PRINT #OUT.CHN%, "Current jobs:";TAB(COL%);NUM1$(CURJOB%)	      &
									      &
\	IF (ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !IF WE HAVE	      &
		STRING$(3%,0%)+"WACNT"),3%,3%)) = 0%) THEN !WACNT PRIV	      &
		FIRQB%(0%) = 30%		!30 BYTES		      &
\		FIRQB%(1%) = 6%			!FIP			      &
\		FIRQB%(2%) = -25%		!READ/WRITE ACCOUNT ATTRS     &
\		FIRQB%(3%) = -1%		!READ SUBFUNCTION CODE	      &
\		FIRQB%(4%) = 4%			!INFO IN 4TH BLOCKETTE	      &
\		FIRQB%(5%) = 1%			!ACCOUNT 0,1		      &
\		FIRQB%(A%) = 0% FOR A% = 6% TO 22% !RESERVED		      &
\		FIRQB%(23%) = 83%		!ASCII FOR "S"		      &
\		FIRQB%(24%) = 89%		!ASCII FOR "Y"		      &
\		FIRQB%(25%) = 0%		!UNIT 0, SYSTEM DISK	      &
\		FIRQB%(26%) = 255%		!UNIT REAL FLAG		      &
\		CHANGE FIRQB% TO FIRQB$		!CONVERT TO A STRING	      &
\		V$ = SYS(REGAIN.PRIV$)		!RAISE TEMP PRIVS	      &
\		CHANGE SYS(FIRQB$) TO FIRQB%	!GET THE BLOCKETTE	      &
\		V$ = SYS(DROP.PRIV$)		!DROP TEMP PRIVS	      &
\		DATE.CHG% = FIRQB%(13%) + SWAP%(FIRQB%(14%)) !DATE OF PASS CHG &
\		TIME.CHG% = (FIRQB%(15%) + SWAP%(FIRQB%(16%))) AND 2047% !TIME &
\		FLAG%=FIRQB%(16%)		!SAVE THE FLAGS		      &
\		PRINT #OUT.CHN%, "Password Prompting:";TAB(COL%);	      &
\		IF FLAG% AND 64% THEN		!ALL USERS?		      &
			PRINT #OUT.CHN%, "All";	!YES			      &
		ELSE							      &
			TEST1% = FLAG% AND 16%	!TEST FIRST BIT		      &
\			TEST2% = FLAG% AND 32%  !TEST SECOND BIT	      &
\			PRINT #OUT.CHN%, "Network"; IF TEST2%		      &
\			PRINT #OUT.CHN%, " and "; IF TEST1%<>0% AND TEST2%<>0% &
\			PRINT #OUT.CHN%, "Dialup"; IF TEST1%		      &
\			PRINT #OUT.CHN%, "No"; IF TEST1%=0% AND TEST2%=0%     &
\		END IF							      &
\		PRINT #OUT.CHN%, " users"				      &
\		IF DATE.CHG% <> 0% THEN		!IF THE SYSTEM PASSWORD IS SET &
			PRINT #OUT.CHN%, "Last System Password change:";TAB(COL%); &
\			PRINT #OUT.CHN%, EDIT$(DATE$(DATE.CHG%) + " at " + !PRINT DATE &
				    TIME$(TIME.CHG%),16%)	! AND TIME    &
\		END IF							      &
\	END IF								      &
\	ON ERROR GOTO 6990			!SET LOCAL ERROR TRAP	      &
\	V$ = SYS(REGAIN.PRIV$)			!RAISE TEMP PRIVS	      &
\	OPEN "_SY0:[0,1]CONFIG.SYS/RO" FOR INPUT AS FILE 1%, !OPEN CONFIG FILE &
			ORGANIZATION VIRTUAL,				      &
			MAP CONFIG					      &
		UNLESS BUFSIZ(1%)		!UNLESS ITS ALREADY OPEN      &
\	GET #1%, BLOCK 1%			!GET THE FIRST BLOCK	      &
\	LAT.ON% = FNLAT.ON%			!IS LAT CURRENTLY ON?	      &
\	FMS.ON% = FNFMS.ON%			!IS FMS CURRENTLY ON?	      &
\	LAT.CFG% = ((FLAG.BITS AND 2%) = 0%)	!IS LAT CONFIGURED?	      &
\	FMS.CFG% = ((FLAG.BITS AND 1%) = 1%)	!IS FMS CONFIGURED?	      &
\	PRINT #OUT.CHN%, "LAT Software:";	!COLUMN 1		      &
\	NOT$ = ""				!DEFAULT TO POSITIVE	      &
\	NOT$ = "Not " UNLESS (LAT.ON%)		!MAKE IT NEGATIVE IF SO	      &
\	IF LAT.ON% = LAT.CFG% THEN		!IF CURRENT = CONFIGURED      &
	  PRINT #OUT.CHN%, TAB(COL%); NOT$ + "Installed" !PRINT CURRENT	      &
\	ELSE								      &
	  PRINT #OUT.CHN%, TAB(COL%); NOT$ + "Installed"; ! PRINT CONFIG TOO  &
\	  NOT$ = ""				!  DEFAULT TO POSITIVE	      &
\	  NOT$ = "Not " UNLESS (LAT.CFG%)	!  MAKE IT NEGATIVE IF SO     &
\	  PRINT #OUT.CHN%, TAB(COL%+15%);"Upon reboot: "; NOT$ + "installed"  &
\	END IF								      &
\	PRINT #OUT.CHN%, "FMS Software:";	!COLUMN 1		      &
\	NOT$ = ""				!DEFAULT TO POSITIVE	      &
\	NOT$ = "Not " UNLESS (FMS.ON%)		!MAKE IT NEGATIVE IF SO	      &
\	IF FMS.ON% = FMS.CFG% THEN		!IF CURRENT = CONFIGURED      &
	  PRINT #OUT.CHN%, TAB(COL%); NOT$ + "Installed" !PRINT CURRENT	      &
\	ELSE								      &
	  PRINT #OUT.CHN%, TAB(COL%); NOT$ + "Installed"; ! PRINT CONFIG TOO  &
\	  NOT$ = ""				!  DEFAULT TO POSITIVE	      &
\	  NOT$ = "Not " UNLESS (FMS.CFG%)	!  MAKE IT NEGATIVE IF SO     &
\	  PRINT #OUT.CHN%, TAB(COL%+15%);"Upon reboot: "; NOT$ + "installed"  &
\	END IF								      &
\	IF ((FLAG.BITS AND 16%) = 16%) THEN	!IS ASYNC ENABLED?	      &
	  ASY.ON%  = FNASY.ON%			!IS ASYNC CURRENTLY ON?	      &
\	  ASY.CFG% = ((FLAG.BITS AND 4%) = 4%)	!IS ASYNC CONFIGURED?	      &
\	  PRINT #OUT.CHN%, "Asynchronous DDCMP Driver:"; !COLUMN 1	      &
\	  NOT$ = ""				!DEFAULT TO POSITIVE	      &
\	  NOT$ = "Not " UNLESS (ASY.ON%)	!MAKE IT NEGATIVE IF SO	      &
\	  IF ASY.ON% = ASY.CFG% THEN		!IF CURRENT = CONFIGURED      &
	     PRINT #OUT.CHN%, TAB(COL%); NOT$ + "Loaded" !PRINT CURRENT	      &
\	  ELSE								      &
	     PRINT #OUT.CHN%, TAB(COL%); NOT$ + "Loaded"; ! PRINT CONFIG TOO  &
\	     NOT$ = ""				!  DEFAULT TO POSITIVE	      &
\	     NOT$ = "Not " UNLESS (ASY.CFG%)	!  MAKE IT NEGATIVE IF SO     &
\	     PRINT #OUT.CHN%, TAB(COL%+15%);"Upon reboot: "; NOT$ + "loaded"  &
\	  END IF							      &
\	END IF								      &
!									      &
\	V$ = SYS(CHR$(6%)+CHR$(-3%))		!MONITOR TABLES PART I	      &
\	DEVCNT% = ASCII(RIGHT(V$,5%))+SWAP%(ASCII(RIGHT(V$,6%))) !GET DEVCNT  &
\	V$ = SYS(CHR$(6%)+CHR$(-12%))		!MONITOR TABLES PART II	      &
\	DEVNAM% = ASCII(RIGHT(V$,5%))+SWAP%(ASCII(RIGHT(V$,6%))) !GET DEVNAM  &
\	DEVOKB% = ASCII(RIGHT(V$,9%))+SWAP%(ASCII(RIGHT(V$,10%)))!GET DEVOKB  &
\	DEVNAM% = DEVNAM% + DEVOKB%		!FIND THE BEGINNING OF KBs    &
\	DEVCNT% = DEVCNT% + DEVOKB%		!KEEP IN STEP WITH DEVNAM     &
\	UNTIL PEEK(DEVNAM%) = -1%		!LOOP UNTIL END OF TABLE      &
\		DEVNAM$=CVT%$(SWAP%(PEEK(DEVNAM%))) !GET THE DEVICE NAME      &
\		GOTO 6910 UNLESS DEVNAM$ = "PK"	!  NEXT DEVICE IF NOT PK      &
\		MAXIMUM.UNIT% = PEEK(DEVCNT%)	!  GET THE MAX UNIT NUMBER    &
\		GOTO 6920			!  AND GET OUT		      &

6910		DEVCNT%=DEVCNT%+2%		!  NEXT DEVICE		      &
	\	DEVNAM%=DEVNAM%+2%		!  DITTO		      &
	\ NEXT					!LOOP			      &

6920	PRINT #OUT.CHN%, "Current Pseudo keyboards:"; !PRINT CURRENT # OF PKs &
		TAB(COL%); NUM1$(MAXIMUM.UNIT%+1%);			      &
\	PRINT #OUT.CHN%, TAB(COL%+15%);"Upon reboot: "; NUM1$(PK.NO)!# OF PKs &
		IF PK.NO <> (MAXIMUM.UNIT%+1%)	! IF THEY ARE DIFFERENT	      &
\	PRINT #OUT.CHN%, IF CCPOS(OUT.CHN%)		!BRING CURSOR BACK IF NEEDED &
\	CLOSE 1%				!CLOSE THE FILE		      &
\	ANS.MSG$ = "None"						      &
\	V$ = MID(SYS(CHR$(6%)+CHR$(34%)+CHR$(7%)+CHR$(-1%)),5%,24%) !GET MSG  &
\	ANS.MSG$ = '"'+V$+'"'			!SET IT UP
6930	PRINT #OUT.CHN%, "Answerback message:";TAB(COL%); ANS.MSG$ !PRINT IT  &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	V$ = SYS(DROP.PRIV$)			!DROP TEMP PRIVS	      &
\	SUBEXIT					!AND EXIT		      &

6990	RESUME 6905 IF ERL = 6900		!CONTINUE IF ANY ERROR W/INIT &
\	RESUME 6930 IF ERL = 6920		!NO ANSWERBACK MESSAGE	      &
\	IF ERR = 5% THEN			!IF CONFIG.SYS IS NOT THERE   &
		PRINT "No configuration data available" !SAY NO DATA AVAIL    &
\		RESUME 6920			! AND EXIT		      &
\	END IF								      &
\	V$ = SYS(DROP.PRIV$)			!DROP TEMP PRIVS	      &
\	ON ERROR GO BACK			!LET THE MAIN HANDLE IT	      &
									      &

15000	DEF FNLAT.ON%							      &
\	FNLAT.ON% = 0%				!DEFAULT TO OFF		      &
\	ON ERROR GOTO 15050			!SET LOCAL ERROR TRAP	      &
\	V$ = SYS(CHR$(6%)+			!FIP CALL		      &
		 CHR$(22%)+			!.MESAG DIRECTIVE	      &
		 CHR$(12%)+			!LAT SHOW FUNCTION	      &
		 CHR$(1%))			!SHOW NODE SUBFUNCTION	      &
\	FNLAT.ON% = -1%				!IT IS ON		      &

15010	FNEXIT					!EXIT			      &

15050	RESUME 15010 IF ERR = 66%		!NO LAT, JUST GO BACK	      &
\	FNLAT.ON% = -1%				!IT MUST BE ON		      &
\	RESUME 15010				!GO BACK		      &

15099	FNEND								      &

15100	DEF FNFMS.ON%							      &
\	FNFMS.ON% = 0%				!DEFAULT TO OFF		      &
\	ON ERROR GOTO 15150			!SET LOCAL ERROR TRAP	      &
\	OPEN "_KB:/MO:64" AS FILE 2%		!OPEN KB IN FMS MODE	      &
\	FNFMS.ON% = -1%				!IT IS ON		      &
\	CLOSE 2%				!CLOSE THE KB		      &

15110	FNEXIT								      &

15150	RESUME 15110 IF ERR = 66%		!NO FMS, JUST GO BACK	      &
\	FNFMS.ON% = -1%				!IT MUST BE ON		      &
\	RESUME 15110				!GO BACK		      &

15199	FNEND								      &

15200	DEF FNASY.ON%							      &
\	FNASY.ON% = 0%				!DEFAULT TO OFF		      &
\	ON ERROR GOTO 15250			!SET LOCAL ERROR TRAP	      &
\	FIRQB%(0%)=26%				!30 BYTES		      &
\	FIRQB%(1%)=6%				!FIP			      &
\	FIRQB%(2%)=34%				!CFG			      &
\	FIRQB%(I%)=0% FOR I%=3% TO 22%		!SET/SHOW DEVICE	      &
\	FIRQB%(23%)=ASCII("N")			!DEVICE _NO0: IS PRESENT WHEN &
\	FIRQB%(24%)=ASCII("O")			! ASYNC DDCMP DRIVER IS LOADED &
\	FIRQB%(25%)=0%				!DEVICE NUMBER		      &
\	FIRQB%(26%)=255%			!YES, UNIT NUMBER IS REAL     &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE TO A STRING	      &
\	CHANGE SYS(FIRQB$) TO FIRQB%		!GET THE DEVICE INFO	      &
\	FNASY.ON% = -1%				!NO ERROR SO IT MUST BE ON    &

15210	FNEXIT					!EXIT			      &

15250	RESUME 15210 IF ERR = 6%		!NOT A VALID DEVICE, ASYNC OFF &
\	FNASY.ON% = -1%				!IT MUST BE ON		      &
\	RESUME 15210				!GO BACK		      &

15299	FNEND								      &
									      &


19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
