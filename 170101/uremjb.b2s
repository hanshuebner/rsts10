1	SUB UREMJB							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UREMJB					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UREMJB						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &

									      &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &

									      &

910	DIM	S1%(30%),			!Job Status Part I	      &
		S2%(30%)			!Job Status Part II	      &


1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


4400	!REMOVE/JOB							      &
									      &
\	PRIV.NEED$ = "JOBCTL"			!WE NEED JOBCTL PRIV	      &
\	IF ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !IF WE DON'T HAVE      &
		STRING$(3%,0%)+PRIV.NEED$),3%,3%)) THEN! THE RIGHT PRIV	      &
		PRINT "?"+PRIV.NEED$+ " privilege required" !PRINT ERROR MSG  &
\		SUBEXIT				!   AND EXIT		      &
\	END IF								      &
\	CALL FET$P BY REF (JOB.T%)		!GET THE JOB NUMBER	      &
\	J% = U.LOW%				!GET THE NUMBER		      &
\	JOB.POS% = U.POS%			!SAVE THE POSITION	      &
\	CALL FET$CQ BY REF (QER.K%)		!/QUERY SPECIFIED?	      &
\	U.POS% = JOB.POS%			!RESTORE THE JOB'S POSITION   &
\	IF U.PRES% THEN				!IF PRESENT		      &
		GOTO 4410 IF U.NO%		!  GO AROUND IF /NOQUERY      &
\		GOSUB 17000			!  DISPLAY A MINI-SYSTAT      &
\		SUBEXIT IF ERROR.FLAG%		!  EXIT IF ERROR	      &
\		ON ERROR GOTO 4490		!  SET LOCAL ERROR TRAP	      &
\		PRINT "Really remove job "+NUM1$(J%)+" <NO>";!PRINT THE PROMPT &
\		INPUT ASK$			!  PROMPT		      &
\		ON ERROR GOTO 19000		!  RESET STANDARD ERROR TRAP  &
\		SUBEXIT IF ASCII(EDIT$(ASK$,-2%)) <> 89% !EXIT IF NOT "Y"     &
\	END IF								      &

4410	ON ERROR GOTO 4490			!SET THE LOCAL ERROR TRAP     &
\	V$=SYS(CHR$(6%)+CHR$(8%)+CHR$(J%)+STRING$(24%,0%)+CHR$(-1%))	      &
						!REMOVE THE JOB
4420	ON ERROR GOTO 19000			!RESET THE STANDARD ERROR TRAP &
\	SUBEXIT					!EXIT			      &

4490	RESUME 4420 IF (ERR = 11%) AND (ERL = 4400) !EXIT IF ^Z ON THE PROMPT &
\	GOTO 19000 IF ERR <> 18%		!LET MAIN ERROR TRAP HANDLE IT &
						! IF NOT ?Illegal SYS() usage &
\	CALL DISPLY ("?Job does not exist")	!PRINT ERROR MESSAGE	      &
\	RESUME 4420				! AND EXIT		      &
									      &


17000	!								      &
	!	PRINT OUT A MINI-SYSTAT FOR JOB J%			      &
	!								      &
	ERROR.FLAG% = 0%			!DEFAULT TO NO ERROR	      &
	\ ON ERROR GOTO 17900			!SET LOCAL ERROR TRAP	      &
	\ CHANGE SYS(CHR$(6%)+CHR$(26%)+CHR$(J%)+CHR$(0%)) TO S1%!JOB STATUS 1 &
	\ CHANGE SYS(CHR$(6%)+CHR$(26%)+CHR$(J%)+CHR$(1%)) TO S2%!JOB STATUS 2 &
	\ PRINT "   Job    Who   Where   What  Size  State   Run-time   RTS"  &
	\ PRINT SPACE$(3%-(J%<10%)); NUM1$(J%); "  "; !PRINT JOB NUMBER	      &
	\ PPN% = S1%(21%)+SWAP%(S1%(22%))	!GET THE PPN		      &
	\ S$ = "**,**" UNLESS PPN%		!COMPENSATE FOR LOGGED-OUT    &
	\ S$ = NUM1$(S1%(22%))+","+NUM1$(S1%(21%)) IF PPN% !ELSE MAKE A STRING &
	\ C% = INSTR(1%,S$,",")			!FIND THE SEPARATING COMMA    &
	\ C% = 3% IF C% = 0%			!ADJUST FOR NO COMMA	      &
	\ PRINT TAB(8%);TAB(12%-C%);S$;TAB(16%);!PRINT OUT THE PPN	      &
	\ S$ = "KB"+NUM1$(S1%(4%)) IF(S1%(4%) AND 128%) = 0% !ATTACHED KB     &
	\ S$ = "Det" IF (S1%(4%) AND 128%) <> 0%!DETACHED JOB		      &
	\ PRINT S$;TAB(23%);			!PRINT KB, PROGRAM, AND SIZE  &
		RAD$(S1%(17%)+SWAP%(S1%(18%)));RAD$(S1%(19%)+SWAP%(S1%(20%))); &
		"  "; NUM1$(S2%(13%)); "K"; TAB(36%);			      &
	\ S%=S2%(9%)+SWAP%(S2%(10%))		!JBSTAT			      &
	\ W%=S2%(11%)+SWAP%(S2%(12%))		!JBWAIT			      &
	\ S$="RN"				!ASSUME RN STATE	      &
	\ GOTO 17120 IF S% AND W%		!EXIT IF TRUE		      &
	\ W%=W% AND -16383% IF W% AND -16383%	!CLEAR OUT SOME BITS	      &
	\ S$="BF"				!ASSUME BF STATE	      &
	\ GOTO 17120 IF W% AND 16384%		!EXIT IF TRUE		      &
	\ S$="SL"				!ASSUME SL STATE	      &
	\ IF W% AND 8192%			!IF TRUE		      &
	THEN	S$="SR" IF S2%(7%)		!  SEE IF ITS A RECEIVER      &
	\	GOTO 17120			!  AND EXIT		      &

17115	S$="FP"					!ASSUME FP STATE	      &
	\ GOTO 17120 IF W% AND 4096%		!EXIT IF TRUE		      &
	\ S$="TT"				!ASSUME TT STATE	      &
	\ GOTO 17120 IF W% AND 2048%		!EXIT IF TRUE		      &
	\ S$="HB"				!ASSUME HB STATE	      &
	\ GOTO 17120 UNLESS W%			!EXIT IF TRUE		      &
	\ S$=CHR$(S2%(21%))+CHR$(S2%(22%))	!GET THE DEVICE NAME	      &
	\ GOTO 17120 UNLESS W% AND 2%		!EXIT IF DEVICE WAIT	      &
	\ S$="KB"				!ASSUME KB STATE	      &
	\ S$="^C" IF S2%(22%) AND 128%		!SET IT TO ^C IF TRUE	      &

17120	PRINT S$; " ";				!PRINT THE STATE	      &
	\ S$="   "				!GET SOME PADDING	      &
	\ S$="Lck" IF S2%(14%) AND 240%		!PRINT LOCKED JOB IF TRUE     &
	\ IF S2%(14%) AND 8%			!ARE THEY SWAPPED OUT?	      &
	THEN	S$=CHR$(65%+S1%(6%)/64%)+RIGHT(NUM1$(100%+(S1%(6%) AND 63%)),2%) &
						!  GET THE JOB SLOT NUMBER    &
	\	S$="Swi" IF S2%(14%) AND 4%	!  COULD BE JUST SWAPPING IN  &
	\	S$="Swo" IF S2%(14%) AND 2%	!  COULD BE JUST SWAPPING OUT &

17130	PRINT S$;				!PRINT THE SWAPPING STATE     &
	\ T0=(S1%(7%)+SWAP%(S1%(8%)))		!GET THE CPU TIME	      &
	\ T0=T0+65536. IF T0<0.			!MAKE IT A POSITIVE NUMBER    &
	\ T0=T0+65536.*S1%(16%)			!MULTIPLE BY MSB	      &
	\ T=INT(T0/10.)				!GET THE TENTHS OF A SECOND   &
	\ T0=T0-10.*T				!GET THE REMAINDER	      &
	\ GOSUB 22000				!GO GET THE STRING	      &
	\ PRINT SPACE$(8%-LEN(S$)); S$; "."; CHR$(48%+T0); "  ";	      &
		RAD$(S1%(27%)+SWAP%(S1%(28%))); RAD$(S1%(29%)+SWAP%(S1%(30%))) &
						!PRINT THE TIME AND RTS	      &

17140	ON ERROR GOTO 19000			!RESET THE ERROR TRAP	      &
	\ RETURN				!AND RETURN		      &

17900	CALL DISPLY ("?Job does not exist")	 !PRINT ERROR MESSAGE	      &
		IF (ERR = 10%) AND (ERL = 17000) ! IF JOB DOESN'T EXIST	      &
\	ERROR.FLAG% = -1%			 !SET THE ERROR FLAG	      &
\	RESUME 17140				 !AND EXIT		      &
									      &


19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


22000	!								      &
									      &
									      &
	!	T I M E -    H H : M M : S S . S			      &
									      &
									      &

22010	GOTO 22060 IF T<0. OR T>3600000.				      &
	\ S$=""								      &
	\ T%=0%								      &
	\ T1%=T/3600.							      &
	\ IF T1%<>0% THEN						      &
		T=T-3600.*T1%						      &
	\	GOSUB 22040						      &
	\	S$=S$+":"						      &
	! MAKE SURE TIME IS WITHIN ALLOWABLE RANGE.			      &
	! CLEAR STRING TO BE RETURNED AND INITIALIZE			      &
	! T1%= # OF HOURS - SUBTRACT FROM TOTAL IF NON-ZERO		      &

22020	T1%=T/60%							      &
	\ IF (T1% OR T%)<>0% THEN					      &
		T=T-60%*T1%						      &
	\	GOSUB 22040						      &
	\	S$=S$+":"						      &
	! NOW T1%= # OF MINUTES - SUBTRACT FROM TOTAL IF NON-ZERO AND	      &
	! TACK ON TO STRING						      &

22030	T1%=T								      &
	! PREPARE TO GET SECONDS.TENTHS OF SEC.				      &

22040	T$=NUM$(T1%+T%*100%)						      &
	\ S$=S$+MID(T$,2%+T%,LEN(T$)-2%-T%)				      &
	\ T%=1%								      &
	! TACK THIS PART ONTO THE STRING				      &

22050	RETURN								      &
									      &

22060	S$="???:??:?"							      &
	\ GOTO 22050							      &
	! COULDN'T CONVERT THE NUMBER.					      &
									      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
