1	SUB UDEV							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UDEV					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT,BGN					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UDEV						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	! V9.2-07	14-Mar-86	(JJT) Fix /DEV=LN01/BACKSPACE=CONTROL &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &


910	DIM	FIRQB%(30%)			!SYScall array		      &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


5000	!SET PRINTER							      &
	!SET DEVICE							      &
									      &
	HWCTL.PRIV% = FNCHECK.PRIV%("HWCTL")	!WE COULD NEED HWCTL PRIV     &
\	HWCFG.PRIV% = FNCHECK.PRIV%("HWCFG")	!WE COULD NEED HWCFG PRIV     &
\	DEVICE.PRIV% = FNCHECK.PRIV%("DEVICE")	!WE COULD NEED DEVICE PRIV    &
\	CALL FET$P BY REF (DEV.T%)		!GET THE PARAMETER	      &
\	PARM.POS% = U.POS%			!SAVE THE POSITION OF THE PARM &
\	Z$ = SEG$(U.STR$,1%,U.LEN%)		!EXTRACT THE DEVICE	      &
\	Z$ = Z$ + ":" UNLESS POS(Z$,":",1%)	!APPEND A COLON UNLESS PRESENT &
\	CHANGE FSS$(Z$,1%) TO FIRQB%		!DO THE FILENAME SCAN	      &
\	STAT.US% = STATUS AND 255%		!SAVE THE STATUS VARIABLE     &
\	QUALIFIER.FOUND% = 0%			!DEFAULT TO NO QUALIFIERS     &
									      &
\	SELECT	U.CMDC%				!SELECT THE COMMAND AGAIN     &
\	  CASE	DEV.K%				!SET DEVICE		      &
									      &
\	CALL FET$CQ BY REF (RES.Q%)		!/[NO]RESTRICT SPECIFIED?     &
\	ON ERROR GOTO 5040			!SET LOCAL ERROR TRAP	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NORESTRICT	      &
			IF NOT(HWCFG.PRIV%) OR	!    IF NO HWCFG PRIV OR      &
			   NOT(DEVICE.PRIV%) THEN !     NO DEVICE PRIV	      &
			 CALL DISPLY ("?HWCFG and DEVICE privileges required") &
\			 SUBEXIT		!    SAY SO AND EXIT	      &
\			END IF						      &
		ELSE				!  IF /RESTRICT		      &
			IF NOT(HWCFG.PRIV%) THEN !   IF NO HWCFG PRIV	      &
			 CALL DISPLY ("?HWCFG privilege required") !SAY SO    &
\			 SUBEXIT		!    AND EXIT		      &
\			END IF						      &
\		END IF							      &
\		IF STAT.US% = 0% THEN		!  IF DEVICE IS A DISK	      &
			LOCK% = 4% IF NOT U.NO%	!    IF /RESTRICT	      &
\			LOCK% = 6% IF U.NO%	!    IF /NORESTRICT	      &
\			FIRQB%(0%) = 30%	!    30 BYTES		      &
\			FIRQB%(1%) = 6%		!    SYS CALL TO FIP	      &
\			FIRQB%(2%) = 3%		!    DISK PACK STATUS FUNCTION &
\			FIRQB%(3%) = LOCK%	!    [NO]RESTRICT THE DISK    &
\			CHANGE FIRQB% TO FIRQB$	!    CHANGE TO A STRING	      &
\			V$ = SYS(FIRQB$)	!    DO THE SYS CALL	      &
		ELSE				!  IF DEVICE IS NOT A DISK    &
			FIRQB%(5%) = 2%		!  SET CHANGE RESTRICTION FLAG &
\			FIRQB%(6%) = 2% IF NOT U.NO%!IF /RESTRICT	      &
\			QUALIFIER.FOUND% = -1%	!    WE HAVE A QUALIFIER      &
\		END IF							      &
\	END IF								      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	FIRQB%(I%) = 0% FOR I% = 0% TO 3%	!CLEAR OUT BUT LEAVE DEVICE   &
\	SUB.FUNC% = 0%				!CHANGE DEVICE CHAR FUNCTION  &
\	CALL FET$CQ BY REF (ENA.Q%)		!/ENABLE SPECIFIED?	      &
\	IF U.PRES% THEN 			!IF PRESENT		      &
		IF NOT(HWCTL.PRIV%) THEN	!  IF NOT PRIVILEGED	      &
			CALL DISPLY ("?HWCTL privilege required") !SAY SO     &
\			SUBEXIT			!    AND EXIT		      &
\		END IF							      &
\		FIRQB%(5%) = FIRQB%(5%) OR 1%	!  SET CHANGE ENABLED FLAG    &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (DVD.Q%)		!/DISABLE SPECIFIED?	      &
\	IF U.PRES% THEN 			!IF PRESENT		      &
		IF NOT(HWCTL.PRIV%) OR		!  IF NO HWCTL PRIV OR	      &
		   NOT(HWCFG.PRIV%) THEN	!     NO HWCFG PRIV	      &
			CALL DISPLY ("?HWCTL and HWCFG privileges required")  &
\			SUBEXIT			!    SAY SO AND EXIT	      &
\		END IF							      &
\		FIRQB%(5%) = FIRQB%(5%) OR 1%	!  SET CHANGE ENABLED FLAG    &
\		FIRQB%(6%) = FIRQB%(6%) OR 1%	!  CHANGE IT TO DISABLED      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &

5010	  CASE DLP.K%				!SET PRINTER		      &
									      &
\	IF NOT(HWCFG.PRIV%) THEN		!IF NOT PRIVILEGED	      &
		CALL DISPLY ("?HWCFG privilege required") !SAY SO	      &
\		SUBEXIT				!  AND EXIT		      &
\	END IF								      &
\	IF STAT.US% <> 6% THEN			!IF NOT A PRINTER	      &
		U.POS% = PARM.POS%		!  RESTORE THE POINTER	      &
\		CALL DISPLY ("?Device is not a line printer") !PRINT ERROR MSG &
\		SUBEXIT			!  GO GET NEXT COMMAND		      &
\	END IF								      &
\	FIRQB%(I%) = 0% FOR I% = 0% TO 22%	!CLEAR OUT BUT LEAVE DEVICE   &
\	SUB.FUNC% = 1%				!CHANGE PRINTER CHAR FUNCTION &
\	CALL FET$CQ BY REF (DEV.Q%)		!/DEVICE SPECIFIED?	      &
\	IF U.PRES% THEN 			!IF PRESENT		      &
		CALL FET$KA BY REF (LP.K%)	!=LP11 SPECIFIED?	      &
\		IF U.PRES% THEN			!IF PRESENT		      &
			FIRQB%(5%) = 132%	!  DEFAULT TO 132 WIDTH	      &
\			FIRQB%(6%) = 66%	!  DEFAULT TO FORM LENGTH 66  &
\			FIRQB%(7%) = FIRQB%(7%) OR!  SET THE APPROPRIATE CHAR &
				(16% +		!    /NOFILL		      &
				 64% +		!    /NOCR_PREFIX	      &
				 128%)		!    /OMIT_CR		      &
\			FIRQB%(8%) = FIRQB%(8%) OR!  SET MORE CHARACTERISTICS &
				( 8%)		!    /LOWERCASE		      &
\			FIRQB%(9%) = FIRQB%(9%) OR! CLEAR THE APPROPRIATE CHAR &
				( 3% +		!    /BACKSPACE=EMULATE	      &
				  4% +		!    /NOEIGHT_BIT	      &
				  8% +		!    /NOCONTROL		      &
				 32%)		!    /NOEOT		      &
\			FIRQB%(10%) = FIRQB%(10%) OR!CLR MORE CHARACTERISTICS &
				( 1% +		!    /NOTAB		      &
				  2%)		!    /NOESCAPE_SEQUENCE	      &
\			QUALIFIER.FOUND% = -1%	!  WE HAVE A QUALIFIER	      &
\		END IF							      &
\		CALL FET$KA BY REF (LA180.K%)	!/LA180 SPECIFIED?	      &
\		IF U.PRES% THEN			!IF PRESENT		      &
			FIRQB%(5%) = 132%	!  DEFAULT TO 132 WIDTH	      &
\			FIRQB%(6%) = 66%	!  DEFAULT TO FORM LENGTH 66  &
\			FIRQB%(7%) = FIRQB%(7%) OR!  SET THE APPROPRIATE CHAR &
				( 1% +		!    /BACKSPACE=REAL	      &
				 64% +		!    /NOCR_PREFIX	      &
				 128%)		!    /OMIT_CR		      &
\			FIRQB%(8%) = FIRQB%(8%) OR!  SET MORE CHARACTERISTICS &
				( 8%)		!    /LOWERCASE		      &
\			FIRQB%(9%) = FIRQB%(9%) OR!  CLEAR THE APPROPRIATE CHAR &
				( 2% +		!    /BACKSPACE=REAL	      &
				  4% +		!    /NOEIGHT_BIT	      &
				  8% +		!    /NOCONTROLS	      &
				 16% +		!    /FILL		      &
				 32%)		!    /NOEOT		      &
\			FIRQB%(10%) = FIRQB%(10%) OR!CLR MORE CHARACTERISTICS &
				( 1% +		!    /NOTAB		      &
				  2%)		!    /NOESCAPE_SEQUENCE	      &
\			QUALIFIER.FOUND% = -1%	!  WE HAVE A QUALIFIER	      &
\		END IF							      &
\		CALL FET$KA BY REF (LN01.K%)	!/LN01 SPECIFIED?	      &
\		IF U.PRES% THEN			!IF PRESENT		      &
			FIRQB%(5%) = 132%	!  DEFAULT TO 132 WIDTH	      &
\			FIRQB%(6%) = 66%	!  DEFAULT TO FORM LENGTH 66  &
\			FIRQB%(7%) = FIRQB%(7%) OR!  SET THE APPROPRIATE CHAR &
				 (1% +		!    /BACKSPACE=REAL	      &
				  4% +		!    /EIGHT_BIT		      &
				  8% +		!    /CONTROL		      &
				 16% +		!    /NOFILL		      &
				 64% +		!    /NOCR_PREFIX	      &
				 128%)		!    /OMIT_CR		      &
\			FIRQB%(8%) = FIRQB%(8%) OR!  SET MORE CHARACTERISTICS &
				( 1% +		!    /TAB		      &
				  8%)		!    /LOWERCASE		      &
\			FIRQB%(9%) = FIRQB%(9%) OR! CLEAR THE APPROPRIATE CHAR &
				( 2% +		!    /BACKSPACE=REAL	      &
				 32%)		!    /NOEOT		      &
\			FIRQB%(13%) = 66%	!  DEFAULT TO FORM LENGTH 66  &
\			QUALIFIER.FOUND% = -1%	!  WE HAVE A QUALIFIER	      &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (WID.Q%)		!/WIDTH SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  FETCH THE ARGUMENT	      &
\		FIRQB%(5%) = U.LOW%		!  STORE THE WIDTH	      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (LOW.Q%)		!/LOWER_CASE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(8%) = FIRQB%(8%) OR 8%	    !SET /LOWER_CASE	      &
\		FIRQB%(10%) = FIRQB%(10%) AND NOT (8%)! CLR /UPPER_CASE	      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (UPP.Q%)		!/UPPER_CASE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(8%) = FIRQB%(8%) AND NOT (8%)!CLR /UPPER_CASE	      &
\		FIRQB%(10%) = FIRQB%(10%) OR 8%	    !SET /LOWER_CASE	      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (BSP.Q%)		!/BACKSPACE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$KA BY REF (REL.K%)	!  =REAL SPECIFIED?	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			FIRQB%(7%) = FIRQB%(7%) OR 1% !SET THE FLAG BIT	      &
\			FIRQB%(7%) = FIRQB%(7%) AND NOT (2%) !CLEAR =CONTROL  &
\			FIRQB%(9%) = FIRQB%(9%) AND NOT (1%) !CLEAR NOREAL    &
\			FIRQB%(9%) = FIRQB%(9%) OR 2%	     !CLEAR =CONTROL  &
\		END IF							      &
\		CALL FET$KA BY REF (CTL.K%)	!  =CONTROL SPECIFIED?	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			FIRQB%(7%) = FIRQB%(7%) OR 2% !SET THE FLAG BIT	      &
\			FIRQB%(7%) = FIRQB%(7%) AND NOT (1%) !CLEAR =REAL     &
\			FIRQB%(9%) = FIRQB%(9%) AND NOT (2%) !CLEAR NOCONTROL &
\			FIRQB%(9%) = FIRQB%(9%) OR 1%	     !CLEAR =REAL     &
\		END IF							      &
\		CALL FET$KA BY REF (EMU.K%)	!  =EMULATE SPECIFIED?	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			FIRQB%(7%) = FIRQB%(7%) AND NOT (3%) !CLR REAL,CONTROL &
\			FIRQB%(9%) = FIRQB%(9%) OR 3% !SET THE FLAG BITS      &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (BT8.Q%)		!/[NO]EIGHT_BIT SPECIFIED?    &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOEIGHT_BIT	      &
			FIRQB%(7%) = FIRQB%(7%) AND NOT (4%) !CLEAR /EIGHT_BIT &
\			FIRQB%(9%) = FIRQB%(9%) OR 4% 	     !SET /NOEIGHT_BIT &
		ELSE				!  IF /EIGHT_BIT	      &
			FIRQB%(7%) = FIRQB%(7%) OR 4%	     !SET /EIGHT_BIT  &
\			FIRQB%(9%) = FIRQB%(9%) AND NOT (4%) !CLEAR /NOEIGHT  &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (CTL.Q%)		!/[NO]CONTROLS SPECIFIED?     &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOCONTROLS	      &
			FIRQB%(7%) = FIRQB%(7%) AND NOT (8%) !CLEAR /CONTROLS &
\			FIRQB%(9%) = FIRQB%(9%) OR 8%	     !SET /NOCONTROLS &
		ELSE				!  IF /CONTROLS		      &
			FIRQB%(7%) = FIRQB%(7%) OR 8%	     !SET /CONTROLS   &
\			FIRQB%(9%) = FIRQB%(9%) AND NOT (8%) !CLEAR /NOCONTROL &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (FLL.Q%)		!/[NO]FILL SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOFILL		      &
			FIRQB%(7%) = FIRQB%(7%) OR 16%	      !SET /NOFILL    &
\			FIRQB%(9%) = FIRQB%(9%) AND NOT (16%) !CLEAR /FILL    &
		ELSE				!  IF /FILL		      &
			FIRQB%(7%) = FIRQB%(7%) AND NOT (16%) !CLEAR /NOFILL  &
\			FIRQB%(9%) = FIRQB%(9%) OR 16%	      !SET /FILL      &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (EOT.Q%)		!/[NO]EOT SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOEOT		      &
			FIRQB%(7%) = FIRQB%(7%) AND NOT (32%) !CLEAR /EOT     &
\			FIRQB%(9%) = FIRQB%(9%) OR 32%	      !SET /NOEOT     &
		ELSE				!  IF /EOT		      &
			FIRQB%(7%) = FIRQB%(7%) OR 32%	      !SET /EOT	      &
\			FIRQB%(9%) = FIRQB%(9%) AND NOT (32%) !CLEAR /NOEOT   &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (CRP.Q%)		!/[NO]CR_PREFIX SPECIFIED?    &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOCR_PREFIX	      &
			FIRQB%(7%) = FIRQB%(7%) OR 64%	     !SET/NOCR_PREFIX &
\			FIRQB%(9%) = FIRQB%(9%) AND NOT (64%)!CLR /CR_PREFIX  &
		ELSE				!  IF /CR_PREFIX	      &
			FIRQB%(7%) = FIRQB%(7%) AND NOT (64%)!CLR/NOCR_PREFIX &
\			FIRQB%(9%) = FIRQB%(9%) OR 64%	     !SET /CR_PREFIX  &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (OCR.Q%)		!/[NO]OMIT_CR SPECIFIED?      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOOMIT_CR	      &
			FIRQB%(7%) = FIRQB%(7%) AND NOT (128%) !CLEAR /OMIT_CR &
\			FIRQB%(9%) = FIRQB%(9%) OR 128%	       !SET /NOOMIT_CR &
		ELSE				!  IF /OMIT_CR		      &
			FIRQB%(7%) = FIRQB%(7%) OR 128%	       !SET /OMIT_CR  &
\			FIRQB%(9%) = FIRQB%(9%) AND NOT (128%) !CLR /NOOMIT_CR &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (TAB.Q%)		!/[NO]TAB SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOTAB		      &
			FIRQB%(8%) = FIRQB%(8%) AND NOT (1%)   !CLEAR /TAB    &
\			FIRQB%(10%) = FIRQB%(10%) OR 1%	       !SET /NOTAB    &
		ELSE				!  IF /TAB		      &
			FIRQB%(8%) = FIRQB%(8%) OR 1%	       !SET /TAB      &
\			FIRQB%(10%) = FIRQB%(10%) AND NOT (1%) !CLEAR /NOTAB  &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (ESC.Q%)		!/[NO]ESCAPE_SEQUENCE?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOESCAPE_SEQUENCE      &
			FIRQB%(8%) = FIRQB%(8%) AND NOT (2%)   !CLEAR /ESC    &
\			FIRQB%(10%) = FIRQB%(10%) OR 2%	       !SET /NOESC    &
		ELSE				!  IF /ESCAPE_SEQUENCE	      &
			FIRQB%(8%) = FIRQB%(8%) OR 2%	       !SET /ESC      &
\			FIRQB%(10%) = FIRQB%(10%) AND NOT (2%) !CLEAR /NOESC  &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	CALL FET$CQ BY REF (SPC.Q%)		!/SPECIAL_CHARACTER SPECIFIED? &
\	ON ERROR GOTO 5030			!SET LOCAL ERROR TRAP	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(11%) = 1%		!  SET THE CHANGE FLAG	      &
\		IF U.NO% THEN			!  IF /NOSPECIAL_CHARACTER    &
			FIRQB%(12%) = 0%	!    DISABLE THE SPECIAL CHAR &
		ELSE				!  IF /SPECIAL_CHARACTER      &
			CALL FET$A BY REF	!    GET THE ARGUMENT	      &
\			Z$ = SEG$(U.STR$,1%,U.LEN%)! EXTRACT IT		      &
\			Z$ = EDIT$(Z$,2%+4%+256%)!REMOVE ANY JUNK	      &
\			IF LEN(Z$) = 3% AND 	!    CHECK FOR "x"	      &
			   ASCII(Z$) = ASCII(SEG$(Z$,3%,3%)) AND	      &
						!    BEGINNING = END AND      &
			 ((ASCII(Z$) = 34%) OR (ASCII(Z$) = 39%)) THEN	      &
						!    BEGIN = " OR '	      &
				FIRQB%(12%) = ASCII(SEG$(Z$,2%,2%))	      &
						!    STORE THE VALUE	      &
			ELSE			!  CHECK FOR AN ASCII VALUE   &
				Z% = VAL(Z$)	!    GET THE VALUE	      &
\				IF (Z% < 0%) OR (Z% > 255%) THEN	      &
						!    IF OUT OF RANGE	      &
					GOTO 5020!     GOTO ERROR ROUTINE     &
\				END IF					      &
\				FIRQB%(12%) = Z%!    STORE THE VALUE	      &
\			END IF						      &
\		END IF							      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
\	ON ERROR GOTO 19000			!RESTORE THE ERROR TRAP	      &
\	CALL FET$CQ BY REF (FRM.Q%)		!/FORM_LENGTH SPECIFIED?      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE ARGUMENT	      &
\		FIRQB%(6%) = U.LOW%		!  STORE THE FORM_LENGTH      &
\		QUALIFIER.FOUND% = -1%		!  WE HAVE A QUALIFIER	      &
\	END IF								      &
									      &
\	END SELECT							      &
									      &
\	IF QUALIFIER.FOUND% THEN		!IF WE HAD A QUALIFIER	      &
\		FIRQB%(0%) = 30%		!  30 BYTES		      &
\		FIRQB%(1%) = 6%			!  SYS CALL TO FIP	      &
\		FIRQB%(2%) = 34%		!  CHANGE CONFIGURATION CODE  &
\		FIRQB%(3%) = SUB.FUNC%		!  SET APPROPRIATE CODE	      &
\		CHANGE FIRQB% TO FIRQB$		!  CHANGE THE ARRAY TO STRING &
\		ON ERROR GOTO 5040		!  SET LOCAL ERROR TRAP	      &
\		CHANGE SYS(FIRQB$) TO FIRQB%	!  DO THE SYS CALL	      &
\		ON ERROR GOTO 19000		!  RESET THE ERROR TRAP	      &
\	END IF								      &
\	SUBEXIT				!GO GET THE NEXT COMMAND	      &

5020	CALL DISPLY ("?Invalid special character") !PRINT ERROR MESSAGE	      &
\	ON ERROR GOTO 19000			!RESET THE ERROR TRAP	      &
\	SUBEXIT					!GO GET THE NEXT COMMAND      &

5030	RESUME 5020				!GO PRINT THE ERROR MESSAGE   &

5040	U.POS% = PARM.POS%			!RESTORE PARAMETER POSITION   &
\	IF ERR = 3% THEN			!IF ?Account or device in use &
		CALL DISPLY ("?Device in use or already disabled") !SAY SO    &
\		RESUME 32767			!  AND EXIT		      &
\	END IF								      &
\	IF ERR = 8% OR ERR = 22% THEN		!IF ?Device is restricted     &
		IF NOT(DEVICE.PRIV%) THEN	!  IF NO DEVICE PRIVILEGE     &
	CALL DISPLY ("?DEVICE privilege required to access restricted device") &
		ELSE							      &
	CALL DISPLY ("?Device cannot be enabled online") !PRINT ERROR MESSAGE &
\		END IF							      &
\		RESUME 32767			!  AND EXIT		      &
\	END IF								      &
\	IF ERR = 18% THEN			!IF ?Illegal SYS() usage      &
		CALL DISPLY ("?Invalid operation on system disk") !PRINT ERROR &
\		RESUME 32767						      &
\	END IF								      &
\	GOTO 19000				!UNKNOWN ERROR		      &

15050	DEF FNCHECK.PRIV%(PRIV$)		!CHECK FOR PRIV PRIV$	      &
\	FNCHECK.PRIV% = 0%			!DEFAULT TO NOT PRIVILEGED    &
\	FNCHECK.PRIV% = -1% UNLESS ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ &
				STRING$(3%,0%)+PRIV$),3%,3%))		      &
						!CHECK FOR THE PRIVILEGE      &
\	FNEND								      &

									      &
									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
