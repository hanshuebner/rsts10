1	SUB USHPRV							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : USHPRV					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT,SEL					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL USHPRV						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! V9.1-04	14-Jun-85	(JJT) Fix error handling	      &
	! V9.2-03	12-Dec-85	(JJT) Change error message	      &
	! V10.0-01	13-Jul-89	(SEL) Print to OUT.CHN% (/OUTPUT)     &
	! V10.0-G	27-Nov-89	(SEL) Set width=80 if /OUTPUT=file    &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &

									      &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &

									      &

910	DIM	FIRQB%(30%)			!SYScall array		      &

920	DIM	PRIV$(64%),			!Privileges-being-sorted array &
		PRIV%(64%)			!Index to PRIV$() array	      &

									      &
									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &

2100	IF OUT.CHN% THEN 			!If output is to a file then  &
	   TERM.WIDTH%=80%			! set report width=80	      &
\	ELSE					!Else			      &
	   TERM.WIDTH%=ASCII(SEG$(SYS(CHR$(6%)+	! Get this KB's width	      &
		CHR$(16%)+CHR$(0%)+CHR$(255%)),5%,5%))-1%		      &
\	END IF								      &
\	COLUMN1% = 4%				!beginning of first column    &
\	COLUMNWIDTH% = 8%			!width of a column	      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &

									      &

6100	!SHOW PRIVILEGE							      &
									      &
	JOB.NUM% = 0%				!DEFAULT TO OUR JOB NUMBER    &
\	JOB.POS% = 0%				!INIT THE POSITION	      &
\	CALL FET$P BY REF (JOB.T%)		!JOB NUMBER SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		JOB.NUM% = U.LOW%		!  STORE THE JOB NUMBER	      &
\		JOB.POS% = U.POS%		!  STORE THE POSITION	      &
\	END IF								      &
\	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYS CALL TO FIP	      &
\	FIRQB%(2%) = 26%			!RETURN JOB STATUS INFO	      &
\	FIRQB%(3%) = JOB.NUM%			!FOR THIS JOB NUMBER	      &
\	FIRQB%(4%) = 2%				!GET PART 3 INFO	      &
\	FIRQB%(I%) = 0% FOR I% = 5% TO 30%	!CLEAR THE REST OF THE ARRAY  &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE THE ARRAY TO A STRING &
\	ON ERROR GOTO 6120			!SET LOCAL ERROR TRAP	      &
\	CHANGE SYS(FIRQB$) TO FIRQB%		!DO THE SYS CALL	      &
\	PRIV% = 0%				!INITIALIZE PRIVILEGE COUNTER &
\	UNTIL 0%				!LOOP UNTIL WE GET AN ERROR   &
\		FIRQB%(0%) = 30%		!  30 BYTES		      &
\		FIRQB%(1%) = 6%			!  SYS CALL TO FIP	      &
\		FIRQB%(2%) = 32%		!  CHECK ACCESS FUNCTION CODE &
\		FIRQB%(3%) = 2%			!  CONVERT PRIV MASK TO NAME  &
\		FIRQB%(I%) = 0% FOR I% = 4% TO 6%! CLEAR OUT PART OF THE ARRAY &
\		FIRQB%(I%) = 0% FOR I% = 15% TO 30%!CLEAR OUT REST OF ARRAY   &
\		CHANGE FIRQB% TO FIRQB$		!  CHANGE THE ARRAY TO STRING &
\		FIRQB$ = SYS(FIRQB$)		!  DO THE SYS CALL	      &
\		PRIV% = PRIV% + 1%		!  INCREMENT THE PRIV COUNTER &
\		PRIV$(PRIV%) = (SEG$(FIRQB$,15%,20%)) !STORE IT		      &
\		PRIV%(PRIV%) = PRIV%		!  STORE THE INDEX	      &
\		CHANGE FIRQB$ TO FIRQB%		!  CHANGE THE STRING TO ARRAY &
\	NEXT								      &

6110	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	IF PRIV% THEN				!IF THERE ARE ANY PRIVS	      &
		GOSUB 12900			!  GO SORT THEM		      &
\		JUNK% = FNPRINTCOLUMN% (PRIV$(PRIV%(I%))) !PRINT	      &
			FOR I% = 1% TO PRIV%		!   EACH PRIVILEGE    &
\	END IF								      &
\	PRINT #OUT.CHN%, IF CCPOS(OUT.CHN%)	!BRING CURSOR BACK IF NEEDED  &
\	IF PRIV% = 0% THEN			!IF NO PRIVILEGES FOUND	      &
		PRINT "%No privileges set"	!  PRINT WARNING MESSAGE      &
\	END IF								      &
\	SUBEXIT					!GET NEXT COMMAND	      &

6120	RESUME 6110 IF (ERR <> 18%) AND (ERR <> 10%) !GO FINISH UP	      &
\	IF (ERR = 18%) AND			!IF ?Illegal SYS() usage      &
	   (ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !and no JOBCTL	      &
	    STRING$(3%,0%)+"JOBCTL"),3%,3%))) THEN	!privilege	      &
		PRINT "?JOBCTL privilege required" !PRINT WHICH PRIV IS NEEDED &
\		RESUME 32767			!EXIT			      &
\	END IF								      &
\	U.POS% = JOB.POS%			!RESTORE THE POSITION	      &
\	CALL DISPLY ("?Job does not exist")	!PRINT THE ERROR MESSAGE      &
\	RESUME 32767							      &

12900	!								      &
	!	Sort privileges routine					      &
	!	Using the Shell-Metzner sort				      &
	!								      &
	S2% = PRIV% / 2%						      &
\	WHILE S2% <> 0%							      &
\		S3% = PRIV% - S2%					      &
\		S4% = 1%
12910		S5% = S4%						      &
\		WHILE S5% > 0%						      &
\			S6% = S5% + S2%					      &
\			IF PRIV$(PRIV%(S5%)) > PRIV$(PRIV%(S6%)) THEN	      &
				TEMP% = PRIV%(S5%)			      &
\				PRIV%(S5%) = PRIV%(S6%)			      &
\				PRIV%(S6%) = TEMP%			      &
\				S5% = S5% - S2%				      &
			ELSE						      &
				S5% = 0%				      &
\			END IF						      &
\		NEXT							      &
\		S4% = S4% + 1%						      &
\		GOTO 12910 UNLESS S4% > S3%				      &
\		S2% = S2% / 2%						      &
\	NEXT								      &
\	RETURN								      &

17100	! FNPRINTCOLUMN% (TEXT$) -- Print text in next available column.      &
	! Inputs:							      &
	!	TEXT$ -- The text to print				      &
	!	TERM.WIDTH% -- Width of screen				      &
	!	CCPOS(OUT.CHN%) -- Current cursor position		      &
	! Effect:							      &
	!	If there isn't room for another column, <CR><LF> is	      &
	!	printed and the cursor is advanced to the left margin.	      &
	!	Otherwise cursor is advanced to next column (i.e. position of &
	!	first column plus n * width of a column).		      &
	!	Text is printed.					      &
	! Value: Meaningless.						      &

17110	DEF FNPRINTCOLUMN% (TEXT$)					      &
	\ CURSOR% = CCPOS(OUT.CHN%)		! Get current cursor position. &
	\ IF CURSOR% < COLUMN1% THEN	! If cursor is left of first column of &
					! text then			      &
		PRINT #OUT.CHN%, SPACE$ (COLUMN1% - CURSOR%);		      &
					!   Move cursor to first column of    &
					!   text.			      &
		\ GOTO 17140		!   Go print text.		      &

17120	NEXTCOLUMN% = ((CURSOR%-COLUMN1%)/COLUMNWIDTH%)*COLUMNWIDTH% +	      &
	COLUMNWIDTH% + COLUMN1%		! Compute position of next text column. &
	\ PAD% = NEXTCOLUMN% - CURSOR%	! Compute spaces needed to pad cursor &
					! to next column.		      &
									      &
	\ IF (NEXTCOLUMN% + COLUMNWIDTH%) > TERM.WIDTH% THEN		      &
					! If there isn't room for another     &
					! column then			      &
		PRINT #OUT.CHN%,		!   Go to next line of screen. &
		\ PRINT #OUT.CHN%, SPACE$ (COLUMN1%);!  Move cursor to first column of &
					!   text.			      &
		\ GOTO 17140		!   Go print text.		      &

17130	PRINT #OUT.CHN%, SPACE$ (PAD%);		! Pad cursor out to next column. &

17140	PRINT #OUT.CHN%, TEXT$;			! Print the text.	      &
	\ FNEND								      &


19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &

									      &

32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
