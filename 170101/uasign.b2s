1	SUB UASIGN							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UASIGN					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT,SEL					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1990, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility  the use  or  reliability	      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UASIGN						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	! V9.7-01	21-Sep-88	(JJT) Remove default of SY:	      &
	! V10.0-F	31-Oct-88	(SEL) Support extended logical names  &
	! 				      Add/change/delete user logicals &
	! V10.0-I	31-Jan-90	(SEL) Logicals are 15 characters not 21 &
	! V10.0-L3	18-Jun-90	(SEL) "Logical not found" is a warning &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &


910	DIM	FIRQB%(30%),			!SYScall array		      &
		FIRQ2%(30%)			!Second SYScall array	      &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


5400	!ASSIGN/SYSTEM							      &
	!ASSIGN = ASSIGN/USER						      &
	!DEASSIGN/SYSTEM						      &
	!DEASSIGN = DEASSIGN/USER					      &
	!								      &
	CALL FET$CQ BY REF (SYS.K%)		!GET THE /SYSTEM qualifier    &
\	SYS.FLAG%=U.PRES%			!SET FLAG IF SYSTEM LOGICAL   &
\	SYS.FLAG% = -1%				!ALWAYS DO SYSTEM LOGICALS    &
		IF U.CMDC% = ASG.K%		! FOR THE ASSIGN COMMAND      &
\	IF SYS.FLAG% THEN			!IF /SYSTEM THEN CHECK PRIVS  &
	  PRIV.NEED$ = "INSTAL"			!INSTAL PRIV REQUIRED	      &
\	  IF ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !IF WE DON'T HAVE    &
	     STRING$(3%,0%)+PRIV.NEED$),3%,3%)) THEN  	 !THE RIGHT PRIV THEN &
		PRINT "?" + PRIV.NEED$ + " privilege required"  !PRINT ERROR  &
\		SUBEXIT					 	!AND EXIT     &
\	  END IF							      &
\	END IF								      &
\	FIRQB%(I%) = 0% FOR I% = 1% TO 30%	!CLEAR OUT THE FIRQB	      &
\	CALL FET$P BY REF (ASG.N%)		!GET THE LOGICAL NAME	      &
\	LOG.POS% = U.POS%			!SAVE ITS POSITION	      &
\	LOG.NAM$ = SEG$(U.STR$,1%,U.LEN%)	!EXTRACT IT		      &
\	LOG.NAM$ = EDIT$(LOG.NAM$,-2%)		!REMOVE ALL JUNK	      &
\	IF NOT SYS.FLAG% THEN			!IF USER LOGICAL THEN	      &
	 IF POS(LOG.NAM$,"$",1%) > 0% THEN		!CHECK FOR $ IN LOGICAL NAME &
	   U.POS% = LOG.POS%			!RETRIEVE POSITION OF LOGICAL &
\	   CALL DISPLY ("?Dollar signs are not allowed in user logical names") &
\	   SUBEXIT				!PRINT ERROR AND EXIT	      &
\	 END IF								      &
\	END IF								      &
!									      &
\	SELECT U.CMDC% 				!PROCESS THE COMMAND	      &
\	  CASE DEA.K%				!DEASSIGN		      &
\	   IF SYS.FLAG% THEN			!IF DEASSIGN/SYSTEM THEN      &
		FIRQB%(2%) = 21%		!  FUNCTION = 21 (UU.SLN)     &
\	   ELSE					!IF DEASSIGN/USER THEN	      &
		FIRQB%(2%) = 11%		!  FUNCTION = 11 (UU.DEA)     &
\	   END IF							      &
!									      &
\	  CASE ASG.K%				!ASSIGN			      &
\	    CALL FET$P BY REF (ASG.T%)		!GET THE DEVICE & PPN	      &
\	    DEV$ = SEG$(U.STR$,1%,U.LEN%)	!EXTRACT IT		      &
\	    CHANGE FSS$(DEV$,1%) TO FIRQB%	!DO THE FILENAME STRING SCAN  &
\	    FIRQB%(I%) = 0% FOR I% = 23% TO 26%	!CLEAR OUT DEVICE FIELDS      &
		IF (FIRQB%(30%) AND 32%) = 0%	! IF NO DEVICE WAS SPECIFIED  &
\	    FIRQB%(4%) = 0%			!REPLACE FLAG		      &
\	    FIRQB%(I%) = 0% FOR I% = 7%  TO 22%	!CLEAR OUT UNNEEDED BYTES     &
\	    FIRQB%(I%) = 0% FOR I% = 27% TO 30%	!CLEAR OUT UNNEEDED BYTES     &
\	    IF NOT SYS.FLAG% THEN		!IF ASSIGN/USER THEN	      &
		FIRQB%(2%) = 10%		!ASSIGN USER LOGICAL (.ASS)   &
\		FIRQB%(3%) = 0%			!ASSIGN LONG USER LOGICAL     &
\	        PROMPT% = 0% 			!DEFAULT TO NOQUERY	      &
\		LOGI_TYPE$ = " User"		!TYPE OF LOGICAL NAME	      &
\	    ELSE							      &
		FIRQB%(2%) = 21%		!ASSIGN SYSTEM LOGICAL (.SLN) &
\		FIRQB%(3%) = 4%			!ASSIGN LONG SYSTEM LOGICAL   &
\	        PROMPT% = -1% 			!DEFAULT TO QUERY	      &
\		LOGI_TYPE$ = " System"		!TYPE OF LOGICAL NAME	      &
\		CALL FET$CQ BY REF (RPL.Q%)	!/[NO]REPLACE SPECIFIED?      &
\		IF U.PRES% THEN			!IF PRESENT		      &
	      	  IF U.NO% THEN			! IF /NOREPLACE		      &
		    PROMPT% = 0%		!	DO NOT PROMPT	      &
	          ELSE				! IF /REPLACE		      &
		    CALL FET$KA BY REF (QER.K%) !   ASK FOR =QUERY	      &
\		    IF U.PRES% THEN		!   IF QUERY		      &
		   	PROMPT% = -1%		!	PROMPT IF FOUND	      &
\		    ELSE			!   IF NOQUERY		      &
		   	FIRQB%(4%) = 1%		!	SET /REPLACE	      &
\		   	PROMPT% = 0% 		!    	DO NOT PROMPT	      &
\		    END IF						      &
\	          END IF						      &
\		END IF							      &
\	    END IF							      &
!									      &
\	END SELECT							      &

5410	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYS CALL TO FIP	      &
\	LOG.NAM$ = SEG$(LOG.NAM$,1%,LEN(LOG.NAM$)-1%)			      &
		IF SEG$(LOG.NAM$,LEN(LOG.NAM$),LEN(LOG.NAM$)) = ":"	      &
						!REMOVE COLON IF THERE	      &
\	U$ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"	!ONLY ALPHANUMERICS ALLOWED   &
\	L$ = "abcdefghijklmnopqrstuvwxyz" 	!IN THE LOGICAL NAME	      &
\	N$ = "0123456789" 			!			      &
\	T$ = STRING$(36,0%) + "$" + STRING$(11,0%) + N$ + STRING$(7,0%) + U$  &
		+ STRING$(4,0%) + "." + STRING$(1,0%) + L$ + STRING$(5,0%)    &
\	LOG.NAM$ = XLATE$(LOG.NAM$,T$)		!CONVERT UNDERSCORES TO PERIODS &
\	LOG.NAM$ = LOG.NAM$ + SPACE$(21%-LEN(LOG.NAM$))	!PAD TO 21 CHARACTERS &
\	J%=7%					!START OF DATA IN THE FIRQB   &
\	FOR K%=1% TO 16% STEP 3			!CONVERT 5 WORDS (15 CHAR)    &
\	  RAD.50$ = SEG$(LOG.NAM$,K%,K%+2%)	!GET 3 CHARACTERS	      &
\	  GOSUB 10000				!GO CONVERT THEM TO RAD-50    &
\	  SUBEXIT IF ERRSTS%			!EXIT IF ERROR		      &
\	  FIRQB%(J%) = RAD.50% AND 255%		!FIRST HALF OF WORD	      &
\	  FIRQB%(J%+1%) = SWAP%(RAD.50%) AND 255% !SECOND HALF OF WORD	      &
\	  J%=J%+2%				!INCREMENT THE DATA LOCATION  &
\	NEXT K%								      &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE THE ARRAY TO A STRING &
\	ON ERROR GOTO 5450			!SET LOCAL ERROR TRAP	      &
\	CHANGE SYS(FIRQB$) TO FIRQ2%		!DO THE SYS CALL	      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	SUBEXIT IF U.CMDC% = DEA.K%		!EXIT IF NOT ASSIGN/SYSTEM    &
\	PRINT "Previous"; LOGI_TYPE$; " logical name replaced"		      &
		IF FIRQ2%(4%) = 1%					      &
\	SUBEXIT								      &

5420	PROMPT% = 0%				!ONLY PROMPT ONCE	      &
\	ON ERROR GOTO 5450			!SET LOCAL ERROR TRAP	      &
\	INPUT "Logical name already assigned - replace it <NO>"; ASK$	      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	SUBEXIT IF ASCII(EDIT$(ASK$,-2%)) <> 89%!EXIT IF NOT "Y"	      &
\	FIRQB%(4%) = 1%				!NOW SET TO REPLACE	      &
\	GOTO 5410				!TRY IT AGAIN		      &

5450	U.POS% = LOG.POS%			!RESTORE PARAMETER POSITION   &
\	RESUME 5420 IF (ERR = 3%) AND PROMPT%   !GO PROMPT TO REPLACE	      &
\		IF ERR = 2% THEN		!?ILLEGAL FILE NAME	      &
			CALL DISPLY ("?Invalid logical name") !PRINT ERROR    &
	ELSE	IF ERR = 3% THEN		!?ACCOUNT OR DEVICE IN USE    &
			CALL DISPLY ("?Logical already installed")!PRINT ERROR &
	ELSE	IF ERR = 5% THEN		!?CAN'T FIND FILE OR ACCOUNT  &
			CALL DISPLY ("%Logical not found") !PRINT WARNING     &
	ELSE	IF ERR = 11% THEN		!?END OF FILE ON DEVICE	      &
			RESUME 32767		! JUST EXIT		      &
	ELSE	GOTO 19000			!?UNKNOWN ERROR		      &

5460	RESUME 32767				!EXIT			      &

10000	!								      &
	!	CONVERT A THREE CHARACTER STRING TO RAD-50		      &
	!								      &
	!	INPUT:		RAD.50$ - 3 CHARACTER STRING TO CONVERT	      &
	!								      &
	!	OUTPUT:		RAD.50% - RAD-50 EQUIVALENT OF RAD.50$	      &
	!			ERRSTS% - SUCCESS/FAILURE FLAG		      &
	!								      &
	ERRSTS% = 0%				!ASSUME SUCCESS		      &
\	IF RAD50.TABLE$ = "" THEN		!IF STRING IS NOT INITIALIZED &
		RAD50.TABLE$ = " "		!  DUMMY FIRST CHARACTER      &
\		RAD50.TABLE$ = RAD50.TABLE$ + CHR$(I%) FOR I% = 65% TO 90%    &
						!  DO THE ALPHABET	      &
\		RAD50.TABLE$ = RAD50.TABLE$ + "$.?" !ADD SPECIAL CHARACTERS   &
\		RAD50.TABLE$ = RAD50.TABLE$ + CHR$(I%) FOR I% = 48% TO 57%    &
						!  DO THE NUMBERS	      &
\	END IF								      &
\	RAD.50% = 0%				!INIT THE RAD-50 NUMBER	      &
\ FORLOOP:								      &
	FOR I% = 1% TO 3%			!FOR THE 3 CHARACTERS	      &
\		THIS.CHAR$ = SEG$(RAD.50$,I%,I%)!  GET THIS CHARACTER	      &
\		ITERATE FORLOOP IF THIS.CHAR$ = " " !DO NEXT IF A SPACE	      &
\		S% = INSTR(1%,RAD50.TABLE$,THIS.CHAR$) !LOOKUP IN THE TABLE   &
\		IF S% < 2% THEN			!  IF NOT VALID		      &
			CALL DISPLY ("?Invalid Logical name")!PRINT ERROR MESS &
\			ERRSTS% = -1%		!    SET ERROR FLAG	      &
\			RETURN			!    GO BACK		      &
\		END IF							      &
\		S% = S% - 1%			!  GET THE ACTUAL OFFSET      &
\		RAD.50% = RAD.50% + (S% * 40%^(3%-I%)) !CALCULATE THE RAD-50  &
\	NEXT I%								      &
\	RETURN					!RETURN			      &

									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
