1	SUB UALLOC							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UALLOC					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT,SEL					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1990, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UALLOC						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	! V10.0-H SEL	22-Jan-90	Support extended logicals	      &
	! V10.0-I SEL	06-Mar-90	Allow /[NO]QUEUED if allocating a port &
	! V10.0-J SEL	21-Mar-90	Fix error handling to not print 2 msgs &
	!				Don't allow /[NO]queued on interactive &
	!				 LAT ports, just application (outbound) &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &


910	DIM	FIRQB%(30%)			!SYScall array		      &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


4000	!ALLOCATE							      &
	!DEALLOCATE							      &
	ON ERROR GOTO 19000			!SETUP STANDARD ERROR TRAP    &
									      &
\	SELECT	U.CMDC%				!SELECT THE COMMAND AGAIN     &
									      &
\	  CASE	ALO.K%				!ALLOCATE		      &
									      &
\	CALL FET$P BY REF (DEV.T%)		!GET THE DEVICE		      &
\	DEV.POS% = U.POS%			!STORE THE POSITION	      &
\	DEV$ = SEG$(U.STR$,1%,U.LEN%)		!EXTRACT IT		      &
\	DEV$ = DEV$ + ":" IF POS(DEV$,":",1%) = 0% !APPEND COLON IF NONE THERE &
\	CHANGE FSS$(DEV$,1%) TO FIRQB%		!DO THE FILENAME SCAN	      &
\	FIRQB%(I%) = 0% FOR I% = 3% TO 22%	!SET UP THE SYSCALL	      &
\	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYS CALL TO FIP	      &
\	FIRQB%(2%) = 10%			!ASSIGN/REASSIGN DEVICE	      &
\	CALL FET$CQ BY REF (JOB.Q%)		!/JOB SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE JOB NUMBER	      &
\		FIRQB%(7%) = U.LOW%		!  GET AND STORE THE NUMBER   &
\		JOB.POS% = U.POS%		!  STORE THE POSITION	      &
\	END IF								      &
\	CALL FET$CQ BY REF (SEZ.Q%)		!/SEIZE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		FIRQB%(17%) = 1%		!  SEIZE THE DEVICE, LOW BYTE &
\		FIRQB%(18%) = 128%		!  SEIZE THE DEVICE, HIGH BYTE &
\	END IF								      &
\	CALL FET$CQ BY REF (QUE.Q%)		!/[NO]QUEUED SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
	   DECLARE WORD CALLBUF(40%)					      &
\	   CALLBUF(J%) = 0% FOR J% = 0% TO 40% 	! Clear Call buffer	      &
\	   CALLBUF(J%+10%) = FIRQB%(J%) FOR J% = 23% TO 26%  !Copy device     &
\	   CALLBUF(0%)  = 40%			! Num of elements (for CHANGE) &
\	   CALLBUF(1%)  = 6%			! SYS call to FIP	      &
\	   CALLBUF(2%)  = 22%			! SEND/RCV function code      &
\	   CALLBUF(3%)  = 12%			! SHOW function		      &
\	   CALLBUF(4%)  = 7%			! SHOW PORT function	      &
\	   CALLBUF(11%) = 12%			! Channel # for data buffer   &
\	   CALLBUF(13%) = 128%			! Length of data buffer	      &
\	   CHANGE CALLBUF TO CALLBUF$		! Form the SYS CALL String    &
\	   OPEN "_NL:" AS FILE #12%,RECORDSIZE 128% ! Open a data buffer      &
\	   FIELD #12%, 128% AS DATA.BUFF$				      &
\	   ON ERROR GOTO 4340			! Setup local error trap      &
\	   CHANGE SYS(CALLBUF$) TO CALLBUF	! Do the SYS CALL	      &
\	   CLOSE #12%				! Close data buffer	      &
\	   IF (CALLBUF(5%) AND 2%) THEN		! Interactive port	      &
		CALL DISPLY ("?Qualifier only valid on LAT application ports") &
\		SUBEXIT							      &
\	   END IF							      &
\	   ON ERROR GOTO 19000			! Reset standard error trap   &
\	   FIRQB%(18%) = 128%			!  SET THE HIGH BYTE	      &
\	   IF U.NO% THEN						      &
		FIRQB%(17%) = (FIRQB%(17%) OR 2%) !NOQUEUED, LOW BYTE	      &
\	   ELSE								      &
		FIRQB%(17%) = (FIRQB%(17%) OR 4%) !QUEUED, LOW BYTE	      &
\	   END IF							      &
\	END IF								      &
									      &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE TO A STRING	      &
\	ON ERROR GOTO 4350			!SET LOCAL ERROR TRAP	      &
\	V$ = SYS(FIRQB$)			!DO THE SYSCALL		      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
									      &
\	CALL FET$P BY REF (LOG.T%)		!GET THE LOGICAL NAME IF ANY  &
\	SUBEXIT IF NOT U.PRES% 			!WE'RE DONE IF NOT PRESENT    &
\	LOG.POS% = U.POS% 			!RETRIEVE POSITION OF LOGICAL &
\	LOG.NAM$ = SEG$(U.STR$,1%,U.LEN%)	!EXTRACT IT		      &
\	LOG.NAM$ = EDIT$(LOG.NAM$,-2%)		!REMOVE ALL JUNK	      &
\	LOG.NAM$ = SEG$(LOG.NAM$,1%,LEN(LOG.NAM$)-1%)			      &
		IF SEG$(LOG.NAM$,LEN(LOG.NAM$),LEN(LOG.NAM$)) = ":"	      &
						!REMOVE COLON IF THERE	      &
\	IF POS(LOG.NAM$,"$",1%) > 0% THEN	!CHECK FOR $ IN LOGICAL NAME  &
	   CALL DISPLY ("?Dollar signs are not allowed in user logical names") &
\	   SUBEXIT				!PRINT ERROR AND EXIT	      &
\	END IF								      &
\	U$ = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"	!ONLY ALPHANUMERICS ALLOWED   &
\	L$ = "abcdefghijklmnopqrstuvwxyz" 	!IN THE LOGICAL NAME	      &
\	N$ = "0123456789" 			!			      &
\	T$ = STRING$(36,0%) + "$" + STRING$(11,0%) + N$ + STRING$(7,0%) + U$  &
		+ STRING$(4,0%) + "." + STRING$(1,0%) + L$ + STRING$(5,0%)    &
\	LOG.NAM$ = XLATE$(LOG.NAM$,T$)		!CONVERT UNDERSCORES TO PERIODS &
\	LOG.NAM$ = LOG.NAM$ + SPACE$(15%-LEN(LOG.NAM$)) !PAD TO 15 CHARACTERS &
\	CHANGE FSS$(DEV$,1%) TO FIRQB%		!PUT THE DEVICE IN THE FIRQB  &
\	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYS CALL TO FIP	      &
\	FIRQB%(2%) = 10%			!SUBFUNCTION CODE	      &
\	FIRQB%(I%) = 0% FOR I% =  3% TO 22%	!CLEAR OUT SOME BYTES	      &
\	FIRQB%(I%) = 0% FOR I% = 27% TO 30%	!CLEAR OUT SOME BYTES	      &
\	J%=7%					!START OF DATA IN THE FIRQB   &
\	FOR K%=1% TO 16% STEP 3			!CONVERT 5 WORDS (15 CHAR)    &
\	   RAD.50$ = SEG$(LOG.NAM$,K%,K%+2%)	!GET 3 CHARACTERS	      &
\	   GOSUB 4300				!GO CONVERT THEM TO RAD-50    &
\	   SUBEXIT IF ERRSTS%			!EXIT IF ERROR		      &
\	   FIRQB%(J%) = RAD.50% AND 255%	!FIRST HALF OF WORD	      &
\	   FIRQB%(J%+1%) = SWAP%(RAD.50%) AND 255% !SECOND HALF OF WORD	      &
\	   J%=J%+2%				!INCREMENT THE DATA LOCATION  &
\	NEXT K%								      &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE THE ARRAY TO A STRING &
\	ON ERROR GOTO 4320			!SET LOCAL ERROR TRAP	      &
\	V$ = SYS(FIRQB$)			!DO THE SYSCALL		      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
									      &
\	  CASE	DAL.K%				!DEALLOCATE		      &
									      &
\	CALL FET$P BY REF (DEV.T%)		!GET THE DEVICE		      &
\	IF NOT (U.PRES%) THEN			!IF NOT THERE		      &
		CALL FET$CQ BY REF (ALL.Q%)	!  /ALL SPECIFIED?	      &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			V$ = SYS(CHR$(6%)+CHR$(12%))!  DEASSIGN ALL DEVICES   &
\			SUBEXIT			!  AND EXIT		      &
\		END IF							      &
\	ELSE								      &
		Z$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT IT		      &
\		Z$ = Z$ + ":" IF POS(Z$,":",1%) = 0%!APPEND ":" IF NONE THERE &
\		CHANGE FSS$(Z$,1%) TO FIRQB%	!  DO THE FILENAME SCAN	      &
\		FIRQB%(I%) = 0% FOR I% = 3% TO 22%!SET UP THE SYSCALL	      &
\		FIRQB%(0%) = 30%		!  30 BYTES		      &
\		FIRQB%(1%) = 6%			!  SYS CALL TO FIP	      &
\		FIRQB%(2%) = 11%		!  SUB FUNCTION		      &
\		CHANGE FIRQB% TO FIRQB$		!  CHANGE THE ARRAY TO STRING &
\		V$ = SYS(FIRQB$)		!  DO THE SYSCALL	      &
\	END IF								      &
									      &
\	END SELECT							      &
\	SUBEXIT								      &

4300	!								      &
	!	CONVERT A THREE CHARACTER STRING TO RAD-50		      &
	!								      &
	!	INPUT:		RAD.50$ - 3 CHARACTER STRING TO CONVERT	      &
	!								      &
	!	OUTPUT:		RAD.50% - RAD-50 EQUIVALENT OF RAD.50$	      &
	!			ERRSTS% - SUCCESS/FAILURE FLAG		      &
	!								      &
	ERRSTS% = 0%				!ASSUME SUCCESS		      &
\	IF RAD50.TABLE$ = "" THEN		!IF STRING IS NOT INITIALIZED &
		RAD50.TABLE$ = " "		!  DUMMY FIRST CHARACTER      &
\		RAD50.TABLE$ = RAD50.TABLE$ + CHR$(I%) FOR I% = 65% TO 90%    &
						!  DO THE ALPHABET	      &
\		RAD50.TABLE$ = RAD50.TABLE$ + "$.?" !ADD SPECIAL CHARACTERS   &
\		RAD50.TABLE$ = RAD50.TABLE$ + CHR$(I%) FOR I% = 48% TO 57%    &
						!  DO THE NUMBERS	      &
\	END IF								      &
\	RAD.50% = 0%				!INIT THE RAD-50 NUMBER	      &
\ FORLOOP:								      &
	FOR I% = 1% TO 3%			!FOR THE 3 CHARACTERS	      &
\		THIS.CHAR$ = SEG$(RAD.50$,I%,I%)!  GET THIS CHARACTER	      &
\		ITERATE FORLOOP IF THIS.CHAR$ = " " !DO NEXT IF A SPACE	      &
\		S% = INSTR(1%,RAD50.TABLE$,THIS.CHAR$) !LOOKUP IN THE TABLE   &
\		IF S% < 2% THEN			!  IF NOT VALID		      &
			CALL DISPLY ("?Invalid Logical name")!PRINT ERROR MESS &
\			ERRSTS% = -1%		!    SET ERROR FLAG	      &
\			RETURN			!    GO BACK		      &
\		END IF							      &
\		S% = S% - 1%			!  GET THE ACTUAL OFFSET      &
\		RAD.50% = RAD.50% + (S% * 40%^(3%-I%)) !CALCULATE THE RAD-50  &
\	NEXT I%								      &
\	RETURN					!RETURN			      &

4320	!	LOCAL ERROR ROUTINE FOR ASSIGN				      &
	!								      &
	U.POS% = LOG.POS%			!RESTORE LOGICAL POSITION     &
\	SELECT ERR							      &
\		CASE 2%							      &
\				CALL DISPLY ("?Invalid logical name")	      &
\		CASE 3%							      &
\				CALL DISPLY ("?Logical already installed")    &
\		CASE 5%							      &
\				CALL DISPLY ("?Logical not found")	      &
\		CASE 11%						      &
\				PRINT "?End of file on device"		      &
\		CASE ELSE						      &
\				GOTO 19000	!?UNKNOWN ERROR		      &
\	END SELECT							      &
\	RESUME 32767				!EXIT			      &

4340	!	LOCAL ERROR ROUTINE FOR ALLOCATE/[NO]QUEUED		      &
	!								      &
	CLOSE #12%				! Close data buffer	      &
\	IF ERR = 6% THEN			! KB is not a LAT port	      &
	   CALL DISPLY ("?Qualifier only valid on LAT application ports")     &
\	   RESUME 32767							      &
\	END IF								      &
\	RESUME 19000				! Unexpected error!	      &

4350	!	LOCAL ERROR ROUTINE FOR ALLOCATE			      &
	!								      &
	U.POS% = DEV.POS%			!RESTORE DEVICE POSITION      &
\	SELECT	ERR							      &
\		CASE 3%							      &
\				CALL DISPLY ("?Device in use")		      &
\		CASE 8%							      &
\				CALL DISPLY ("?Device not available")	      &
\		CASE 10%						      &
\				PRINT "?Insufficient privileges"	      &
\		CASE 52%						      &
\				U.POS% = JOB.POS%			      &
\				CALL DISPLY ("?Nonexistent job")	      &
\		CASE ELSE						      &
\			   	GOTO 19000				      &
\	END SELECT							      &
\	RESUME 32767				!EXIT			      &
									      &


19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
