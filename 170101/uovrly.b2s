1	SUB UOVRLY							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UOVRLY					      &
	!	     version : V10.1					      &
	!	        edit : B					      &
	!	   edit date : 21-JUN-91				      &
	!	   author(s) : JAC					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UOVRLY						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! V10.0		7-Nov-89	Add FUT overlay to loadable list      &
	! V10.1		23-Jan-91	Add CFG overlay to loadable list      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &

									      &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &

									      &

910	DIM	FIRQB%(30%), SCAN%(30%)		!SYScall array		      &

920	DIM	OVR%(10%)			!Overlays specified (U.POS%)  &
\	DIM	OVR$(10%)			!Overlay name (internal)      &
\	DIM	OVR.LONG$(10%)			!Overlay name (long form)     &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &

5000	!								      &
	! Interpret the user command					      &
	!								      &
	OVR.COUNT% = 8%				! Define number of overlays   &
									      &
\	OVR%(Z%) = 0% FOR Z% = 1% TO OVR.COUNT%	! Assume no overlay activity  &
		! OVR%(1%) = Attribute		(LIN)			      &
		! OVR%(2%) = DCL		(PFB)			      &
		! OVR%(3%) = Delete_rename	(DLN)			      &
		! OVR%(4%) = Directory		(DIR)			      &
		! OVR%(5%) = System_calls	(UUO)			      &
		! OVR%(6%) = Terminal		(TRM)			      &
		! OVR%(7%) = File_Utility	(FUT)			      &
		! OVR%(8%) = Configuration	(CF1)			      &
									      &
\	OVR$(Z%) = MID("LINPFBDLNDIRUUOTRMFUTCF1",(Z%-1%)*3%+1%,3%)	      &
	FOR Z% = 1% TO OVR.COUNT%					      &
		! Define monitor overlay names (three chars per entry)	      &
									      &
\	LEG.OVR$	= CHR$(27%) + 'ATTRIBUTE      '			      &
			+ CHR$(27%) + 'DCL            '			      &
			+ CHR$(27%) + 'DELETE_RENAME  '			      &
			+ CHR$(27%) + 'DIRECTORY      '			      &
			+ CHR$(27%) + 'SYSTEM_CALLS   '			      &
			+ CHR$(27%) + 'TERMINAL       '			      &
			+ CHR$(27%) + 'FILE_UTILITY   '			      &
			+ CHR$(27%) + 'CONFIGURATION  '			      &
\	OVR.LEN% = 16%							      &
\	OVR.LONG$(Z%) = EDIT$(MID(LEG.OVR$,(Z%-1%)*OVR.LEN%+2%,OVR.LEN%-2%),2%) &
	FOR Z% = 1% TO OVR.COUNT%					      &
		! Define user overlay names (fifteen chars per overlay)	      &
		! Define an array for easy access			      &

5200	CALL FET$P BY REF (NAM.T%)		! Get the first privilege     &
\	IF NOT (U.PRES%) THEN			! IF NOT THERE		      &
		CALL FET$CQ BY REF (ALL.Q%)	!   /ALL specified?	      &
\		IF	U.PRES%			!   If	Present,	      &
		THEN	OVR%(Z%) = -1%		!   Then  Set overlay flags   &
			FOR Z% = 1% TO OVR.COUNT%!	  For the choices     &
\			GOTO 6000		!	  And continue ...    &
\		END IF				!   End If		      &
\	END IF								      &
\ PRVL:	Z$ = SEG$(U.STR$,1%,U.LEN%)		! Extract the privilege	      &
\	Z$ = EDIT$(Z$,-2%)			! Remove all junk	      &
									      &
\	IF	U.LEN% < 2%			! Check for minimum length    &
	THEN	CALL DISPLY ("?Abbreviation too short")	! Display error msg   &
\		SUBEXIT				!  and go back		      &
\	END IF								      &
									      &
\	OVERLAY% = INSTR(1%, LEG.OVR$, CHR$(27%) + Z$) ! Find index	      &
\	IF	OVERLAY% = 0%			! Invalid overlay given?      &
	THEN	CALL DISPLY ("?Invalid overlay name") ! Yup, so print error   &
\		SUBEXIT				!  and go back		      &
	ELSE	OVERLAY% = (OVERLAY% - 1%) / OVR.LEN% + 1%		      &
\	END IF								      &
									      &
\	OVR%(OVERLAY%) = U.POS%			! Set flag with position      &
\	CALL FET$NP BY REF			! Get the next privilege      &
\	GOTO PRVL IF U.PRES%			! Check it out if present     &

6000	!								      &
	! Execute the user command					      &
	!								      &
	FIRQB%(Z%) = 0% FOR Z% = 0% TO 30%	! Clean out the FIRQB copy    &
									      &
\	FOR Z% = 1% TO OVR.COUNT%		! Step thru each possibility  &
\	GOTO 6100 IF OVR%(Z%) = 0%		! Drop out if no action here  &
									      &
\	CHANGE FSS$(OVR$(Z%),1%) TO SCAN%	! Convert OVR name to RAD-50  &
\	FIRQB%(0%) = 30%			! Build up FIRQB to pass      &
\	FIRQB%(1%) = 6%				! Call to FIP		      &
\	FIRQB%(2%) = 34%			! Change sys characteristics  &
\	FIRQB%(3%) = 4%				! Load/Remove ovrly function  &
\	FIRQB%(7%) = SCAN%(7%)			! RAD-50 Spec for ovrly name  &
\	FIRQB%(8%) = SCAN%(8%)			! Second part of RAD-50 Spec  &
\	U.POS% = 0%				! Don't want cmd line reprint &
									      &
\	SELECT	U.CMDC%				! Select the command again    &
\	  CASE	LOV.K%				! LOAD/OVERLAY		      &
\		FIRQB%(5%) = 0%			! Load overlay function	      &
\		CHANGE FIRQB% TO FIRQB$		! Convert to a string	      &
\		Z$ = SYS(FIRQB$)		! and perform the function    &
\		CALL DISPLY ("Monitor overlay "+OVR.LONG$(Z%)+" loaded")      &
\	  CASE	UOV.K%				! UNLOAD/OVERLAY	      &
\		FIRQB%(5%) = 1%			! Unload overlay function     &
\		CHANGE FIRQB% TO FIRQB$		! Convert to a string	      &
\		Z$ = SYS(FIRQB$)		! and perform the function    &
\		CALL DISPLY ("Monitor overlay "+OVR.LONG$(Z%)+" unloaded")    &
\	END SELECT							      &

6100	NEXT Z%					! Step thru each overlay      &
\	SUBEXIT					! Done, so return	      &
									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
									      &
	IF	ERL = 6000%			! Problem loading overlay?    &
	THEN	U.POS% = 0%			! Use DISPLY for the error    &
									      &
\		IF	ERR = 10%		! Protection Violation?	      &
		THEN	U.POS% = 1%		! Repaint the command line    &
\			CALL DISPLY ("?SWCFG privilege required") ! Print err &
\			RESUME 32767		! Exit program		      &
\		END IF							      &
									      &
\		IF	ERR = 3%		! Overlay already loaded?     &
		THEN	CALL DISPLY ("%"+OVR.LONG$(Z%)+" already loaded")     &
\			RESUME 6100		! Continue w/next overlay     &
\		END IF							      &
									      &
\		IF	ERR = 32%		! Insufficient memory?	      &
		THEN	CALL DISPLY ("%XBUF too small to load "+OVR.LONG$(Z%)) &
\			RESUME 6100		! Continue w/next overlay     &
\		END IF							      &
									      &
\		IF	ERR = 21%		! Overlay not loaded?	      &
		THEN	CALL DISPLY ("%"+OVR.LONG$(Z%)+" not loaded")	      &
\			RESUME 6100		! Continue w/next overlay     &
\		END IF							      &
\	END IF								      &
									      &
\	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &

32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
