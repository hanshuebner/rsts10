1	SUB USHLPD							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : USHLPD					      &
	!	     version : V10.1					      &
	!	        edit : B					      &
	!	   edit date : 21-JUN-91				      &
	!	   author(s) : BGN,SEL					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL USHLPD						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! 10.0-01	13-Jul-89	(SEL) Print to OUT.CHN% (/OUTPUT)     &
	! 10.0-L4	28-Jun-90	(SEL) Rpt width = 80 if /OUTPUT=file  &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &


910	DIM	FIRQB%(30%)			!SYScall array		      &
\	NO$="No "				!Negative form of attribute   &
\	YES$=""					!Positive		      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

2100	TERM_WIDTH%=ASCII(SEG$(SYS(CHR$(6%)+	!Get this KB's width	      &
		CHR$(16%)+CHR$(0%)+CHR$(255%)),5%,5%))-1%		      &
\	COLUMN1% = 4%				!beginning of first column    &
\	COLUMNWIDTH% = 18%			!width of a column	      &
\	TERM_WIDTH% = 80% IF OUT.CHN%		!rpt width=80 if output=file  &

7100	ERROR_COND=0%				!SET TO -1 IF WE WANT TO EXIT &
\	ALL% = 0%				!DEFAULT TO NO /ALL	      &
\	CALL FET$CQ BY REF (ALL.Q%)		!/ALL SPECIFIED?	      &
\	ALL% = -1% IF U.PRES%			!FLAG IT IF THERE	      &
\	CALL FET$P BY REF (DEV.T%)		!GET THE DEVICE		      &
\	LP.FIRST% = 0%				!DEFAULT FIRST TO LP0:	      &
\	LP.LAST% = 7%				!DEFAULT LAST TO LP7:	      &
\  IF U.PRES% THEN				!IF PRESENT		      &
	CHANGE FSS$(U.STR$+":",1%) TO FIRQB%	!FSS THE DEVICE		      &
\	IF FIRQB%(23%)<>ASCII("L") OR FIRQB%(24%)<>ASCII("P") THEN	      &
		CALL DISPLY("?Device is not a Line Printer")	!ERROR	      &
\		ERROR_COND%=-1%			!SET ERROR CONDITION	      &
\	END IF								      &
\	IF FIRQB%(26%)=0% AND NOT(ERROR_COND%) THEN!UNIT REAL FLAG NOT SET?   &
		CALL DISPLY("?Unit number required")	!ERROR, NO UNIT NUMBER &
\		ERROR_COND%=-1%			!SET ERROR CONDITION	      &
\	END IF								      &
\	GOTO SUBPROGRAM_EXIT IF ERROR_COND%	!ABORT ON ERROR		      &
\	ALL% = 0%				! CLEAR THE /ALL FLAG	      &
\	LP.FIRST%, LP.LAST% = FIRQB%(25%)	! SET THE FIRST AND LAST      &
\  END IF								      &
\  FOR LP% = LP.FIRST% TO LP.LAST%		!LOOP THROUGH THE LP'S	      &
\	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYS CALL TO FIP	      &
\	FIRQB%(2%) = 34%			!CFG SYS CALL		      &
\	FIRQB%(3%) = 1%				!SET LP CHARACTERISTICS	      &
\	FIRQB%(4%) = 0%				!RESERVED		      &
\	FIRQB%(I%) = 0% FOR I% = 5% TO 22%	!NO CHANGES		      &
\	FIRQB%(23%) = ASCII("L")		!L[ine]			      &
\	FIRQB%(24%) = ASCII("P")		!P[rinter]		      &
\	FIRQB%(25%) = LP%			!PRINTER NUMBER		      &
\	FIRQB%(26%) = 255%			!REQUIRED		      &
									      &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE TO A STRING	      &
\	ON ERROR GOTO 7150			!SET LOCAL ERROR TRAP	      &
\	CHANGE SYS(FIRQB$) TO FIRQB%		!DO THE CALL		      &
\	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	LPTCHR%=FIRQB%(7%)+SWAP%(FIRQB%(8%))	!LP CHARACTERISTICS	      &
\	LPTSPC%=FIRQB%(12%)			!LPTSPC			      &
									      &
									      &
\	PRINT #OUT.CHN%, "Printer _LP";NUM1$(FIRQB%(25%));":"!IDENT LINE      &
\	PRINT #OUT.CHN%,					!BLANK LINE   &
\	TEXT$="Real" IF LPTCHR% AND 1%		!=REAL			      &
\	TEXT$="Control" IF LPTCHR% AND 2%	!=CONTROL		      &
\	TEXT$="Simulate" IF (LPTCHR% AND 3%)=0%	!=SIMULATE		      &
\	FOO% = FNPRINTCOLUMN%("Backspace="+TEXT$)!PRINT IT		      &
						!BACKSPACE		      &
									      &
\	IF LPTCHR% AND 8% THEN			!CONTROLS		      &
		TEXT$=YES$			!SET			      &
	ELSE					!			      &
		TEXT$=NO$			!NOT SET		      &
\	END IF					!			      &
\	FOO% = FNPRINTCOLUMN%(TEXT$+"Controls") !PRINT IT		      &
									      &
\	IF LPTCHR% AND 64% THEN			!CR_PREFIX		      &
		TEXT$=NO$			!SET MEANS /NOCR_PREFIX	      &
	ELSE					!			      &
		TEXT$=YES$			!NOT SET		      &
\	END IF					!			      &
\	FOO% = FNPRINTCOLUMN%(TEXT$+"CR_Prefix")!PRINT IT		      &
									      &
\	IF LPTCHR% AND 4% THEN			!EIGHT_BIT		      &
		TEXT$=YES$			!SET			      &
	ELSE					!			      &
		TEXT$=NO$			!NOT SET		      &
\	END IF					!			      &
\	FOO% = FNPRINTCOLUMN%(TEXT$+"Eight_Bit")!PRINT IT		      &
									      &
\	IF LPTCHR% AND 32% THEN			!EOT			      &
		TEXT$=YES$			!SET			      &
	ELSE					!			      &
		TEXT$=NO$			!NOT SET		      &
\	END IF					!			      &
\	FOO% = FNPRINTCOLUMN%(TEXT$+"Eot")	!PRINT IT		      &
									      &
\	IF LPTCHR% AND 16% THEN			!FILL			      &
		TEXT$=NO$			!SET MEANS /NOFILL	      &
	ELSE					!			      &
		TEXT$=YES$			!NOT SET		      &
\	END IF					!			      &
\	FOO% = FNPRINTCOLUMN%(TEXT$+"Fill")	!PRINT IT		      &
									      &
\	IF LPTCHR% AND 2048% THEN		!LOWERCASE		      &
		TEXT$="Lowercase"		!LOWER			      &
\		FOO% = FNPRINTCOLUMN%(TEXT$)	!PRINT IT		      &
\	END IF					!			      &
									      &
\	IF LPTCHR% AND 128% THEN		!OMIT_CR		      &
		TEXT$=YES$			!SET			      &
	ELSE					!			      &
		TEXT$=NO$			!NOT SET		      &
\	END IF					!			      &
\	FOO% = FNPRINTCOLUMN%(TEXT$+"Omit_CR")	!PRINT IT		      &
									      &
\	FOO% = FNPRINTCOLUMN%("Page Length="+NUM1$(FIRQB%(6%)))!FORM LENGTH   &
									      &
\	IF FIRQB%(12%) THEN			!SPECIAL CHARACTER	      &
		TEXT$="Special_Character=CHR$("+NUM1$(LPTSPC%)+")"	      &
	ELSE					!			      &
		TEXT$="No Special_Character"	!NONE			      &
\	END IF					!			      &
\	FOO% = FNPRINTCOLUMN%(TEXT$)		!PRINT IT		      &
									      &
\	IF LPTCHR% AND 256% THEN		!TAB			      &
		TEXT$=YES$			!SET			      &
	ELSE					!			      &
		TEXT$=NO$			!NOT SET		      &
\	END IF					!			      &
\	FOO% = FNPRINTCOLUMN%(TEXT$+"Tab")	!PRINT IT		      &
									      &
\	IF (LPTCHR% AND 2048%) = 0% THEN	!UPPERCASE		      &
		TEXT$="Uppercase"		!UPPER			      &
\		FOO% = FNPRINTCOLUMN%(TEXT$)	!PRINT IT		      &
\	END IF					!			      &
									      &
\	FOO% = FNPRINTCOLUMN%("Width="+NUM1$(FIRQB%(5%))) !WIDTH	      &
\	PRINT #OUT.CHN%, IF CCPOS(OUT.CHN%)		!RETURN CURSOR TO LEFT MARGIN &
\	PRINT #OUT.CHN%, IF ALL%			!PRINT A BLANK IF MORE THAN 1
7120									      &
 NEXT LP%					!NEXT LP		      &
									      &
\ SUBPROGRAM_EXIT:							      &
\	SUBEXIT					!EXIT			      &

7150	GOTO 19000 IF (ERR <> 6%) OR		!UNKNOWN IF NOT A VALID DEVICE &
		      (ALL% = 0%)		! OR NOT /ALL		      &
\	RESUME 7120				!GO DO THE NEXT LINE PRINTER  &
									      &


17100	! FNPRINTCOLUMN% (TEXT$) -- PRINT text in next available column.      &
	! Inputs:							      &
	!	TEXT$ -- The text to print				      &
	!	TERM_WIDTH% -- Width of screen				      &
	!	CCPOS(OUT.CHN%) -- Current cursor position		      &
	! Effect:							      &
	!	If there isn't room for another column, <CR><LF> is	      &
	!	printed and the cursor is advanced to the left margin.	      &
	!	Otherwise cursor is advanced to next column (i.e. position of &
	!	first column plus n * width of a column).		      &
	!	Text is printed.					      &
	! Value: Meaningless.						      &

17110	DEF FNPRINTCOLUMN% (TEXT$)					      &
	\ CURSOR% = CCPOS(OUT.CHN%)		! Get current cursor position. &
	\ IF CURSOR% < COLUMN1% THEN	! If cursor is left of first col of   &
					! text then			      &
		PRINT #OUT.CHN%, SPACE$ (COLUMN1% - CURSOR%);		      &
					!   Move cursor to first column of    &
					!   text.			      &
		\ GOTO 17140		!   Go print text.		      &

17120	NEXTCOLUMN% = ((CURSOR%-COLUMN1%)/COLUMNWIDTH%)*COLUMNWIDTH% +	      &
	COLUMNWIDTH% + COLUMN1%		! Compute position of next text col.  &
	\ PAD% = NEXTCOLUMN% - CURSOR%	! Compute spaces needed to pad cursor &
					! to next column.		      &
									      &
	\ IF (NEXTCOLUMN% + COLUMNWIDTH%) > TERM_WIDTH% THEN		      &
					! If there isn't room for another     &
					! column then			      &
		PRINT #OUT.CHN%,		!   Go to next line of screen. &
		\ PRINT #OUT.CHN%, SPACE$ (COLUMN1%);!  Move cursor to first  &
					!   column of text.		      &
		\ GOTO 17140		!   Go print text.		      &

17130	PRINT #OUT.CHN%, SPACE$ (PAD%);	! Pad cursor out to next column.      &

17140	PRINT #OUT.CHN%, TEXT$;		! Print the text.		      &
	\ FNEND								      &

19000	ON ERROR GO BACK		!NOT HANDLED (YET)		      &

32767	!								      &
	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	SUBEND
