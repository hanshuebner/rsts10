1	SUB UFILE							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : UFILE					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 10-MAY-91				      &
	!	   author(s) : JJT, FEK					      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1984, 1991 by		      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL UFILE						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! V9.2-01	09-Jan-86	(JJT) Fix Wildcard lookup	      &
	! V10.0		02-Nov-89	(FEK) Add /[NO]BACKUP and	      &
	!					/[NO]IGNORE		      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &


700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &


910	DIM	FIRQB%(30%),			!SYScall array		      &
		FIRQ2%(30%)			!Second SYScall array	      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &


5900	!SET FILE							      &
									      &
	CALL FET$P BY REF (FIL.T%)		!GET THE FILESPEC	      &
\	Z$ = SEG$(U.STR$,1%,U.LEN%)		!EXTRACT IT		      &
\	F$ = Z$					!SAVE THE FILESPEC	      &
\	CHANGE FSS$(F$,1%) TO FIRQ2%		!DO THE FILENAME STRING SCAN  &
\	WILD% = 0%				!DEFAULT TO NO WILDCARD SPEC  &
\	WILD% = -1% IF (FIRQ2%(28%) AND 128%)=128% !SET WILD FLAG IF TRUE     &
\	IF (FIRQ2%(29%) AND 8%) = 0% THEN 	!IF NO FILETYPE SPECIFIED     &
		FIRQ2%(11%) = -17947% AND 255%	!PUT IN RAD-50 OF	      &
\		FIRQ2%(12%) = SWAP%(-17947%) AND 255%!3 QUESTION MARKS	      &
\		WILD% = -1%			!SET THE WILD FLAG	      &
\	END IF								      &
\	LOG% = WILD%				!DEFAULT LOG TO SAME AS WILD  &
\	CALL FET$CQ BY REF (LOG.Q%)		!/[NO]LOG SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		LOG% = 0% IF U.NO%		!  CLEAR FLAG IF /NOLOG	      &
\		LOG% = -1% IF NOT U.NO%		!  SET FLAG IF /LOG	      &
\	END IF								      &
\	SUCCESS% = 0%				!DEFAULT TO NO SUCCESS	      &
\	PPN.INDX%, FILE.INDX% = 0%		!CLEAR THE INDEX FLAGS	      &
\	WHILE 1% = 1%				!LOOP FOREVER		      &
\		ON ERROR GOTO 5930		!  SET LOCAL ERROR TRAP	      &
\		FIRQB%(0%) = 30%		!  30 BYTES		      &
\		FIRQB%(1%) = 6%			!  SYS CALL TO FIP	      &
\		FIRQB%(2%) = 25%		!  WILDCARD PPN LOOKUP	      &
\		FIRQB%(3%) = PPN.INDX%		!  LOWER HALF OF INDEX	      &
\		FIRQB%(4%) = SWAP%(PPN.INDX%)	!  UPPER HALF OF INDEX	      &
\		FIRQB%(I%) = FIRQ2%(I%)		!  SET PPN		      &
			FOR I% = 5% TO 6%				      &
\		FIRQB%(I%) = 0% FOR I% = 7% TO 22%!CLEAR OUT SOME OF ARRAY    &
\		FIRQB%(I%) = FIRQ2%(I%)		!  SET DEVICE		      &
			FOR I% = 23% TO 26%				      &
\		CHANGE FIRQB% TO FIRQB$		!  CHANGE THE ARRAY TO STRING &
\		FIRQB$ = SYS(FIRQB$)		!  DO THE SYS CALL	      &
\		PROJ% = ASCII(SEG$(FIRQB$,6%,6%))! STORE PROJECT NUMBER	      &
\		PROG% = ASCII(SEG$(FIRQB$,5%,5%))! STORE PROGRAMMER NUMBER    &
\		WHILE 1% = 1%			!  LOOP FOREVER		      &
\			ON ERROR GOTO 5920	!    SET LOCAL ERROR TRAP     &
\			FIRQB%(0%) = 30%	!    30 BYTES		      &
\			FIRQB%(1%) = 6%		!    SYS CALL TO FIP	      &
\			FIRQB%(2%) = 17%	!    WILDCARD DIRECTORY LOOKUP &
\			FIRQB%(3%) = FILE.INDX%	!    LOWER HALF OF INDEX      &
\			FIRQB%(4%) = SWAP%(FILE.INDX%) !UPPER HALF OF INDEX   &
\			FIRQB%(5%) = PROG%	!    PROGRAMMER NUMBER	      &
\			FIRQB%(6%) = PROJ%	!    PROJECT NUMBER	      &
\			FIRQB%(I%) = FIRQ2%(I%)	!    SET FILENAME AND TYPE    &
				FOR I% = 7% TO 12%			      &
\			FIRQB%(I%) = 0% FOR I% = 13% TO 22% !CLEAR OUT	      &
\			FIRQB%(I%) = FIRQ2%(I%)	!    SET DEVICE		      &
				FOR I% = 23% TO 26%			      &
\			CHANGE FIRQB% TO FIRQB$	!    CHANGE ARRAY TO A STRING &
\			CHANGE SYS(FIRQB$) TO FIRQB%!DO THE SYS CALL	      &
\			F$ = ""			!    INIT THE FILENAME VAR    &
\			IF FIRQB%(23%) <> 0% THEN!   IF THERE IS A DEVICE     &
				F$ = F$ +CHR$(FIRQB%(23%))+CHR$(FIRQB%(24%))  &
						!      GET DEVICE NAME	      &
\				F$ = F$ +NUM1$(FIRQB%(25%)) IF FIRQB%(26%)<>0% &
						!      GET UNIT # IF IT EXISTS &
\				F$ = F$ + ":"	!      ADD A COLON	      &
\			END IF						      &
\			F$ =F$+"["+NUM1$(FIRQB%(6%))+","+NUM1$(FIRQB%(5%))+"]" &
						!      ADD THE PPN	      &
\			F$ =F$+RAD$(FIRQB%(I%)+SWAP%(FIRQB%(I%+1%))) !ADD     &
				FOR I% = 7% TO 9% STEP 2%	     !FILENAME &
\			F$ =F$+"."+RAD$(FIRQB%(11%)+SWAP%(FIRQB%(12%)))	      &
						!      ADD FILETYPE	      &
\			CALL FET$CQ BY REF (RTS.Q%)!/RUNTIME_SYSTEM SPECIFIED? &
\			IF U.PRES% THEN		!IF PRESENT		      &
				CALL FET$A BY REF!  GET THE ARGUMENT	      &
\				Z$ = SEG$(U.STR$,1%,U.LEN%)!  EXTRACT RTS NAME &
\				CHANGE FSS$(Z$,1%) TO FIRQB%! DO THE FSS      &
\				OPEN F$ FOR INPUT AS FILE 1%!  OPEN THE FILE  &
\				FIRQB%(I%) = FIRQB%(I%-6%) FOR I% = 13% TO 16% &
						!  MOVE RTS NAME	      &
\				FIRQB%(0%) = 30%!  30 BYTES		      &
\				FIRQB%(1%) = 6%	!  SYS CALL TO FIP	      &
\				FIRQB%(2%) = -26%!  SUBFUNCTION CODE	      &
\				FIRQB%(3%) = 1%	!  CHANNEL NUMBER	      &
\				FIRQB%(4%) = 8%	!  CHANGE RTS FIELD CODE      &
\				CHANGE FIRQB% TO FIRQB$	!  CHANGE TO STRING   &
\				V$ = SYS(FIRQB$)!  DO THE SYS CALL	      &
\				CLOSE 1%	!  CLOSE THE FILE	      &
\				FIRQB%(I%) = 0% FOR I% = 0% TO 30%!CLEAR OUT  &
\				SUCCESS% = -1%	!    FLAG THE SUCCESS	      &
\			END IF						      &
\			CALL FET$CQ BY REF (PTC.Q%)!/PROTECTION SPECIFIED?    &
\			IF U.PRES% THEN		!IF PRESENT		      &
				CALL FET$A BY REF!  GET THE ARGUMENT	      &
\				Z% = U.LOW%	!  GET THE NUMBER	      &
\				NAME F$ AS F$ + "/PROT:"+NUM1$(Z%)	      &
						!  SET THE PROTECTION CODE    &
\				SUCCESS% = -1%	!    FLAG THE SUCCESS	      &
\			END IF						      &
\			CHANGE FSS$(F$,1%) TO FIRQB%!DO THE FILENAME SCAN     &
\			FIRQB%(0%) = 30%	!30 BYTES		      &
\			FIRQB%(1%) = 6%		!SYS CALL TO FIP	      &
\			FIRQB%(2%) = -26%	!FILE UTILITY CODE	      &
\			FIRQB%(I%) = 0% FOR I% = 3% TO 4%		      &
						! NO CHANNEL # AND CLEAR FLAGS &
\			FIRQB%(I%) = 0% FOR I% = 13% TO 22%!CLEAR OUT	      &
\			FIRQB%(I%) = 0% FOR I% = 27% TO 30%!MORE OF THE ARRAY &
\			QUALIFIER.FOUND% = 0%	!DEFAULT TO NOQUALIFIERS FOUND &
\			CALL FET$CQ BY REF (CAC.Q%)!/[NO]CACHE SPECIFIED?     &
\			IF U.PRES% THEN		!IF PRESENT		      &
				QUALIFIER.FOUND% = -1% !  WE FOUND A QUALIFIER &
\				FIRQB%(4%) = FIRQB%(4%) OR 128%		      &
						!  SET THE ENABLE/DISABLE BIT &
\				IF NOT U.NO% THEN!  IF /CACHE		      &
					FIRQB%(15%) = FIRQB%(15%) OR 128%     &
						!     ENABLE CACHING	      &
\					CALL FET$KA BY REF (SEQ.K%)	      &
						!    /CACHE=SEQUENTIAL?	      &
\					IF U.PRES% THEN	!    IF PRESENT	      &
						FIRQB%(4%) = FIRQB%(4%) OR 64% &
						!	SET SEQ/RAN BIT	      &
\						FIRQB%(15%)= FIRQB%(15%) OR 4% &
						!	SEQ CACHING	      &
\					END IF				      &
\					CALL FET$KA BY REF (RND.K%)	      &
						!    /CACHE=RANDOM?	      &
\					IF U.PRES% THEN	!IF PRESENT	      &
						FIRQB%(4%) = FIRQB%(4%) OR 64% &
						!	  SET SEQ/RAN BIT     &
\					END IF				      &
\				END IF					      &
\			END IF						      &
\			CALL FET$CQ BY REF (NCG.Q%)!/NOCONTIGUOUS SPECIFIED?  &
\			IF U.PRES% THEN		!IF PRESENT		      &
				QUALIFIER.FOUND% = -1% ! WE FOUND A QUALIFIER &
\				FIRQB%(4%) = FIRQB%(4%) OR 32%		      &
						! MAKE THE FILE NONCONTIGUOUS &
\			END IF						      &
\			CALL FET$CQ BY REF (PLC.Q%)!/[NO]PLACED SPECIFIED?    &
\			IF U.PRES% THEN		!IF PRESENT		      &
				QUALIFIER.FOUND% = -1% ! WE FOUND A QUALIFIER &
\				FIRQB%(4%) = FIRQB%(4%) OR 1%		      &
						!    SET PLACED/NOPLACED BIT  &
\				FIRQB%(15%) = FIRQB%(15%) OR 2% IF NOT U.NO%  &
						!    SET PLACED BIT	      &
\			END IF						      &
\			CALL FET$CQ BY REF (DLT.Q%)!/[NO]DELETABLE SPECIFIED? &
\			IF U.PRES% THEN		!    IF PRESENT		      &
				QUALIFIER.FOUND% = -1% ! WE FOUND A QUALIFIER &
\				FIRQB%(27%) = FIRQB%(27%) OR 1% ! CHANGE FLAG &
\				FIRQB%(15%) = FIRQB%(15%) OR 32% IF U.NO%     &
						!      IF /NODELETABLE	      &
\			END IF						      &
\			CALL FET$CQ BY REF (BCK.Q%)!/[NO]BACKUP SPECIFIED?    &
\			IF U.PRES% THEN		! IF PRESENT		      &
\				QUALIFIER.FOUND% = -1% ! WE FOUND A QUALIFIER &
\				FIRQB%(27%) = FIRQB%(27%) OR 4% ! CHANGE FLAG &
\				FIRQB%(15%) = FIRQB%(15%) OR 8% IF U.NO%      &
						!      IF /NOBACKUP	      &
\			END IF						      &
\			CALL FET$CQ BY REF (IGN.Q%)!/[NO]IGNORE SPECIFIED?    &
\			IF U.PRES% THEN		! IF PRESENT		      &
\				QUALIFIER.FOUND% = -1% ! WE FOUND A QUALIFIER &
\				FIRQB%(27%) = FIRQB%(27%) OR 8% ! CHANGE FLAG &
\				FIRQB%(15%) = FIRQB%(15%) OR 64% UNLESS U.NO% &
						!      IF /IGNORE	      &
\			END IF						      &
\			IF QUALIFIER.FOUND% THEN!IF A QUALIFIER WAS SPECIFIED &
				CHANGE FIRQB% TO FIRQB$	!  CHANGE TO A STRING &
\				FIRQB$ = SYS(FIRQB$)	!  DO THE SYS CALL    &
\				SUCCESS% = -1%	!    FLAG THE SUCCESS	      &
\			END IF						      &
\			PRINT F$;" modified" IF SUCCESS% AND LOG% !PRINT LOG  &
						! IF SUCCESSFUL AND LOG WANTED &
\			FILE.INDX% = FILE.INDX% + 1% ! INCREMENT THE INDEX    &
\		NEXT				!    NEXT FILE		      &

5910		FILE.INDX% = 0%			!    RESET THE INDEX TO ZERO  &
\		PPN.INDX% = PPN.INDX% + 1%	!    INCREMENT THE INDEX      &
\	NEXT					!  NEXT PPN		      &

5920	GOTO 5940 IF ERR <> 5%			!GOTO UNKNOWN ERROR ROUTINE   &
\	RESUME 5910				!NO MORE FILES, GET NEXT PPN  &

5930	GOTO 5940 IF ERR <> 5%			!GOTO UNKNOWN ERROR ROUTINE   &
\	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	RESUME 32767				!GET NEXT COMMAND	      &

5940	PRINT "Error modifying file "; F$	!PRINT THE FILENAME	      &
\	PRINT ERT$(ERR)				!PRINT THE ERROR	      &
\	RESUME 32767							      &

									      &
									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &


32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
