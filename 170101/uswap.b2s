1	SUB USWAP							      &
\	ON ERROR GOTO 19000						      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   t i t l e				      &
	!								      &
	!	  subprogram : USWAP					      &
	!	     version : V10.1					      &
	!	        edit : A					      &
	!	   edit date : 13-MAY-91				      &
	!	   author(s) : JJT,BGN,SEL				      &
	!								      &
	!******************************************************************** &
	!								      &
	!		  C O P Y R I G H T				      &
	!								      &
	!								      &
	!		      Copyright (C) 1991 by			      &
	!	Digital Equipment Corporation, Maynard, Mass.		      &
	!								      &
	!								      &
	! This software is furnished under a license and may be used and      &
	! copied  only  in accordance with the terms of such license and      &
	! with the  inclusion  of  the  above  copyright  notice.   This      &
	! software  or  any  other copies thereof may not be provided or      &
	! otherwise made available to any other person.  No title to and      &
	! ownership of the software is hereby transferred.		      &
	!								      &
	! The information in this software is subject to change  without      &
	! notice  and should not be construed as a commitment by Digital      &
	! Equipment Corporation.					      &
	!								      &
	! DIGITAL assumes no responsibility for the use  or  reliability      &
	! of its software on equipment that is not supplied by DIGITAL.	      &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   c a l l   f o r m a t		      &
	!								      &
	!	CALL USWAP						      &
	!								      &
	!	Argument	I/O	Usage				      &
	!	========	===	=====				      &
	!								      &
	!******************************************************************** &
	!								      &
	!	m o d i f i c a t i o n   h i s t o r y   l o g		      &
	!								      &
	!								      &
	! VER/ED	EDIT DATE	REASON				      &
	!								      &
	! V9.1-04	02-Jul-85	(JJT) Fix swap max for V9.1	      &
	! V9.2-02	24-Oct-85	(JJT) Add defaults for		      &
	!				      INSTALL/system-file	      &
	! V9.3-03	15-Apr-86	(JJT) Check for correct ppn and type  &
	! V9.3-18	11-Nov-86	(JJT) Add error messages to SHOW FILE &
	! V10.0-01	13-Jul-89	(SEL) Print to OUT.CHN% (/OUTPUT)     &
	! V10.0-G	17-Nov-89	(SEL) Set SWAP, ERR and INSTALL file  &
	!					/NOBACKUP when creating them. &
	! V10.0-I	15-Feb-90	(SEL) Return a confirmation msg on    &
	!					REMOVE/OVERLAY if no OVR.SYS  &
	! V10.1-A	09-May-91	(SEL) Remove xtra spaces in messages  &
	!								      &
	!******************************************************************** &
	!								      &
	!	s u b p r o g r a m   d e s c r i p t i o n		      &
	!								      &
	!								      &
	!******************************************************************** &
	!								      &
	!	v a r i a b l e s  /  a r r a y s   u s e d		      &
	!								      &
	!	name		description				      &
	!	====		===========				      &
	!								      &
	!******************************************************************** &

									      &
									      &
									      &

700	!	i n c l u d e   r e q u i r e d   M A P s , C O M M O N s     &
	!								      &
	!								      &
	%INCLUDE "CUI:CUICMN.B2S"		!include CUI data section     &
	%INCLUDE "SYSTEM:UTYKEY.B2S"		!include CUI common data      &

750	COMMON	(DSPCMN)	INDENT.COLUMN%				      &
									      &

									      &

910	DIM	FIRQB%(30%),			!SYScall array		      &
		FIRQ2%(30%)			!Second SYScall array	      &

									      &

1000	!	m a i n   s u b p r o g r a m   l o g i c		      &
	!								      &
	!								      &
									      &

3999	!	p r o c e s s    c o m m a n d				      &
									      &

									      &

6400	!INSTALL/SWAP_FILE						      &
	!INSTALL/ERROR_FILE						      &
	!INSTALL/OVERLAY_FILE						      &
	!REMOVE/SWAP_FILE						      &
	!REMOVE/ERROR_FILE						      &
	!REMOVE/OVERLAY_FILE						      &
	!SHOW FILE/SYSTEM						      &
									      &
	SELECT	U.CMDC%				!SELECT THE COMMAND AGAIN     &
\	  CASE	DSW.K%,				!INSTALL/anything	      &
		DER.K%,				!			      &
		DOV.K%,				!			      &
		KSP.K%,				!REMOVE/anything	      &
		KER.K%,				!			      &
		KOV.K%				!			      &
									      &
\	SWAP.NUM% = -1%				!DEFAULT TO NO QUALIFIERS     &
\	PRIV.NEED$ = "INSTAL"			!WE NEED INSTAL PRIV	      &
\	IF ASCII(SEG$(SYS(CHR$(6%)+CHR$(32%)+CHR$(1%)+ !IF WE DON'T HAVE      &
		 STRING$(3%,0%)+PRIV.NEED$),3%,3%)) THEN !THE RIGHT PRIV      &
		PRINT "?"+PRIV.NEED$+ " privilege required" ! PRINT ERROR MSG &
\		SUBEXIT				!		AND EXIT      &
\	END IF								      &
\	IF U.CMDC%=DSW.K% OR U.CMDC%=KSP.K% THEN!/SWAP_FILE SPECIFIED?	      &
		CALL FET$P BY REF (SWN.T%)	!  GET THE ARGUMENT	      &
\		SWAP.NUM% = VAL(LEFT(U.STR$,U.LEN%))!GET THE SWAP_FILE NUMBER &
\		IF SWAP.NUM% = 2% THEN 		! IF IT IS THE PERM SWAP_FILE &
			CALL DISPLY ("?Invalid SWAP FILE number")	      &
\			SUBEXIT			! PRINT THE ERROR AND GO BACK &
\		END IF							      &
\		DFL.FIL$ = "_SY0:[0,1]SWAP"+NUM1$(SWAP.NUM%)+".SYS"	      &
						! FORM THE DEFAULT FILESPEC   &
\		FIL.TYP$ = "Swap file"		! IDENTIFY THE TYPE OF FILE   &
\	END IF								      &
\	IF U.CMDC%=DOV.K% OR U.CMDC%=KOV.K% THEN!/OVERLAY_FILE SPECIFIED?     &
		SWAP.NUM% = 4%			!  SET APPROPRIATE INDEX      &
\		DFL.FIL$ = "_SY0:[0,1]OVR.SYS"	! FORM THE DEFAULT FILESPEC   &
\		FIL.TYP$ = "Overlay file"	! IDENTIFY THE TYPE OF FILE   &
\	END IF								      &
\	IF U.CMDC%=DER.K% OR U.CMDC%=KER.K% THEN!/ERROR_FILE SPECIFIED?	      &
		SWAP.NUM% = 5%			!  SET APPROPRIATE INDEX      &
\		DFL.FIL$ = "_SY0:[0,1]ERR.SYS"	! FORM THE DEFAULT FILESPEC   &
\		FIL.TYP$ = "Error file"		! IDENTIFY THE TYPE OF FILE   &
\	END IF								      &
									      &
\	SUBEXIT IF SWAP.NUM% = -1%		!EXIT IF NO QUALIFIERS	      &
\	LOG.% = -1%				!DEFAULT TO /LOG	      &
\	CALL FET$CQ BY REF (LOG.Q%)		!/[NO]LOG SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		IF U.NO% THEN			!  IF /NOLOG		      &
			LOG.% = 0%		!    CLEAR THE FLAG	      &
\		END IF							      &
\	END IF								      &
\	IF U.CMDC% = KSP.K% OR U.CMDC% = KOV.K% OR U.CMDC% = KER.K% THEN      &
						!IF REMOVE		      &
	   D$ = " "+NUM1$(SWAP.NUM%) IF U.CMDC% = KSP.K%     !ADD SWAP FILE # &
\	   GOTO 6410				!  CONTINUE		      &
\	END IF								      &
									      &
\	Z$ = ""					!DEFAULT TO NO /SIZE	      &
\	CALL FET$CQ BY REF (SIZ.Q%)		!/SIZE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE FILESIZE	      &
\		Z% = U.LOW%			!  AS AN INTEGER	      &
\		Z$ = "/SIZE:" + NUM1$(Z%)	!  PUT ON /SIZE FILE SWITCH   &
\	END IF								      &
\	P$ = ""					!DEFAULT TO NO /POSITION      &
\	CALL FET$CQ BY REF (POS.Q%)		!/POSITION SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$KA BY REF (MID.K%)	! =MIDDLE SPECIFIED?	      &
\		IF U.PRES% THEN			!   IF PRESENT		      &
			P$ = "/POS:-1"		!     PUT IN MIDDLE VALUE     &
\		END IF							      &
\		CALL FET$KA BY REF (IDX.K%)	! =INDEX SPECIFIED?	      &
\		IF U.PRES% THEN			!   IF PRESENT		      &
			P$ = "/POS:-2"		!     PUT IN INDEX VALUE      &
\		END IF							      &
\		IF P$ = "" THEN			!IF NO VALUE SET YET	      &
			CALL FET$A BY REF	!  GET THE POSITION	      &
\			Z% = U.LOW%		!  AS AN INTEGER	      &
\			P$ = "/POS:" + NUM1$(Z%)!  PUT ON /POS FILE SWITCH    &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (DVE.Q%)		!/DEVICE SPECIFIED	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE DEVICE	      &
\		F$ = SEG$(U.STR$,1%,U.LEN%)	!  EXTRACT THE DEVICE	      &
\		F$ = F$ + ":" UNLESS INSTR(1%,F$,":") !ADD COLON IF NEEDED    &
\		FILE.POS% = U.POS%		!  SAVE THE POSITION	      &
\	ELSE								      &
		CALL FET$P BY REF (SWA.T%)	!  GET THE SYSTEM FILE NAME   &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			F$ = SEG$(U.STR$,1%,U.LEN%)!  EXTRACT IT	      &
\			F$ = FNPARSE$(F$,DFL.FIL$,"")!  MERGE IN THE DEFAULTS &
\			FILE.POS% = U.POS%	!    SAVE THE POSITION	      &
\		ELSE				!  IF NOT PRESENT	      &
			F$ = DFL.FIL$		!    USE THE DEFAULT FILESPEC &
\			FILE.POS% = 0%		!    CLEAR THE POSTION	      &
\		END IF							      &
\	END IF								      &
\	F$ = F$ + Z$				!APPEND /SIZE SWITCH	      &
\	CHANGE FSS$(F$,1%) TO FIRQB%		!DO THE FILENAME STRING SCAN  &
\	IF (STATUS AND 255%) <> 0% THEN		!IF NOT A DISK		      &
		U.POS% = FILE.POS%		!  RESTORE THE POSITION	      &
\		CALL DISPLY ("?Device must be disk") !PRINT ERROR	      &
\		SUBEXIT				!  AND EXIT		      &
\	END IF								      &
\	J% = FIRQB%(27%)+SWAP%(FIRQB%(28%))	!GET STRING SCAN FLAG WORD 1  &
\	IF (J%<0%) OR (J% AND 4096%)=0% OR	!IF WILDCARD OR NO DEVICE OR  &
	   (J% AND 768%)=512% OR		! NO FILENAME AND A DOT "." OR &
	   (J% AND 260%)=4% OR			! NO FILENAME AND /SIZE OR    &
	   ((J% AND 256%)=0% AND SWAP.NUM% > 3%)!NO FILENAME AND OVERLAY/ERROR &
	THEN	U.POS% = FILE.POS%		!  RESTORE THE POSITION	      &
\		CALL DISPLY ("?Invalid "+FIL.TYP$+" name")		      &
\		SUBEXIT			!  PRINT ERROR AND GO BACK	      &
\	END IF								      &
\	D$ = CHR$(FIRQB%(23%))+CHR$(FIRQB%(24%))!GET DEVICE NAME	      &
\	D$ = D$ + NUM1$(FIRQB%(25%)) IF FIRQB%(26%) <> 0% !GET UNIT # IF ONE  &
\	D$ = "_" + D$ + ":"			!PUT ON "_" AND ":"	      &
\	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(0%))	!REGAIN TEMP PRIVS	      &
\	IF (J% AND 256%) <> 0% THEN		!IF THERE IS A FILE NAME      &
		IF (J% AND 1024%) <> 0% THEN	!  IF THERE IS AN ACCOUNT     &
			IF (FIRQB%(5%) <> 1%) OR (FIRQB%(6%) <> 0%) THEN      &
						!   IF IT ISN'T [0,1]	      &
				U.POS% = FILE.POS% ! RESTORE THE POSITION     &
\				CALL DISPLY ("?"+FIL.TYP$+" must be in [0,1]") &
\				SUBEXIT		!    PRINT ERROR AND EXIT     &
\			END IF						      &
\		END IF							      &
\		IF (J% AND 512%) <> 0% THEN	!  IF THERE WAS A FILETYPE    &
			IF (FIRQB%(11%)+SWAP%(FIRQB%(12%))) <> 31419% THEN    &
						!   IF IT ISN'T ".SYS"	      &
				U.POS% = FILE.POS% ! RESTORE THE POSITION     &
\				CALL DISPLY ("?Filetype must be .SYS")	      &
\				SUBEXIT		!    PRINT ERROR AND EXIT     &
\			END IF						      &
\		END IF							      &
\		SIZ.E% = FIRQB%(13%)+SWAP%(FIRQB%(14%)) !STORE THE FILE SIZE  &
\		D$ = D$ + "[0,1]"+RAD$(FIRQB%(7%)+SWAP%(FIRQB%(8%)))+	      &
				  RAD$(FIRQB%(9%)+SWAP%(FIRQB%(10%)))+".SYS"  &
						!  ACCOUNT, FILENAME, FILETYPE &
\		ON ERROR GOTO 6420		!  SET LOCAL ERROR TRAP	      &
\		D$ = EDIT$(D$,2%)		!  REMOVE ALL SPACES	      &
\		OPEN D$ FOR INPUT AS FILE 1%	!  TRY TO OPEN THE FILE	      &
\		IF (J% AND 4%) THEN		!  IF /SIZE WAS SPECIFIED     &
			S% = SWAP%(CVT$%(SEG$(SYS(CHR$(12%)),13%,14%)))	      &
						!    GET SIZE OF THE FILE     &
\			IF SIZ.E% <> S% THEN	!IF SIZE WANTED <> ACTUAL SIZE &
				PRINT "%";FIL.TYP$;" ";D$;		      &
					" already exists at size";	      &
						NUM$(S%); "blocks"	      &
						!      PRINT INFO MESSAGE     &
\			END IF						      &
\		END IF							      &
\		CLOSE 1%			!  CLOSE THE SWAP_FILE	      &
\	END IF								      &

6410	ON ERROR GOTO 19000			!RESET STANDARD ERROR TRAP    &
\	FIRQB%(0%) = 30%			!30 BYTES		      &
\	FIRQB%(1%) = 6%				!SYS CALL TO FIP	      &
\	FIRQB%(2%) = 23%			!SYSTEM FILES CODE	      &
\	FIRQB%(3%) = SWAP.NUM%			!SYSTEM FILE NUMBER	      &
\	FIRQB%(4%) = 1% IF U.CMDC%=DSW.K% OR U.CMDC%=DER.K% OR U.CMDC%=DOV.K% &
						!INSTALL		      &
\	FIRQB%(4%) = 0% IF U.CMDC%=KSP.K% OR U.CMDC%=KER.K% OR U.CMDC%=KOV.K% &
						!REMOVE			      &
\	FIRQB%(I%) = 0% FOR I% = 5% TO 6%	!CLEAR OUT UNUSED BYTES	      &
\	FIRQB%(I%) = 0% FOR I% = 11% TO 22%	!CLEAR OUT MORE BYTES	      &
\	FIRQB%(I%) = 0% FOR I% = 27% TO 30%	!MORE BYTES TO CLEAR	      &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE THE ARRAY TO STRING   &
\	ON ERROR GOTO 6420			!SET ERROR TRAP		      &

6415	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(0%))	!REGAIN TEMP PRIVS	      &
\	V$ = SYS(FIRQB$)			!DO THE SYS CALL	      &
\	CHANGE V$ TO FIRQ2%			!SAVE THE RETURNED DATA	      &
\	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%))!DROP TEMP PRIVS	      &
\	ON ERROR GOTO 19000			!RESET THE ERROR TRAP	      &
\	IF U.CMDC%=KSP.K% OR U.CMDC%=KER.K% OR U.CMDC%=KOV.K% THEN	      &
	   IF (FIRQ2%(27%) + SWAP%(FIRQ2%(28%))) = -1% THEN		      &
		PRINT "?"; FIL.TYP$; D$; " not installed"		      &
\		SUBEXIT				!Errmsg if no file to remove  &
\	   END IF							      &
\	END IF								      &
\	IF LOG.% THEN				!IF WE WANT A LOG	      &
		PRINT FIL.TYP$; D$; " installed" IF FIRQB%(4%) = 1%	      &
\		PRINT FIL.TYP$; D$; " removed"   IF FIRQB%(4%) = 0%	      &
\	END IF								      &
\	SUBEXIT					!GO GET NEXT COMMAND	      &

6420	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%))!DROP TEMP PRIVS	      &
\	U.POS% = FILE.POS%			!RESTORE THE POSITION	      &
\	IF ERR = 5% THEN 			!IF NO FILE FOUND	      &
		IF (J% AND 4%) <> 0% THEN	! AND /SIZE WAS SPECIFIED     &
			RESUME 6425		!  THEN GO CREATE THE FILE    &
\		ELSE				! IF NO /SIZE		      &
			CALL DISPLY ("?"+FIL.TYP$+" not found") !PRINT ERR    &
\			RESUME 32767		!  AND EXIT		      &
\		END IF							      &
\	END IF								      &
\	IF (ERR = 3%) THEN			!IF ?Account or device in use &
		IF (ERL = 6415) THEN		!  IF SWAP FILE WAS IN USE    &
			IF FIRQB%(4%) = 0% THEN	!    IF WE WERE REMOVING IT   &
				RESUME 6423	!    GO TRY AGAIN	      &
			ELSE						      &
				CALL DISPLY ("?Disk is currently mounted")    &
\				RESUME 32767	!    PRINT ERROR AND EXIT     &
\			END IF						      &
\		ELSE				!  IF ERROR ON THE OPEN	      &
			CALL DISPLY ("?Disk is currently in use")	      &
\			RESUME 32767		!    PRINT ERROR AND EXIT     &
\		END IF							      &
\	END IF								      &
\	IF ERR = 4% THEN			!IF FILE TOO SMALL	      &
		CALL DISPLY ("?"+FIL.TYP$+" too small") !SAY SO		      &
\		RESUME 32767			!  AND EXIT		      &
\	END IF								      &
\	IF ERR = 10% THEN			!IF FILE IS BAD		      &
		IF FIRQB%(4%) = 1% THEN		! IF WE WERE ADDING IT	      &
		  CALL DISPLY ("?"+FIL.TYP$+" is invalid") !SAY SO	      &
		ELSE							      &
		  CALL DISPLY ("?Too many logins allowed to remove Swap file") &
\		END IF							      &
\		RESUME 32767			!  AND EXIT		      &
\	END IF								      &
\	IF ERR = 14% THEN			!IF DISK HUNG OR WRITE LOCKED &
		CALL DISPLY ("?Disk is hung or write locked") !SAY SO	      &
\		RESUME 32767			!  AND EXIT		      &
\	END IF								      &
\	IF ERR = 16% THEN			!IF FILE ALREADY THERE	      &
		PRINT "?"+FIL.TYP$+" already installed" !SAY SO		      &
\		RESUME 32767			!  AND EXIT		      &
\	END IF								      &
\	IF ERR = 21% THEN			!IF DISK NOT MOUNTED	      &
		CALL DISPLY ("?Disk is not mounted") !SAY SO		      &
\		RESUME 32767			!  AND EXIT		      &
\	END IF								      &
\	GOTO 19000				! LET MAIN TRAP HANDLE IT     &

6423	ON ERROR GOTO 19000			!RESET ERROR TRAP	      &
\	SLEEP 2%				!SLEEP FOR 2 SECONDS	      &
\	GOTO 6415				!TRY REMOVING IT AGAIN	      &

6425	ON ERROR GOTO 6430			!SET LOCAL ERROR TRAP	      &
\	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(0%))	!REGAIN TEMP PRIVS	      &
\	OPEN D$+P$ FOR OUTPUT AS FILE 1%, FILESIZE SIZ.E%, MODE 16%	      &
						!SET NEW FILE /NOBACKUP	      &
\	FIRQB%(0%)  = 30%			!30 BYTES		      &
\	FIRQB%(1%)  = 6%			!SYS CALL TO FIP	      &
\	FIRQB%(2%)  = -26%			!FILE UTILITIES CODE	      &
\	FIRQB%(3%)  = 1%			!CHANNEL NUMBER		      &
\	FIRQB%(4%)  = 0%			!FIRST FLAG BYTE	      &
\	FIRQB%(13%) = 0%			!NOT USED		      &
\	FIRQB%(14%) = 0%			!NOT USED		      &
\	FIRQB%(15%) = 8% 			!SET /NOBACKUP BIT	      &
\	FIRQB%(27%) = 4%			!CHANGE FLAG		      &
\	FIRQB%(I%) = 0% FOR I%=28% TO 30%	!CLEAR UNUSED BYTES	      &
\	CHANGE FIRQB% TO FIRQB$			!CHANGE THE ARRAY TO STRING   &
\	ON ERROR GOTO 6426			!SET ERROR TRAP		      &
\	V$ = SYS(FIRQB$)			!DO THE SYS CALL	      &
\	CLOSE 1%							      &
\	GOTO 6410				!CREATE THE FILE CONTIGUOUSLY, &
						! AT THE SPECIFIED SIZE	      &
						! AT THE SPECIFIED POSITION   &
						! AND GO ADD THE SYSTEM FILE  &

6426	CALL DISPLY ("%Unable to set new "+ FIL.TYP$ + " /NOBACKUP")	      &
\	PRINT ERR$(ERT%)						      &
\	CLOSE 1%							      &
\	RESUME 6410							      &

6430	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%))!DROP TEMP PRIVS	      &
\	IF ERR = 4% THEN			!IF NOT ENOUGH CONTIGUOUS     &
	    CALL DISPLY ("?Not enough contiguous space to create "+FIL.TYP$)  &
\	    RESUME 32767			! AND EXIT		      &
\	END IF								      &
\	CALL DISPLY (ERT$(ERR)+" creating "+FIL.TYP$) !PRINT THE ERROR	      &
\	RESUME 32767				! AND EXIT		      &

6490	  CASE SWA.K%				!SHOW FILE/SYSTEM	      &
									      &
\	SWAP.NUM% = -1%				!DEFAULT TO ALL SYSTEM FILES  &
\	CALL FET$CQ BY REF (SWP.Q%)		!/SWAP_FILE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		CALL FET$A BY REF		!  GET THE ARGUMENT	      &
\		SWAP.NUM% = -2%			!  DEFAULT TO ALL SWAP_FILES  &
\		IF U.PRES% THEN			!  IF PRESENT		      &
			SWAP.NUM% = U.LOW%	!    GET THE SWAP_FILE NUMBER &
\		END IF							      &
\	END IF								      &
\	CALL FET$CQ BY REF (OVF.Q%)		!/OVERLAY_FILE SPECIFIED?     &
\	IF U.PRES% THEN				!IF PRESENT		      &
		SWAP.NUM% = 4%			!  SET APPROPRIATE INDEX      &
\	END IF								      &
\	CALL FET$CQ BY REF (ERF.Q%)		!/ERROR_FILE SPECIFIED?	      &
\	IF U.PRES% THEN				!IF PRESENT		      &
		SWAP.NUM% = 5%			!  SET APPROPRIATE INDEX      &
\	END IF								      &
\	CALL FET$CQ BY REF (NTF.Q%)		!/NETWORK_FILE SPECIFIED?     &
\	IF U.PRES% THEN				!IF PRESENT		      &
		SWAP.NUM% = 6%			!  SET APPROPRIATE INDEX      &
\	END IF								      &
\	PRINT #OUT.CHN% IF SWAP.NUM% < 0%		!PRINT A BLANK LINE   &
\	FOR I%=0% TO 3%				!FOR THE FOUR SWAP_FILES      &
\		Q$=FNGET.SWAP$(I%)		!  GET THE FILESPEC	      &
\		PRINT #OUT.CHN%, "Swap_file "+NUM1$(I%);":	";Q$ !PRINT THE FILESPEC &
			IF (SWAP.NUM%< 0%) OR SWAP.NUM% = I%!IF ALL OR A MATCH &
\	NEXT I%					!NEXT SWAP_FILE		      &
\	PRINT #OUT.CHN% IF SWAP.NUM% < 0%		!PRINT A BLANK LINE   &
\	Q$=FNGET.SWAP$(4%)			!GET THE OVERLAY FILESPEC     &
\	PRINT #OUT.CHN%, "Overlay_file:	";Q$		!PRINT THE FILESPEC   &
		IF (SWAP.NUM%=-1%) OR SWAP.NUM% = 4% ! IF /ALL OR A MATCH     &
\	Q$=FNGET.SWAP$(5%)			!GET THE ERROR FILESPEC	      &
\	PRINT #OUT.CHN%, "Error_file:	";Q$		!PRINT THE FILESPEC   &
		IF (SWAP.NUM%%=-1%) OR SWAP.NUM% = 5% ! IF /ALL OR A MATCH    &
\	PRINT #OUT.CHN% IF SWAP.NUM% = -1%		!PRINT A BLANK LINE   &
\	Q$=FNGET.SWAP$(6%)			!GET THE DECNET FILESPEC      &
\	PRINT #OUT.CHN%, "Network_file:	";Q$		!PRINT THE FILESPEC   &
		IF (SWAP.NUM%=-1%) OR SWAP.NUM% = 6% ! IF /ALL OR A MATCH     &
									      &
\	END SELECT							      &
\	SUBEXIT								      &

									      &

15000	!								      &
	!	F U N C T I O N S					      &
	!								      &
	DEF FNPARSE$(INP_FIL$,DEF_FIL$,FLD_KEY$)			      &
\	FNPARSE$ = ""				!Init the function	      &
\	ON ERROR GOTO 15050			!Set local error trap	      &
\	CHANGE FSS$(INP_FIL$,1%) TO FIRQB%	!FSS the input		      &
\	INP_FLG% = FIRQB%(29%)+SWAP%(FIRQB%(30%)) !Store the flag word	      &
\	INP_STS% = STATUS			!Store the status	      &
\	IF LEN(DEF_FIL$) THEN			!If there is a default file   &
		CHANGE FSS$(DEF_FIL$,1%) TO FIRQ2% !FSS the default filespec  &
\		DEF_FLG% = FIRQ2%(29%)+SWAP%(FIRQ2%(30%)) !Store the flag word &
\		IF ((INP_FLG% AND 1%) = 0%) AND	!If no filename in input and  &
		   ((DEF_FLG% AND 1%) = 1%) THEN! there is a default filename &
			FIRQB%(I%) = FIRQ2%(I%)	! Move in the default filename &
				FOR I% = 7% TO 10% !All four bytes of it      &
\		INP_FLG% = INP_FLG% OR (1%+2%+4% AND DEF_FLG%)	! Set the bits &
\		END IF							      &
\		IF ((INP_FLG% AND 8%) = 0%) AND	!If no filetype in input and  &
		   ((DEF_FLG% AND 8%) = 8%) THEN! there is a default filetype &
			FIRQB%(I%) = FIRQ2%(I%)	! Move in the default filetype &
				FOR I% = 11% TO 12% !Both bytes		      &
\		INP_FLG% = INP_FLG% OR (8%+16%+32%+64% AND DEF_FLG%)	      &
						!  Set the bits		      &
\		END IF							      &
\		IF ((INP_FLG% AND 128%) = 0%) AND!If no ppn in input and      &
		   ((DEF_FLG% AND 128%) = 128%) THEN! there is a default ppn  &
			FIRQB%(I%) = FIRQ2%(I%)	! Move in the default ppn     &
				FOR I% = 5% TO 6% !Both bytes		      &
\		INP_FLG% = INP_FLG% OR (128%+256%+512% AND DEF_FLG%)	      &
						!  Set the bits		      &
\		END IF							      &
\		IF ((INP_FLG% AND 4096%) = 0%) AND !If no device in input and &
		   ((DEF_FLG% AND 4096%) = 4096%) AND ! there is a default dev &
		    (DEF_FLG% >= 0%) THEN	! and it's a valid device     &
			FIRQB%(I%) = FIRQ2%(I%)	! Move in the default device  &
				FOR I% = 23% TO 26% !All four bytes of it     &
\		INP_FLG% = INP_FLG% OR					      &
				(4096%+8192%+16384%+32767%+1% AND DEF_FLG%)   &
						!  Set the flag bits	      &
\		INP_STS% = STATUS		!  Set the status variable    &
\		END IF							      &
\	END IF								      &
\	PAR_DEV$ = ""				!Init the device	      &
\	IF (INP_FLG% AND 8192%) THEN		!If there is a device	      &
		IF INP_FLG% > 0% THEN		!  If it was a valid device   &
			PAR_DEV$ = "_"		!    Start off with an "_"    &
\			PAR_DEV$ = PAR_DEV$ + CHR$(FIRQB%(I%))	!Form the name &
				FOR I% = 23% to 24%	!  Both bytes	      &
\			PAR_DEV$ = PAR_DEV$ + NUM1$(FIRQB%(25%)) !Add the unit &
				IF FIRQB%(26%)		!  If there is one    &
		ELSE				!  If it was invalid	      &
\			PAR_DEV$ = PAR_DEV$ +				      &
				RAD$(FIRQB%(I%)+SWAP%(FIRQB%(I%+1%)))	      &
					FOR I% = 23% TO 25% STEP 2%	      &
						!    Form the name	      &
\		END IF							      &
\		PAR_DEV$ = PAR_DEV$ + ":"	!  Add the colon	      &
\	END IF								      &
\	PAR_PPN$ = ""				!Init the ppn		      &
\	IF (INP_FLG% AND 128%) THEN		!If there is a ppn	      &
\		PAR_PPN$ = "["+NUM1$(FIRQB%(6%))+!  Form the project number   &
			   ","+NUM1$(FIRQB%(5%))+"]" !and the prog number     &
\	END IF								      &
\	PAR_NAME$ = ""				!Init the filename	      &
\	IF (INP_FLG% AND 1%) THEN		!If there is a filename	      &
		PAR_NAME$ = PAR_NAME$ + RAD$(FIRQB%(I%)+SWAP%(FIRQB%(I%+1%))) &
			FOR I% = 7% TO 9% STEP 2% !Form the filename	      &
\	END IF								      &
\	PAR_TYPE$ = ""				!Init the filetype	      &
\	IF (INP_FLG% AND 8%) THEN		!If there is a filetype	      &
		PAR_TYPE$ = "." + RAD$(FIRQB%(11%)+SWAP%(FIRQB%(12%)))	      &
						!  Form the filetype	      &
\	END IF								      &
\	FLD_KEY$ = EDIT$(FLD_KEY$,-2%)		!Remove all garbage	      &
\	PAR_SE$ = PAR_DEV$+PAR_PPN$+PAR_NAME$+PAR_TYPE$ !Return the whole spec &
		IF LEN(FLD_KEY$) = 0%		! If no field keyword	      &
\	PAR_SE$ = PAR_DEV$ IF FLD_KEY$ = "DEVICE" !Return device if wanted    &
\	PAR_SE$ = PAR_PPN$ IF FLD_KEY$ = "PPN"	!Return ppn if wanted	      &
\	PAR_SE$ = PAR_NAME$ IF FLD_KEY$ = "NAME" !Return name if wanted	      &
\	PAR_SE$ = PAR_TYPE$ IF FLD_KEY$ = "TYPE" !Return type if wanted	      &
\	PAR_SE$ = NUM1$(INP_STS%) IF FLD_KEY$ = "STATUS" !Return status	      &
\	PAR_SE$ = NUM1$(INP_FLG%) IF FLD_KEY$ = "FLAGS" !Return flag word     &
\	FNPARSE$ = EDIT$(PAR_SE$,2%)		!Remove all spaces and tabs   &
\	FNEXIT					!Exit			      &

15050	RESUME 15099				!Exit on any error	      &

15099	FNEND					!That's all		      &

									      &

16200	DEF FNGET.SWAP$(Q%)						      &
	!								      &
	! FUNCTION:	FNGET.SWAP$	RETURN FILE SPECIFICATION OF	      &
	!				SYSTEM FILE Q%			      &
	! INPUT:			SYSTEM FILE #			      &
	! RETURNS:			1) FILE SPECIFICATION IF FILE IS      &
	!				   PRESENT			      &
	!				2) "None" IF FILE IS NOT PRESENT      &
	!				3) DEVICE+(NFS) IF NONFILE STRUCTURED &
	!				   I.E., DK0: (NFS)		      &
	!								      &
	! NOTE: THE ADD/REMOVE SYSTEM FILE SYS() CALL WILL RETURN NULLS IN    &
	!	THE FIRST TWO BYTES OF THE FILENAME IF THE DEVICE IS NONFILE  &
	!	STRUCTURED.						      &
	!								      &

16210	ON ERROR GOTO 16230						      &
	\ Q$="None"							      &
	\ CHANGE SYS(CHR$(6%)+CHR$(23%)+CHR$(Q%)+CHR$(-1%)) TO FIRQB%	      &
	\ Q$=CHR$(FIRQB%(23%))+CHR$(FIRQB%(24%))+NUM1$(FIRQB%(25%))+":"	      &
	\ IF FIRQB%(7%)=0% AND FIRQB%(8%)=0% THEN			      &
		Q$=Q$+" (NFS)"						      &
	  ELSE								      &
		Q$=Q$+"["+NUM1$(FIRQB%(6%))+","+NUM1$(FIRQB%(5%))+"]"	      &
		     +RAD$(FIRQB%(7%)+SWAP%(FIRQB%(8%)))		      &
		     +RAD$(FIRQB%(9%)+SWAP%(FIRQB%(10%)))		      &
		     +"."+RAD$(FIRQB%(11%)+SWAP%(FIRQB%(12%)))		      &
		!							      &
		! SET ON ERROR TRAP FOR THIS FUNCTION.			      &
		! SET DEFAULT TO "None".				      &
		! IF THE FILE IS NOT THERE WE GET A CAN'T FIND FILE	      &
		! OR ACCOUNT ERROR.					      &
		! IF THE DEVICE IS NONFILE STRUCTURED THEN		      &
		!	RETURN THE DEVICE LABEL+(NFS)			      &
		! ELSE							      &
		!	RETURN THE DEVICE LABEL+PPN+NAME.EXT		      &

16215	IF POS(Q$,"(NFS)",1%) = 0% THEN		!IF NOT NON-FILE STRUCTURED   &
		CHANGE FSS$(Q$,1%) TO FIRQB%	!  DO THE FILENAME STRING SCAN &
\		FIRQB%(0%) = 30%		!  30 BYTES		      &
\		FIRQB%(1%) = 6%			!  SYS CALL TO FIP	      &
\		FIRQB%(2%) = 17%		!  DIRECTORY LOOKUP	      &
\		FIRQB%(I1%) = 255% FOR I1% = 3% TO 4%!LOOKUP BY FILENAME      &
\		CHANGE FIRQB% TO FIRQB$		!  CHANGE THE ARRAY TO STRING &
\		V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(0%))!GET PRIVS	      &
\		CHANGE SYS(FIRQB$) TO FIRQB%	!  DO THE SYS CALL	      &
\		SIZ.E% = FIRQB%(13%) + SWAP%(FIRQB%(14%))!GET THE SIZE OF IT  &
\		SIZ.E$ = NUM1$(SIZ.E%)		!  MAKE A STRING OUT OF IT    &
\		SIZ.E$ = SPACE$(7%-LEN(SIZ.E$))+SIZ.E$+" blocks" !PAD IT      &
\		Q$ = Q$ + SIZ.E$		!  APPEND IT TO THE FILESPEC  &
\		IF Q% <= 3% THEN		!  IF THIS IS A SWAP_FILE     &
		NULRTS% = SWAP%(CVT$%(SEG$(SYS(CHR$(6%)+CHR$(-29%)),27%,28%))) &
\			SWAP.MAX% = PEEK(NULRTS%+28%) AND 255% !GET SWAP MAX  &
						!NOTE - 28 IS R.SIZE	      &
\			JOBS% = SIZ.E%/(4%*SWAP.MAX%) !Calculate the # of jobs &
\			Q$ = Q$+" ("+NUM1$(JOBS%)+" job" !Put it in the string &
\			Q$ = Q$+"s" IF JOBS% > 1%	!Make it plural	      &
\			Q$ = Q$+" at "+ NUM1$(SWAP.MAX%)+"K Swap max)"	      &
						!Form the rest of the string  &
\		END IF							      &
\		V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%))!DROP PRIVS	      &
\	END IF								      &

16220	FNGET.SWAP$=Q$							      &
	\ FNEXIT							      &
		!							      &
		! RETURN.						      &

16230	RESUME 16220 IF ERR = 5% AND ERL = 16210!Just exit if it's not there  &
\	Q$ = "Unexpected error - " + ERT$(ERR)	!Get the text		      &
			IF ERL = 16210		! If error getting filename   &
\	Q$ = Q$ + " Size unknown"		!Get the text		      &
			IF ERL = 16215		! If error doing directory    &
\	RESUME 16220				!Now exit		      &
		!							      &
		! TRAP ERRORS						      &

16240	FNEND								      &
									      &

									      &
									      &
									      &

19000	!	s t a n d a r d   e r r o r   h a n d l i n g		      &
	!								      &
	!								      &
	V$ = SYS(CHR$(6%)+CHR$(-21%)+CHR$(255%))!DROP TEMP PRIVS	      &
\	ON ERROR GO BACK			!Let the Root error	      &
						! handler handle it	      &

									      &
									      &
									      &

32767	!	e n d   o f   s u b p r o g r a m			      &
	!								      &
	!								      &
	SUBEND
