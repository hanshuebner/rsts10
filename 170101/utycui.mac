TITLE	UTYCUI,<UTLMGR CUI COMMAND TABLES>,0A,10-MAY-91,JJT/BGN/JAC/JFM/SEL/FEK

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	UTYCUI Edit History
;+
; EDIT	BY	DATE		REASON
;
;  01	JJT	07-Jun-85	Add LOAD/INDEX and UNLOAD/INDEX
;  02	JJT	12-Jun-85	Fix SHOW LOGICAL FOO/SYSTEM
;  03	JJT	09-Jul-85	Add defaults to /PRIORITY and /RUNBURST
;  04	JJT	24-Oct-85	Add defaults to INSTALL/system-files
;  05	JJT	15-Feb-86	Allow multiple destinations on FORCE/BROADCAST
;  06	JJT	17-Oct-86	Remove SET SYSTEM/[NO]OPTIMIZE=CLUSTERSIZE
;  07	JJT	26-Jun-87	Add /NOADDRESS=[UN]RESTRICTED
;  08	JJT	18-Dec-87	Add LAT/FMS commands
;  09	JJT	17-Feb-88	Add /[NO]QUERY to REMOVE/JOB
;  10	JJT	26-Feb-88	Implement new SET SYSTEM qualifiers
;  11	JJT	04-Mar-88	Add /[NO]STATISTICS
;  12	JJT	03-Jun-88	Make /PSEUDO_KEYBOARD and /PK conflict
;  13	JJT	22-Aug-88	Add SET SYSTEM/EMT and SHOW SYSTEM/EMT
;  14	JJT	07-Nov-88	Add SET SYSTEM/DYNAMIC_REGION_QUOTA
;  15	JJT	19-Dec-88	Add Warp speed support
;  16	JJT	05-Jan-89	Add SET SYSTEM/MONITOR_NAME and /SWAP_MAX
;  17	JFM	18-Jan-89	Add CREATE- and DELETE/VIRTUAL_DISK 
;
;				[RSTS/E V10.0]
; 018	SEL	13-Jul-89	Add /OUTPUT qualifier for SHOW commands
; 019	SEL	14-Jul-89	Add /ASYNC qualifier for SET SYSTEM command
; 020	SEL	24-Jul-89	Add [NO] to /OUTPUT qualifier for SHOW commands
; 021	SEL	21-Sep-89	Add /USER qualifier to SHOW LOGI. Remove code 
;				    for SHOW LOGI/SYSTEM keyword (LOG.K).
; 022	FEK	02-Nov-89	Add /[NO]BACKUP and /[NO]IGNORE
; 023	SEL	13-Nov-89	Change swap max limits to 34-66
; 024	SEL	15-Nov-89	Change [DE]ASSIGN commands for extended logicals
; 025	JJT	02-Jan-90	Use U$LOGNAM pattern for [DE]ASSIGN commands
; 026	SEL	15-Feb-90	Add /[NO]REPLACE[=QUERY] to DEFINE/COMMAND/SYS
; 027	SEL	16-Feb-90	Add /[NO]QUEUED to ALLOCATE
; 028	SEL	25-Jun-90	Add /ALL to DEASSIGN.
;-


	.PAGE
	.SBTTL	DEFINE AND ORDER THE .PSECTS

		DEFORG	UTYCUI

	.PAGE
	.SBTTL	DEFINE QCUI MACROS

		.MCALL	$CUI, LOOKUP, $DISALLOW
		$CUI	TABLE				;INCLUDE THE CUI TABLES

	.PAGE
	.SBTTL	DEFINE UTLMGR COMMAND TABLE FOR CUI

	CMDTBL::					;COMMAND TABLE ENTRY
		$THR
		$RDCMD PROMPT=CMD.P			;READ UTLMGR COMMAND
		$PARKEY					;PARSE COMMAND KEYWORD
		$ONKEY SET.K,SETCMD			; SET COMMAND
		$ONKEY SHO.K,SHOCMD			; SHOW COMMAND
		$ONKEY BRD.K,BRDCMD			; BROADCAST COMMAND
		$ONKEY FOR.K,FORCMD			; FORCE COMMAND
		$ONKEY ALO.K,ALLCMD			; ALLOCATE
		$ONKEY DAL.K,DALCMD			; DEALLOCATE
		$ONKEY HAN.K,HANCMD			; HANGUP COMMAND
		$ONKEY DRS.K,INSRTS			;INSTALL/RUNTIME_SYSTEM
		$ONKEY DLB.K,INSLIB			;INSTALL/LIBRARY
		$ONKEY DER.K,INSERR			;INSTALL/ERROR_FILE
		$ONKEY DOV.K,INSOVL			;INSTALL/OVERLAY_FILE
		$ONKEY DSW.K,INSSWA			;INSTALL/SWAPFILE
		$ONKEY DCM.K,DCMCMD			;DEFINE/COMMAND/SYSTEM
		$ONKEY KCM.K,KCMCMD			;DELETE/COMMAND/SYSTEM
		$ONKEY LOV.K,LOVCMD			; LOAD/OVERLAY COMMAND
		$ONKEY LIX.K,LIXCMD			; LOAD/INDEX COMMAND
		$ONKEY URS.K,URSCMD			;UNLOAD/RUNTIME_SYSTEM
		$ONKEY ULB.K,ULBCMD			; UNLOAD/LIBRARY
		$ONKEY UOV.K,UOVCMD			; UNLOAD/OVERLAY
		$ONKEY UIX.K,UIXCMD			; UNLOAD/INDEX COMMAND
		$ONKEY ASG.K,ASGCMD			;ASSIGN COMMAND    ;024
		$ONKEY DEA.K,DEACMD			; DEASSIGN	   ;024
		$ONKEY DUM.K,DUMCMD			; DUMP/SYSTEM COMMAND
		$ONKEY SJB.K,REMJOB			; REMOVE/JOB
		$ONKEY KLB.K,REMLIB			; REMOVE/LIBRARY
		$ONKEY KRS.K,REMRTS			; REMOVE/RUNTINE_SYSTEM
		$ONKEY KER.K,REMERR			; REMOVE/ERROR_FILE
		$ONKEY KOV.K,REMOVL			; REMOVE/OVERLAY_FILE
		$ONKEY KSP.K,REMSWA			; REMOVE/SWAP_FILE
		$ONKEY JDT.K,SETJDT			; DETACH JOB
		$ONKEY LGN.K,LGNCMD			; LOGIN COMMAND
		$ONKEY CVD.K,CVDCMD			; CREATE/VIRTUAL_DISK
		$ONKEY DVT.K,DVTCMD			; DELETE/VIRTUAL_DISK
		$ENDKEY
		$ENDTHR

	.PAGE
	.SBTTL PROCESS SET COMMAND

	SETCMD:	$THR
		$PARKEY
		$ONKEY DLP.K,SETDLP			; SET PRINTER
		$ONKEY DEV.K,SETDEV			; SET DEVICE
		$ONKEY JOB.K,SETJOB			; SET JOB
		$ONKEY DAT.K,SETDAT			; SET DATE
		$ONKEY TIM.K,SETTIM			; SET TIME
		$ONKEY FIL.K,SETFIL			; SET FILE
		$ONKEY DCC.K,SETDCC			; SET CACHE/DISABLE
		$ONKEY CAC.K,SETCAC			; SET CACHE
		$ONKEY SYS.K,SETSYS			; SET SYSTEM
		$ENDKEY
		$ENDTHR

	SETDLP:	$THR
		$DEFCMD QUAL=DLPTL,U.CMDC=DLP.K		; SET PRINTER
		$PARM DEV.T,PROMPT=DLP.P,TYPE=U$DEV	; GET PRINTER NAME
		$ENDCMD
		$ENDTHR

	DLPTL:	DEFQUAL	DEV.Q,ARG=REQ			; DEVICE_TYPE=
		 DEFARG LN01.K				; LN01
		 DEFARG LP.K				; LP11
		 DEFARG LA180.K				; LA180
		 ENDARG
		DEFQUAL WID.Q,ARG=REQ			; WIDTH=N
		 DEFARG TYPE=U$U8,MINVAL=1,MAXVAL=254	; INTEGER ARG
		 ENDARG
		DEFQUAL FRM.Q,ARG=REQ			; FORM_LENGTH=N
		 DEFARG TYPE=U$U8,MINVAL=1,MAXVAL=255	; INTEGER ARG
		 ENDARG
		DEFQUAL BT8.Q,QF.NEG			; [NO]EIGHT_BIT
		DEFQUAL TAB.Q,QF.NEG			; [NO]TAB
		DEFQUAL LOW.Q,CONF=UPP.Q		; LOWER_CASE
		DEFQUAL UPP.Q,CONF=LOW.Q		; UPPER_CASE
		DEFQUAL OCR.Q,QF.NEG			; [NO]OMIT_CR
		DEFQUAL FLL.Q,QF.NEG			; [NO]FILL
		DEFQUAL CTL.Q,QF.NEG			; [NO]CONTROLS
		DEFQUAL EOT.Q,QF.NEG			; [NO]EOT
		DEFQUAL CRP.Q,QF.NEG			; [NO]CR_PREFIX
		DEFQUAL	ESC.Q,QF.NEG			; [NO]ESCAPE_SEQUENCE
		DEFQUAL SPC.Q,QF.NEG,ARG=REQ		;[NO]SPECIAL_CHARACTER
		 DEFARG TYPE=U$ANY			; STRING ARG
		 ENDARG
		DEFQUAL BSP.Q,ARG=REQ			; BACKSPACE
		 DEFARG EMU.K				; EMULATE
		 DEFARG REL.K				; REAL
		 DEFARG CTL.K				; CONTROL
		 ENDARG
		ENDQUAL

	SETDEV:	$THR
		$DEFCMD QUAL=DEVTL,U.CMDC=DEV.K		; SET DEVICE
		$PARM DEV.T,PROMPT=DEV.P,TYPE=U$DEV	; GET DEVICE
		$FETP	DEV.T				; FETCH THE DEVICE
		$IFDEV	DSK				; IF DEVICE IS A DISK
		$DISALLOW <ENA.Q,DVD.Q>,IQDK.E		; DON'T ALLOW /ENABLE
							;  OR /DISABLE
		$ENDIF
		$ENDCMD
		$ENDTHR

	DEVTL:	DEFQUAL RES.Q,QF.NEG			; [NO]RESTRICT
		DEFQUAL ENA.Q,CONF=DVD.Q		; ENABLE
		DEFQUAL DVD.Q,CONF=ENA.Q		; DISABLE
		ENDQUAL

	SETJOB:	$THR
		$DEFCMD QUAL=JOBTL,U.CMDC=JOB.K		; SET JOB
		$FETCQ	HLD.Q				; /HOLD PRESENT
		$IF	PRESENT				; IF THERE
		$PARM JOB.T,TYPE=U$S8,PROMPT=JOB.P,MINVAL=1,MAXVAL=63
		$ELSE
		$PARM JOB.T,TYPE=U$S8,MINVAL=1,MAXVAL=63,FLAGS=PF.OPT
							; GET JOB NUMBER
		$ENDIF
		$ENDCMD
		$ENDTHR

	JOBTL:	DEFQUAL	KBM.Q,ARG=OPT			; KEYBOARD_MONITOR
		 DEFARG	TYPE=U$ANY			; STRING ARG
		 ENDARG
		DEFQUAL PRI.Q,ARG=OPT			; PRIORITY[=p]
		 DEFARG	TYPE=U$S8,MINVAL=-128,MAXVAL=120; SIGNED INT ARG
		 ENDARG
		DEFQUAL	PRV.Q,FLAGS=QF.ALIS,ARG=REQ	; PRIVILEGES=priv
		 DEFARG	TYPE=U$ANY			; STRING ARG
		 ENDARG
		DEFQUAL RUN.Q,ARG=OPT			; RUN_BURST[=q]
		 DEFARG TYPE=U$S8,MINVAL=1,MAXVAL=127	; INTEGER ARG
		 ENDARG
		DEFQUAL SIZ.Q,ARG=REQ			; SIZE=n
		 DEFARG TYPE=U$U8,MINVAL=1,MAXVAL=255	; INTEGER ARG
		 ENDARG
		DEFQUAL HLD.Q,CONF=<REL.Q>		; HOLD
		DEFQUAL REL.Q,CONF=<HLD.Q>		; RELEASE
		ENDQUAL

	SETDAT:	$THR
		$DEFCMD U.CMDC=DAT.K			; SET DATE/TIME
		$PARM DAT.T,PROMPT=DAT.P,TYPE=U$TIME	; GET DATE/TIME SPEC
		$ENDCMD
		$ENDTHR

	SETTIM:	$THR
		$DEFCMD U.CMDC=TIM.K			; SET DATE/TIME
		$PARM TIM.T,PROMPT=TIM.P,TYPE=U$TIME	; GET DATE/TIME SPEC
		$ENDCMD
		$ENDTHR

	SETFIL:	$THR
		$DEFCMD QUAL=FILTL,U.CMDC=FIL.K		; SET FILE
		$PARM FIL.T,PROMPT=FIL.P,TYPE=LF.N.W	; GET THE FILESPEC
		$FETP	FIL.T				; FETCH THE FILE
		LOOKUP	FILE				; SEE IF IT EXISTS
		$ENDCMD
		$ENDTHR

	FILTL:	DEFQUAL RTS.Q,ARG=REQ			; RUNTIME_SYSTEM=name
		 DEFARG TYPE=U$ANY			; STRING ARG
		 ENDARG
		DEFQUAL CAC.Q,QF.NEG,ARG=OPT		; [NO]CACHE
		 DEFARG RND.K				; RANDOM KEYWORD
		 DEFARG SEQ.K				; SEQUENTIAL KEYWORD
		 ENDARG
		DEFQUAL NCG.Q				; NOCONTIGUOUS
		DEFQUAL PLC.Q,QF.NEG			; [NO]PLACED
		DEFQUAL	BCK.Q,QF.NEG			; [NO]BACKUP	;022
		DEFQUAL	IGN.Q,QF.NEG			; [NO]IGNORE	;022
		DEFQUAL PTC.Q,ARG=REQ			; PROTECTION=n
		 DEFARG	TYPE=U$U8			; INTEGER ARG
		 ENDARG
		DEFQUAL DLT.Q,QF.NEG			; [NO]DELETABLE
		DEFQUAL	LOG.Q,QF.NEG			; [NO]LOG
		ENDQUAL

	SETDCC:	$THR
		$DEFCMD U.CMDC=DCC.K			; SET CACHE/DISABLE
		$ENDCMD
		$ENDTHR

	SETCAC:	$THR
		$DEFCMD QUAL=CACTL,U.CMDC=CAC.K		; SET CACHE
		$ENDCMD
		$ENDTHR

	CACTL:	DEFQUAL ALL.Q,CONF=FIL.Q		; ALL
		DEFQUAL FIL.Q,QF.NEG,CONF=ALL.Q		; [NO]FILE
		DEFQUAL BUF.Q,QF.NEG			; [NO]BUFFERS
		DEFQUAL ENA.Q				; ENABLE
		DEFQUAL CLU.Q,ARG=REQ			; CLUSTERSIZE=n
		 DEFARG TYPE=U$S8,MINVAL=1,MAXVAL=8	; INTEGER ARG
		 ENDARG
		DEFQUAL MAX.Q,ARG=REQ			; MAXIMUM=n
		 DEFARG	UNL.K				; =UNLIMITED
		 DEFARG TYPE=U$U16			; INTEGER ARG
		 ENDARG
		DEFQUAL DIR.Q,ARG=REQ			; DIRECTORY_MAXIMUM=n
		 DEFARG	UNL.K				; =UNLIMITED
		 DEFARG TYPE=U$U16			; INTEGER ARG
		 ENDARG
		DEFQUAL DAT.Q,ARG=REQ			; DATA_MAXIMUM=n
		 DEFARG	UNL.K				; =UNLIMITED
		 DEFARG TYPE=U$U16			; INTEGER ARG
		 ENDARG
		DEFQUAL	KEP.Q,ARG=REQ			; KEEP=n
		 DEFARG	TYPE=U$U16			; INTEGER ARG
		 ENDARG
		ENDQUAL

	SETSYS:	$THR
		$DEFCMD QUAL=SYSTL,U.CMDC=SYS.K		; SET SYSTEM
		$FETCQ	PKS.Q				; FETCH /PK=n	;010+
		$IF	PRESENT				; IF PRESENT
		PUTCQ	PK.Q				; PUT OUT /PSEUDO-KB
		$ENDIF							;010-
		$ENDCMD
		$ENDTHR

	SYSTL:	DEFQUAL ASY.Q,QF.NEG			; [NO]ASYNC	;019
		DEFQUAL ANS.Q,ARG=REQ			; ANSWERBACK	;016+
		 DEFARG TYPE=U$QUOT			; STRING ARG
		 ENDARG							;016-
		DEFQUAL NAM.Q,ARG=REQ			; NAME
		 DEFARG TYPE=U$QUOT			; STRING ARG
		 ENDARG
		DEFQUAL DLY.Q,ARG=REQ			; DELAY=N
		 DEFARG TYPE=U$S16,MINVAL=1,MAXVAL=300	; INTEGER ARG
		 ENDARG
		DEFQUAL DTE.Q,ARG=REQ			; DATE
		 DEFARG ALP.K				; ALPHABETIC
		 DEFARG NUM.K				; NUMERIC
		 DEFARG STRD.K				; STARDATE
		 ENDARG
		DEFQUAL DRQ.Q,QF.NEG,ARG=REQ		; [NO]DYNAMIC_REGION_QUOTA=n ;014+
		 DEFARG TYPE=U$U16,MINVAL=0		; 16 BIT UNSIGNED #
		 ENDARG							;014-
		DEFQUAL	EMT.Q,FLAGS=QF.ALIS,ARG=REQ	; EMT_LOGGING	;013+
		 DEFARG	TYPE=U$ANY
		 ENDARG
		DEFQUAL	LOG.Q,QF.NEG,REQUIRE=<EMT.Q>	; [NO]LOG	;013-
		DEFQUAL	MON.Q,ARG=REQ			; MONITOR_NAME	;016+
		 DEFARG	TYPE=LF.N			; =name
		 ENDARG
		DEFQUAL	SWM.Q,ARG=REQ			; SWAP_MAXIMUM
		 DEFARG	TYPE=U$U8,MINVAL=34,MAXVAL=66	; =n		;023
		 ENDARG							;016-
		DEFQUAL TIM.Q,ARG=REQ			; TIME
		 DEFARG H12.K				; AM_PM
		 DEFARG H24.K				; 24_HOUR
		 ENDARG
		DEFQUAL LBL.Q,ARG=REQ			; LABEL
		 DEFARG DOS.K				; DOS
		 DEFARG ANSI.K				; ANSI
		 ENDARG
		DEFQUAL	MDMH.Q,ARG=REQ			; HANGUP
		 DEFARG	IMM.K				; IMMEDIATE
		 DEFARG	DLY.K				; DELAYED
		 ENDARG
		DEFQUAL LGN.Q,QF.NEG,ARG=OPT		; [NO]LOGINS
		 DEFARG TYPE=U$U8,MAXVAL=63,MINVAL=0	; 8 BIT UNSIGNED #
		 ENDARG
		DEFQUAL DEN.Q,ARG=REQ			; DENSITY
		 DEFARG	MAX.K				; =MAXIMUM
		 DEFARG	MIN.K				; =MINIMUM
		 DEFARG TYPE=U$S16,MINVAL=0,MAXVAL=32767 ;16 BIT SIGNED #
		 ENDARG
		DEFQUAL PSW.Q,QF.NEG!QF.ALIS,ARG=OPT	; PASSWORD_PROMPT
		 DEFARG	RMT.K				; REMOTE
		 DEFARG	NET.K				; NETWORK
		 ENDARG
		DEFQUAL STA.Q,QF.NEG,ARG=OPT		; [NO]STATISTICS ;011+
		 DEFARG	FRE.K				; FREEZE
		 DEFARG	RES.K				; RESET
		 ENDARG							 ;011-
		DEFQUAL HLD.Q,CONF=<REL.Q>		; HOLD
		DEFQUAL REL.Q,CONF=<HLD.Q>		; RELEASE
		DEFQUAL LAT.Q,QF.NEG			; [NO]LAT	;010+
		DEFQUAL FMS.Q,QF.NEG			; [NO]FMS
		DEFQUAL PK.Q,ARG=REQ,CONF=PKS.Q		; PSEUDO_KEYBOARDS=n;012
		 DEFARG TYPE=U$S8,MINVAL=1,MAXVAL=127	; INTEGER ARG
		 ENDARG
		DEFQUAL PKS.Q,ARG=REQ,CONF=PK.Q		; PK=n		;012
		 DEFARG TYPE=U$S8,MINVAL=1,MAXVAL=127	; INTEGER ARG
		 ENDARG
		DEFQUAL WBT.Q,QF.NEG			; [NO]Warp speed	;015
		ENDQUAL							;010-

	.PAGE
	.SBTTL PROCESS SHOW COMMAND

	SHOCMD:	$THR
		$PARKEY
		$ONKEY DAY.K,SHODAY			; SHOW DAYTIME
		$ONKEY DLP.K,SHODLP			; SHOW PRINTER
		$ONKEY DEV.K,SHODEV			; SHOW DEVICE
		$ONKEY TIM.K,SHODAY			; SHOW TIME
		$ONKEY SLG.K,SHOSLG			; SHOW LOGICAL
		$ONKEY COM.K,SHOCOM			; SHOW COMMAND/SYSTEM
		$ONKEY CAC.K,SHOCAC			; SHOW CACHE
		$ONKEY JPV.K,SHOJPV			; SHOW JOB/PRIVILEGE
		$ONKEY INS.K,SHOINS			; SHOW INSTALL
		$ONKEY FIL.K,SHOSWA			; SHOW FILE
		$ONKEY SHM.K,SHOSHM			; SHOW SYSTEM/EMT ;013
		$ONKEY SSY.K,SHOSSY			; SHOW SYSTEM
		$ENDKEY
		$ENDTHR

	SHODAY:	$THR
		$DEFCMD U.CMDC=DAY.K			; [DAY]TIME
		$ENDCMD
		$ENDTHR

	SHODLP:	$THR
		$DEFCMD QUAL=SLPTL, U.CMDC=SLP.K	; SHOW PRINTER
		$PARM DEV.T,TYPE=U$DEV,FLAGS=PF.OPT	; GET PRINTER NAME
		$FETP	DEV.T				; PRINTER SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		PUTCQ	ALL.Q				;  PUT ON /ALL
		$ENDIF
		$ENDCMD
		$ENDTHR

	SLPTL:	DEFQUAL	ALL.Q				; ALL
		DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHODEV:	$THR
		$DEFCMD QUAL=SDVTL,U.CMDC=SDV.K		; SHOW DEVICE
		$PARM DEV.T,TYPE=U$DEVN,FLAGS=PF.OPT	; GET DEVICE
		$ENDCMD
		$ENDTHR

	SDVTL:	DEFQUAL	ALL.Q				; ALL
		DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHOSLG:	$THR
		$DEFCMD QUAL=SLGTL,U.CMDC=SLG.K		; SHOW LOGICAL
		$PARM LOG.T,TYPE=U$ANY,FLAGS=PF.OPT	; GET THE LOGICAL NAME
		$FETP	LOG.T				; LOGICAL SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		PUTCQ	ALL.Q				;  PUT ON /ALL
		$ENDIF
		$ENDCMD
		$ENDTHR

	SLGTL:	DEFQUAL	ALL.Q				; ALL
		DEFQUAL	SYS.K,CONF=USR.Q		; SYSTEM	;021
		DEFQUAL	USR.Q,CONF=SYS.K		; USER		;021
		DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHOCOM:	$THR
		$DEFCMD QUAL=COMTL,U.CMDC=COM.K		; SHOW COMMAND/SYSTEM
		$PARM KEY.T,TYPE=U$CCL,FLAGS=PF.OPT	; GET THE COMMAND NAME
		$FETP	KEY.T				; COMMAND SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		PUTCQ	ALL.Q				;  PUT ON /ALL
		$ENDIF
		$ENDCMD
		$ENDTHR

	COMTL:	DEFQUAL	ALL.Q				; ALL
		DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHOCAC:	$THR
		$DEFCMD QUAL=SCCTL, U.CMDC=SCC.K	; SHOW CACHE    ;018
		$ENDCMD
		$ENDTHR

	SCCTL:	DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHOJPV:	$THR
		$DEFCMD QUAL=SJPTL, U.CMDC=JPV.K	; SHOW JOB/PRIV ;018
		$PARM JOB.T,TYPE=U$S8,MINVAL=1,MAXVAL=63,FLAGS=PF.OPT
							; GET JOB NUMBER
		$ENDCMD
		$ENDTHR

	SJPTL:	DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHOINS:	$THR
		$DEFCMD QUAL=SWITL,U.CMDC=SWI.K		; SHOW INSTALL
		$PARM INS.N,TYPE=U$ANY,FLAGS=PF.OPT	; GET INSTALL NAME
		$FETP	INS.N				; NAME SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		PUTCQ	ALL.Q				;  PUT ON /ALL
		$ENDIF
		$ENDCMD
		$ENDTHR

	SWITL:	DEFQUAL	ALL.Q				; ALL
		DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHOSWA:	$THR
		$DEFCMD QUAL=SWATL,U.CMDC=SWA.K		; SHOW FILE
		$ENDCMD
		$ENDTHR

	SWATL:	DEFQUAL	ALL.Q,CONF=<ERF.Q,NTF.Q,OVF.Q,SWP.Q> ; ALL
		DEFQUAL ERF.Q,CONF=<ALL.Q,NTF.Q,OVF.Q,SWP.Q> ; ERROR_FILE
		DEFQUAL NTF.Q,CONF=<ALL.Q,ERF.Q,OVF.Q,SWP.Q> ; NETWORK_FILE
		DEFQUAL OVF.Q,CONF=<ALL.Q,ERF.Q,NTF.Q,SWP.Q> ; OVERLAY_FILE
		DEFQUAL SWP.Q,CONF=<ALL.Q,ERF.Q,NTF.Q,OVF.Q>,ARG=OPT;SWAP_FILE
		 DEFARG TYPE=U$S8,MINVAL=0,MAXVAL=3	     ; GET SWAP FILE #
		 ENDARG
		DEFQUAL SYS.K
		DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHOSHM:	$THR
		$DEFCMD QUAL=SSETL, U.CMDC=SHM.K	; SHOW SYSTEM/EMT ;018
		$ENDCMD
		$ENDTHR

	SSETL:	DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

	SHOSSY:	$THR
		$DEFCMD QUAL=SSYTL, U.CMDC=SSY.K	; SHOW SYSTEM   ;018
		$ENDCMD
		$ENDTHR

	SSYTL:	DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 	;020
		 DEFARG TYPE=LF.N			; LOCAL FILENAME REQ.
		 ENDARG
		ENDQUAL

		.PAGE
		.SBTTL PROCESS DETACH JOB COMMAND

	SETJDT:	$THR
		$DEFCMD QUAL=JDTTL,U.CMDC=JDT.K		; DETACH JOB
		$PARM JOB.T,PROMPT=JOB.P,TYPE=U$S8,MINVAL=1,MAXVAL=63
							; GET JOB NUMBER
		$ENDCMD
		$ENDTHR

	JDTTL:	DEFQUAL	CLO.Q,QF.NEG			; [NO]CLOSE
		ENDQUAL

		.PAGE
		.SBTTL PROCESS LOGIN COMMAND

	LGNCMD:	$THR
		$DEFCMD	QUAL=LGNTL,U.CMDC=LGN.K		; LOGIN
		$PARM	PPN.T,TYPE=U$PPN,FLAGS=PF.OPT	; [ppn]
		$ENDCMD
		$ENDTHR

	LGNTL:	DEFQUAL PRI.Q,ARG=REQ			; PRIORITY=p
		 DEFARG	TYPE=U$S8,MINVAL=-120,MAXVAL=120; SIGNED INT ARG
		 ENDARG
		DEFQUAL RUN.Q,ARG=REQ			; RUN_BURST=q
		 DEFARG TYPE=U$S8,MINVAL=1,MAXVAL=127	; INTEGER ARG
		 ENDARG
		DEFQUAL	TER.Q,ARG=REQ			; TERMINAL=KBn
		 DEFARG	TYPE=U$DEV			; DEVICE ARG
		 ENDARG
		DEFQUAL	OVR.Q,ARG=OPT			; OVERRIDE[=NO_LOGINS]
		 DEFARG	NOL.K,FLAGS=AF.NEG		; =NO_LOGINS
		 ENDARG
		ENDQUAL
	.PAGE
	.SBTTL PROCESS BROADCAST

	BRDCMD:	$THR
		$DEFCMD QUAL=BRDTL,U.CMDC=BRD.K		; BROADCAST
		$FETCQ	ALL.Q				; /ALL SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		$FETCQ	USE.Q				;/LOGGED_IN SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		$PARM KB.T,PROMPT=TO.P,TYPE=U$ANY,OCCURS=20.;GET DEST ;05
		$ENDIF
		$ENDIF
		$PARM STR.T,TYPE=U$ANY,FLAGS=PF.OPT	; GET THE STRING
		$ENDCMD
		$ENDTHR

	BRDTL:	DEFQUAL ALL.Q,CONF=<USE.Q,KB.T>		; ALL
		DEFQUAL USE.Q,CONF=<ALL.Q,KB.T>		; LOGGED_IN
		DEFQUAL HDR.Q,QF.NEG			; [NO]HEADER
		DEFQUAL BEL.Q,QF.NEG			; [NO]BELL
		ENDQUAL

	.PAGE
	.SBTTL PROCESS FORCE

	FORCMD:	$THR
		$DEFCMD QUAL=FORTL,U.CMDC=FOR.K		; FORCE
		$FETCQ	ALL.Q				; /ALL SPECIFIED
		$IF	ABSENT				; IF NOT THEN
		$FETCQ	USE.Q				;/LOGGED_IN SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		$PARM KB.T,PROMPT=TO.P,TYPE=U$ANY,OCCURS=20.;GET DEST ;05
		$ENDIF
		$ENDIF
		$PARM STR.T,PROMPT=FOR.P,TYPE=U$QUOT	; GET THE STRING
		$ENDCMD
		$ENDTHR

	FORTL:	DEFQUAL ALL.Q,CONF=<USE.Q,KB.T>		; ALL
		DEFQUAL USE.Q,CONF=<ALL.Q,KB.T>		; LOGGED_IN
		ENDQUAL

	.PAGE
	.SBTTL PROCESS ALLOCATE

	ALLCMD:	$THR
		$DEFCMD	QUAL=ALLTL,U.CMDC=ALO.K		; ALLOCATE
		$PARM DEV.T,PROMPT=DEV.P,TYPE=U$DEV	; GET DEVICE
		$PARM LOG.T,PROMPT=LOG.P,TYPE=U$ANY,FLAGS=PF.OPT
							; GET LOGICAL NAME ;024
		$FETP	LOG.T			        ;FETCH THE LOGICAL NAME
		$IF	PRESENT				; IF PRESENT
		$DISALLOW <JOB.Q>,U.CNFE		; DON'T ALLOW /JOB
		$ENDIF
		$FETCQ QUE.Q			        ;FETCH /QUEUED qual
		$IF	PRESENT				; IF PRESENT
		$GOTO CHKPRT				;  MAKE SURE IT'S A KB:
		$ENDIF
		$ENDCMD
		$ENDTHR

	ALLTL:	DEFQUAL JOB.Q,ARG=REQ			; JOB=n
		 DEFARG TYPE=U$S8,MINVAL=1,MAXVAL=63	; INTEGER ARG
		 ENDARG
		DEFQUAL SEZ.Q				; SEIZE
		DEFQUAL QUE.Q,QF.NEG			;/[NO]QUEUED	;027+
		ENDQUAL

	CHKPRT:	$FETP	DEV.T				; Fetch the device
		$IFDEV	TTY				;If device is KB
		$GOTO	20$				;       Great!	
		$ENDIF					;     End if
							;    [ not a terminal ]
		$DO					;     Go into MACRO code
		MOV	U.POS(R4),LX.ERP		;     Point to device 
		MOV	#NODEVC,R0			;     ?Not a valid dev
		$ENDDO					;     Print error

	20$:	$ENDTHR					;All done	;027-

	.PAGE
	.SBTTL PROCESS DEALLOCATE

	DALCMD:	$THR
		$DEFCMD	QUAL=DALTL,U.CMDC=DAL.K		; DEALLOCATE
		$FETCQ	ALL.Q				; /ALL SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		$PARM DEV.T,PROMPT=DEV.P,TYPE=U$DEV	; GET DEVICE
		$ELSE
		$PARM DEV.T,TYPE=U$DEV,FLAGS=PF.OPT	; GET DEVICE
		$ENDIF
		$ENDCMD
		$ENDTHR

	DALTL:	DEFQUAL ALL.Q				; /ALL
		ENDQUAL

	.PAGE
	.SBTTL PROCESS HANGUP

	HANCMD:	$THR
		$DEFCMD U.CMDC=HAN.K			; HANGUP
		$PARM KB.T,PROMPT=KB.P,TYPE=U$DEV	; GET KBn[:]
		$ENDCMD
		$ENDTHR

	.PAGE
	.SBTTL PROCESS DEFINE/COMMAND/SYSTEM

	DCMCMD:	$THR
		$DEFCMD QUAL=DCMTL,U.CMDC=DCM.K	 	;DEFINE/COMMAND/SYSTEM
		$PARM KEY.T,PROMPT=KEY.P,TYPE=U$CCL	; GET KEYWORD
		$PARM COM.T,PROMPT=COM.P,TYPE=LF.N.W	; GET PROGRAM NAME
		$ENDCMD
		$ENDTHR

	DCMTL:	DEFQUAL LIN.Q,ARG=REQ			; LINE_NUMBER=n
		 DEFARG CCL.K				; CCL
		 DEFARG DCL.K				; DCL
		 DEFARG CHN.K				; CHAIN
		 DEFARG TYPE=U$S16,MINVAL=0,MAXVAL=32767; INTEGER ARG
		 ENDARG
		DEFQUAL PRV.Q,QF.NEG			; [NO]PRIVILEGE
		DEFQUAL	RPL.Q, FLAGS=QF.NEG, ARG=OPT	; [NO]REPLACE	;026+
		 DEFARG	QER.K				; =QUERY
		 ENDARG							;026-
		ENDQUAL

	.PAGE
	.SBTTL PROCESS DELETE COMMANDS

	KCMCMD:	$THR
		$DEFCMD	QUAL=KCMTL,U.CMDC=KCM.K		;DELETE/COMMAND/SYSTEM
		$FETCQ	ALL.Q				; /ALL SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		$PARM KEY.T,PROMPT=KEY.P,TYPE=U$CCL	; GET COMMAND KEYWORD
		$ELSE
		$PARM KEY.T,TYPE=U$CCL,FLAGS=PF.OPT	; GET COMMAND KEYWORD
		$ENDIF
		$ENDCMD
		$ENDTHR

	KCMTL:	DEFQUAL	ALL.Q				; ALL
		ENDQUAL

	.PAGE
	.SBTTL PROCESS LOAD COMMANDS

	LOVCMD:	$THR
		$DEFCMD QUAL=LOVTL,U.CMDC=LOV.K		; LOAD OVERLAY
		$FETCQ	ALL.Q				; /ALL SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		$PARM NAM.T,TYPE=U$ANY,FLAGS=PF.COL,OCCURS=32,PROMPT=OVR.P
		$ELSE
		$PARM NAM.T,TYPE=U$ANY,FLAGS=PF.COL!PF.OPT,OCCURS=32
		$ENDIF
		$ENDCMD
		$ENDTHR

	LOVTL:	DEFQUAL ALL.Q				; ALL
		ENDQUAL

	LIXCMD:	$THR
		$DEFCMD U.CMDC=LIX.K			; LOAD/INDEX
		$PARM DEV.T,TYPE=U$DEV,FLAGS=PF.OPT	; GET DEVICE
		$ENDCMD
		$ENDTHR

	.PAGE
	.SBTTL PROCESS UNLOAD

	URSCMD:	$THR
		$DEFCMD U.CMDC=URS.K			;UNLOAD RUNTIME_SYSTEM
		$PARM NAM.N,PROMPT=RTS.P,TYPE=U$ANY	; GET RTS NAME
		$ENDCMD
		$ENDTHR

	ULBCMD:	$THR
		$DEFCMD U.CMDC=ULB.K			; UNLOAD LIBRARY
		$PARM NAM.N,PROMPT=LIB.P,TYPE=U$ANY	; GET LIBRARY NAME
		$ENDCMD
		$ENDTHR

	UOVCMD:	$THR
		$DEFCMD QUAL=UOVTL,U.CMDC=UOV.K		; UNLOAD OVERLAY
		$FETCQ	ALL.Q				; /ALL SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		$PARM NAM.T,TYPE=U$ANY,FLAGS=PF.COL,OCCURS=32,PROMPT=OVR.P
		$ELSE
		$PARM NAM.T,TYPE=U$ANY,FLAGS=PF.COL!PF.OPT,OCCURS=32
		$ENDIF
		$ENDCMD
		$ENDTHR

	UOVTL:	DEFQUAL ALL.Q		; ALL
		ENDQUAL

	UIXCMD:	$THR
		$DEFCMD U.CMDC=UIX.K			; UNLOAD/INDEX
		$PARM DEV.T,TYPE=U$DEV,FLAGS=PF.OPT	; GET DEVICE
		$ENDCMD
		$ENDTHR


	.PAGE
	.SBTTL PROCESS ASSIGN						    

	ASGCMD:	$THR
		$DEFCMD QUAL=ASGTL, U.CMDC=ASG.K	; ASSIGN	 ;024
		$PARM ASG.T,PROMPT=DEV.P,TYPE=DEVPPN	; GET DEVICE & PPN
		$PARM ASG.N,PROMPT=LOG.P,TYPE=U$LOGNAM	; GET LOGICAL NAME ;025
		$ENDCMD
		$ENDTHR

	ASGTL:	DEFQUAL	RPL.Q, FLAGS=QF.NEG, ARG=OPT	; [NO]REPLACE
		 DEFARG	QER.K				; =QUERY
		 ENDARG
;		DEFQUAL	SYS.K,CONF=USR.Q		; SYSTEM	;024+
;		DEFQUAL	USR.Q,CONF=SYS.K		; USER		;024-
		ENDQUAL
	.PAGE
	.SBTTL PROCESS DEASSIGN/SYSTEM

	DEACMD:	$THR
		$DEFCMD QUAL=DEATL, U.CMDC=DEA.K	; DEASSIGN	   ;024+
		$PARM ASG.N,PROMPT=LOG.P,TYPE=U$LOGNAM	; GET LOGICAL NAME ;024-
		$ENDCMD
		$ENDTHR

	DEATL:	DEFQUAL	SYS.K,CONF=USR.Q		; SYSTEM	;024
		DEFQUAL	USR.Q,CONF=SYS.K		; USER		;024
		DEFQUAL	ALL.Q				; ALL		;028
		ENDQUAL							;024

	.PAGE
	.SBTTL PROCESS DUMP/SYSTEM

	DUMCMD:	$THR
		$DEFCMD U.CMDC=DUM.K			; DUMP/SYSTEM
		$ENDCMD
		$ENDTHR
	.PAGE
	.SBTTL	PROCESS INSTALL/RUNTIME_SYSTEM


	INSRTS:	$THR
		$DEFCMD	QUAL=DRSTL,U.CMDC=DRS.K		;INSTALL/RUNTIME_SYSTEM
		$PARM NAM.T,PROMPT=RTS.P,TYPE=LF.N	; GET RTS FILENAME
		$ENDCMD
		$ENDTHR

	DRSTL:	DEFQUAL PRE.Q,ARG=OPT			; PREFIX[=n]
		 DEFARG TYPE=U$U8			; INTEGER ARG
		 ENDARG
		DEFQUAL TYP.Q,ARG=REQ			; TYPE=filetype
		 DEFARG TYPE=U$ANY			; STRING ARG
		 ENDARG
		DEFQUAL MIN.Q,ARG=REQ			; MINIMUM_SIZE=n
		 DEFARG TYPE=U$S8,MINVAL=1,MAXVAL=28	; INTEGER ARG
		 ENDARG
		DEFQUAL MXS.Q,ARG=REQ			; MAXIMUM_SIZE=n
		 DEFARG TYPE=U$S8,MINVAL=1,MAXVAL=28	; INTEGER ARG
		 ENDARG
		DEFQUAL ADD.Q,ARG=OPT,FLAGS=QF.NEG	; [NO]ADDRESS[=n]
		 DEFARG TYPE=U$S16,MINVAL=1,MAXVAL=2043	; INTEGER ARG
		 ENDARG
		DEFQUAL KBM.Q,QF.NEG			; [NO]KEYBOARD_MONITOR
		DEFQUAL SIN.Q,QF.NEG			; [NO]SHAREABLE
		DEFQUAL RO.Q,QF.NEG			; [NO]READ_ONLY
		DEFQUAL LGE.Q,QF.NEG			; [NO]LOG_ERROR
		DEFQUAL REM.Q,QF.NEG			; [NO]REMOVE
		DEFQUAL POS.Q,ARG=REQ			; POSITION=n
		 DEFARG TYPE=U$U8,MINVAL=1		; INTEGER ARG
		 ENDARG
		DEFQUAL LOK.Q,QF.NEG			; [NO]LOCK
		ENDQUAL

	.PAGE
	.SBTTL	PROCESS INSTALL/LIBRARY	

	INSLIB:	$THR
		$DEFCMD QUAL=DLBTL,U.CMDC=DLB.K		; INSTALL/LIBRARY
		$PARM NAM.T,PROMPT=LIB.P,TYPE=LF.N	; GET LIBRARY FILENAME
		$ENDCMD
		$ENDTHR

	DLBTL:	DEFQUAL ADD.Q,ARG=OPT,CONF=NAD.Q	; ADDRESS[=n]
		 DEFARG TYPE=U$S16,MINVAL=1,MAXVAL=2043	; INTEGER ARG
		 ENDARG
		DEFQUAL	NAD.Q,ARG=OPT,CONF=ADD.Q	; NOADDRESS
		 DEFARG	RST.K				; =RESTRICTED
		 DEFARG	URT.K				; =UNRESTRICTED
		 ENDARG
		DEFQUAL SIN.Q,QF.NEG			; [NO]SHAREABLE
		DEFQUAL RO.Q,QF.NEG			; [NO]READ_ONLY
		DEFQUAL LGE.Q,QF.NEG			; [NO]LOG_ERROR
		DEFQUAL REM.Q,QF.NEG			; [NO]REMOVE
		DEFQUAL LOK.Q,QF.NEG			; [NO]LOCK
		DEFQUAL PTC.Q,ARG=REQ			; PROTECTION=n
		 DEFARG	TYPE=U$S8,MINVAL=0,MAXVAL=63	; INTEGER ARG
		 ENDARG
		ENDQUAL

	.PAGE
	.SBTTL	PROCESS INSTALL/ERROR_FILE

	INSERR:	$THR
		$DEFCMD	QUAL=DERTL,U.CMDC=DER.K		;INSTALL/ERROR_FILE
		$PARM SWA.T,FLAGS=PF.OPT,TYPE=LF..W	;ERROR FILE NAME ;04
		$ENDCMD
		$ENDTHR

	DERTL:	DEFQUAL	SIZ.Q,ARG=REQ			;SIZE=n
		 DEFARG	TYPE=U$U16			;INTEGER ARG
		 ENDARG
		DEFQUAL POS.Q,ARG=REQ,REQUIRE=<SIZ.Q>	;POSITION=n
		 DEFARG MID.K				;= MIDDLE
		 DEFARG IDX.K				;= INDEX
		 DEFARG TYPE=U$U16
		 ENDARG
		DEFQUAL	LOG.Q,QF.NEG			; [NO]LOG	 ;04
		ENDQUAL

	.PAGE
	.SBTTL	PROCESS INSTALL/OVERLAY_FILE

	INSOVL:	$THR
		$DEFCMD	QUAL=DOVTL,U.CMDC=DOV.K		;INSTALL/OVERLAY_FILE
		$PARM SWA.T,FLAGS=PF.OPT,TYPE=LF..W	;OVERLAY FILE NAME ;04
		$ENDCMD
		$ENDTHR

	DOVTL:	DEFQUAL	SIZ.Q,ARG=REQ			;SIZE=n
		 DEFARG	TYPE=U$U16			;INTEGER ARG
		 ENDARG
		DEFQUAL POS.Q,ARG=REQ,REQUIRE=<SIZ.Q>	;POSITION=n
		 DEFARG MID.K				;= MIDDLE
		 DEFARG IDX.K				;= INDEX
		 DEFARG TYPE=U$U16
		 ENDARG
		DEFQUAL	LOG.Q,QF.NEG			; [NO]LOG	 ;04
		ENDQUAL

	.PAGE
	.SBTTL	PROCESS INSTALL/SWAPFILE

	INSSWA:	$THR
		$DEFCMD QUAL=DSWTL,U.CMDC=DSW.K		;INSTALL/SWAPFILE
	       $PARM SWN.T,PROMPT=ISN.P,TYPE=U$U8,MINVAL=0,MAXVAL=3,FLAGS=PF.COL
							;SWAPFILE NUMBER
		$PARM SWA.T,FLAGS=PF.OPT,TYPE=LF..W	;GET SWAPFILE NAME ;04
		$FETP	SWA.T				;SWAPFILE SPECIFIED?
		$IF	PRESENT				; IF PRESENT
		$DO
		MOV	U.POS(R4),CONFPOS		;SAVE THE POSITION
		$ENDDO
		$DISALLOW	<DVE.Q>,U.CNFE		;DISALLOW /DEVICE
		$ENDIF
		$ENDCMD
		$ENDTHR

	DSWTL:	DEFQUAL	SIZ.Q,ARG=REQ,CONF=<DVE.Q>	;SIZE=n
		 DEFARG	TYPE=U$U16			;INTEGER ARG
		 ENDARG
		DEFQUAL POS.Q,ARG=REQ,REQUIRE=<SIZ.Q>,CONF=<DVE.Q> ;POSITION=n
		 DEFARG MID.K				;= MIDDLE
		 DEFARG IDX.K				;= INDEX
		 DEFARG TYPE=U$U16
		 ENDARG
		DEFQUAL	DVE.Q,ARG=REQ,CONF=<SIZ.Q,POS.Q>;DEVICE=disk	 ;04
		 DEFARG	TYPE=U$DEV			; disk		 ;04
		 ENDARG
		DEFQUAL	LOG.Q,QF.NEG			; [NO]LOG	 ;04
		ENDQUAL

	.PAGE
	.SBTTL	PROCESS REMOVE COMMANDS

	REMFIL:	$THR
		$DEFCMD QUAL=REMTL,U.CMDC=REM.K		; REMOVE FILE
		$FETCQ	ALL.Q				; /ALL SPECIFIED?
		$IF	ABSENT				; IF NOT THEN
		$PARM INS.T,PROMPT=FIL.P,TYPE=LF.N.W	; GET PROGRAM NAME
		$FETP	INS.T				; FETCH THE FILE
		LOOKUP	FILE				; SEE IF IT EXISTS
		$ENDIF
		$ENDCMD
		$ENDTHR

	REMTL:	DEFQUAL	ALL.Q,CONF=INS.T		; ALL
		ENDQUAL

	REMLIB:	$THR
		$DEFCMD	U.CMDC=KLB.K			; REMOVE/LIBRARY
		$PARM NAM.N,PROMPT=LIB.P,TYPE=U$ANY	; GET LIBRARY NAME
		$ENDCMD
		$ENDTHR

	REMRTS:	$THR
		$DEFCMD	U.CMDC=KRS.K			;REMOVE/RUNTIME_SYSTEM
		$PARM NAM.N,PROMPT=RTS.P,TYPE=U$ANY	; GET RTS NAME
		$ENDCMD
		$ENDTHR

	REMJOB:	$THR
		$DEFCMD QUAL=REJTL,U.CMDC=SJB.K		;REMOVE/JOB	;009+
		$PARM JOB.T,PROMPT=JOB.P,TYPE=U$S8,MINVAL=1,MAXVAL=63
							; GET JOB NUMBER
		$FETCQ	CON.Q				; FETCH /CONFIRM ;010+
		$IF	PRESENT				; IF THERE
		$IF	NO				; IF /NOCONFIRM
		PUTCQ	QER.K,NO			; PUT OUT /NOQUERY
		$ELSE					; IF /CONFIRM
		PUTCQ	QER.K				; PUT OUT /QUERY
		$ENDIF
		$ENDIF							 ;010-
		$FETCQ	QER.K				; FETCH /QUERY
		$IF	ABSENT				; IF NOT THERE
		PUTCQ	QER.K				; PUT IT THERE
		$ENDIF							;009-
		$FETCQ	
		$ENDCMD
		$ENDTHR

	REJTL:	DEFQUAL	QER.K,QF.NEG,CONF=CON.Q		; [NO]QUERY	;010
		DEFQUAL	CON.Q,QF.NEG,CONF=QER.K		; [NO]CONFIRM	;010
		ENDQUAL							;009

	REMERR:	$THR
		$DEFCMD	QUAL=RERTL,U.CMDC=KER.K		;REMOVE/ERROR_FILE ;04
		$ENDCMD
		$ENDTHR

	RERTL:	DEFQUAL	LOG.Q,QF.NEG			; [NO]LOG	 ;04
		ENDQUAL							 ;04

	REMOVL:	$THR
		$DEFCMD QUAL=ROVTL,U.CMDC=KOV.K		;REMOVE/OVERLAY_FILE ;04
		$ENDCMD
		$ENDTHR

	ROVTL:	DEFQUAL	LOG.Q,QF.NEG			; [NO]LOG	 ;04
		ENDQUAL							 ;04

	REMSWA:	$THR
		$DEFCMD QUAL=RSWTL,U.CMDC=KSP.K		;REMOVE/SWAPFILE ;04
	       $PARM SWN.T,PROMPT=ISN.P,TYPE=U$U8,MINVAL=0,MAXVAL=3,FLAGS=PF.COL
							;SWAPFILE #
		$ENDCMD
		$ENDTHR

	RSWTL:	DEFQUAL	LOG.Q,QF.NEG			; [NO]LOG	 ;04
		ENDQUAL							 ;04

	KSWTL:	DEFQUAL ERF.Q,CONF=<OVF.Q,SWP.Q>	; ERROR_FILE
		DEFQUAL OVF.Q,CONF=<ERF.Q,SWP.Q>	; OVERLAY_FILE
		DEFQUAL SWP.Q,CONF=<ERF.Q,OVF.Q>,ARG=REQ; SWAP_FILE
		 DEFARG TYPE=U$S8,MINVAL=0,MAXVAL=3	; GET SWAP FILE #
		 ENDARG
		ENDQUAL

	.PAGE
	.SBTTL	PROCESS CREATE/VIRTUAL_DISK and DELETE/VIRTUAL_DISK

	DVTCMD:	$THR
		$DEFCMD	QUAL=DVT.Q,U.CMDC=DVT.K		;DELETE/VIRTUAL_DISK
		DFLTCQ	LOG.Q				;Default to /LOG
		$ENDCMD
		$ENDTHR

	CVDCMD:	$THR
		$DEFCMD	QUAL=CVD.Q,U.CMDC=CVD.K		;CREATE/VIRTUAL_DISK
		$PARM SIZ.T,TYPE=U$U16,PROMPT=SIZ.P,MINVAL=1,MAXVAL=8176
		DFLTCQ	LOG.Q				;Default to /LOG
		$ENDCMD					;size parameter
		$ENDTHR

	CVD.Q:	DEFQUAL	ADD.Q,ARG=REQ			;/ADDRESS=n
		 DEFARG TYPE=U$S16,MINVAL=1,MAXVAL=2043	; INTEGER ARG
		 ENDARG
	DVT.Q:	DEFQUAL	LOG.Q,QF.NEG			;/[NO]LOG
		ENDQUAL

		.PAGE
		.SBTTL	DEFINE UTLMGR PROMPT STRINGS

		CMD.P:	.ASCIC	^\"Utlmgr> "\		; COMMAND PROMPT
		DLP.P:	.ASCIC	^\"Printer: "\		; PRINTER PROMPT
		DEV.P:	.ASCIC	^\"Device: "\		; DEVICE PROMPT
		DAT.P:	.ASCIC	^\"Date: "\		; DATE PROMPT
		TIM.P:	.ASCIC	^\"Time: "\		; TIME PROMPT
		FIL.P:	.ASCIC	^\"Files: "\		; FILES PROMPT
		LOG.P:	.ASCIC	^\"Logical name: "\	; LOGICAL NAME PROMPT
		COM.P:	.ASCIC	^\"Program name: "\	; PROGRAM NAME PROMPT
		SWI.P:	.ASCIC	^\"File: "\		; FILE PROMPT
		JOB.P:	.ASCIC	^\"Job number: "\	; JOB NUMBER PROMPT
		TO.P:	.ASCIC	^\"To: "\		; TO PROMPT
		KB.P:	.ASCIC	^\"Keyboard: "\		; KEYBOARD PROMPT
		FOR.P:	.ASCIC	^\"Command: "\		; COMMAND PROMPT
		KEY.P:	.ASCIC	^\"Command: "\		; COMMAND PROMPT
		RTS.P:	.ASCIC	^\"Run-time System: "\	; RTS PROMPT
		LIB.P:	.ASCIC	^\"Library: "\		; LIBRARY PROMPT
		SWF.P:	.ASCIC	^\"System file: "\	; SYSTEM FILE PROMPT
		PRV.P:	.ASCIC	^\"Privileges: "\	; PRIVILEGE PROMPT
		ISN.P:	.ASCIC	^\"Swapfile number: "\	; SWAPFILE NUMBER
		OVR.P:	.ASCIC	^\"Overlay name: "\	; OVERLAY NAME
		SIZ.P:	.ASCIC	^\"Virtual disk size: "\; CREATE/VIRTUAL SIZE

		.PAGE
		.SBTTL	DEFINE GLOBAL CONSTANTS

		GLOBAL	<SLP.K,SDV.K,SCC.K,SWI.K,SWA.K,REM.K>
		GLOBAL	<DEV.T,JOB.T,DAT.T,TIM.T,FIL.T,LOG.T,PPN.T>
		GLOBAL	<KEY.T,INS.N,KB.T,STR.T,NAM.T,COM.T,SWA.T,NAM.N>
		GLOBAL	<ASG.T,ASG.N,INS.T,SWN.T,PPN.T,SIZ.T>		   ;024
		GLOBAL	<U.CNFE,IQDK.E,U.POS,CONFPOS,LX.ERP,NODEVC>	   ;026
		.END
