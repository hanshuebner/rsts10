TITLE	RSXMCR,<MONITOR CONSOLE ROUTINE>,05,29-AUG-85,SSS/MJG/SJM/KPH

;
;		COPYRIGHT (c) 1974, 1985 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

	ORG	RSXMCR

..MCR::

.ENABL	GBL,AMA

	TMPORG	MCRERM

MCREOF:	NOP				;IGNORE ASSUMED EOF ERROR
	NOP
..EOF==	.-4				;** PATCH ** TO CHANGE EOF MESSAGE HANDLING
	RETURN

MCRRPT:	MOV	#..MCR,(SP)
..RPT==	.-4				;** PATCH ** TO CHANGE EMPTY LINE HANDLING
	RETURN

	UNORG

.SBTTL	GET MONITOR COMMAND LINE

;	PRINT THE PROMPT

.ENABL	LSB

5$:	CALLX	..RSTT			;RESET TERMINAL
	CALL	GETPDB			;GET THE PROMPT DESCRIPTOR BLOCK
	CALLX	..PTXT			;PRINT THE PROMPT

;	GET A LINE FROM THE KEYBOARD

10$:	CALL	GETLIN			;GET A LINE FROM THE KEYBOARD
	TSTB	IOSTS			;CHECK FOR ERRORS
	BEQ	12$			;NONE, CONTINUE
	CALL	MCREOF			;CHECK FOR PRINTING EOF MESSAGE
	BR	5$			;GET ANOTHER PROMPT

12$:	TST	R3			;CHECK LINE LENGTH
	BEQ	15$
	CMPB	(R2),#'!		;CHECK FOR COMMENTS
	BEQ	15$
	CMPB	(R2),#';
	BNE	50$
15$:					;LINE IS EMPTY OR A COMMENT
	CALL	MCRRPT			;GET ANOTHER PROMPT
	CALLX	..RSTT			;RESET THE TERMINAL
	BR	10$			;THEN GET ANOTHER LINE AND CONTINUE

	TMPORG	BP2MCR

BP2MCR::
	RETURN				;NO COMPILER UNLESS OVERLAID

	UNORG

.SBTTL	KEYBOARD MONITOR ROUTINE

..KMON::
	CALL	..MCR			;GET A COMMAND LINE

;	PROCESS THE LINE

20$:	CALLX	..CCL			;DO A CCL OR KBM COMMAND
	MOVB	IOSTS,R1		;GET THE ERROR CODE
	BEQ	50$			;EXIT UNLESS ERROR IN COMMAND
	CMPB	R1,#NOTCLS		;I/O CHANNEL OPEN?
	BNE	40$			;SOME OTHER ERROR
	CLRB	FIRQB+FQFIL		;CLOSE ALL CHANNELS
	DOFIP	RST
	MOV	#NSTORG+2,R2		;POINT R2 TO COMMAND LINE
	BR	20$			;TRY AGAIN

;	ERROR PROCESSING

40$:	CALL	BP2MCR			;SEE IF BP2MCR IS AROUND
	CALLX	..ERMS			;PRINT ERROR MESSAGE ON FAILURE

;	EXIT

50$:	RETURN

.DSABL	LSB

.SBTTL	SUPPORT ROUTINES

;	GET A LINE FROM THE KEYBOARD

GETLIN:	MOV	#NSTORG,R2		;POINT TO BOTTOM OF USER SPACE
	CLR	(R2)+			;CLEAR THE LOW CORE GUARD WORD
	CLR	R3			;FIRST TIME USE MAX COUNT
10$:	MOV	#XRB,R1			;POINT TO XRB
	MOV	#177,(R1)		;LENGTH OF BUFFER
	SUB	R3,(R1)+		;IN CASE OF PARTIAL .READ
	CLR	(R1)+			;SET TO 0 FOR READ
	MOV	R2,(R1)+		;COMMAND LINE AREA STARTS HERE
	CLR	(R1)+			;AND CHANNEL 0 IS WHERE WE READ IT FROM
	CLR	(R1)+			;BLOCK NUMBER DOES NOT APPLY
	MOV	#-1,(R1)+		;KEYBOARD MONITOR WAIT
	MOV	..RMOD,(R1)+		;SET RSX-STYLE I/O READ (MAYBE)
	.READ				;READ A LINE FROM THE KEYBOARD
	TSTB	IOSTS			;CHECK FOR ERRORS
	BNE	50$			;ASSUME EOF
	MOV	R2,R4			;POINT TO END OF LINE
	MOV	XRB+XRBC,R3		;GET LINE LENGTH
	BEQ	20$			;IF EMPTY LINE THEN EXIT
	ADD	R3,R4			;SKIP TO END OF LINE
	CMPB	-1(R4),#12		;CHECK LAST CHARACTER = <LF>
	BEQ	20$			;OK, WE GOT A LINE
	CMPB	-1(R4),#14		;CHECK LAST CHARACTER = <FF>
	BEQ	20$			;OK, WE GOT A LINE
	CMPB	-1(R4),#15		;CHECK LAST CHARACTER = <CR>
	BEQ	20$			;OK, WE GOT A LINE
	CMPB	-1(R4),#33		;CHECK LAST CHARACTER = <ESC>
	BEQ	20$			;OK, WE GOT A LINE
	MOV	R4,R2			;SET BUFFER FOR NEXT I/O 
	BR	10$			;...AND TRY AGAIN

20$:	MOV	#NSTORG+2,R2		;POINT R2 TO COMMAND LINE
	MOV	R4,R3			;RE-CALCULATE LINE LENGTH
	SUB	R2,R3			;...IN CASE OF PARTIAL .READ'S
	BEQ	50$			;NULL LINE LENGTH
30$:	CMPB	-(R4),#40		;STRIP OFF TRAILING BLANKS, ETC.
	BHI	40$
	SOB	R3,30$			;DECREMENT LINE LENGTH AS WE GO
40$:	MOV	#XRB,R1			;POINT R1 BACK TO XRB
	MOV	R3,(R1)+		;UPDATE THE LINE LENGTH
	MOV	R3,(R1)+		;UPDATE THE LINE LENGTH
	MOV	R2,(R1)			;UPDATE THE STARTING ADDRESS
50$:	RETURN

	TMPORG	MCRPRM

..RDY::	.BLKB	18.			;LOGGED IN PROMT (ADDR,LEN,XRMOD,TEXT)
..BYE::	.BLKB	18.			;LOGGED OUT PROMPT  "   "    "    "
..NAM::	.RAD50	\...MCR\		;NAME THE KEYBOARD MONITOR
..RMOD::.WORD	1100			;DO RSX-STYLE I/O READ

.=..RDY					;** PATCH ** TO CHANGE LOGIN PROMPT
	MSGTXT	">",1100
.=..BYE					;** PATCH ** TO CHANGE LOGOUT PROMPT
	MSGTXT	">",1100

	UNORG

.SBTTL	GET TEXT DESCRIPTOR BLOCK FOR PROMPT

GETPDB:	MOV	#..RDY,R3	;GET THE PROMPT DESCRIPTOR BLOCK
	BIT	#JFNOPR,KEY	;IS JOB LOGGED IN?
	BEQ	10$
	MOV	#..BYE,R3	;GET THE LOGGED OUT PROMPT
10$:	RETURN

.SBTTL	FINISH OFF END OF COMMAND TABLE

	.PSECT	.99995

	.WORD	0		; WITH ONE WORD OF ZERO

	UNORG
.END
