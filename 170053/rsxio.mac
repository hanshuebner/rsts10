TITLE	RSXIO,<RUN-TIME SYSTEM I/O>,05,29-AUG-85,SSS/MJG/KPH

;
;		COPYRIGHT (c) 1974, 1985 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

	ORG	RSXIO

..IO::

.ENABL	GBL,AMA

.SBTTL	TERMINAL I/O ROUTINES

;+
; ROUTINE TO PRINT ERROR MESSAGE
; CALLING SEQUENCE:
;	CALL	..ERMS
; INPUTS:
;	IOSTS
; OUTPUTS:
;	IOSTS SET TO B.10 IF INITIALLY 0
;	R3,R4	CHANGED
;	R5	POINTS TO XRB
;-
..ERMS::
	MOV	#FIRQB+FQERNO,R3	;SET POINTER TO FIRQB
	MOVB	IOSTS,(R3)		;SET ERROR NUMBER
	BNE	5$			;
	MOVB	#B.10,(R3)		;DEFAULT TO RESERVED INSTRUCTION TRAP
5$:	DOFIP	ERR			;GET ERROR MESSAGE TEXT
	MOV	#FIRQB+FQBSIZ,R4	;POINT TO END OF FIRQB
10$:	TSTB	-(R4)			;FIND FIRST NON-NULL
	BEQ	10$			;
	SUB	R3,R4			;GET LENGTH
	INC	R4			;
	PUSH	#5000			;SAVE XRMOD
	PUSH	R4			;.... MESSAGE LENGTH
	PUSH	R3			;.... MESSAGE ADDRESS
	CALL	..RSTT			;RESET THE TERMINAL
	MOV	SP,R3			;PARAMETER POINTER FOR MESSAGE ROUTINE
	CALL	..PTXT			;PRINT MESSAGE
	ADD	#6,SP			;RESET STACK POINTER
	RETURN

;+
; ROUTINE TO RESET TERMINAL AND RETURN CARRIAGE TO MARGIN
; CALLING SEQUENCE:
;	CALL	..RSTT
; INPUT:
;	NONE
; OUTPUT:
;	NONE	(R3 AND R5 MAY BE CHANGED. SEE ..CRLF)
;-
..RSTT::
	.TTRST				;CANCEL CTRL/O
	.TTECH				;ENABLE ECHO
	BR	..CRLF			;INSURE TERMINAL AT LEFT MARGIN

;+
; ROUTINE FOR OUTPUTTING A <CR><LF> ON THE TERMINAL
; CALLING SEQUENCE:
;	CALL	..CRLF
; INPUT:
;	NONE
; OUTPUT:
;	R3	CHANGED
;	R5	POINTS TO XRB
;-
..CRLF::
	CLRB	R.LUNS+5		;CLEAR FORMS CONTROL FLAGS
	MOV	#CRLF,R3		;SET UP MESSAGE DESCRIPTOR BLOCK
	.BR	..PTXT			;FALL INTO ..PTXT

;+
; ROUTINE FOR PRINTING MESSAGES
; CALLING SEQUENCE:
;	CALL	..PTXT
; INPUTS:
;	(R3)	MESSAGE ADDRESS
;	2(R3)	MESSAGE LENGTH
;	4(R3)	TERMINAL MODE (XRMOD)
; OUTPUTS:
;	R3	INCREMENTED BY 6
;	R5	POINTS TO XRB
;-
..PTXT::
	MOV	#XRB+XRBSIZ,R5		;GET XRB POINTER INTO R5
	CLR	-(R5)			;CLEAR XRMOD
	CLR	-(R5)			;CLEAR WAIT TIME
	CLR	-(R5)			;CLEAR BLOCK NUMBER
	CLR	-(R5)			;AND CHANNEL NUMBER (0 = CONSOLE)
	MOV	(R3)+,-(R5)		;SET XRB+XRBUF
	MOV	(R3),-(R5)		;AND XRB+XRBC
	MOV	(R3)+,-(R5)		;AND XRB+XRLEN
	BIS	(R3)+,XRMOD(R5)		;SET RSX-STYLE I/O
	.WRITE				;WRITE THE MESSAGE W/RSX CARRIAGE CONTROL
10$:	RETURN

CRLF:	MSGTXT	<<12><15>>,3000

.SBTTL	SOME OTHER I/O ROUTINES

;+
; ROUTINE TO PERFORM FIP CALLS
; CALLING SEQUENCE:
;	CALL	..DOFP,R5
;	 .WORD	FIP OPCODE
;
;-
..DOFP::
	MOVB	(R5)+,FIRQB+FQFUN	;PUT FUNCTION CODE IN FIRQB
	TSTB	(R5)+			;ROUND R5
	CALFIP				;CALL FIP
	RETURN	R5			;RETURN

;+
; ROUTINE TO CHECK STATUS RETURNED IN IOSTS BY RSTS CALL
; CALLING SEQUENCE:
;	CALL	..TEST
; INPUT:
;	NONE
; OUTPUT:
;	NONE
;-
..TEST::
	TSTB	IOSTS			;CHECK THE STATUS
	BEQ	5$			;OK, THEN EXIT
	CMPB	IOSTS,#MAGRLE		;MAGTAPE RECORD LENGTH ERROR?
	BNE	10$			;REAL ERROR
5$:	RETURN				;RETURN TO CALLER IF OK
10$:	MOV	IOSTS,R4		;SAVE THE REAL ERROR
	MOV	R4,IOSTS		;AND NOW, RESTORE IT.
	CALL	..ERMS			;PRINT ERROR MESSAGE
	CALLRX	..EXIT			;AND EXIT

.SBTTL	CLEAR DATA SUBROUTINE

;+
; CALLING SEQUENCE:
;	CALL	..CLR,R5
;	 .WORD	ADDRESS OF SOURCE
;	 .WORD	NUMBER OF WORDS TO CLEAR
;
; INPUTS:
;	CLEAR	DESTINATION,SIZE 
; OUTPUTS:
;	R1 AND R3 DESTROYED
;	SOURCE DATA CLEARED
;-
..CLR::
	MOV	(R5)+,R1		;POINT TO SOURCE
	MOV	(R5)+,R3		;GET NUMBER OF WORDS
10$:	CLR	(R1)+			; AND CLEAR IT
	SOB	R3,10$			;LOOP UNTIL DONE
	RETURN	R5

.END
