;+
;
;
; COPYRIGHT (C) 1977, 1980, 1982
; DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
; SINGLE COMPUTER SYSTEM AND MAY  BE  COPIED   ONLY  WITH  THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE,  OR
; ANY OTHER COPIES THEREOF, MAY NOT BE PROVIDED  OR  OTHERWISE
; MADE AVAILABLE TO ANY OTHER PERSON   EXCEPT FOR  USE ON SUCH
; SYSTEM AND TO ONE WHO AGREES TO THESE LICENSE  TERMS.  TITLE
; TO AND OWNERSHIP OF THE SOFTWARE SHALL AT ALL  TIMES  REMAIN
; IN DEC.
;
; THE INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DEC.
;         
; VERSION 02.01
;
; MICHAEL SCHWARTZ  14-JULY-77
;
; PREVIOUSLY MODIFIED BY:
;
;	T. J. MILLER
;	J. E. PROVINO
;	CHUCK SPITZ
;	M. S. HARVEY
;	T. M. MARTIN
;
; MODIFIED BY:
;
;
;	T. M. MARTIN	18-FEB-82
;
;		TMM096 -- CORRECT SP.WX8 DEFINITION
;
;
; MACRO DEFINITIONS TO SUPPORT RSX-11M IMPLEMENTATION OF
; BATCH, TPS, AND DBMS.
;
; CREATE A VIRTUAL TERMINAL
;
	.MACRO	CRVT$	IAST,OAST,AAST,MLEN
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	149.,5
	.WORD	IAST
	.WORD	OAST
	.WORD	AAST
	.WORD	MLEN
	.ENDC
	.IF	NDF	C.RVIA
	.IRP X,<,<C.RVIA,2>,<C.RVOA,2>,<C.RVAA,2>,<C.RVML,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	CRVT$
;
	.MACRO	CRVT$C	IAST,OAST,AAST,MLEN,CS,ERR
	.MCALL	CRVT$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CRVT$	IAST,OAST,AAST,MLEN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CRVT$C
;
	.MACRO	CRVT$S	IAST,OAST,AAST,MLEN,ERR
	.MCALL	DIR$,MOV$
	MOV$	MLEN
	MOV$	AAST
	MOV$	OAST
	MOV$	IAST
	MOV	(PC)+,-(SP)
	.BYTE	149.,5
	DIR$	,ERR
	.ENDM	CRVT$S
;
; ELIMINATE A VIRTUAL TERMINAL
;
	.MACRO	ELVT$	UNUM
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	151.,2
	.WORD	UNUM
	.ENDC
	.IF	NDF	E.LVNM
	OFF$
	OFF$	E.LVNM,2
	.ENDC
	.ENDM	ELVT$
;
	.MACRO	ELVT$C	UNUM,CS,ERR
	.MCALL	ELVT$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	ELVT$	UNUM
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	ELVT$C
;
	.MACRO	ELVT$S	UNUM,ERR
	.MCALL	DIR$,MOV$
	MOV$	UNUM
	MOV	(PC)+,-(SP)
	.BYTE	151.,2
	DIR$	,ERR
	.ENDM	ELVT$S
;
; SPAWN A TASK
;
	.MACRO	SPWN$	TNAME,PN,PR,UGC,UMC,EFN,EAST,ESB,CMDLIN,CMDLEN,UNIT,DNAM
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.IF B	DNAM
	.BYTE	11.,13.
	.IFF
	.BYTE	11.,14.
	.ENDC
	R50$	TNAME
	.BLKW	3
	.BYTE	UMC,UGC
	.WORD	EFN
	.WORD	EAST
	.WORD	ESB
	.WORD	CMDLIN
	.WORD	CMDLEN
	.WORD	UNIT
	.IF NB	DNAM
$$$T2=.
	.ASCII	/DNAM/
.=$$$T2+2
	.ENDC
	.ENDC
	.IF	NDF	S.PWTN
	.IRP X,<,<S.PWTN,4>,<S.PWXX,6>,<S.PWUM,1>,<S.PWUG,1>,<S.PWEF,2>>
	OFF$	X
	.ENDM
	.IRP X,<<S.PWEA,2>,<S.PWES,2>,<S.PWCA,2>,<S.PWCL,2>,<S.PWVT,2>>
	OFF$	X
	.ENDM
	.IRP	X,<<S.PWDN,2>>
	OFF$	X
	.ENDR
	$$$OST=256.*8.
	OFF$	SP.WX8
	.ENDC
	.ENDM	SPWN$
;
 .MACRO	SPWN$C TNAME,PN,PR,UGC,UMC,EFN,EAST,ESB,CMDLIN,CMDLEN,UNIT,DNAM,CS,ERR
	.MCALL	SPWN$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SPWN$	TNAME,,,UGC,UMC,EFN,EAST,ESB,CMDLIN,CMDLEN,UNIT,DNAM
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SPWN$C
;
 .MACRO SPWN$S TNAME,PN,PR,UGC,UMC,EFN,EAST,ESB,CMDLIN,CMDLEN,UNIT,DNAM,ERR
	.MCALL	DIR$,MOV$,MVB$,RFA$
	.IF NB	DNAM
	MOV$	DNAM
	.ENDC
	MOV$	UNIT
	MOV$	CMDLEN
	MOV$	CMDLIN
	MOV$	ESB
	MOV$	EAST
	MOV$	EFN
	MVB$	UMC,UGC
	CLR	-(SP)
	CLR	-(SP)
	CLR	-(SP)
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.IF B	DNAM
	.BYTE	11.,13.
	.IFF
	.BYTE	11.,14.
	.ENDC
	DIR$	,ERR
	.ENDM	SPWN$S
;
; CONNECT
; CAPTURE EXIT CONDITIONS FOR A TASK THAT IS ALREADY ACTIVE
;
	.MACRO	CNCT$	TNAME,EFN,EAST,ESB
	.MCALL 	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	143.,6
	R50$	TNAME
	.WORD	EFN
	.WORD	EAST
	.WORD	ESB
	.ENDC
	.IF	NDF	C.NCTN
	.IRP	X,<,<C.NCTN,4>,<C.NCEF,2>,<C.NCEA,2>,<C.NCES,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	CNCT$
;
	.MACRO	CNCT$C	TNAME,EFN,EAST,ESB,CS,ERR
	.MCALL	CNCT$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	CNCT$	TNAME,EFN,EAST,ESB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	CNCT$C
;
	.MACRO	CNCT$S	TNAME,EFN,EAST,ESB,ERR
	.MCALL	DIR$,MOV$,RFA$,MVB$
	MOV$	ESB
	MOV$	EAST
	MOV$	EFN
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	143.,6
	DIR$	,ERR
	.ENDM	CNCT$S
;
;
; EMIT STATUS
; RETURN SPECIFIED 16 BIT QUANTITY TO THE SPECIFIED CONNECTED TASK
;
	.MACRO	EMST$	TNAME,STATUS
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	147.,4
	R50$	TNAME
	.WORD	STATUS
	.ENDC
	.IF	NDF	E.MSTN
	OFF$
	OFF$	E.MSTN,4
	OFF$	E.MSST,2
	.ENDC
	.ENDM	EMST$
;
	.MACRO	EMST$C	TNAME,STATUS,CS,ERR
	.MCALL	EMST$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	EMST$	TNAME,STATUS
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	EMST$C
;
	.MACRO	EMST$S	TNAME,STATUS,ERR
	.MCALL	DIR$,MOV$,RFA$
	MOV$	STATUS
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	147.,4
	DIR$	,ERR
	.ENDM	EMST$S
;
; STOP FOR LOGICAL 'OR' OF EVENT FLAGS
;
	.MACRO	STLO$	GRP,MSK
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	137.,3
	.WORD	GRP
	.WORD	MSK
	.ENDC
	.IF	NDF	S.TLGR
	OFF$
	OFF$	S.TLGR,2
	OFF$	S.TLMS,2
	.ENDC
	.ENDM	STLO$
;
	.MACRO	STLO$C	GRP,MSK,CS,ERR
	.MCALL	STLO$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	STLO$	GRP,MSK
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	STLO$C
;
	.MACRO	STLO$S	GRP,MSK,ERR
	.MCALL	DIR$,MOV$
	MOV$	MSK
	.IF NB GRP
	MOV	#GRP,-(SP)
	.IFF
	CLR	-(SP)
	.ENDC
	MOV	(PC)+,-(SP)
	.BYTE	137.,3
	DIR$	,ERR
	.ENDM	STLO$S
;
; STOP FOR A SINGLE EVENT FLAG
;
	.MACRO	STSE$	EFN
	.MCALL	OFF$
	.IF	NDF	$$$GLB
	.BYTE	135.,2
	.WORD	EFN
	.ENDC
	.IF	NDF	S.TSEF
	OFF$
	OFF$	S.TSEF,2
	.ENDC
	.ENDM	STSE$
;
	.MACRO	STSE$C	EFN,CS,ERR
	.MCALL	STSE$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	STSE$	EFN
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	STSE$C
;
	.MACRO	STSE$S	EFN,ERR
	.MCALL	DIR$,MOV$
	MOV$	EFN
	MOV	(PC)+,-(SP)
	.BYTE	135.,2
	DIR$	,ERR
	.ENDM	STSE$S
;
;STOP
;
	.MACRO	STOP$
	.IF	NDF	$$$GLB
	.BYTE	131.,1
	.ENDC
	.ENDM	STOP$
;
	.MACRO	STOP$C	CS,ERR
	.MCALL	STOP$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	STOP$
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	STOP$C
;
	.MACRO	STOP$S	ERR
	.MCALL	DIR$
	MOV	(PC)+,-(SP)
	.BYTE	131.,1
	DIR$	,ERR
	.ENDM	STOP$S
;
; UNSTOP TASK
;
	.MACRO	USTP$	TNAME
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	133.,3
	R50$	TNAME
	.ENDC
	.IF	NDF	U.STTN
	OFF$
	OFF$	U.STTN,2
	.ENDC
	.ENDM	USTP$
;
	.MACRO	USTP$C	TNAME,CS,ERR
	.MCALL	USTP$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	USTP$	TNAME
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	USTP$C
;
	.MACRO	USTP$S	TNAME,ERR
	.MCALL	DIR$,RFA$
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	133.,3
	DIR$	,ERR
	.ENDM	USTP$S
;
; SEND,REQUEST, AND CONNECT
;
	.MACRO	SDRC$	TNAME,BUF,EFN,EAST,ESB
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	141.,7
	R50$	TNAME
	.WORD	BUF
	.WORD	EFN
	.WORD	EAST
	.WORD	ESB
	.ENDC
	.IF	NDF	S.DRTN
	.IRP	X,<,<S.DRTN,4>,<S.DRBF,2>,<S.DREF,2>,<S.DREA,2>,<S.DRES,2>>
	OFF$	X
	.ENDM
	.ENDC
	.ENDM	SDRC$
;
	.MACRO	SDRC$C	TNAME,BUF,EFN,EAST,ESB,CS,ERR
	.MCALL	SDRC$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	SDRC$	TNAME,BUF,EFN,EAST,ESB
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	SDRC$C
;
	.MACRO	SDRC$S	TNAME,BUF,EFN,EAST,ESB,ERR
	.MCALL	DIR$,MOV$,RFA$,MVB$
	MOV$	ESB
	MOV$	EAST
	MOV$	EFN
	MOV$	BUF
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	141.,7
	DIR$	,ERR
	.ENDM	SDRC$S
;
; RECEIVE DATA OR STOP
;
	.MACRO	RCST$	TNAME,BUF
	.MCALL	OFF$,R50$
	.IF	NDF	$$$GLB
	.BYTE	139.,4
	R50$	TNAME
	.WORD	BUF
	.ENDC
	.IF	NDF	R.CSTN
	OFF$
	OFF$	R.CSTN,4
	OFF$	R.CSBF,2
	.ENDC
	.ENDM	RCST$
;
	.MACRO	RCST$C	TNAME,BUF,CS,ERR
	.MCALL	RCST$,DIR$
	.IF	NDF	$$$GLB
	.PSECT	$DPB$$
$$$=.
	.IFTF
	RCST$	TNAME,BUF
	.IFT
	.PSECT	CS
	DIR$	#$$$,ERR
	.ENDC
	.ENDM	RCST$C
;
	.MACRO	RCST$S	TNAME,BUF,ERR
	.MCALL	DIR$,MOV$,RFA$
	MOV$	BUF
	RFA$	TNAME
	MOV	(PC)+,-(SP)
	.BYTE	139.,4
	DIR$	,ERR
	.ENDM	RCST$S
;
; SUPERVISOR CALL
;
	.MACRO	SCAL$S	SRAD,CRAD
	.MCALL	DIR$,MOV$
	MOV$	CRAD
	MOV$	SRAD
	MOV	(PC)+,-(SP)
	.BYTE	155.,3
	DIR$	,ERR
	.ENDM	SCAL$S
