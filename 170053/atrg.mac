	.TITLE	ATRG
	.IDENT	/02/
 
;
;		COPYRIGHT (c) 1981 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD
;	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; COPYRIGHT (C) 1976 DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS  SOFTWARE  IS  FURNISHED  UNDER  A LICENSE AND MAY BE USED
; AND  COPIED  ONLY IN  ACCORDANCE WITH THE TERMS OF SUCH LICENSE
; AND WITH  THE INCLUSION  OF THE ABOVE  COPYRIGHT  NOTICE.  THIS
; SOFTWARE  OR ANY OTHER  COPIES  THEREOF, MAY NOT BE PROVIDED OR
; OTHERWISE MADE  AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND
; OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERED.
;
; THE INFORMATION  IN THIS DOCUMENT IS SUBJECT  TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT  BY  DIGITAL
; EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
;
;
;         
; VERSION 02
;
; C. MONIA 15-JUL-76
;
; FORTRAN CALLABLE SUBROUTINES TO ISSUE PLAS DIRECTIVES
;
; MODIFIED BY:
;
;	T. M. MARTIN	5-APR-81
;		MODIFY FOR I&D SPACE SUPPORT
;
;	T. M. MARTIN	9-NOV-81
;		PLACE CODE IN PIC I-SPACE PSECT
;
; MACRO LIBRARY CALLS
;
 
	.MCALL	CALLR,.PICOD
 
;
; LOCAL MACROS
;
; GET DIC, DBP SIZE IN R0
;
; GDIR	DIC,DPBSIZ
;
; WHERE:
;
;	DIC=DIRECTIVE IDENTIFICATION CODE
;	DBPSIZ=SIZE OF DIRECTIVE PARAMETER BLOCK IN WORDS
;
 
	.MACRO	GDIR	DIC,DPBSIZ
	MOV	#<DPBSIZ*400!DIC>,R0
	.ENDM
 
;+
;
; **-ATRG-ISSUE THE ATTACH REGION DIRECTIVE
; **-CRRG-ISSUE THE CREATE REGION DIRECTIVE
; **-DTRG-ISSUE THE DETACH REGION DIRECTIVE
;
; **-CRAW-ISSUE THE CREATE ADDRESS WINDOW DIRECTIVE
; **-ELAW-ISSUE THE ELIMINATE ADDRESS WINDOW DIRECTIVE
; **-MAP-ISSUE THE MAP ADDRESS WINDOW DIRECTIVE
; **-UNMAP-ISSUE THE UNMAP ADDRESS WINDOW DIRECTIVE
;
; CALLING SEQUENCES:
;
; THE CALLING SEQUENCE FOR THE FOLLOWING SUBROUTINES IS OF THE FORM:
;
;	CALL SUB (IWND[,IDSW])
;
; WHERE 'SUB' IS ONE OF THE FOLLOWING:
;
;	CRAW - CREATE ADDRESS WINDOW
;	ELAW - ELIMINATE ADDRESS WINDOW
;	MAP - MAP ADDRESS WINDOW
;	UNMAP - UNMAP ADDRESS WINDOW
;
; ARGUMENT DESCRIPTIONS:
;
;	IWND  IS AN 8-WORD INTEGER ARRAY COMPRISING A WINDOW DESCRIPTOR
;	      BLOCK IN THE FOLLOWING FORMAT:
;
;		IWND (1) - BITS 0 THROUGH 7 CONTAIN THE WINDOW IDENTI-
;			   FICATION. BITS 8 THROUGH 15 CONTAIN THE BASE
;			   APR USED TO MAP THE WINDOW.
;
;		IWND(2) - BASE VIRTUAL ADDRESS OF THE WINDOW
;
;		IWND(3) - WINDOW SIZE **
;		IWND(4) - REGION IDENTIFICATION
;		IWND(5) - OFFSET INTO PARTITION **
;		IWND(6) - LENGTH TO MAP **
;		IWND(7) - STATUS WORD
;		IWND(8) - VIRTUAL ADDRESS OF SEND/RECEIVE BUFFER
;
;
;	IDSW  IS AN INTEGER TO RECEIVE DIRECTIVE STATUS
;
;		*** NOTE ***
;
;
;	THE CONTENTS OF ARRAY IWND MUST BE SETUP BY THE CALLER.
;
; THE CALLING SEQUENCE FOR THE FOLLOWING SUBROUTINES IS OF THE FORM:
;
;	CALL SUB (IREG[,IDSW])
;
; WHERE 'SUB' IS ONE OF THE FOLLOWING:
;
;	ATRG - ATTACH A REGION
;	CRRG - CREATE A REGION
;	DTRG - DETACH A REGION
;
; ARGUMENT DESCRIPTIONS:
;
;	IREG  IS AN 8-WORD INTEGER ARRAY COMPRISING A REGION DESCRIPTOR
;	      BLOCK IN THE FOLLOWING FORMAT:
;
;		IREG (1) - REGION IDENTIFICATION
;
;		IREG (2) - SIZE OF REGION **
;
;		IREG (3) - NAME OF REGION ***
;		IREG (4) -   "  "  "  "
;
;		IREG (5) - NAME OF REGION'S MAIN PARTITION ***
;		IREG (6) -  "   "   "  "     "    "   "  "
;
;		IREG (7) - REGION STATUS WORD
;
;		IREG (8) - PROTECTION CODE OF REGION
;
;
;	IDSW  IS AN INTEGER TO RECEIVE DIRECTIVE STATUS
;
;			*** NOTE ***
;
;	THE CONTENTS OF ARRAY IREG MUST BE SETUP BY THE CALLER
;
;
; **  THESE QUANTITIES ARE IN UNITS OF 64-BYTE BLOCKS
;
; ***  NAMES CONSIST OF TWO WORDS IN RADIX-50 FORMAT
;
;-
 
	.ENABL	LSB
 
;
; ISSUE THE ATTACH REGION DIRECTIVE
;
	.PICOD			; PLACE CODE IN PIC I-SPACE PSECT 
ATRG::				;
	GDIR	57.,2.		; GET DIC, DPB SIZE IN R0
	BR	10$		;
 
;
; ISSUE THE CREATE REGION DIRECTIVE
;
 
CRRG::				;
	GDIR	55.,2.		; GET DIC, DPB SIZE IN R0
	BR	10$		;
 
;
; ISSUE THE DETACH REGION DIRECTIVE
;
 
DTRG::				;
	GDIR	59.,2.		; GET DIC, DPB SIZE IN R0
	BR	10$		;
 
;
; ISSUE THE CREATE ADDRESS WINDOW DIRECTIVE
;
 
CRAW::				;
	GDIR	117.,2.		; GET DIC, DPB SIZE IN R0
	BR	10$		;
 
;
; ISSUE THE ELIMINATE ADDRESS WINDOW DIRECTIVE
;
ELAW::				;
	GDIR	119.,2.		; GET DIC, DPB SIZE IN R0
	BR	10$		;
 
;
; ISSUE THE MAP DIRECTIVE
;
 
MAP::				;
	GDIR	121.,2.		; GET DIC, DPB SIZE IN R0
	BR	10$		;
 
;
; ISSUE THE UNMAP DIRECTIVE
;
 
UNMAP::				;
	GDIR	123.,2.		; GET DIC, DPB SIZE IN R0
 
;
; COMMON CODE TO ISSUE DIRECTIVES WHEN THE CALLING SEQUENCE CON-
; TAINS A SINGLE ARGUMENT FOLLOWED BY AN OPTIONAL STATUS VARIABLE.
 
10$:				;
	MOV	(R5)+,R4	; GET ARGUMENT COUNT IN LOW BYTE
	CLR	-(SP)		; ASSUME NO STATUS TO BE RETURNED
	MOV	(R5)+,-(SP)	; SET ADDRESS OF DESCRIPTOR
	CMPB	R4,#2		; STATUS VARIABLE SPECIFIED?
	BLO	20$		; IF LO NO
	CMP	(R5),#-1	; DUMMY VARIABLE SPECIFIED?
	BEQ	20$		; IF EQ YES
	MOV	(R5),2(SP)	; SET ADDRESS OF STATUS VARIABLE
20$:				;
	MOV	R0,-(SP)	; PUSH DIC, DPB
	CALLR	.X.EX1		; ISSUE DIRECTIVE AND EXIT
 
	.END
