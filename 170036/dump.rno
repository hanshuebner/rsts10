.ft DUMP.SAV
.ps 60, 80
.lm 0
.rm 80
.pr
.hd mixed

The RT11 file display program (DUMP.SAV) prints on your terminal, or writes
to a file, all or any part of a file as words or bytes (in octal), ASCII
characters, and/or Radix-50 characters.
DUMP is particularly useful for examining files which contain binary data.
.s
Note that the use of DUMP.SAV under RSTS/E is not supported by Digital.
The program is included in the RSTS/E distribution for the convenience of
those customers who may find it useful.

.hl1^&Calling and Using DUMP\&
Assuming that a copy of DUMP.SAV resides in the system library account
[1,2] on the system disk, you invoke DUMP by typing a command such as:
.nofill

         RUN $DUMP

.fill
An astrisk will be printed at the left margin of your terminal, and the
program will wait for you to enter a command string.
If you respond to the asterisk by entering only a carriage return,
DUMP prints its current version number.
.s
You can type CTRL/Z to halt DUMP and return control to your
Keyboard Monitor when DUMP is waiting for input from your terminal.
You may type a CTRL/C to abort DUMP at any other time.

.hl1^&Options\&
Table 1 summarizes the options that are valid for DUMP.
.nofill

    Table 1:  DUMP Options

    Option    Explanation

    /B        Outputs bytes, in octal

    /E:n      Ends output after dumping block number "n" of the file,
              where "n" is an octal number

    /G        Ignores input errors.

    /N        Suppresses ASCII output.

    /O:n      Outputs only block number "n", where "n" is an octal block
              number.  With this option, you can dump only a single block
              for each command line.

    /S:n      Starts output with block number "n", hwere "n" is an octal
              block number.  For random-access devices, "n" may not be
              larger than the number of blocks in the file.

    /T        Defines a magnetic tape as non-file-structured.

    /W        Outputs words, in octal (the default mode).

    /X        Outputs Radix-50 characters.

.fill
ASCII characters are always dumped unless you specify /N.
.s
If you specify an input file name, the block numbers (n) you supply are
relative to the beginning of that file.
If you do not specify a file name (that is, if you are dumping a device),
the block numbers are the absolute (physical) block numbers on that device.
Remember that to DUMP, the first block of any file or device is block 0.
.s
DUMP handles operations that involve magnetic tape differently from operations
involving random-access devices.
.s
If you dump an ANSI file-structured magnetic tape and specify only a device
name in the input specification, DUMP reads only as far as the logical EOF1.
Logical end-of-tape is indicated by and end-of-file label followed by two tape
marks.
For non-file-structured tape, logical end-of-tape is indicated by two
consecutive tape marks.
For magnetic tape dumps, tape mark messages appear in the output listing as
DUMP encounters them on the tape.
.s
If you use /S:n with magnetic tape, "n" can be any positive value.
However, an error can occur if "n" is greater than the number of blocks
written on the tape.
For example, if a tape has 100 written blocks and "n" is 110,
an error can occur if DUMP accesses past the 100th block.
If you specify /E:n, DUMP reads the tape from its starting position
(block 0, unless you specify otherwise) to block number "n" or
to logical end-of-tape, whichever occurs first.

.hl1^&Example Commands and Listings\&
This section includes sample DUMP commands and the listings they produce.
.s
The following command dumps block 1 of the file $PIP.SAV.
The /N option suppresses ASCII output (which would, if printed, appear
down the right margin, requiring a 132-column listing).
.nofill

      Ready


      RUN $DUMP
      *$PIP.SAV/N/O:1
      $PIP.SAV/N/O:1
      BLOCK NUMBER  00001
      000/ 004537 002144 012704 001064 005714 001403 020024 103374
      020/ 005744 005744 001003 112725 000060 000410 010003 005002
      040/ 071214 062702 000060 110225 005744 001371 010566 000014
      060/ 000207 000000 000001 000012 000144 001750 023420 000000
      100/ 122527 000040 001775 011646 124527 000060 103433 122715
      120/ 000071 103430 010046 010146 005001 122527 000040 001775
      140/ 114500 162700 000072 062700 000012 103010 005205 022701
      160/ 014631 103404 070127 000012 060001 103357 010166 000006
      200/ 012601 012600 103003 112737 000064 000402 000207 004767
      220/ 000006 112725 000056 000401 010746 005727 000261 004537
      240/ 002144 012704 001324 010003 103403 012003 010066 000002
      260/ 005002 071224 005702 001406 162702 000032 003003 062702
      300/ 000132 000402 116202 001334 110225 005714 001361 010566
      320/ 000014 000207 003100 000050 000001 000000 022040 037456
      340/ 030460 031462 032464 033466 034470 004537 002144 012700
      360/ 177777 000402 004537 002144 010504 005046 012701 001720
      400/ 072027 000007 103001 005001 112502 001521 140002 005700
      420/ 100016 105716 001404 120216 001106 105016 000504 120227
      440/ 000047 001403 120227 000042 001002 110216 000474 030027
      460/ 001000 001414 010103 001007 120227 000040 103745 120227
      500/ 000177 001742 000403 120223 103776 001736 120227 000040
      520/ 001403 120227 000011 001017 030027 002400 001325 030027
      540/ 004000 001441 112702 000040 020466 000016 001434 120264
      560/ 177777 001712 000430 030027 010000 001411 120227 000141
      600/ 103406 120227 000172 101003 142702 000040 000414 032700
      620/ 020000 001411 120227 000133 001404 120227 000135 001003
      640/ 105302 162702 000063 110224 042700 002000 000655 105726
      660/ 001015 006300 100013 114402 020466 000014 103406 120227
      700/ 000040 001771 120227 000011 001766 005204 105024 000207
      720/ 015577 006015 000012 005724 105715 001404 122564 177776
      740/ 001373 105745 000204 004537 002144 005003 012701 002000
      760/ 004711 004711 004711 010566 000014 010366 000002 000207
      *_^Z

      Ready

.fill
In the printout above, the heading shows which block of the file follows.
The numbers in the leftmost column indicate the byte offset from the
beginning of the block.
Remember that these are all octal values and that there two bytes per word.
The words that were dumped appear in the next eight columns.
.s
The following command dumps block 1 of the MACRO source file
$COMMON.MAC in bytes.
ASCII equivalents appear beneath each byte's octal interpretation.
(The listing is abbreviated.)
.nofill

      Ready


      RUN $DUMP
      *SY:[1,2]COMMON.MAC/B/O:1


      SY:[1,2]COMMON.MAC/B/O:1
      BLOCK NUMBER  00001
      000/ 015 012 056 123 102 124 124 114 011 117 116 114 131 040 040 111
           .   .   .   S   B   T   T   L   .   O   N   L   Y           I
      020/ 116 040 040 101 103 103 117 122 104 101 116 103 105 040 040 127
           N           A   C   C   O   R   D   A   N   C   E           W
      040/ 111 124 110 040 040 124 110 105 040 040 124 105 122 115 123 040
           I   T   H           T   H   E           T   E   R   M   S    
      060/ 040 117 106 040 040 123 125 103 110 040 040 114 111 103 105 116
               O   F           S   U   C   H           L   I   C   E   N
      100/ 123 105 040 101 116 104 040 127 111 124 110 040 124 110 105 015
           S   E       A   N   D       W   I   T   H       T   H   E   .
        .
        .
        .
      740/ 116 124 040 102 131 040 104 111 107 111 124 101 114 040 105 121
           N   T       B   Y       D   I   G   I   T   A   L       E   Q
      760/ 125 111 120 115 105 116 124 015 012 056 123 102 124 124 114 011
           U   I   P   M   E   N   T   .   .   .   S   B   T   T   L   .
      *_^Z

      Ready

.fill
The final example shows block 1 (the MFD root block) of the disk on
drive DM0:.
The output is in octal words with Radix-50 equivalents beneath each
word's interpretation.
The RSTS/E pack ID ("RT11V4") appears in the first line.
(The listing is abbreviated.)
.nofill

      Ready


      RUN $DUMP
      *DM0:/N/X/O:1


      DM0:/N/X/O:1
      BLOCK NUMBER  00001
      000/ 000020 177777 000000 000000 000004 044000 071677 142522
             P    :8O                    D    KT2    RT1    1V4
      020/ 000060 000401 123252 123252 036160 000000 000040 000001
            AH     FQ    ZZZ    ZZZ    IZ2             2      A
      040/ 000001 000000 000000 000000 000000 000000 000000 000020
             A                                                P
        .
        .
        .
      760/ 000020 000001 000000 000000 000000 000000 000000 000000
             P      A                                          
      *_^Z

      Ready

.fill
