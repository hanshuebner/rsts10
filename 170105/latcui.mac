.INCLUDE	/CMN:COMMON.MAC/
.LIBRARY	/CUI:CUIMLB.MLB/
TITLE	LATCUI,<LAT CUI COMMAND TABLES>,0A,10-MAY-91,JFM/BTK/SEL

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	LATCUI Edit History
;+
; EDIT	BY	DATE		REASON
;
;					[RSTS/E V9.6]
;  001	JFM	24-Sep-87	Creation
;  002	BTK	22-Jan-88	Update to use accepted DCL commands
;
;					[RSTS/E V9.7]
;  003	JFM	28-Sep-89	Added /ACCESS_DEFAULT={DIALUP!LOCAL} 
;
;					[RSTS/E V10.0]
;  004  SEL	02-Oct-89	Added NO prefix to /OUTPUT and made filespec 
;					argument optional.
;  005  SEL	24-Oct-89	Add outbound lat commands: CREATE PORT, DELETE 
;					PORT, ASSIGN PORT, DEASSIGN PORT, 
;					SET PORT and SHOW PORT. 
;  006  SEL	29-Jan-90	Add /[NO]ABORT qualifier to DELETE/PORT.
;				Add /REMOTE_PORT, /NOREMOTE_PORT, /SERVICE 
;					and /NOSERVICE qualifiers to SET PORT.
;  007  SEL	25-Apr-90	Add /LOGICAL_NAME[/SYSTEM,/USER] to CREATE/PORT.
;  008  SEL	22-May-90	Trap missing quals on CREATE/PORT/TERM=server.
;				Check argument length in outbound LAT commands.
;  009  SEL     22-Jun-90	Add /APPLICATION to CREATE/PORT and ASSIGN/PORT.
;  010  SEL     28-Aug-90	Change ASSIGN/PORT server parameter to U$ANY.
;-	

.SBTTL	DEFINE AND ORDER THE .PSECTS

	DEFORG	LATCUI

.SBTTL	DEFINE QCUI MACROS

	.MCALL	$CUI
	$CUI	TABLE				;INCLUDE THE CUI TABLES

	.MACRO	$DOSUB,RTN,PARAMS		;Execute MACRO subroutine
	 .WORD	RTN				; Name of routine
	 .IF	NB PARAMS
	  .WORD	PARAMS				; Parameters, if present
	 .ENDC
	.ENDM

.SBTTL	DEFINE LAT COMMAND TABLE FOR CUI

CMDTBL::					;COMMAND TABLE ENTRY
	$THR
	$RDCMD PROMPT=CMD.P			;READ LAT COMMAND
	$PARKEY					;PARSE COMMAND KEYWORD
	$ONKEY SENO.K,SENOCMD			; SET NODE/LAT COMMAND
	$ONKEY SESC.K,SESCCMD			; SET SERVICE/LAT COMMAND

	$ONKEY SHNO.K,SHNOCMD			; SHOW NODE/LAT COMMAND
	$ONKEY SHSC.K,SHSCCMD			; SHOW SERVICES/LAT COMMAND
	$ONKEY SHCO.K,SHCOCMD			; SHOW COUNTERS/LAT COMMAND
	$ONKEY SHTE.K,SHTECMD			; SHOW TERMINAL_SERVERS/LAT COMMAND
	$ONKEY SHSS.K,SHSSCMD			; SHOW SESSIONS COMMAND

	$ONKEY STLA.K,STLACMD			; START/LAT COMMAND
	$ONKEY SPLA.K,SPLACMD			; STOP/LAT COMMAND

	$ONKEY CRSE.K,CRSECMD			; CREATE/SERVICE/LAT COMMAND
	$ONKEY DESE.K,DESECMD			; DELETE/SERVICE/LAT COMMAND

	$ONKEY CRPO.K,CRPOCMD			; CREATE/PORT COMMAND ;005+
	$ONKEY DEPO.K,DEPOCMD			; DELETE/PORT COMMAND 
	$ONKEY ASPO.K,ASPOCMD			; ASSIGN/PORT COMMAND 
	$ONKEY DAPO.K,DAPOCMD			; DEASSIGN/PORT COMMAND 
	$ONKEY SEPO.K,SEPOCMD			; SET PORT COMMAND    
	$ONKEY SHPO.K,SHPOCMD			; SHOW PORT COMMAND   ;005-
	$ENDKEY
	$ENDTHR

.SBTTL Process SET commands

SENOQL:	;
	; Qualifiers for the SET NODE/LAT command
	;
	DEFQUAL	ACC.Q,ARG=REQ			; /ACCESS_DEFAULT	;003
	 DEFARG	DIA.K				;   = DIALUP		;003
	 DEFARG	LOC.K				;   = LOCAL		;003
	 ENDARG					;			;003
	DEFQUAL	IDE.Q,ARG=REQ			; /IDENTIFICATION
	 DEFARG	TYPE=U$QUOT			;   = string
	 ENDARG					;
	DEFQUAL	MUL.Q,ARG=REQ			; /MULTICAST_TIMER
	 DEFARG	TYPE=U$U8,MINVAL=10		;   = 10 to 255
	 ENDARG					;
	DEFQUAL	ENA.Q,QF.MULT!QF.ALIS,ARG=REQ	; /ENABLE
	 DEFARG	ALL.K				;   = ALL
	 DEFARG	TYPE=U$U8			;   = 0 to 255
	 ENDARG					;
	DEFQUAL	DIS.Q,QF.MULT!QF.ALIS,ARG=REQ	; /DISABLE
	 DEFARG	ALL.K				;   = ALL
	 DEFARG	TYPE=U$U8			;   = 0 to 255
	 ENDARG					;
	DEFQUAL	LOG.Q,QF.NEG			; /[NO]LOG
	DEFQUAL	DBG.Q,QF.NEG			; /[NO]DEBUG
	ENDQUAL					;

SENOCMD::$THR
	$DEFCMD	QUAL=SENOQL,U.CMDC=SENO.K	; SET LAT/NODE command

	$FETCQ	ENA.Q				; Fetch enable
	$IF	PRESENT				; Got one?
	$DO					;
	MOV	U.POS(R4),CONFPOS		;   Save position
	$ENDDO					;   Fetch next enable
	$FETNQ	ENA.Q				;   Got another one?
	$IF	PRESENT				;   If so then
	$DO					;
	MOV	U.POS(R4),LX.ERP		;     Save position
	MOV	#U.CNFE,R0			;     Error = conflict
	$ENDDO					;     Print the error message
	$ENDIF					;
	$ENDIF					; Done with enable

	$FETCQ	DIS.Q				; Fetch disable
	$IF	PRESENT				; Got one?
	$DO					;
	MOV	U.POS(R4),CONFPOS		;   Save position
	$ENDDO					;   Fetch next disable
	$FETNQ	DIS.Q				;   Got another one?
	$IF	PRESENT				;   If so then
	$DO					;
	MOV	U.POS(R4),LX.ERP		;     Save position
	MOV	#U.CNFE,R0			;     Error = conflict
	$ENDDO					;     Print the error message
	$ENDIF					;
	$ENDIF					; Done with disable

	$DO					; It's Macro time
	CLR	CONFPOS				; Clear the conflict position
	$ENDDO
	$ENDCMD
	$ENDTHR

SESCQL:	;
	; Qualifiers for the SET SERVICE/LAT command
	;
	DEFQUAL	STA.Q,ARG=REQ ; ,QF.NEG		; /[NO]STATIC_RATING
	 DEFARG	TYPE=U$U8			;  =0 to 255
	 ENDARG
	DEFQUAL	IDE.Q,ARG=REQ			; /IDENTIFICATION
	 DEFARG	TYPE=U$QUOT			;   = string
	 ENDARG					;
	DEFQUAL	LOG.Q,QF.NEG			; /[NO]LOG
	DEFQUAL	DBG.Q,QF.NEG			; /[NO]DEBUG
	ENDQUAL					;

SESCCMD::$THR
	$DEFCMD	QUAL=SESCQL,U.CMDC=SESC.K	; SET SERVICE/LAT command
	$PARM	NAM.T,U$ANY,PROMPT=SVC$P	;  service_name
	$ENDCMD
	$ENDTHR


.SBTTL	Process SHOW commands

SHCOQL:	;
	; Qualifiers for SHOW COUNTERS/LAT command
	;
	DEFQUAL	DEV.Q,CONF=<NOD.Q,TER.Q>	; /DEVICE	    } mutually
	DEFQUAL	TER.Q,CONF=<DEV.Q,NOD.Q>	; /TERMINAL_SERVERS } exclusive
	DEFQUAL	NOD.Q,CONF=<DEV.Q,TER.Q>	; /NODE		    } qualifiers
	DEFQUAL	RES.Q				; /RESET
	DEFQUAL	ZER.Q				; /ZERO (=RESET)
	; And /OUTPUT follows

SHOWQL:	;
	; Qualifiers for most SHOW /LAT commands 
	;
	DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 		;004
	 DEFARG	TYPE=LF.N			;   = local filespec
	 ENDARG					;
	DEFQUAL	DBG.Q,QF.NEG			; /[NO]DEBUG
	ENDQUAL					;

SHNOCMD::$THR
	$DEFCMD	QUAL=SHOWQL,U.CMDC=SHNO.K	; SHOW NODE/LAT command
	$ENDCMD
	$ENDTHR

SHSCCMD::$THR
	$DEFCMD	QUAL=SHOWQL,U.CMDC=SHSC.K	; SHOW SERVICES/LAT command
	$PARM	NAM.T,U$ANY,PF.OPT		;  optional service name
	$ENDCMD
	$ENDTHR

SHTECMD::$THR
	$DEFCMD	QUAL=SHOWQL,U.CMDC=SHTE.K	; SHOW TERMINAL_SERVERS/LAT command
	$PARM	NAM.T,U$ANY,PF.OPT		;  optional server name
	$ENDCMD
	$ENDTHR

SHCOCMD::$THR
	$DEFCMD	QUAL=SHCOQL,U.CMDC=SHCO.K	; SHOW COUNTERS/LAT command
	$PARM	NAM.T,U$ANY,PF.OPT		;  optional Ethernet device or server name

	$FETCQ	ZER.Q				; /ZERO specified?
	$IF	PRESENT				; Yes
	PUTCQ	RES.Q				;  Specify /RESET
	$ENDIF

	$FETCQ	DEV.Q				; /DEVICE specified?
	$IF	PRESENT				; Yes
	$FETP	NAM.T				;   Was a parameter given?
	$IF	PRESENT				;   Yes
	$DO					;     Go into MACRO code
	MOV	U.POS(R4),LX.ERP		;     Point to parameter
	MOV	#U.TOOP,R0			;     Set error ?Too many parameters
	$ENDDO					;     Print error
	$ENDIF
	$ENDIF
	$ENDCMD
	$ENDTHR

SHSSQL:	;
	; Qualifiers for SHOW SESSIONS command
	;
	DEFQUAL	LAT.Q				; /LAT
	DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT 		;004
	 DEFARG	TYPE=LF.N			;   = local filespec
	 ENDARG					;
	; DEFQUAL	DEV.Q,ARG=REQ			; /DEVICE
	; DEFARG	TYPE=U$DEV			;  = Ethernet_device
	; ENDARG					; 
	DEFQUAL	DBG.Q,QF.NEG			; /[NO]DEBUG
	ENDQUAL

SHSSCMD::$THR
	$DEFCMD	QUAL=SHSSQL,U.CMDC=SHSS.K	; SHOW SESSIONS command
	$PARM	NAM.T,U$ANY,PF.OPT		;  optional server name

;	$FETCQ	DEV.Q				; Fetch the device
;	$IF	PRESENT				;   If present then
;	$IFDEV	ETH				;     If device is Ethernet then
;	$GOTO	10$				;       Great!	
;	$ENDIF					;     End if
 						;    [ not Ethernet ]
;	$DO					;     Go into MACRO code
;	MOV	U.POS(R4),LX.ERP		;     Point to device name
;	MOV	#NODEVC,R0			;     Set error ?Not a valid device
;	$ENDDO					;     Print error
;	$ENDIF					;   End if

10$:	$ENDCMD
	$ENDTHR


.SBTTL	Process START/STOP Commands


STSPQL:	;
	; Qualifiers for START/LAT and STOP/LAT commands 
	;
	DEFQUAL	LOG.Q,QF.NEG			; /[NO]LOG
	DEFQUAL	DBG.Q,QF.NEG			; /[NO]DEBUG
	ENDQUAL					;

STLACMD::$THR
	$DEFCMD	QUAL=STSPQL,U.CMDC=STLA.K	; START/LAT command
	$PARM	NAM.T,U$DEVN,PROMPT=STL$P ;,PF.OPT  ; (Optional) Ethernet_device
	$ENDCMD
	$GOTO	CHKETH				; Check for valid Ethernet dev

SPLACMD::$THR
	$DEFCMD	QUAL=STSPQL,U.CMDC=SPLA.K	; STOP/LAT command
	$PARM	NAM.T,U$DEVN,PF.OPT  		; Optional Ethernet_device
	$ENDCMD
 
CHKETH:	$FETP	NAM.T				; Fetch the device
	$IF	PRESENT				;   If present then
	$IFDEV	ETH				;     If device is Ethernet then
	$GOTO	10$				;       Great!	
	$ENDIF					;     End if
						;    [ not Ethernet ]
	$DO					;     Go into MACRO code
	MOV	U.POS(R4),LX.ERP		;     Point to device name
	MOV	#NODEVC,R0			;     Set error ?Not a valid device
	$ENDDO					;     Print error
	$ENDIF					;   End if

10$:	$ENDTHR


.SBTTL	Process CREATE/DELETE Commands

CRSEQL:	;
	; Qualifiers for the CREATE SERVICE/LAT command
	;
	DEFQUAL	STA.Q,ARG=REQ  ;,QF.NEG		; /[NO]STATIC_RATING
	 DEFARG	TYPE=U$U8			;  =0 to 255
	 ENDARG
	DEFQUAL	IDE.Q,ARG=REQ			; /IDENTIFICATION
	 DEFARG	TYPE=U$QUOT			;   = string
	 ENDARG					;
DESEQL:	;
	; Qualifier for the DELETE SERVICE/LAT command
	;
	DEFQUAL	LOG.Q,QF.NEG			; /[NO]LOG
	DEFQUAL	DBG.Q,QF.NEG			; /[NO]DEBUG
	ENDQUAL					;

CRSECMD::$THR
	$DEFCMD	QUAL=CRSEQL,U.CMDC=CRSE.K	; CREATE SERVICE/LAT command
	$PARM	NAM.T,U$ANY,PROMPT=SVC$P	;  service_name
	$ENDCMD
	$ENDTHR

DESECMD::$THR
	$DEFCMD	QUAL=DESEQL,U.CMDC=DESE.K	; DELETE SERVICE/LAT command
	$PARM	NAM.T,U$ANY,PROMPT=SVC$P	;  service_name
	$ENDCMD
	$ENDTHR

.SBTTL	Process Outbound LAT commands					;005+

CRPOCMD::$THR
	$DEFCMD QUAL=CRPOQL,U.CMDC=CRPO.K	; CREATE/PORT command
	$PARM	POR.T,TYPE=U$DEV,FLAGS=PF.OPT  	; Optional port name (KBn:)
	$ENDCMD
	$FETCQ TER.Q				; Fetch /TERMINAL_SERVER   ;008+
	$IF 	PRESENT				; If present then
	$FETA					;    fetch the server name
	$DOSUB	CHKLEN				;    check length of server 
	$CALL	CHKSER				;    check service,remote_port
	$ENDIF					; End if		   ;008-
	$GOTO	CHKPRT				; Check for valid  port name

DEPOCMD::$THR
	$DEFCMD QUAL=DEPOQL,U.CMDC=DEPO.K	; DELETE/PORT command 
	$PARM	POR.T,TYPE=U$DEV,PROMPT=PRT$P	; Required port name (KBIn:)
	$ENDCMD
	$GOTO	CHKPRT				; Check for valid  port name

ASPOCMD::$THR
	$DEFCMD QUAL=ASPOQL,U.CMDC=ASPO.K	; ASSIGN/PORT command 
	$PARM	POR.T,TYPE=U$DEV,PROMPT=PRT$P	; Required port name (KBn:)
	$PARM	NAM.T,TYPE=U$ANY,PROMPT=SRV$P	; Required server_name     ;010
	$ENDCMD
	$FETP	NAM.T				; Fetch the server name	   ;008+
	$DOSUB	CHKLEN				;    check length of server 
	$CALL	CHKSER				;    service & remote_port ;008-
	$GOTO	CHKPRT				; Check for valid  port name

DAPOCMD::$THR
	$DEFCMD QUAL=DAPOQL,U.CMDC=DAPO.K	; DEASSIGN/PORT command 
	$PARM	POR.T,TYPE=U$DEV,PROMPT=PRT$P	; Required port name (KBIn:)
	$ENDCMD
	$GOTO	CHKPRT				; Check for valid  port name

SEPOCMD::$THR
	$DEFCMD QUAL=SEPOQL,U.CMDC=SEPO.K	; SET PORT command
	$PARM	POR.T,TYPE=U$DEV,PROMPT=PRT$P	; Required port name (KBIn:)
	$ENDCMD
	$CALL	CHKSER				; Check service,remote_port ;008
	$GOTO	CHKPRT				; Check for valid  port name

CRPOQL: ;
	; Qualifiers for the CREATE command
	;
	DEFQUAL	TER.Q,ARG=REQ,REQUIRE=<POR.Q,SER.Q> ;/TERMINAL_SERVER=server;008
	 DEFARG	TYPE=U$ANY			;   
	 ENDARG					;
	DEFQUAL	POR.Q,ARG=REQ,REQUIRE=TER.Q 	;/REMOTE_PORT=port-name
	 DEFARG	TYPE=U$ANY			;   
	 ENDARG					;
	DEFQUAL	SER.Q,ARG=REQ,REQUIRE=TER.Q     ; /SERVICE=service_name
	 DEFARG	TYPE=U$ANY			;   
	 ENDARG					;
	DEFQUAL	QUE.Q,FLAGS=QF.NEG,REQUIRE=TER.Q ; /[NO]QUEUED
	DEFQUAL	LOG.Q,QF.NEG			; /[NO]LOG
	DEFQUAL	LAT.Q				; /LAT
	DEFQUAL	NAM.Q,ARG=REQ			; /LOGICAL_NAME=name	;007+
	 DEFARG	TYPE=U$LOGNAM
	 ENDARG					;
	DEFQUAL SYS.Q,REQUIRE=NAM.Q,CONF=USE.Q	; /SYSTEM
	DEFQUAL	USE.Q,REQUIRE=NAM.Q,CONF=SYS.Q	; /USER			;007-
	DEFQUAL	APP.Q				; /APPLICATION		;009
	ENDQUAL					;

DEPOQL: ;
	; Qualifiers for the DELETE command
	;
	DEFQUAL ABO.Q,QF.NEG			; /[NO]ABORT		;006
	DEFQUAL	LOG.Q,QF.NEG			; /[NO]LOG
	DEFQUAL	LAT.Q				; /LAT
	ENDQUAL					;

ASPOQL: ;
	; Qualifiers for the ASSIGN command
	;
	DEFQUAL	POR.Q,ARG=REQ			; REMOTE_PORT=remote_port_name
	 DEFARG	TYPE=U$ANY			;   
	 ENDARG					;
	DEFQUAL	SER.Q,ARG=REQ			; /SERVICE=service_name
	 DEFARG	TYPE=U$ANY			;   
	 ENDARG					;
	DEFQUAL	QUE.Q,FLAGS=QF.NEG		; /[NO]QUEUED
	DEFQUAL	APP.Q				; /APPLICATION		;009

DAPOQL: ;
	; Qualifiers for the ASSIGN and DEASSIGN commands
	;
	DEFQUAL	LOG.Q,QF.NEG			; /[NO]LOG
	DEFQUAL	LAT.Q				; /LAT
	ENDQUAL					;

SEPOQL: ;								;006+
	; Qualifiers for the SET command
	;
	DEFQUAL	POR.Q,ARG=REQ			; REMOTE_PORT=remote_port_name
	 DEFARG	TYPE=U$ANY			;   
	 ENDARG					;
	DEFQUAL	SER.Q,ARG=REQ			; /SERVICE=service_name
	 DEFARG	TYPE=U$ANY			;   
	 ENDARG					;
	DEFQUAL	NPOR.Q				; /NOREMOTE_PORT
	DEFQUAL NSER.Q				; /NOSERVICE
	DEFQUAL	QUE.Q,FLAGS=QF.NEG		; /[NO]QUEUED
	DEFQUAL	LOG.Q,QF.NEG			; /[NO]LOG
	DEFQUAL	LAT.Q				; /LAT
	ENDQUAL					;
	$FETCQ NPOR.Q			        ;FETCH THE /NOREMOTE_PORT QUAL
	$IF	PRESENT				; IF PRESENT
	$DISALLOW <NSER.Q>,U.CNFE		; DON'T ALLOW /NOSERVICE
	$DISALLOW <POR.Q>,U.CNFE		; DON'T ALLOW /REMOTE_PORT=port
	$ENDIF
	$FETCQ NSER.Q			        ;FETCH THE /NOSERVICE QUALIFIER
	$IF	PRESENT				; IF PRESENT
	$DISALLOW <NPOR.Q>,U.CNFE		; DON'T ALLOW /NOREMOTE_PORT
	$DISALLOW <SER.Q>,U.CNFE		; DON'T ALLOW /SERVICE=service
	$ENDIF

SHPOCMD::$THR
	$DEFCMD QUAL=SHPOQL,U.CMDC=SHPO.K	; SHOW PORT command
	$PARM	POR.T,TYPE=U$DEV,FLAGS=PF.OPT  	; Optional port name (KBn:)
	$ENDCMD
	$GOTO	CHKPRT				; Check for valid  port name

SHPOQL: ;
	; Qualifiers for the SHOW PORT/LAT command
	;
	DEFQUAL	APP.Q,QF.NEG			; /[NO]APPLICATION
	DEFQUAL	INT.Q,QF.NEG			; /[NO]INTERACTIVE
	DEFQUAL	ALL.Q				; /ALL
	DEFQUAL	LAT.Q				; /LAT
	DEFQUAL	OUT.Q,QF.NEG,ARG=OPT		; /[NO]OUTPUT
	 DEFARG	TYPE=LF.N			;   = local filespec
	 ENDARG					;
	ENDQUAL					;

ALLDONE: $ENDTHR

CHKSER:	$FETCQ	SER.Q				; Fetch /SERVICE	   ;008+
	$IF	PRESENT				;   If present then
	$FETA					; 	fetch the argument
	$DOSUB	CHKLEN				;	check argument's length 
	$ENDIF					;   End if
	$FETCQ	POR.Q				; Fetch /REMOTE_PORT
	$IF	PRESENT				;   If present then
	$FETA					; 	fetch the argument
	$DOSUB	CHKLEN				;	check argument's length 
	$ENDIF					;   End if
	$RETURN

CHKLEN:	CMP	U.LEN(R4),#16.			; Is argument too long?
	BLOS	20$				; It's short enough, that's OK
	MOV	U.POS(R4),LX.ERP		; Point to argument/parameter
	MOV	#U.PLNG,R0			; Err = ?Arg/Param too long
20$:	RETURN								   ;008-

CHKPRT:	$FETP	POR.T				; Fetch the device
	$IF	PRESENT				;   If present then
	$IFDEV	TTY				;     If device is KBn or KBIn
	$GOTO	20$				;       Great!	
	$ENDIF					;     End if
						;    [ not a terminal ]
	$DO					;     Go into MACRO code
	MOV	U.POS(R4),LX.ERP		;     Point to device name
	MOV	#NODEVC,R0			;     Err = ?Not a valid device
	$ENDDO					;     Print error
	$ENDIF					;   End if

20$:	$ENDTHR

	;End of Outbound LAT commands					;005-

.SBTTL	DEFINE LAT PROMPT STRINGS

CMD.P:	.ASCIC	^\"LATmgr> "\			; COMMAND PROMPT
SVC$P:	.ASCIC	<"Service name: ">		;
STL$P:	.ASCIC	<"Ethernet device: ">		;
PRT$P:	.ASCIC	<"Local port name: ">		;			;005+
SRV$P:	.ASCIC	<"Terminal server name: ">	;			;005-

.SBTTL	DEFINE GLOBAL CONSTANTS

GLOBAL <SENO.K,SESC.K,SHNO.K,SHSC.K,SHCO.K,SHTE.K,SHSS.K>
GLOBAL <STLA.K,SPLA.K,CRSE.K,DESE.K,CRPO.K,DEPO.K,SEPO.K,SHPO.K>
GLOBAL <CONFPOS,NODEVC,U.CNFE,U.TOOP>
GLOBAL <NAM.T,POR.T,LX.ERP,U.PLNG>

.END
