	.TITLE	.ODCVT
	.IDENT	/04.05/
;
; 		COPYRIGHT (c) 1981 BY
; 	DIGITAL EQUIPMENT CORPORATION, MAYNARD
; 	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED AND  COPIED  ONLY  IN  ACCORDANCE  WITH  THE
; TERMS  OF SUCH LICENSE AND WITH THE INCLUSION OF THE
; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR ANY  OTHER
; COPIES  THEREOF  MAY  NOT  BE  PROVIDED OR OTHERWISE
; MADE AVAILABLE TO ANY OTHER  PERSON.   NO  TITLE  TO
; AND OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERRED.
;
; THE  INFORMATION  IN  THIS  SOFTWARE  IS  SUBJECT TO
; CHANGE WITHOUT NOTICE AND SHOULD  NOT  BE  CONSTRUED
; AS  A  COMMITMENT  BY DIGITAL EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY  FOR  THE  USE  OR
; RELIABILITY  OF  ITS  SOFTWARE  ON EQUIPMENT THAT IS
; NOT SUPPLIED BY DIGITAL.
; Author: A. Marotto
;
; Previously modified by:
;	C. A. D'Elia
;	A. C. Goldstein
;	E. H. Marison
;	S. Ruzich
;
; 	Susan M. Thomas	3-June-1983	04.04
;
;		SMT035-	in .VRCVT use the FEAT$ directive to decide 
;			between	decimal and octal as the default radix
;
;	M. Pettengill	5-July-1983	04.05
;		MLP099 - reference $DSW with PIC instruction in SMT035
;
;
;	ASCII TO OCTAL/DECIMAL CONVERSION ROUTINE
;
	.MCALL	FEAT$S		; USE FEAT$S DIRECTIVE
	.PSECT	$$RESL,RO
;+
;
; *-* .ODCVT -- CONVERT WITH OCTAL DEFAULT
; *-* .VRCVT -- CONVERT VERSION NUMBER TO BINARY
; *-* .DCCVT -- CONVERT WITH DECIMAL DEFAULT
;
;
;	STRING FORMAT-
;
;	OPTIONAL LEADING + OR -
;	OPTIONAL # (FORCE OCTAL CONVERSION)
;	ASCII DIGITS EITHER OCTAL OR DECIMAL
;	OPTIONAL TRAILING . (FOR DECIMAL CONVERSION)
;
;	CALLING SEQUENCE -
;	R3=ADDR OF RESULT WORD
;	R4=LENGTH OF ASCII STRING
;	R5=ADDR OF ASCII STRING
;
;	ERRORS - C-BIT SET IF ILLEGAL CHARS,NO DIGITS
;		OR RESULT OVERFLOW
;
;-
.VRCVT::FEAT$S	#FE$DVN		; DECIMAL VERSION NUMBERS SUPPORTED?
	BCS	.ODCVT		; IF CS, NO, USE OCTAL AS DEFAULT
	CMP	#IS.CLR,@#$DSW	; IF $DSW=#IS.CLR, NO, USE OCTAL
	BEQ	.ODCVT
	BR	.DCCVT		; OTHERWISE YES, USE DECIMAL
.ODCVT::CLR	(R3)		;++001 OCTAL DEFAULT (USE RESULT LOCN)
	BR	CVT0		;++001 SKIP TO COMMON CODE
.DCCVT::MOV	#1,(R3)		;++001 DECIMAL DEFAULT
CVT0:	JSR	R5,.SAVR1	;++001 SAVE REGISTERS
	MOV	R0,-(SP)	;SAVE R0
	MOV	R5,R2		;SET STRING PTR
	ADD	R4,R5		;ADDR END OF STRING
CVT2:	CLR	R1		;SET POS NUM SWITCH
	CMPB	(R2),#'+	;BRANCH IF LEADING +
	BEQ	CVT3
	CMPB	(R2),#'-	;BRANCH IF NOT LEADING -
	BNE	CVT4
	INC	R1		;SET NEG RESULT SWITCH
CVT3:	INC	R2		;STEP OVER SIGN
	DEC	R4		;AND DECREASE SCAN COUNT
CVT4:	CMPB	#'#,(R2)	;++001 LEADING HASH MARK?
	BNE	10$		;++001 NO, MAKE DECIMAL TEST
	INC	R2		;++001 YES, BYPASS THAT CHARACTER
	DEC	(R3)		;++001 FORCE OCTAL CONVERSION
	BR	15$		;++001 DECR STR LENGTH VIA COMMON CODE
10$:	CMPB	#'.,-(R5)	;++001 TRAILING PERIOD?
	BNE	20$		;++001 NO, USE ENTRY POINT DEFAULTS
	INC	(R3)		;++001 YES, FORCE DECIMAL CONVERSION
15$:	DEC	R4		;++001 DECREMENT STRING LENGTH
20$:	MOV	#7,R5		;++001 ASSUME OCTAL CONVERSION
	MOV	(R3),-(SP)	;++001 PUT CONVERSION FLAG ON STACK
	BLE	30$		;++001 SKIP IF OCTAL DESIRED
	CMPB	(R5)+,(R5)+	;++001 UPGRADE CONVERSION TO DECIMAL
30$:	CLR	(R3)		;++001 CLEAR RESULT LOCATION
	TST	R4		;++001 ERROR IF NULL STRING
	BLE	CVTERR		;++001
CVT5:	MOVB	(R2)+,R0	;GET DIGIT
	SUB	#60,R0
	BMI	CVTERR		;ERROR IF LOWER THAN 0
	CMP	R0,R5		;OR HIGHER THAN 7(OR 9)
	BHI	CVTERR
	ASL	(R3)		;MULTIPLY PREVIOUS RESULT
	BCS	CVTERR		;++002 BY 8(OR 10)
	TST	(SP)		;AND ADD IN NEW DIGIT
	BLE	CVT6		;++001 SKIP IF OCTAL CONVERSION
	ADD	(R3),R0
	BCS	CVTERR		;++002
CVT6:	ASL	(R3)
	BCS	CVTERR		;++002
	ASL	(R3)
	BCS	CVTERR		;++002
	ADD	R0,(R3)
	BCS	CVTERR		;++002
	BPL	10$		;++002 BRANCH IF NO SIGN CHANGE
	TST	(SP)		;++002 ELSE, CHECK CONVERSION MODE
	BGT	CVTERR		;++002 ERROR IF DECIMAL OVERFLOW
10$:	DEC	R4		;++002 BRANCH IF MORE DIGITS
	BNE	CVT5
	TST	R1		;BRANCH IF POS NUM
	BEQ	CVTXIT
	NEG	(R3)		;NEGATE NUM
CVTXIT:	CLC			;SET NO ERROR
CXT:	MOV	(SP)+,R0	;++001 POP CONVERSION FLAG (C-BIT SAFE)
	MOV	(SP)+,R0	;++001 RESTORE R0
	RTS	PC		;EXIT
;
CVTERR:				;++001
	SEC			;SET ERROR
	BR	CXT
;
	.END
