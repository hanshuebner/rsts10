	.TITLE	AUTOA
	.IDENT	/03.01/

;
;
;		COPYRIGHT (c) 1983 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD
;	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE  IS  FURNISHED  UNDER  A LICENSE AND MAY BE USED
; AND  COPIED  ONLY IN  ACCORDANCE WITH THE TERMS OF SUCH LICENSE
; AND WITH  THE INCLUSION  OF THE ABOVE  COPYRIGHT  NOTICE.  THIS
; SOFTWARE  OR ANY OTHER  COPIES  THEREOF, MAY NOT BE PROVIDED OR
; OTHERWISE MADE  AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND
; OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERED.
;
; THE INFORMATION  IN THIS DOCUMENT IS SUBJECT  TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT  BY  DIGITAL
; EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
;
;
;
; J. M. Lawler/M. Pettengill	23-OCT-81
;	Rewrite to support user I/D tasks and new CSM calling sequence
;
; MODIFIED BY:
;
;	C.B. PETROVIC	26-MAR-82	03.01
;		CBP045		CHANGE AUTOLOAD VECTOR FORMAT TO USE
;				THE IMPURE AREA POINTER .NAUTO TO
;				ACCESS THE ROUTINE $AUTO IN PREPARATION
;				FOR I/D AUTOLOAD SUPPORT.
;

	.ENABL	LC

	WDBDF	,,S

;
; Global data
;
;
; Supervisor mode library completion routine address
;

	.PSECT	$$CRVC,OVR,D

$CRVC::	.BLKW	8.

;
; Local data
;

	.PSECT	$$AUTA,OVR,D

DALVC:	.WORD	0		; Dummy auto load vector
	.WORD	DISPAT		; Transfer address back to us

;
; **-$AUTOA-Supervisor mode library auto load subroutine
;
; Each resident overlaid supervisor mode library has a separate
; entry point for transfering into the autoload mechanism.
; The routine picks up the supervisor mode library completion
; routine address, calls $auto to map the library, and then issues
; the CSM instruction, which changes to supervisor mode and transfers
; control to the supervisor routine
;
;
; This vector table is necessary because of the changes made to the
; Overlay Run-time System allowing it to reference the $AUTO subroutine
; indirectly through the Impure Area pointer .NAUTO. The original transfer
; to the $AUTO subroutine was by absolute address mode which has now been
; changed to PC relative deferred mode. This all gets changes by TKB when
; the user links to a PLAS-overlaid Supervisor-mode library. The intent is
; to allow up to 8 super-mode libraries to be linked to a user task. Note
; that if 8 libraries are used, each can only be 4kW in length.
;

	.PSECT	$$AUTB,RO,D,LCL,REL

.NAUTP::
	.WORD	N.AUTP		; For the indirect call
.NAUTQ::
	.WORD	N.AUTQ
.NAUTR::
	.WORD	N.AUTR
.NAUTS::
	.WORD	N.AUTS
.NAUTT::
	.WORD	N.AUTT
.NAUTU::
	.WORD	N.AUTU
.NAUTV::
	.WORD	N.AUTV
.NAUTW::
	.WORD	N.AUTW

	
	.PSECT	$$AUTC,RO,I,LCL,REL

N.AUTP:
	MOV	$CRVC,-(SP)	; GET ADDRESS OF COMPLETION ROUTINE
	BR	AUTOS
N.AUTQ:
	MOV	$CRVC+2,-(SP)	; GET ADDRESS OF COMPLETION ROUTINE
	BR	AUTOS
N.AUTR:
	MOV	$CRVC+4,-(SP)	; GET ADDRESS OF COMPLETION ROUTINE
	BR	AUTOS
N.AUTS:
	MOV	$CRVC+6,-(SP)	; GET ADDRESS OF COMPLETION ROUTINE
	BR	AUTOS
N.AUTT:
	MOV	$CRVC+10,-(SP)	; GET ADDRESS OF COMPLETION ROUTINE
	BR	AUTOS
N.AUTU:
	MOV	$CRVC+12,-(SP)	; GET ADDRESS OF COMPLETION ROUTINE
	BR	AUTOS
N.AUTV:
	MOV	$CRVC+14,-(SP)	; GET ADDRESS OF COMPLETION ROUTINE
	BR	AUTOS
N.AUTW:
	MOV	$CRVC+16,-(SP)	; GET ADDRESS OF COMPLETION ROUTINE
;	BR	AUTOS

;
; At this point the stack is as follows:
;	2(SP)	Address of segment descriptor and transfer address
;	(SP)	Completion routine address
;

AUTOS:
	MOV	R1,-(SP)	; Save register
	MOV	4(SP),R1	; Get address of segment descriptor
	MOV	2(SP),4(SP)	; Position completion routine address
	MOV	(R1)+,DALVC	; Get address of segment descriptor
	MOV	(R1),2(SP) 	; Save address of supervisor routine
	MOV	-(R1),R1	; Get address of segment descriptor
	MOV	T$RWDP(R1),R1	; Get address of window block descriptor
	BIS	#WS.SIS,W.NSTS(R1) ; Set supervisor flag
	MOV	(SP)+,R1	; Restore R1
	MOV	#DALVC,-(SP)	; Put dummy vector addess on stack

;
; At this point the stack is as follows:
;	4(SP)	Completion routine address
;	2(SP)	Supervisor mode routine address
;	(SP)	Dummy vector
;

	JMP	@.NAUTO		; Autoload the segment prior to calling
				; the User-mode to Super-mode context
				; switcher.

;
; At this point the stack is as follows:
;	2(SP)	Completion routine address
;	(SP)	Supervisor mode routine address
;

DISPAT:	CSM	(SP)+

	.END
