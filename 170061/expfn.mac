	.TITLE EXPFN -- EXPAND FILENAME STRING
	.IDENT	/02.01/

;
; 		COPYRIGHT (c) 1983, 1984 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD
;	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;
; THIS  SOFTWARE  IS  FURNISHED  UNDER  A LICENSE AND MAY BE USED
; AND  COPIED  ONLY IN  ACCORDANCE WITH THE TERMS OF SUCH LICENSE
; AND WITH  THE INCLUSION  OF THE ABOVE  COPYRIGHT  NOTICE.  THIS
; SOFTWARE  OR ANY OTHER  COPIES  THEREOF, MAY NOT BE PROVIDED OR
; OTHERWISE MADE  AVAILABLE TO ANY OTHER PERSON.  NO TITLE TO AND
; OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERED.
;
; THE INFORMATION  IN THIS DOCUMENT IS SUBJECT  TO CHANGE WITHOUT
; NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT  BY  DIGITAL
; EQUIPMENT CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF
; ITS SOFTWARE ON EQUIPMENT THAT IS NOT SUPPLIED BY DIGITAL.
;
; PREVIOUSLY MODIFIED BY:
;
;	L. H. SILER
;
; MODIFIED BY:
;
;	H. HUANG	29-JUN-83	02.00
;
;		HH177 -- USE $CBVER TO CONVERT FILE VERSION NUMBER
;
;	C. SILVER	25-SEP-84	02.01
;
;		CAS013 - Correct check for ANSII FILENAME BLOCK
;
;
; .EXPFN -- EXPAND FILE NAME STRING
;
;
; INPUT:
;	R0 = OUTPUT STRING BUFFER ADDRESS
;	R1 = FILE DATABASE POINTER
;		FOR FCS-11: FDB ADDRESS
;	R2 = ADDRESS OF DIRECTORY STRING OR 0 IF CURRENT DEFAULT IS TO BE USED
;	R3 = SIZE OF DIRECTORY STRING IF R2 <> 0
;
; OUTPUT:
;	R0 = IS UPDATED TO NEXT FREE BYTE IN OUTPUT BUFFER
;
;	USING THE FILE DATABASE POINTED TO BY R1, EXPAND THE FILESPEC.
;

	.MCALL .PCODE,FCSBT$
	FCSBT$	DEF$L		; DEFINE FCS-11 OFFSETS AND BITS
;
; DEFINE SOME CONSTANTS
;
	SPA = 040		; SPACE CHARACTER
	COLON = ':		; COLON
	PERIOD = '.		; PERIOD
	SEMIC = ';		; SEMICOLON
	DQUOT = '"		; DOUBLE QUOTE

	.PCODE			; ENTER THE PURE CODE SECTION

.EXPFN::
	JSR	R5,.SAVR1	; SAVE R1-R5
	MOV	R1,R5		; POINT TO THE FDB
	MOV	R2,-(SP)	; SAVE DIRECTORY STRING ADDRESS
;
;	CONVERT THE DEVICE NAME
;
	MOVB	F.DVNM(R5),(R0)	; WRITE OUT THE TWO CHARACTER DEVICE NAME
	BEQ	5$		; SKIP IF NOT AVAILABLE
	INC	R0		; BUMP OUTPUT POINTER
	MOVB	F.DVNM+1(R5),(R0)+ ; PUT SECOND CHARACTER
	CLR	R1		; SETUP TO GET THE UNIT NUMBER
	BISB	F.UNIT(R5),R1	; LOAD THE DEVICE UNIT NUMBER
	CLR	R2		; FLAG THAT ZERO SUPRESSION IS TO OCURR
	CALL	$CBTMG		; AND CONVERT THE UNIT TO A STRING
	MOVB	#COLON,(R0)+	; OUTPUT THE TERMINATOR CHARACTER
;
;	CONVERT THE UIC
;
; THE DIRECTORY STRING CAN COME FROM THE FOLLOWING SOURCES:
;	1. A USER SUPPLIED STRING ADDRESS
;	2. A DIRECTORY STRING FROM THE DATASET DESCRIPTOR REFERENCED IN THE FDB
;	3. THE DEFAULT STRING FROM FCS-11 (FSR2)
;
5$:
	MOV	R3,R1		; ASSUME THE USER SUPPLIED A STRING
	BEQ	51$		; BR IF STRING SIZE=0
	MOV	(SP),R2		; DID THE USER SUPPLY A STRING ADDRESS?
	BEQ	51$		; BR IF NOT SUPPLIED
	CMP	#177777,R2	; TO-BE-REINITALIZED FLAG?
	BEQ	51$		; ASSUME NOT SUPPLIED
	TSTB	(R2)		; REAL?
	BNE	105$		; BR IF YES. WE HAVE IT.	
51$:
	MOV	F.DSPT(R5),R2	; GET THE POINTER TO THE DATASET DESCRIPTOR
	BEQ	102$		; SKIP DIRECTORY IF INFORMATION NOT AVAILABLE
	MOV	4(R2),R1	; GET THE LENGTH OF THE DIRECTORY STRING
	BEQ	102$		; THERE IS NO SUCH STRING
	MOV	6(R2),R2	; GET THE ADDRESS OF THE DIRECTORY STRING
	BNE	105$		; DONE.
102$:
	CALL	.RDFDR		; GET THE DEFAULT DIRECTORY STRING, SINCE THAT
				; IS WHAT .PARSE MUST HAVE USED.
	TST	R1		; ANY STRING RETURNED?
	BLE	112$		; IF NOT THEN WE HAVE NO DIRECTORY TO USE
105$:
	MOVB	(R2)+,(R0)+	; WRITE OUT A BYTE OF THE DIRECTORY STRING
	DEC	R1		; LOOP UNTIL DONE MOVING
	BGE	105$		;  THE ENTIRE DIRECTORY STRING.
	DEC	R0		; BACK UP OVER EXTRA BYTE. THIS ALLOWS FOR
				; A ZERO LENGTH DEFAULT STRING.
;
;	NOW CONVERT THE FILE NAME
;
112$:
	BIT	#NB.ANS,F.FNB+N.STAT(R5) ; IS THIS AN ANSII FILENAME BLOCK?
	BEQ	120$		; BR IF STANDARD FILES-11 FORMAT
;
; EXPAND THE ANSII FILENAME FORMAT
;
	MOVB	#DQUOT,(R0)+	; PUT THE LEADING QUOTE DELIMITER

	MOV	#12.,R1		; COUNT OF BYTES IN FIRST FRAGMENT
	ADD	#F.FNB+N.ANM1,R5 ; POINT TO NAME FRAGMENT
	CALL	MOVANS		; MOVE ANSII NAME

	MOV	#5.,R1		; COUNT OF BYTES IN SECOND FRAGMENT
	ADD	#N.ANM2-<N.ANM1+12.>,R5 ; POINT TO SECOND FRAGMENT
	CALL	MOVANS		; MOVE ANSIINAME

	SUB	#<F.FNB+N.ANM2+5>,R5 ; RESTORE FILENAME BLOCK POINTER
	MOVB	#DQUOT,(R0)+	; PUT TRAILING QUOTE
	BR	150$		; AND GO INSERT VERSION NUMBER
;
; EXPAND THE FILES-11 FILENAME FORMAT
;
120$:
	MOV	F.FNAM(R5),R1	; GET THE FIRST THREE CHARACTERS OF THE FILE
				;  NAME.  THESE MUST BE NON-NULL (TESTED ABOVE)
	CALL	CVTR50		; CONVERT THEM TO ASCII
	BCS	140$		; BLANK INVOLVED - DONE
	MOV	F.FNAM+2(R5),R1	; GET THE SECOND THREE CHARACTERS OF THE NAME
	CALL	CVTR50		; CONVERT THEM TO ASCII
	BCS	140$		; BLANK INVOLVED - DONE
	MOV	F.FNAM+4(R5),R1	; GET THE THIRD THREE CHARACTERS OF THE NAME
	CALL	CVTR50		; CONVERT THEM TO ASCII
;
;	NOW CONVERT THE FILE TYPE STRING
;
140$:
	MOVB	#PERIOD,(R0)+	; WRITE OUT THE SEPARATOR
	MOV	F.FTYP(R5),R1	; GET THE FILE TYPE INFORMATION
	CALL	CVTR50		; AND WRITE IT OUT
;
;	CONVERT THE VERSION NUMBER
;
150$:
	MOVB	#SEMIC,(R0)+	; WRITE OUT THE SEPARATOR
	MOV	F.FVER(R5),R1	; GET THE VERSION NUMBER TO USE
	CLR	R2		; SET THE ZERO SUPPRESSION INDICATOR
	CALL	$CBVER		; CONVERT VERSION NUMBER TO ASCII STRING
;
;	DONE WITH THE CONVERSION
;
	INC	(SP)+		; DISCARD SWITCH
	RETURN			; DONE.

;
;	SUBROUTINE TO CONVERT A RAD50 WORD IN R1 TO AN ASCII STRING POINTED
;	TO BY R0.  PERFORMS TRAILING BLANK SUPPRESSION, AND RETURNS WITH
;	THE C BIT SET IF THERE WERE ANY TRAILING BLANKS.
;
CVTR50:	TST	R1		; IS THERE ANYTHING THERE?
	BEQ	6$		; NO, THERE IS NOTHING.  DONE.
	CALL	$C5TA		; CONVERT THE THING TO A STRING
	CMPB	-(R0),#SPA	; IS IT A SPACE?
	BNE	5$		; NO - EVERYTHING IS FINE.  NO TRAILING SPACE
	CMPB	-(R0),#SPA	; IS THE SECOND TO LAST ALSO A SPACE?
	BEQ	6$		; YES IT IS.
	INC	R0		; POINT BACK PAST THE CHARACTER THAT WORKED
6$:	SEC			; WE FOUND TRAILING BLANKS
	BR	12$		; AND RETURN
5$:	INC	R0		; POINT BACK PAST THE CHARACTER THAT WORKED
	CCC			; NO TRAILING BLANKS
12$:	RETURN			; DONE.

;
; SUBROUTINE TO SHUFFLE AN ANSII FILENAME FILLING IN DOUBLE QUOTES
; INCASE AN EMBEDDED DOUBLE QUOTE IS DETECTED.
;
MOVANS:
	MOVB	(R5)+,(R0)	; MOVE NEXT CHARACTER
	CMPB	#DQUOT,(R0)+	; WAS IT AN EMBEDDED DOUBLE QUOTE?
	BNE	10$		; SKIP IF NOT
	MOVB	#DQUOT,(R0)+	; QUOTE THE QUOTE
10$:
	DEC	R1		; COUNT THE CHARACTER
	BGT	MOVANS		; AND GO FOR THE NEXT
	RETURN			; OTHERWISE RETURN

	.END
