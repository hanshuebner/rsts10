	.TITLE	CAT5B
	.IDENT	/03/
 
;
; COPYRIGHT (c) 1981 BY DIGITAL EQUIPMENT CORPORATION.
; ALL RIGHTS RESERVED.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED
; OR COPIED ONLY IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
;
;
;
; VERSION 03
;
; D. N. CUTLER/C. MONIA 13-MAY-74
;
; MODIFIED BY:
;
;	J.M. KINNEAR	28-OCT-81	PSECT CHANGES FOR I/D SPACE
;
; ASCII TO RAD50 CONVERSION ROUTINE
;

	.MCALL	.PDATA,.PCODE
; LOCAL DATA
;

	.PDATA			;PURE DATA PSECT

CNTRL:	.BYTE	'Z,'A,'9,'0,'$,' ,'. ;CONTROL BYTE STRING

	.EVEN

CVTBL:	.WORD	50*50		;RAD50 PACK MULTIPLICATION
	.WORD	50		;
	.WORD	1		;

;+
; **-$CAT5B-CONVERT ASCII TO RAD50 (WITH BLANKS)
;
; INPUTS:
;
;	R0=ADDRESS OF NEXT CHARACTER IN INPUT BUFFER.
;	R1=PERIOD DISPOSITION FLAG.
;		IF R1 EQ 0, THEN PERIOD IS A TERMINATOR.
;		IF R1 NE 0, THEN PERIOD IS A RAD50 CHARACTER.
;
; OUTPUTS:
;
;	C=1 IF SCAN WAS TERMINATED BY A NON-RAD50 CHARACTER.
;	C=0 IF THREE RAD50 CHARACTERS WERE CONVERTED.
;	NOTE: IF EITHER CASE THE FOLLOWING VALUES ARE RETURNED.
;		R0=ADDRESS OF NEXT CHARACTER IN INPUT BUFFER.
;		R1=PACKED RAD50 CHARACTERS.
;		R2=TERMINAL CHARACTER.
;-

	.PCODE			;PURE CODE PSECT

$CAT5B::SAVRG			;SAVE NONVOLITILE REGISTERS
	MOV	R1,-(SP)	;SAVE PERIOD DISPOSITION FLAG
	CLR	R1		;CLEAR ACCUMULATION
	MOV	#CVTBL,R3	;GET ADDRESS OF CONVERSION TABLE
10$:	MOVB	(R0)+,R5	;GET NEXT CHARACTER
	MOV	#CNTRL,R4	;GET ADDRESS OF CONTROL STRING
	CMPB	(R4)+,R5	;RAD50 CHARACTER?
	BLO	60$		;IF LO NO
	CMPB	(R4)+,R5	;ALPHABETIC?
	BLOS	50$		;IF LOS YES
	CMPB	(R4)+,R5	;RAD50 CHARACTER?
	BLO	60$		;IF LO NO
	CMPB	(R4)+,R5	;NUMERIC?
	BLOS	40$		;IF LOS YES
	JOL	30$		;"$" SIGN?
	JOL	20$		;"SPACE"?
	TST	(SP)		;PERIOD RAD50 CHARACTER?
	BEQ	60$		;IF EQ NO
	JOL	40$		;"."?
	BR	60$		;
20$:	SUB	#' -11,R5	;SPACE
30$:	SUB	#11-22,R5	;"$"
40$:	SUB	#22-100,R5	;PERIOD/DIGIT
50$:	SUB	#100,R5		;ALPHABETIC


	.IF	DF	V1145

	MUL	(R3)+,R5	;SCALE RAD50 CHARACTER

	.ENDC


	.IF	NDF	V1145

	MOV	R0,-(SP)	;SAVE NEXT BYTE ADDRESS
	MOV	(R3)+,R0	;GET CONVERSION CONSTANT
	MOV	R1,-(SP)	;SAVE ACCUMULATION
	MOV	R5,R1		;SET MULTIPLIER
	CALL	$MUL		;SCALE RAD50 CHARACTER
	MOV	R1,R5		;RESULT TO R5
	MOV	(SP)+,R1	;RETRIEVE PREVIOUS ACCUMULATION
	MOV	(SP)+,R0	;RETRIEVE NEXT BYTE ADDRESS

	.ENDC


	ADD	R5,R1		;ACCUMULATE RESULT
	CMP	R3,#CVTBL+6	;CONVERTED THREE YET?
	BLO	10$		;IF LO NO
	TST	(SP)+		;CLEAN STACK-CLEAR CARRY
	BR	70$		;
60$:	TST	(SP)+		;CLEAN STACK
	SEC			;SET CARRY
70$:	MOVB	-1(R0),R2	;GET TERMINAL CHARACTER
	RETURN			;

	.END
