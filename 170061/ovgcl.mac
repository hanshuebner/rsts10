	.TITLE	OVGCL
	.IDENT	/01/

;
; COPYRIGHT   1974,  DIGITAL  EQUIPMENT  CORP.,  MAYNARD,   MASS.
;
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE
; ON A  SINGLE COMPUTER SYSTEM AND CAN BE  COPIED (WITH INCLUSION
; OF DEC'S COPYRIGHT  NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.
;
; THE  INFORMATION  IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT
; NOTICE  AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL
; EQUIPMENT CORPORATION.
;
; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR  RELIABILITY
; OF  ITS  SOFTWARE ON  EQUIPMENT WHICH  IS  NOT SUPPLIED BY DEC.
;
; VERSION 01
;
; WRITTEN BY:
;
;	C.A. D'ELIA	23-MAR-74
;
;+
;
; *-$OVGCL-*-GET COMMAND LINE
; *-$RVGCL-*-RESTORE COMMAND LINE TO TOP LEVEL
;
; INPUTS:
;	R0=ADDRESS OF THE ROOT GCML BLOCK
;
; OUTPUTS:
;	R0=UNCHANGED
;	C-BIT=AS SET BY GET COMMAND LINE
;
; NOTES:  THIS ROUTINE ASSUMES THE EXISTENCE OF A GCML BLOCK
; (IN P-SECTION $GCMLB) AND A PARTIAL GCML BLOCK, CONTAINING ONLY
; THE IMPURE GCML INFORMATION (IN THE ROOT). THE USER MUST GENERATE
; THE WHOLE (CALLED LOCAL) GCML BLOCK IN A PROGRAM SECTION WITH THE
; FOLLOWING ATTRIBUTES:
;
;	.PSECT	$GCMLB,D,GBL,OVR
;
; THIS BLOCK IS THE ONE USED BY GET COMMAND LINE. WHEN CALLED, THIS
; ROUTINE COPIES INTO IT THE IMPURE INFORMATION IN THE ROOT GCML BLOCK.
; THEN IT ISSUES A CALL TO GET COMMAND LINE (.GCML1). BEFORE RETURNING
; TO THE CALLER, THE IMPURE INFORMATION IS COPIED BACK INTO THE ROOT
; BLOCK. THIS ALLOWS THE USER TO STILL USE GET COMMAND LINE, BUT IT
; SAVES SPACE BY REQUIRING THE USER TO ONLY SUPPLY PART OF THE GCML
; BLOCK IN THE ROOT.
;
; RESTRICTIONS: THE PURE GCML DATA IN THE ROOT MUST MATCH THAT
; SPECIFIED IN THE LOCAL GCML BLOCK. SINCE THIS SCHEME WILL WORK
; ONLY IF THE GCML FILE IS CLOSED AFTER EACH REQUEST, THIS ROUTINE
; FORCES THAT TO OCCUR. FURTHERMORE, THE GCML BLOCKS MUST BE
; CONSTRUCTED WITH PUSH-DOWN STORAGE ALLOCATED ELSEWHERE.
;
;-


	.MCALL	CALL,RETURN,GCMLD$

	GCMLD$			;DEFINE GCML SYMBOLS

GCLIMP=GCLBLK+S.FDB		;ADDR OF OVERLAY GCMLB IMPURE AREA


	.ENABL	LSB

$OVGCL::JSR	R5,.SAVR1	;SAVE REGISTERS
	MOV	#.GCML1,R3	;SETUP TO 'GET COMMAND LINE'
	BR	10$		;BRANCH INTO THE COMMON CODE

$RVGCL::JSR	R5,.SAVR1	;SAVE REGISTERS
	MOV	#.GCML2,R3	;SETUP TO 'RETURN GCML TO TOP LEVEL'

10$:	MOV	R0,-(SP)	;SAVE R0 (ADDR OF ROOT GCML BLOCK)
	ADD	#S.FDB,R0	;POINT R0 TO ROOT GCMLB IMPURE AREA
	MOV	#GCLIMP,R1	;POINT R1 TO OVERLAY GCMLB IMPURE AREA
	MOV	#G.ISIZ/2,R2	;PUT SIZE OF GCMLB IMPURE AREA IN R2
20$:	MOV	(R0)+,(R1)+	;COPY THE ROOT GCMLB IMPURE AREA ...
	DEC	R2		;... INTO THE OVERLAY GCMLB ...
	BGT	20$		;... IMPURE AREA
	MOV	#GCLBLK,R0	;POINT R0 TO THE OVERLAY GCML BLOCK
	BISB	#GE.CLO,G.MODE(R0)  ;FORCE GCML FILE CLOSED AFTER OPERATION
	CALL	(R3)		;CALL THE APPROPRIATE GCML ROUTINE
	ROR	R4		;SAVE C-BIT (GCML RETURN STATUS)
	MOV	#GCLIMP,R1	;POINT R1 TO OVERLAY GCMLB IMPURE AREA
	MOV	(SP),R0		;POINT R0 TO ROOT GCML BLOCK
	ADD	#S.FDB,R0	;AND TO ROOT GCMLB IMPURE AREA
	MOV	#G.ISIZ/2,R2	;PUT SIZE OF GCMLB IMPURE AREA IN R2
30$:	MOV	(R1)+,(R0)+	;COPY THE OVERLAY GCMLB IMPURE ...
	DEC	R2		;... AREA BACK INTO THE ROOT ...
	BGT	30$		;... GCMLB IMPURE AREA
	MOV	(SP)+,R0	;RESTORE R0
	ROL	R4		;RESTORE C-BIT (GCML RETURN STATUS)
	RETURN			;RETURN TO CALLER

	.DSABL	LSB



	.PSECT	$GCMLB,D,GBL,OVR
GCLBLK:				;REF LABEL TO OVERLAY GCML BLOCK


	.END
