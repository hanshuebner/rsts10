	.TITLE	CSI$4 - PROCESS FILENAMES WITH LOGICAL NAMES
	.IDENT	/1.01/

	.MCALL	CSI$,LNBDF$

	CSI$			;DEFINE CSI BLOCK OFFSETS
	LNBDF$			;DEFINE LOGICAL NAME OFFSETS

;+
; .CSI4 - ROUTINE TO PROCESS A FILENAME STRING THAT MAY CONTAIN A LOGICAL
;	NAME BLOCK.
;
; INPUTS:
;	R0 - POINTER TO CSI BLOCK
;	R1 - POINTER TO A DESCRIPTOR BLOCK WITH THE FOLLOWING FORMAT:
;		WD 0:	OPTIONAL ADDRESS OF DSD INTO ORIGINAL COMMAND LINE
;		WD 1:	OPTIONAL ADDRESS OF STATUS WORD TO MATCHING ABOVE DSD
;		WD 2:	SIZE OF EXPANDED COMMAND LINE BUFFER
;		WD 3:	ADDRESS OF EXPANDED COMMAND LINE BUFFER
; OUTPUTS:
;	R0 - POINTER TO CSI BLOCK
;	R1 - POINTER TO DESCRIPTOR BLOCK
;	CC = 0 SUCCESSFUL COMPLETION
;	CC = 1 ERROR CONDITION AS DESCRIBED IN DOCUMENTATION OF CSI$2
;
; -

.CSI4::
	CALL	$SAVAL		;SAVE ALL REGISTERS ACROSS CALL
	CALL	.CSI2		;CALL CSI2 TO PARSE IN THE ORIGINAL MANNER
	BCS	40$		;IF CS, ERROR OCCURRED
	MOV	R0,-(SP)	;COMPUTE THE ADDRESS OF THE DSD IN CSIBLK
	ADD	#C.DSDS,(SP)	;
	TST	R1		;SEE IF LOGICAL PARSE IS TO BE DONE
	BNE	5$		;IF NE, YES
	CLR	R4		;BYPASS ALL MOVEMENT OPERATIONS
	CLR	R5		;
	BR	35$		;CONTINUE ON WITH NO EXPANDED STRING
5$:	MOV	(R1)+,R3	;POINT TO ORIGINAL DSD IF THERE IS ONE
	BEQ	20$		;IF EQ, THERE ISN'T ONE
	MOV	(SP),R2		;GET ADDRESS OF CURRENT DSD
	MOV	#6,R5		;GET SIZE TO MOVE
10$:	MOV	(R2)+,(R3)+	;MOVE NEXT WORD INTO ORIGINAL DSD
	SOB	R5,10$		;MOVE ALL WORDS
20$:	MOV	(R1)+,R3	;GET ADDRESS OF ORIGINAL STATUS WORD
	BEQ	30$		;IF EQ, THERE ISN'T ONE
	MOV	C.TYPR(R0),(R3)	;MOVE THE STATUS WORD TO THE USER BUFFER
30$:	MOV	(R1)+,R4	;GET SIZE OF EXPANDED FILENAME BUFFER
	MOV	(R1)+,R5	;GET ADDRESS OF EXPANDED FILENAME BUFFER
35$:	MOV	(SP),R2		;GET ADDRESS OF DSD IN CSIBLK
	CLR	R3		;THERE IS NO DEFAULT FILENAME BLOCK
	CLR	R0		;INDICATE NO LUN TO ALLOCATE
	CALL	..PFCS		;CALL ROUTINE TO EXPAND ANY LOGICALS IN DSD
	MOV	(SP)+,R3	;GET ADDRESS OF ORIGINAL DSD
	BCS	37$		;AN ERROR OCCURRED, SKIP COPY TO DSD
	MOV	R3,R0		;GET BACK ADDRESS OF CSIBLK
	SUB	#C.DSDS,R0	;
	BICB	#<CS.DVF!CS.DIF!CS.NMF>,C.STAT(R0) ;CLEAR THE OLD BIT VALUES 
	BIT	#FS$DEV,R1	;IS THERE A DEVICE SPEC
	BEQ	355$		;IF EQ, NO
	BISB	#CS.DVF,C.STAT(R0) ;INDICATE THERE IS A DEVICE ELEMENT
355$:	BIT	#FS$DIR,R1	;IS THERE A DIRECTORY SPEC
	BEQ	356$		;IF EQ, NO
	BISB	#CS.DIF,C.STAT(R0) ;INDICATE THERE IS A DIRECTORY ELEMENT
356$:	BIT	#<FS$NAM!FS$TYP!FS$VER>,R1 ;IS THERE A FILENAME SPEC
	BEQ	357$		;IF EQ, NO
	BISB	#CS.NMF,C.STAT(R0) ;INDICATE THERE IS A FILENAME ELEMENT
357$:	MOV	#6,R5		;GET NUMBER OF WORDS TO TRANSFER
36$:	MOV	(R2)+,(R3)+	;MOVE A WORD
	SOB	R5,36$		;COPY ALL WORDS
37$:	CLC			;FORCE SUCCESS
40$:	RETURN

	.END
