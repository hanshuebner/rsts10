	.TITLE	CATB
	.IDENT /03.01/

;
; COPYRIGHT 1973, 1974, 1989, DIGITAL EQUIPMENT CORP., MAYNARD. MASS.
;
;                                                                               ;**NEW**
; THIS SOFTWARE IS FURNISHED TO PURCHASER UNDER A LICENSE FOR USE               ;**NEW**
; ON A  SINGLE COMPUTER SYSTEM AND CAN BE COPIED (WITH INCLUSION                ;**NEW**
; OF DEC'S COPYRIGHT NOTICE) ONLY FOR USE IN SUCH SYSTEM, EXCEPT                ;**NEW**
; AS MAY OTHERWISE BE PROVIDED IN WRITING BY DEC.                               ;**NEW**
;                                                                               ;**NEW**
; THE  INFORMATION IN THIS DOCUMENT IS SUBJECT TO CHANGE WITHOUT                ;**NEW**
; NOTICE AND  SHOULD NOT BE CONSTRUED AS A COMMITMENT BY DIGITAL                ;**NEW**
; EQUIPMENT CORPORATION.                                                        ;**NEW**
;                                                                               ;**NEW**
; DEC  ASSUMES NO  RESPONSIBILITY  FOR  THE  USE  OR RELIABILITY                ;**NEW**
; OF ITS  SOFTWARE ON  EQUIPMENT WHICH  IS NOT SUPPLIED BY DEC.                 ;**NEW**
;                                                                               ;**NEW**
; D.N. CUTLER 22-AUG-72
;                                                                               ;**NEW**
;                                                                               ;**NEW**
; PREVIOUSLY MODIFIED BY: C. MONIA
;
; MODIFIED FOR RSX-11M-PLUS V4.2 BY:
;	R. SPINNEY	18-JAN-89	03.01
;		RWS014 -- PUT MODULE IN PURE CODE PSECT
;                                                                               ;**NEW**
;
; ASCII TO BINARY CONVERSION ROUTINES
;
                                                                                ;**-4
	.MCALL	.PCODE

;+
; **-$CDTB-CONVERT DECIMAL TO BINARY
; **-$COTB-CONVERT OCTAL TO BINARY
;
; INPUTS:
;
;	R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.
;
; OUTPUTS:
;
;		R0=ADDRESS OF NEXT BYTE IN INPUT BUFFER.
;		R1=CONVERTED NUMBER.
;		R2=TERMINAL CHARACTER.
;-

	.PCODE			;PURE CODE PSECT

$CDTB::				;                                               ;**NEW**
	MOV	#10.,R2		;SET BASE 10. CONVERSION RADIX                  ;**-1
	BR	COTB		;
$COTB::				;                                               ;**NEW**
	MOV	#8.,R2		;SET BASE 8. CONVERSION RADIX                   ;**-1
COTB:	SAVRG			;SAVE NONVOLITILE REGISTERS
	CLR	R1		;CLEAR ACCUMULATED VALUE
1$:	MOVB	(R0)+,R5	;GET NEXT BYTE
	CMPB	#' ,R5		;BLANK?
	BEQ	1$		;IF EQ YES
	CMPB	#HT,R5		;HT?
	BEQ	1$		;IF EQ YES
2$:				;                                               ;**NEW**
	SUB	#'0,R5		;++019 SUBTRACT CHARACTER BIAS                  ;**NEW**
	CMPB	R5,R2		;++019 CHECK AGAINST BASE                       ;**NEW**
	BHIS	3$		;++019 IF HIS OUT OF RANGE                      ;**NEW**
                                                                                ;**NEW**
	.IF	DF	V1145                                                   ;**NEW**
                                                                                ;**NEW**
	MUL	R2,R1		;++019 MULTIPLY RESULT BY BASE                  ;**NEW**
                                                                                ;**NEW**
	.IFF                                                                    ;**NEW**
                                                                                ;**NEW**
	MOV	R0,R4		;++019 SAVE STRING POINTER                      ;**NEW**
	MOV	R2,R0		;++019 SET MULTIPLICAND                         ;**NEW**
	CALL	$MUL		;++019 MULTIPLY EM UP                           ;**NEW**
	MOV	R4,R0		;++019 RESTORE POINTER                          ;**NEW**
                                                                                ;**NEW**
	.ENDC                                                                   ;**NEW**
                                                                                ;**NEW**
	ADD	R5,R1		;++019 ACCUMULATE RESULT                        ;**NEW**
	MOVB	(R0)+,R5	;++019 FETCH NEXT CHARACTER                     ;**NEW**
	BR	2$		;++019 GO AGAIN                                 ;**NEW**
3$:				;++019                                          ;**NEW**
	MOVB	-1(R0),R2	;++019 GET TERMINAL CHARACTER                   ;**NEW**
	RETURN                                                                  ;**NEW**
                                                                                ;**-29
	.END
