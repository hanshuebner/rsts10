	.TITLE	ARITH
	.IDENT	/03.04/
;
;  
; 		COPYRIGHT (c) 1981 BY
; 	DIGITAL EQUIPMENT CORPORATION, MAYNARD
; 	 MASSACHUSETTS.  ALL RIGHTS RESERVED.
;  
; THIS  SOFTWARE  IS FURNISHED UNDER A LICENSE AND MAY
; BE USED AND  COPIED  ONLY  IN  ACCORDANCE  WITH  THE
; TERMS  OF SUCH LICENSE AND WITH THE INCLUSION OF THE
; ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR ANY  OTHER
; COPIES  THEREOF  MAY  NOT  BE  PROVIDED OR OTHERWISE
; MADE AVAILABLE TO ANY OTHER  PERSON.   NO  TITLE  TO
; AND OWNERSHIP OF THE SOFTWARE IS HEREBY TRANSFERRED.
;  
; THE  INFORMATION  IN  THIS  SOFTWARE  IS  SUBJECT TO
; CHANGE WITHOUT NOTICE AND SHOULD  NOT  BE  CONSTRUED
; AS  A  COMMITMENT  BY DIGITAL EQUIPMENT CORPORATION.
;  
; DIGITAL ASSUMES NO RESPONSIBILITY  FOR  THE  USE  OR
; RELIABILITY  OF  ITS  SOFTWARE  ON EQUIPMENT THAT IS
; NOT SUPPLIED BY DIGITAL.
;  
;
; VERSION 03.04
;
; D. N. CUTLER 10-FEB-72
;
; MODIFICATIONS:
;
;	PW001	01-DEC-77 PETER WANNHEDEN
;		CORRECTION TO $MUL - OUTPUT WAS INCORRECT FOR
;		CERTAIN INPUT VALUES.
;
;	J. MATTHEWS	27-JUN-78
;
;		JM013	CHANGED PSECT NAME FROM $$RESL TO $$RESM FOR IAS
;
;	S. RUZICH	12-MAY-79
;
;		SR020 -	REMOVED JM013 SO THAT FCSRES IS ALL IN PSECT $$RESL
;
;
;	S. RUZICH	4-MAR-81
;
;		SR109 - GIVE .PSECT $$RESL READ-ONLY ATTRIBUTE
;


	.MCALL	RETURN


;+
; **-$MUL-INTEGER MULTIPLY MAGNITUDE NUMBERS
;
; INPUTS:
;
;	R0=MULTIPLIER.
;	R1=MULTIPLICAND.
;
; OUTPUTS:
;
;	DOUBLE WORD RESULT IS RETURNED WITH THE
;	HIGH PART IN R0 AND THE LOW PART IN R1.
;
;	REGISTERS R2, R3, R4, AND R5 ARE PRESERVED ACROSS CALL.
;-

	.PSECT	$$RESL,RO
	.ENABL	LSB
$MUL::	MOV	R0,-(SP)	;SAVE R0 FOR ADDS
	MOV	#21,-(SP)	;SET REPEAT COUNT
	CLR	R0		;CLEAR HIGH PART
10$:	ROR	R0		;DOUBLE RIGHT SHIFT
	ROR	R1		;
	BCC	20$		;IF CC DO NOT ADD
	ADD	2(SP),R0	;
20$:	DEC	(SP)		;DECREMENT REPEAT COUNT
	BGT	10$		;IF GT MORE TO GO
	BR	50$		;EXIT TO CALLER

;+
; **-$DIV-INTEGER DIVIDE MAGNITUDE NUMBERS
;
; INPUTS:
;
;	R0=DIVIDEND.
;	R1=DIVISOR.
;
; OUTPUTS:
;
;	QUOTIENT IS RETURNED IN R0 AND REMAINDER IN R1.
;
;	REGISTERS R2, R3, R4, AND R5 ARE PRESERVED ACROSS CALL.
;-

$DIV::	MOV	#20,-(SP)	;SET LOOP COUNT
	MOV	R1,-(SP)	;SAVE DIVISOR FOR SUBTRACTS
	CLR	R1		;CLEAR REMAINDER
30$:	ASL	R0		;DOUBLE LEFT SHIFT
	ROL	R1		;
	CMP	R1,(SP)		;SUBTRACT OUT DIVISOR?
	BLO	40$		;IF LO NO
	SUB	(SP),R1		;SUBTRACT OUT DIVISOR
	INC	R0		;ADD IN LOW BIT
40$:	DEC	2(SP)		;DECREMENT REPEAT COUNT
	BGT	30$		;IF GT MORE TO GO
50$:	CMP	(SP)+,(SP)+	;CLEAN STACK
	RETURN			;
	.DSABL	LSB

	.END
