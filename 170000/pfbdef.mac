TITLE	PFBDEF,<PERMANENT FILE DEFINITIONS>,0A,10-MAY-91,GPK/KPH

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	Edit history for PFBDEF

;+
;
;			[RSTS/E V9.0]
;  000	GPK  07-Nov-83	Creation
;  001	GPK  13-Dec-83	Additions for ICF/Log I/O
;  002	GPK  01-Apr-84	Add PF.XTM for asynch I/O changes
;  003	GPK  17-Oct-84	Add BLK.PF (block I/O) function
;  004	KPH  07-Dec-84	Move character flags to KBDEF
;
;			[RSTS/E V9.3]
;  005  KPH  19-Nov-86	Add cells for RMS-11 style EOF
;			Fix problem with mis-ordering timestamp and data
;
;			[RSTS/E V9.7]
;  006  KPH  16-Dec-88	Add "gimme privilegse" function
;-

; Block buffer/control block layout

PF$BSZ	=:	512.		;One block's worth of data
OBF$SZ	=:	40.		;Length of overflow buffer

; Reserved PFB channels

.DSECT	,NOCREF
PF$LOG:	.BLKB			;Log file channel
PF$ICF:	.BLKB			;Command file channel
PF$DAT:	.BLKB	14.		;Other channels are available

; Control/block buffer (CBB) layout

.DSECT	,NOCREF
PF.BUF:	.BLKW	PF$BSZ/2	;Block buffer
PF.VBL:	.BLKW			;Current VBN, low order
PF.BYT:	.BLKW			;Current record pointer
PF.FLG:	.BLKW			;Flags word
PF.WCB:	.BLKW			;WCB pointer (ICF/Log only)
PF.BC:	.BLKW			;Save area for XRBC across disk I/O
PF.BLK:	.BLKW			;Save area for XRBLK across disk I/O
PF.XTM:	.BLKW			;Save area for XRTIME across disk I/O
PF.ERS:	.BLKB			;Error sequence counter (even offset)
PF.ERR:	.BLKB			;Error code from last I/O
PF.VBH:	.BLKB			;Current VBN, high order
PF.BLM:	.BLKB			;Save area for XRBLKM across disk I/O
	.EVEN
PF$CMN:				;End of common CBB definitions

; Definitions for log file CBB

.DSECT	PF$CMN,NOCREF
PF.OBS:	.BLKW			;"Store" offset for overflow buffer
PF.OBE:	.BLKW			;"Empty" offset for overflow buffer
PF.OBF:	.BLKB	OBF$SZ		;Overflow character buffer
PF$LSZ:				;Size of CBB for log file

; Definitions for ICF CBB

.DSECT	PF$CMN,NOCREF
PF.SVL:	.BLKW			;Saved VBN (start of record), low order
PF.SBY:	.BLKW			;Saved record pointer (start of record)
PF.SCN:	.BLKW			;Saved byte count remaining
PF.CNT:	.BLKW			;Byte count remaining in current record
PF.RSZ:	.BLKW			;Record size, for F-format records
PF.SEQ:	.BLKB			;Exit sequence counter (even offset)
PF.CLF:	.BLKB			;Current command line flag character
PF.RFM:	.BLKB			;Record format flags
PF.SVH:	.BLKB			;Saved VBN (start of record), high order
PF.ESC:	.BLKB			;Escape sequence control byte
PF.EBM:	.BLKB			;MSB of block number of highest written block ;005
PF.EBL:	.BLKW			;LSB of block number of highest written block ;005
PF.EOF:	.BLKW			;Number of bytes written in last block	;005
PF.BCT:	.BLKW			;Number of bytes written in this block	;005
PF$ISZ:				;Size of CBB data for ICF

$$$$$$	=	PF$ISZ
.IIF	LT	$$$$$$ - PF$LSZ, $$$$$$ = PF$LSZ

CBB$SZ	=:	<$$$$$$+77> & <^C77> ;Control/block buffer size, rounded up

; Flag word definition for input files

.BSECT	,NOCREF
PF.CR:	.BLKB	.		;Issue implied CR next
PF.LF:	.BLKB	.		;Issue implied LF next
PF.ACT:	.BLKB	.		;Indirect file active
PF.INV:	.BLKB	.		;Block buffer invalid flag (needs reading)
PF.C1P:	.BLKB	.		;C1 control pending
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
PF.BOR:	.BLKB	.		;We're at start of record
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved

; Flag word definition for log file

.BSECT	,NOCREF
PF.CR:	.BLKB	.		;CRLF has been sent (used in Flush)	;003
	.BLKB	.		;Reserved
PF.ACT:	.BLKB	.		;Log file active
PF.INV:	.BLKB	.		;Block buffer invalid (needs writing)
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
PF.TIM:	.BLKB	.		;Time stamp enabled
	.BLKB	.		;Reserved				;005
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved

; Record format flags

.BSECT	,NOCREF
RF.FIX:	.BLKB	.		;Fixed length records
RF.VAR:	.BLKB	.		;Variable length records
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
RF.IMP:	.BLKB	.		;Implied CR/LF
RF.SPN:	.BLKB	.		;Records span block boundaries
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved

; .PFB directive function codes

.DSECT	-3,NOCREF

PRV.PF:	.BLKB			;Enable privileges			;006
BLK.PF:	.BLKB			;Read/write CBB block buffer		;003
IO.PF:	.BLKB			;Read/write PFB file
RES.PF	=:	.-1		;End of resident functions		;006
.ASSUME	.	EQ	0	;Resident functions misplaced		;006
I2P.PF:	.BLKB			;Move from IOB to PFB
P2I.PF:	.BLKB			;Move from PFB to IOB
FLG.PF:	.BLKB			;Set/clear flag bits
POS.PF:	.BLKB			;Set ICF position
STA.PF:	.BLKB			;Read PFB channel status
JBF.PF:	.BLKB			;Read/set/clear job flags
