TITLE	HDRDEF,<Job header definitions>,0A,10-MAY-91,JFM/WRM

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	HDRDEF EDIT HISTORY
;+
;			[RSTS/E V10.0]
;  000  JFM  24-Aug-89	Creation
;  001  WRM  12-Oct-89	add the extend user logical feature
;  002  JFM  02-Jan-90	Added HDRSIZ
;  003	JFM  24-May-90	Changed comments, values for JHLVL
;-

.SBTTL	Define some Job Header constants

HDRSIZ	=:	2		;Initial size of job header, in Kwords	;002

JHIULS	=:	128.	;bytes assign for user logical space initially	;001
JHBSIZ	=:	 64.	;buffer size used in the free list		;001
RECBSZ	=:	2000.-JHIULS	;Total length of recall buffer		;001
DCLBSZ	=:	1000.-64.	;Length (max) of DCL part of recall buffer ;001
RTSBSZ	=:	1000.-64.	;Length (max) of RTS part of recall buffer ;001
RTSMAX	=:	1500.-128. ;Length (max) of DCL+RTS part of recall buffer  ;001
			;(Max length of programs is the whole buffer ...)

AR6BAS	=:	140000		;Base address of APR6 
AR6LOG	=:	144000-JHIULS	;address of first logical sliver	;001


.SBTTL	Define the Job Header Layout

;+
; This is the layout of the Job Header Region
;
; It occupies the first JCHDRS Kwords of the users job space.  It is
; currently set up for 1K.
;-


.DSECT	AR6BAS		;Buffer starts at offset 140000

;** Job header region begins here **

	;next three are ordered and expected so in MEM.MAC		;001
JHSIZE:	.BLKW		;max address in bytes if free list usable	;001
JHFREE:	.BLKW		;top of free list of header buffers		;001
JHULOG:	.BLKW		;top of user logical list			;001
.ASSUME	JHFREE	EQ	JHSIZE+2					;001
.ASSUME	JHULOG	EQ	JHSIZE+4					;001

JHFLG:	.BLKB		;Job header flags
JHLVL:	.BLKB		;Current level (1=PRG, 2=RTS, 4=DCL)		;003
JHLVL1:	.BLKW		;Split point between DCL and RTS
JHLVL2:	.BLKW		;Split point between RTS and PRG

JHBSTR:	.BLKW		;Pointer to where buffer for current level starts
JHBEND:	.BLKW		;Pointer to where buffer for current level ends

JHCUR:	.BLKW		;Pointer to current command in current level
JHSTR:	.BLKW		;Pointer to start of commands in current level
JHEND:	.BLKW		;Pointer to end of commands in current level

JHDCLS:	.BLKW		;Reserved for saved DCL context (start)
JHDCLE:	.BLKW		;Reserved for saved DCL context (end)
JHRTSS:	.BLKW		;Reserved for saved RTS context (start)
JHRTSE:	.BLKW		;Reserved for saved RTS context (end)

JHBUFS:	.BLKB	RECBSZ	;Recall buffer start
JHBUFE:			;Recall buffer end

.ASSUME	JHBUFE+JHIULS LT 144000 ;Can't go beyond 1K-word


.DSECT	AR6LOG		;Buffer starts at offset 140000+4000-JHIULS	;001

JHUSL:	.BLKB	JHIULS							;001

.ASSUME	AR6LOG+JHIULS eq 144000	;must be on sliver bound at end of 1k	;001
;** Job header region ends

.SBTTL	Job Header Flag (JHFLG) Assignments

.BSECT	,NOCREF

JH2FAR:	.BLKB	.	;User was at beginning and hit ^, 0=no, 1=yes
JHWRAP:	.BLKB	.	;Buffer wrapped past end, so JHBEND is max, not JHEND
	.BLKB	.	;Reserved
	.BLKB	.	;Reserved
	.BLKB	.	;Reserved
	.BLKB	.	;Reserved
	.BLKB	.	;Reserved
JHSTRT:	.BLKB	.	;We are at start of a command (0=start, 1=not)

