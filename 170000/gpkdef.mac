.IIF	NDF	L$$IST,	.NLIST
.IIF	NDF	L$$IST,	.DSABL CRF
TITLE	GPKDEF,<GPK specific definitions>,0A,10-MAY-91,GPK

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;


.SBTTL	EDIT HISTORY FOR GPKDEF

;+
;
;			[RSTS V9.4]
;  000	GPK  25-Aug-86	Creation
;  001	GPK  11-Jan-87	Make printer/keyboard port register addresses
;			into offsets
;  002	PJH  04-May-87	Fix -350 interrupt stuff
;
;-


; GPK clock registers

.DSECT	173000
CLKSEC:	.BLKW	2		;Seconds
CLKMIN:	.BLKW	2		;Minutes
CLKHR:	.BLKW	2		;Hours
CLKDAY:	.BLKW			;Day of the week
CLKDAT:	.BLKW			;Date of the month
CLKMON:	.BLKW			;Month
CLKYR:	.BLKW			;Year
CLKCS0:	.BLKW			;CSR 0
CLKCS1:	.BLKW			;CSR 1
CLKCS2:	.BLKW			;CSR 2
CLKCS3:	.BLKW			;CSR 3
CLKRAM:	.BLKW	50.		;Battery backed-up RAM (part of clock chip)

.BSECT				;Clock CSR 0
	.BLKB	16
RATE:	.BLKB			;Rate select
DV0:	.BLKB	.		;Divider control (MBZ)
DV1:	.BLKB	.		;Divider control (MB1)
DV2:	.BLKB	.		;Divider control (MBZ)
UIP:	.BLKB	.		;Update in progress

.BSECT				;Clock CSR 1
DSE:	.BLKB	.		;Daylight savings time enable
CLK24:	.BLKB	.		;24 hour mode (0 = am/pm)
CLKBIN:	.BLKB	.		;Binary format enable (0 = BCD)
	.BLKB	.		;Reserved
UIE:	.BLKB	.		;Update end interrupt enable
AIE:	.BLKB	.		;Alarm interrupt enable
PIE:	.BLKB	.		;Periodic interrupt enable
SET:	.BLKB	.		;Set the clock, stop updates

.BSECT				;Clock CSR 2
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
UF:	.BLKB	.		;Update ended flag
AF:	.BLKB	.		;Alarm flag
PF:	.BLKB	.		;Periodic flag
IRQF:	.BLKB	.		;Interrupt request flag

.BSECT				;Clock CSR 3
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
VRT:	.BLKB	.		;Valid RAM and time


; Interrupt controllers

.DSECT	173200
I0DATA:	.BLKW			;Interrupt 0 data register
I0CSR:	.BLKW			;Interrupt 0 CSR
I1DATA:	.BLKW			;Interrupt 1 data register
I1CSR:	.BLKW			;Interrupt 1 CSR
I2DATA:	.BLKW			;Interrupt 2 data register
I2CSR:	.BLKW			;Interrupt 2 CSR

.BSECT				;Interrupt controller mode register layout
RPM:	.BLKB	.		;Rotating priority mode (0 = fixed p.mode)
	.BLKB	.		;Single vector mode (always 0 in RSTS)
	.BLKB	.		;Polled mode (always 0 in RSTS)
	.BLKB	.		;Group interrupt polarity (always 0 in RSTS)
	.BLKB	.		;Interrupt request polarity (always 0 in RSTS)
	.BLKB	100
RPSEL:	.BLKB	40		;Register preselect
MM:	.BLKB	.		;Master mask (1 to enable all interrupts)

.DSECT				;Register preselect values (for read)
RSLISR:	.BLKB	40		;Interrupt service register
RSLIMR:	.BLKB	40		;Interrupt mask register
RSLIRR:	.BLKB	40		;Interrupt request register
RSLACR:	.BLKB	40		;Auto-clear register

.DSECT				;Interrupt CSR -- layout on write
IRESET:	.BLKB	20		;Controller reset
CLAIXR:	.BLKB	10		;Clear entire IRR and IMR
CLSIXR:	.BLKB	10		;Clear single IRR and IRM bit
CLAIMR:	.BLKB	10		;Clear entire IMR
CLSIMR:	.BLKB	10		;Clear single IMR bit
SEAIMR:	.BLKB	10		;Set entire IMR
SESIMR:	.BLKB	10		;Set single IMR bit
CLAIRR:	.BLKB	10		;Clear entire IRR
CLSIRR:	.BLKB	10		;Clear single IRR bit
SEAIRR:	.BLKB	10		;Set entire IRR
SESIRR:	.BLKB	10		;Set single IRR bit
CLHISR:	.BLKB	20		;Clear highest priority ISR bit		;002
CLAISR:	.BLKB	10		;Clear entire ISR
CLSISR:	.BLKB	10		;Clear single ISR bit
LDM04:	.BLKB	40		;Load mode bits 0-4
LDM56:	.BLKB			;Load mode bits 5-6, no change to 7
LDM56S:	.BLKB			;Load mode bits 5-6, set 7 (MM)
LDM56C:	.BLKB	20-2		;Load mode bits 5-6, clear 7
WSLIMR:	.BLKB	20		;Preselect IMR for write
WSLACR:	.BLKB	20		;Preselect ACR for write
	.BLKB	20		;Unused
WSLMEM:	.BLKB	10		;Select response memory slot for write

.BSECT				;Interrupt CSR -- layout on read
	.BLKB	6
HPEND:	.BLKB			;Highest pending interrupt
MMS:	.BLKB	.		;Master mask (read-only copy of MM)
	.BLKB	.		;IM, not used in RSTS
PMS:	.BLKB	.		;Priority mode (read-only copy of RPM)
	.BLKB	.		;Unused
GI:	.BLKB	.		;Group interrupt (i.e. something pending)


; Comm port CSRs

.DSECT									;001
XTDATA:	.BLKW			;Data buffer A				;001
XTCSRA:	.BLKW			;CSR A					;001
XTDATB:	.BLKW			;Data buffer B ("reserved")		;001
XTCSRB:	.BLKW			;CSR B					;001
XTMCS0:	.BLKW			;Modem control register 0		;001
XTMCS1:	.BLKW			;Modem control register 1		;001
XTBAUD:	.BLKW			;Baud rate register			;001

; CSR A/B layout (write register 0)					;001
;									;001
; Note: register definitions in general apply to both A and B; data	;001
; related definitions apply to the channel corresponding to the CSR	;001
; being accessed.  Note that channel B is not available on a standard	;001
; GPK system.  Definitions specific to channel B registers are		;001
; at the end of this section.						;001

.BSECT	7								;001
XTRP:	.BLKB	61		;Register pointer (for next reference)	;001
XTCMD:	.BLKB	210		;Command code				;001
XTCRC:	.BLKB	100		;CRC reset operation code		;001

; CSR A command codes							;001

.DSECT									;001
XTNOP:	.BLKB			;No operation				;001
XTSABT:	.BLKB			;Send abort (SDLC only)			;001
XTRESI:	.BLKB			;Reset external/status interrupt	;001
XTINIT:	.BLKB			;Channel initialize			;001
	.BLKB			;Unused in RSTS				;001
XTRESP:	.BLKB			;Reset pending transmit interrupt	;001
XTRESE:	.BLKB			;Reset error flags			;001
XTEOI:	.BLKB			;Done with this interrupt		;001

; CRC operation codes							;001

.DSECT	100								;001
XTCNOP:	.BLKB	100		;Nop					;001
XTRCRC:	.BLKB	100		;Reset receive CRC			;001
XTTCRC:	.BLKB	100		;Reset transmit CRC			;001
XTREOM:	.BLKB	100		;Reset transmit underrun/EOM		;001

; Write register 1 definitions						;001

.BSECT									;001
XTEIE:	.BLKB	.		;External interrupt enable		;001
XTTIE:	.BLKB	.		;Transmit interrupt enable		;001
	.BLKB	.		;Reserved				;001
XTRIE0:	.BLKB	.		;Receive interrupt enable		;001
XTRIE1:	.BLKB	.		;Ditto					;001
	.BLKB	.		;Reserved				;001
	.BLKB	.		;Reserved				;001
	.BLKB	.		;Reserved				;001

; Write register 3 definitions						;001

.BSECT									;001
XTRXEN:	.BLKB	.		;Receiver enable			;001
XTSCLI:	.BLKB	.		;Sync character load inhibit		;001
XTASM:	.BLKB	.		;Address search mode (SDLC only)	;001
XTRCE:	.BLKB	.		;Receivert CRC enable			;001
XTEHP:	.BLKB	.		;Enter hunt phase			;001
	.BLKB	240		;Reserved				;001
XTRCL:	.BLKB	40		;Receive character length		;001

; Receive character length codes					;001

.DSECT									;001
XTCL5:	.BLKB	100		;5 bits					;001
XTCL6:	.BLKB	100		;6 bits					;001
XTCL7:	.BLKB	100		;7 bits					;001
XTCL8:	.BLKB	100		;8 bits					;001

; Write register 4 definitions						;001

.BSECT									;001
XTPEN:	.BLKB	.		;Parity enable				;001
XTEVEN:	.BLKB	12		;Even parity (if XTPEN set)		;001
XTSB:	.BLKB	44		;Mode/stop bits				;001
XTSM:	.BLKB	220		;Synchronous mode			;001
XTCLKM:	.BLKB	100		;Clock mode				;001

; Stop bit/mode definitions						;001

.DSECT									;001
XTSYNC:	.BLKB	4		;Synchronous mode			;001
XTSB1:	.BLKB	4		;1 stop bit				;001
XTSB15:	.BLKB	4		;1.5 stop bits				;001
XTSB2:	.BLKB	4		;2 stop bits				;001

; Synchronous mode definitions						;001

.DSECT									;001
XTMONO:	.BLKB	20		;Monosync (8 bit sync, char mode)	;001
XTBI:	.BLKB	20		;Bisync (16 bit sync, char mode)	;001
XTSDLC:	.BLKB	20		;SDLC mode (bit mode)			;001
	.BLKB	20		;Reserved				;001

; Clock mode definitions						;001

.DSECT									;001
XTCLK1:	.BLKB	100		;1x clock (required if sync)		;001
XTCL16:	.BLKB	100		;16x clock				;001
	.BLKB	100		;32x clock (unused)			;001
	.BLKB	100		;64x clock (unused)			;001

; Write register 5							;001

.BSECT									;001
XTTXCE:	.BLKB	.		;Transmit CRC enable			;001
	.BLKB	.		;Reserved				;001
XTCRCS:	.BLKB	.		;CRC select (1 = CRC-16 for DDCMP)	;001
XTTXEN:	.BLKB	.		;Transmitter enable			;001
XTSBRK:	.BLKB	120		;Send break				;001
XTTCL:	.BLKB	100		;Transmit character length		;001
	.BLKB	.		;Reserved				;001

; Note that the transmit character length coding is the same as the	;001
; receive character length coding.  However, the field is shifted	;001
; 1 bit to the right, so the actual values are 1/2 the receive		;001
; length values.							;001

; Read register 0 definitions						;001

.BSECT									;001
XTRXCA:	.BLKB	.		;Received character available		;001
XTINTP:	.BLKB	.		;Interrupt pending			;001
XTTBMT:	.BLKB	.		;Transmit buffer empty			;001
	.BLKB	.		;Reserved				;001
XTSH:	.BLKB	.		;Sync/hunt (1 = hunting)		;001
	.BLKB	.		;Reserved				;001
XTTUEM:	.BLKB	.		;Transmit underrun/end of message	;001
XTBRK:	.BLKB	.		;Break (async) or abort (sync) detected	;001

; Read register 1 definitions						;001

.BSECT									;001
XTAS:	.BLKB	15		;All sent (async -- silo is empty)	;001
XTRES:	.BLKB	2		;Residu codes (SDLC)			;001
XTPE:	.BLKB	.		;Parity error				;001
XTOE:	.BLKB	.		;Receiver overrun			;001
XTFE:	.BLKB	.		;Framing (asynch) or CRC error (sync)	;001
XTEOF:	.BLKB	.		;End of frame (SDLC)			;001

; CSR B specific definitions						;001

; Write register 1							;001

.BSECT									;001
	.BLKB	.		;Reserved				;001
	.BLKB	.		;Reserved				;001
XTSAV:	.BLKB	.		;Status affects vector (must be set)	;001

; Read register 2							;001

XTVM	=:	34		;Vector mask to get status part		;001
XTCHA	=:	20		;Channel A if this bit is set, else B	;001

.DSECT									;001
XTTBE:	.BLKB	4		;Transmit buffer empty			;001
XTESC:	.BLKB	4		;External/status change			;001
XTRCA:	.BLKB	4		;Received character available		;001
XTSPC:	.BLKB	4		;Special condition			;001

; Modem control register 0 (read/write bits)				;001

.BSECT									;001
XTLL:	.BLKB	.		;Local loopback				;001
XTRL:	.BLKB	.		;Remote loopback			;001
XTDSRS:	.BLKB	.		;Data signalling rate select		;001
XTRTS:	.BLKB	.		;Request to send			;001
XTDTR:	.BLKB	.		;Data terminal ready			;001
XTCS0:	.BLKB	.		;Clock source LSB			;001
XTCS1:	.BLKB	.		;Clock source MSB			;001
XTMM:	.BLKB	.		;Maintenance mode			;001

; Modem control register 1 (read only status bits)			;001

.BSECT									;001
	.BLKB	.		;Reserved				;001
	.BLKB	.		;Reserved				;001
XTSPMI:	.BLKB	.		;Speed modem indicator			;001
XTTI:	.BLKB	.		;Test indicator				;001
XTCD:	.BLKB	.		;Carrier detect				;001
XTCTS:	.BLKB	.		;Clear to send				;001
XTRI:	.BLKB	.		;Ring indicator				;001
XTDSR:	.BLKB	.		;Data set ready				;001



; Printer port CSRs

PRBASE	=:	173400		;Printer port base CSR			;001

.DSECT									;001
PRDATA:	.BLKW			;Data buffer
PRSTAT:	.BLKW			;Status register
PRMODE:	.BLKW			;Mode register
PRCMD:	.BLKW			;Command register

; Status register definition

.BSECT
PRTR:	.BLKB	.		;Transmitter ready
PRRD:	.BLKB	.		;Receiver done
	.BLKB	.		;Reserved
PRPE:	.BLKB	.		;Parity error
PROE:	.BLKB	.		;Overrun error
PRFE:	.BLKB	.		;Framing error
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved

; Mode register 1

.BSECT
	.BLKB	.		;Reserved
PRMOD1:	.BLKB	12		;Must be 1
PRCL:	.BLKB	4		;Character length
PRPC:	.BLKB	.		;Parity enable
PREVEN:	.BLKB	240		;Parity even (if PRPC set)
PRSBL:	.BLKB			;Stop bit length

; Character lengths:

.DSECT
PRCL5:	.BLKB	4		;5 bits/char
PRCL6:	.BLKB	4		;6 bits/char
PRCL7:	.BLKB	4		;7 bits/char
PRCL8:	.BLKB	4		;8 bits/char

; Stop bit lengths:

.DSECT
	.BLKB	100		;Reserved
PRSB1:	.BLKB	100		;1 stop bit
PRSB15:	.BLKB	100		;1.5 stop bits
PRSB2:	.BLKB	100		;2 stop bits

; Mode register 2

.BSECT
	.BLKB	16
PRRATE:	.BLKB			;Rate select

PRMOD2	=:	^B10110000	;Required bits in mode register 2	;001

; Command register

.BSECT
PRTXEN:	.BLKB	.		;Transmit enable
PRDTR:	.BLKB	.		;Data Terminal Ready modem signal
PRRXEN:	.BLKB	.		;Receive enable
PRFB:	.BLKB	.		;Force break
PRRE:	.BLKB	.		;Reset error
PRRTS:	.BLKB	240		;Request To Send modem signal
PROM:	.BLKB			;Operating mode

; Operating modes:

.DSECT
PRNORM:	.BLKB	100		;Normal mode
PRECHO:	.BLKB	100		;Auto-echo
PRLLP:	.BLKB	100		;Local loop
PRRLP:	.BLKB	100		;Remote loop


; Keyboard port CSRs

KBBASE	=:	173500		;KB port base register			;001

; The details of these CSRs are exactly as in the printer port,
; so the same symbols are used for both.

; There's one exception to the above: the Mode register 2 setting
; has one difference, in that the required bits are different:

KBMOD2	=:	^B00110000	;Required bits in mode register 2	;001


; Miscellaneous bus addresses

PRBASE	=:	173400		;Printer CSR base address		;001
KBBASE	=:	173500		;Keyboard CSR base address		;001
SYSIDR	=:	173600		;System ID ROM

.DSECT	173700
SYSCSR:	.BLKW			;System CSR
OPRES:	.BLKW			;Option present register
LEDCSR:	.BLKW			;LED display register

; Bits in system CSR

.BSECT
NBM0:	.BLKB	.		;Number of memory banks on motherboard LSB
P256KM:	.BLKB	.		;256K RAMs on motherboard if set
NBD0:	.BLKB	.		;Number of memory banks on daughterboard LSB
P256KD:	.BLKB	.		;256K RAMs on daughterboard if set
MNPRS:	.BLKB	.		;Monitor present
NBM1:	.BLKB	.		;Number of memory banks on motherboard MSB
NBD1:	.BLKB	.		;Number of memory banks on daughterboard MSB
BRKEN:	.BLKB	.		;Break enabled (read/write)

; Slots:
.DSECT	174000
SLOT0:	.BLKB	200		;Slot 0
SLOT1:	.BLKB	200		;Slot 1
SLOT2:	.BLKB	200		;Slot 2
SLOT3:	.BLKB	200		;Slot 3
SLOT4:	.BLKB	200		;Slot 4
SLOT5:	.BLKB	200		;Slot 5
SLOT6:	.BLKB	200		;"Slot 6" -- actually GPK-380 video controller


; GPK bus ID values in ID register (offset 0 from slot)

.EQUATE	GPK$DW,401		;RD5x controller ID
.EQUATE	GPK$PI,1002		;Video controller ID (Pro-350)
.EQUATE	GPK$BM,1403		;Extended (color) video (PRO-350)
.EQUATE	GPK$DZ,2004		;RX50 controller ID


; Video controller CSRs

.DSECT

PIID:	.BLKW			;ID register
	.BLKW			;Reserved
PICSR:	.BLKW			;Control/status
PIP1C:	.BLKW			;Plane 1 control
PIP2C:	.BLKW			;Plane 2/3 control (with ext bitmap)
PICMP:	.BLKW			;Color map
PISCL:	.BLKW			;Scroll register
PIX:	.BLKW			;X address
PIY:	.BLKW			;Y address
PICNT:	.BLKW			;Count register
PIPAT:	.BLKW			;Pattern register
PIMBR:	.BLKW			;Memory base register

BMBASE	=:	<<2048.-4.-12.-64.>&<-64.>>*40 ;Bitmap MMU base address
; PICSR layout

.BSECT
PI625:	.BLKB	.		;Line mode (0 = 525, 1 = 625)
PIINT:	.BLKB	.		;Interlace
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
PIEVEN:	.BLKB	.		;Even frame
PIENDI:	.BLKB	.		;End of frame interrupt enable
PIEOF:	.BLKB	.		;End of frame
	.BLKB	.		;Bits top to bottom, words right to left
PIWORD:	.BLKB	.		;Word mode (0 = bit mode)
PICME:	.BLKB	.		;Color map enable
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved
PIBMAP:	.BLKB	.		;Extended bitmap absent (0 = present)
PIDONI:	.BLKB	.		;Done interrupt enable
PIDONE:	.BLKB	.		;Done

; Plane control layouts (plane 3 = high byte of PIP2C)

.BSECT
	.BLKB	6
PIOP:	.BLKB	21		;Operation
PIRES:	.BLKB	10		;Resolution
PIVME:	.BLKB	.		;Video memory enable
	.BLKB	.		;Reserved
	.BLKB	.		;Reserved

; Plane control register opcodes

.DSECT				;Bit mode:		Word mode:
PINOP:	.BLKB			; NOP			NOP
PIXOR:	.BLKB			; XOR pattern		Complement screen
PIMPAT:	.BLKB			; Move pattern		Move pattern
PICPAT:	.BLKB			; Move compl. pat	Move compl. pat
PIBIS:	.BLKB			; BIS pattern		reserved
PIBIC:	.BLKB			; BIC pattern		Shift 1 bit
PICLR:	.BLKB			; Clear bit		Shift 2 bits
PISET:	.BLKB			; Set bit		Shift 4 bits

; Plane control register resolution field

.DSECT
PI1024:	.BLKB	10		;1024, single bit/pixel
PI512:	.BLKB	10		;512, 2 bits/pixel
PI256:	.BLKB	10		;256, 4 bits/pixel
PIOFF:	.BLKB	10		;Display off

.IIF	NDF	L$IST&L$$IST,.LIST	TOC
.IIF	NDF	L$IST&L$$IST,.ENABL	CRF
.IIF	NDF	L$IST&L$$IST,.LIST

