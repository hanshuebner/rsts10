.LIBRARY /CMN:NETDEF.SML/
TITLE	LATDEF,<RSTS/E LAT Definitions>,0D,02-AUG-91,SRC/DWF/KPH/JFM/DRP

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	Edit history for LATDEF

;+                                                       
;
;			[RSTS/E V9.6]
;  000  KPH  20-Oct-87	Creation from DWF's and SRC's efforts
;  001  KPH  07-Dec-87	Use CC.WAK for LAT's waiting for ACK queue
;			Fix virtual circuit flow control problems
;			Fix product type code
;  002  KPH  23-Dec-87	Change multicast message layout
;  003	JFM  19-Feb-88	Change counters from 1- to 2-word values
;  004	JFM  24-Feb-88	Change multicast layout.
;			Cleaned up by adding .DSECTs, constants, etc
;			Added node and service pointer fields in LATCTL.
;			Added version, eco and buffersize fields in VCB.
;  			Changed LATLIN to 1. 
;  005	DWF  01-Mar-88	Add idle circuit block queue, add some session
;			flags, make C.TMR and C.CTIM words,
;			clean things up a bit.
;  006	JFM  15-Mar-88	Rearranged, put service and node blocks first so M.LEN
;			calculated correctly.
;  007	DWF  13-Apr-88	Add Data Ready Flag (DRF) to session block,
;			add receive buffer count (per datalink)
;  008	JFM  04-May-88	Added and used .BLKL macro
;			Removed many unused values/definitions
;			Renamed some labels because they conflicted with DECnet
;  009	JFM  18-May-88	Added pending transmit queue in VCB and session block
;			Added DATA_A bit and transmit bit in session flag
;  010	JFM  01-Jun-88	Added definitions for DATA_B slot processing 
;  011	JFM  07-Jun-88	Added definition for number of transmit buffers
;
;			[RSTS/E V9.7]
;  012	JFM  07-Feb-89	Added attention slot bit in the session flag byte.
;
;			[RSTS/E V10.0]
;  013	DRP  09-Oct-89	Defined "Solicit Block", 
;			Solicit Block list pointers to LATCTL
;			and defined SF.SOL bit to the session block S.FLAG.
;  014	DRP  28-Oct-89	Add cell S.SOLB to Session Block definition and
;			removed SF.SOL flag.
;  015	DRP  12-Nov-89	Several changes to the Solicit Block definition.
;			Added L.FLAG to LATCTL and defined LF.SOL flag bit.
;			Added Response Information Message format description
;			Added Solicit Command Type code definitions.
;  016	DRP  09-Jan-90	Make suggested code review changes.
;			Moved close in progress bit SF.CIP to DDFLG3 in the
;			DDB.
;			Added VC Message labels for Solicit Information
;			and Solicit Command Messages.
;  017	DRP  22-May-90	Make minor code changes to comments.
;  018	DRP  07-Aug-90	Define additional symbols to the Response Information
;			Message.
;
;			[RSTS/E V10.1]
;  019	DRP  31-Jul-91	Change the symbol name L.FLAG to L.FLG
;-

	.MCALL	$CCB,	$ETHDEF
	$CCB			; Define the RSTS/E CCB Structure
	$ETHDEF			; Define the Ethernet DLL Header

.MACRO	.BLKL								;008
	.BLKW	2							;008
.ENDM									;008

.SBTTL	Constants

LATJOB	=:	7		; First thing's first!
LATLIN	=:	1		; Maximum number of active lines	;004
MAXIDL	=:	5		; Maximum number of idle VCBs to keep	;005

;
; Multicast Message Constants
;
N.GMAX	=: 	32.		; Maximum length of group code bitmask	;004
N.NMAX	=: 	16.		; Maximum length of node name		;004
N.DMAX	=: 	64.		; Maximum length of a description	;004
S.SMAX	=: 	16.		; Maximum length of service name 	;004
S.DMAX	=: 	64.		; Maximum length of service description	;004
M.NSER	=:	1		; Maximum # of services offered by node	;004
MINMCV	=:	10.		; Minimum value for multicast timer value;004
MAXMCV	=:	255.		; Maximum value for multicast timer value;004

;
; Virtual Circuit Block  constants
;
C.NMAX	=:	16.		; Max length of terminal server name 	;003

;
; Session Block Constants
;
S.NMAX	=: 	16.		; Max length of a service or port name	;003

;
; Virtual Circuit Message types, lengths and flags
;
MT.RUN	=:	0*4		; Run message
MT.STR	=:	1*4		; Start message
MT.STP	=:	2*4		; Stop Message
MT.MCT	=:     	12*4		; Multicast message
MT.SCM	=:	14*4		; Solicit Command message		;016
MT.SIM	=:	16*4		; Solicit Information message		;016

MT.MSG	=:	74		; Valid message mask
MSGLEN	=:	10		; Length of message header

MF.RRF	=:	1		; Response requested flag
MF.MST	=:	2		; Master flag

;
; Slot message types, lengths and flags
;                 
ST.DTA	=:	 0.*20		; Data_a 
ST.STR	=:	 9.*20		; Start (8 bit data)
ST.DTB	=:	10.*20		; Data_b 
ST.ATT	=:	11.*20		; Attention
ST.REJ	=:	12.*20		; Reject
ST.STP	=:	13.*20		; Stop
ST.S16	=:	14.*20		; Start (16 bit data)

HDRLEN	=:	4		; Length of slot header
DABLEN	=:	6		; Length of data_b slot
ATNLEN	=:	1		; Length of attention slot

;
; Service class types
;
SC.ONE	=:	1		; Service class one

;
; Data_B slot character definitions
;
XONOUT	=:	21		; Regular XON character			;010
XOFOUT	=:	23		; Regular XOFF character		;010
XONIN	=:	21		; Regular XON character			;010
XOFIN	=:	23		; Regular XOFF character		;010

;
; LAT-specific CCB definitions
;
CC.SLT	=:	CC.AKN		; Number of slots in message		;001
CC.SEQ	=:	CC.AKN+1	; Sequence number of message (XMIT only);001
CC.FIL	=:	CC.NOB		; Where to load next slot into buffer
DF.TUR	=:	DF.TRN		; Transmit buffer is a turnaround receive

;
; LAT Message Header Offsets
; 
SL$SID	=:	1		; Slot ident
SL$SBC	=:	2		; Slot byte count
SL$TYP	=:	3		; Slot type
SL$SDS	=:	4		; Slot data start

PROCDE	=:	10.		; Product type code			;001
PROVER	=:	5		; Current protocol version supported
PROECO	=:	1		; Current protocol version ECO		
MAXSES	=:	35.		; Maximum number of sessions
MAXCRD	=:	2		; Maximum number of credits to extend
SLTSIZ	=:	255.		; Maximum slot size
SCTMAX	=:	100.		; Maximum server circuit timer (10 msec units)
LATMAX	=:	1518.		; Maximum receive buffer size
LATMIN	=:	576.		; Minimum receive buffer size
FACNUM	=:	1		; Facility number

CREDIT	=:	17		; Credit field in slot messages, the low 4 bits

.SBTTL	LAT Control Region
;
; Define the LAT Control Region Format
;
.DSECT									;005

L.ACT:	.BLKB	1		; Number of active lines
L.MCTT:	.BLKB	1		; Multicast transmit timer cell
L.NCIR:	.BLKW	1		; Next circuit ID to use
L.AVCB:	.BLKW	2		; Linked list of circuit blocks
L.IVCB:	.BLKW	2		; Idle circuit block list		;005
L.ICNT:	.BLKB	1		; Number of idle circuit blocks		;005
L.NSVC:	.BLKB	1		; Number of currently offered services	;004
L.XMTV:	.BLKB	1		; Retransmit timer value		;005
L.XMTC:	.BLKB	1		; Maximum number of transmit retries	;005
L.MCTP:	.BLKW	1		; Pointer to multicast message 
L.NODE:	.BLKW	1		; Pointer to Node descriptor block	;004
L.SRVC:	.BLKW	2		; Service block list			;004
L.EDDB:	.BLKW	LATLIN		; Datalink DDB table				
L.EPDB:	.BLKW	LATLIN		; Datalink PDB table (one for each DDB)		
L.NRCV:	.BLKW	LATLIN		; Number of receive buffers per datalink;007
L.SOBL:	.BLKW	2		; Solicit Block list			;015
L.FLG:	.BLKB	1		; Flag byte				;019
.EVEN
;
; LAT Host Node Counters 
;
L.ZTME:	.BLKW	2		; Date/time counters last zeroed
L.MXMT:	.BLKL			; Messages transmitted
L.BXMT:	.BLKL			; Bytes transmitted
L.MRCV:	.BLKL			; Messages received
L.BRCV:	.BLKL			; Bytes received
L.RXMT:	.BLKL			; Messages retransmitted		;003
L.OSEQ:	.BLKL			; Messages received out of sequence	;003
L.INVM:	.BLKL			; Invalid messages received		;003
L.INVS:	.BLKL			; Invalid slots received		;003
L.ILLM:	.BLKL			; Illegal messages received		;003
L.ILLS:	.BLKL			; Illegal slots received		;003
L.RESC:	.BLKL			; Resource allocation errors		;003
L.XMTE:	.BLKL			; Transmit errors			;003
L.TIMO:	.BLKL			; Circuit timeouts			;003
L.CLNG	=:	.-L.ZTME
L.LENG:				; Length of LAT Control Region

;
; L.NRCV Definitions							;007
;

.DSECT

R.NUM:	.BLKB			; Current num receive buffers supplied	;007
R.QTA:	.BLKB			; Receive buffer quota for datalink	;007

;									;015
; L.FLG Definitions							;019
;									;015

.BSECT	,NOCREF

LF.SOL:	.BLKB	.		; Solicit Information Multicast		;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015

.SBTTL	Multicast Message: Node Descriptor Block 
;
; Define the Node Descriptor Block
;

.DSECT									;005

N.GRPL:	.BLKB	1		; Length of group code bitmask 		;002
N.GRP:	.BLKB	N.GMAX		; Group code bitmask			;002
N.NAML:	.BLKB	1		; Node name length			;002
N.NNAM:	.BLKB	N.NMAX		; Maximum length node name		;002
N.DESL:	.BLKB	1		; Node description length		;002
N.DESC:	.BLKB	N.DMAX		; Node description text			;004
N.LEN:				; Node block length			;004

.SBTTL	Multicast message: Service Descriptor Block
;
; Define the Service Descriptor Block
;

.DSECT									;005

S.SLNK:	.BLKW	1		; Pointer to next service		;004
S.RATE:	.BLKB	1		; Service rating			;002
S.NAML:	.BLKB	1		; Service name length			;002
S.NAME:	.BLKB	S.SMAX		; Service name 				;002
S.DESL:	.BLKB	1		; Service description length		;002
S.DESC:	.BLKB	S.DMAX		; Service description			;004
S.LENG:	 			; Service block length			;004

.SBTTL	Multicast Message: Layout
;
; Define the Multicast Message Format
;

.DSECT	-2								;008

M.MCTL:	.BLKW	1		; Length of multicast message.  Not part of the
				; multicast message, but stored right before.

.DSECT	0

M.MCT:				; The multicast message is built here
	.BLKB	EP.SIZ-2 	; Ethernet header goes here			
	.BLKW	3		; These values never change
M.MINC:	.BLKB	1		; Message incarnation     
M.CFLG:	.BLKB	1		; Change flags

M.FSIZ:	.BLKW	1		; Ethernet frame size
M.MCTV:	.BLKB	1		; Time between multicast messages (in seconds)
M.NSTS:	.BLKB	1		; Status byte
M.VAR:				; This is beginning of variable fields	;004
	.BLKB	N.LEN		; Node descriptor block 		;004
	.BLKB	1		; Number of services currently offered	;004
	.BLKB	M.NSER*<S.LENG-2> ; Service block, excluding link word	;004
	.BLKB	1		; Service class list length		;002
	.BLKB	1		; Service class				;002
.EVEN				; Multicast message must be even	;004
M.LEN:				; MAXIMUM size of multicast message	;004

.SBTTL 	Multicast Message:  Bit definitions for M.CFLG and M.NSTS
;
; Define change flag bits (M.CFLG)
;

.BSECT	,NOCREF								;005

MC.GRP:	.BLKB	.		; Node group change			;005
MC.NDS:	.BLKB	.		; Node description change		;005
MC.SNM:	.BLKB	.		; Service name change			;005
MC.SRT:	.BLKB	.		; Service rating change			;005
MC.SDS:	.BLKB	.		; Service description change		;005
MC.SCL:	.BLKB	.		; Service classes change		;005
	.BLKB	.		; Reserved				;005
MC.OTH:	.BLKB	.		; Other parameter changes		;005

;
; Define node status byte bits (M.NSTS)
;

.BSECT	,NOCREF								;005

MS.SES:	.BLKB	.		; Node not accepting new sessions	;005
	.BLKB	.		; Reserved				;005
	.BLKB	.		; Reserved				;005
	.BLKB	.		; Reserved				;005
	.BLKB	.		; Reserved				;005
	.BLKB	.		; Reserved				;005
	.BLKB	.		; Reserved				;005
	.BLKB	.		; Reserved				;005

.SBTTL	Virtual Circuit Block (VCB)
;
; Define VCB Format
;

.DSECT									;005

C.LNK:	.BLKW	1		; Link word to next VCB
C.FLAG:	.BLKW	1		; Flag word
C.RCID:	.BLKW	1		; Remote Circuit ID
C.LCID:	.BLKW	1		; Local Circuit ID
C.DOFF:	.BLKW	1		; L.EPDB offset for ethernet line 	;007
C.TMR:	.BLKW	1		; Circuit timer cell			;005
C.CTIM:	.BLKW	1		; Remote system circuit timer value	;005
C.SESQ:	.BLKW	2		; List of session blocks for this circuit
C.CXMT:	.BLKW	1		; Current transmit CCB pointer
C.BEND:	.BLKW	1		; End virtual address we can use in I/O buffers
C.XMTQ:	.BLKW	2		; Retransmit queue  
C.XMTT:	.BLKB	1		; Retransmit timer
C.XMTC:	.BLKB	1		; Retry count
C.OXMT:	.BLKW	1		; Num of transmits dispatched but not complted
C.OUTQ:	.BLKW	2		; Link to first session (at S.OUTL) in 	;009
				; pending transmit queue.		;013

;
; ACK and sequence cells
;
C.SEQ:	.BLKB	1		; Message number last received
C.NXMT:	.BLKB	1		; Next message number to transmit
C.LXMT:	.BLKB	1		; Lowest unacked message number
C.HXMT:	.BLKB	1		; Highest unacked message number

;
; Terminal Server information
;
C.SADD:	.BLKB	6		; Server's Ethernet Address
C.NXBF:	.BLKB	1		; # xmt buffs associated w/this server	;011
C.NAML:	.BLKB	1		; Length of server name			;003
	.EVEN			; Ensure name starts on even boundry	;004
C.NAM:	.BLKB	C.NMAX		; Server Name (16. bytes Max)		;004
C.BSIZ:	.BLKW	1		; Size of largest buffer for server	;004
C.VERS:	.BLKB	1		; Server's version number		;004
C.ECO:	.BLKB	1		; Server's ECO level			;004
;           
; VCB counters 
;
; This has to be the last thing in the circuit block, because when we
; re-use an idle circuit, we clear out everything except the counters.
; See INIVCB.
;
C.ZTIM:	.BLKW	2		; Time counters last zeroed in DECnet format
C.MXMT:	.BLKL			; Messages transmitted
C.BXMT:	.BLKL			; Bytes transmitted
C.MRCV:	.BLKL			; Messages received
C.BRCV:	.BLKL			; Bytes received
C.RXMT:	.BLKL			; Messages retransmitted		;003
C.OSEQ:	.BLKL			; Messages received out of sequence	;003
C.INVM:	.BLKL			; Invalid messages received		;003
C.INVS:	.BLKL			; Invalid slots received		;003
C.CLNG	=: 	.-C.ZTIM	; Length of the counters		;008
C.LEN:

.SBTTL	Bit definitions for C.FLAG
;
; VCB flag bit assignments (C.FLAG)
;
.BSECT	,NOCREF

CF.RRF:	.BLKB	.		; Response requested in last message	;001
CF.VIR:	.BLKB	.		; Circuit hasn't been used yet		;001
CF.DWF:	.BLKB	.		; Some session has data to send		;001
	.BLKB	.		; Reserved				;001
	.BLKB	.		; Reserved				;001
	.BLKB	.		; Reserved				;001
	.BLKB	.		; Reserved				;001
	.BLKB	.		; Reserved				;001

.SBTTL	Session Block
;
; Define the Session Block Format
;

.DSECT									;005

S.LNK:	.BLKW			; Link to next session on circuit
S.CIR:	.BLKW			; Link to circuit block
S.OUTL:	.BLKW			; Link to next session on pending 	;009
				;  transmit queue 			;009
S.SOLB:	.BLKW			; -> to Solicit Block (contorted)	;016
S.LSID:	.BLKB			; Local Slot ID
S.RSID:	.BLKB			; Remote slot ID
S.LCRD:	.BLKB			; Number of credits server has granted us
S.RCRD:	.BLKB			; Number of credits we have granted server
S.SLSZ:	.BLKB 			; Maximum slot size on transmit
S.FLAG:	.BLKB			; Session flags
	; // The following 2 should be pointer to service block //
S.SLEN:	.BLKB			; User's service name length		;003
S.SRVC:	.BLKB	S.NMAX		; Service name user is running		;003
S.PLEN:	.BLKB			; User's server port name length	;003
S.PORT:	.BLKB	S.NMAX		; Port name name user is running	;003
.EVEN
S.LEN:

.SBTTL	Bit definitions for S.FLAG
;
; Session flag bit definitions (S.FLAG)
;

.BSECT	,NOCREF								;005

SF.ABO:	.BLKB	.		; Send an ABORT slot			;005
SF.DAA:	.BLKB	.		; Send a DATA_A slot			;009
SF.DAB:	.BLKB	.		; Send a DATA_B slot			;005
	.BLKB	.		; Reserved				;016
	.BLKB	.		; Reserved				;005
SF.ATT:	.BLKB	.		; Attention slots are  not supported by ;012
				;  the session's server.  This is 	;012
				;  really a session flag, not server.	;012 
SF.OUT:	.BLKB	.		; Session is on pending transmit queue	;009
				;  (S.OUTL)				;009
SF.AUT:	.BLKB	.		; Suppress Autoprompt 			;005

.SBTTL	Solicit Block
;
; Define the Solicit Block
;

.DSECT

	.BLKB	BUFHDR		; Buffer header				;014
SO.LNK:	.BLKW			; Link to next SB on L.SOBL list	;013
SO.SES:	.BLKW			; Session Block ->			;014
SO.STS:	.BLKB			; Status byte				;015
SO.FLG:	.BLKB			; Flag byte				;015
SO.TMR:	.BLKB			; Timer cell				;015
SO.RTC:	.BLKB			; Retry timer count			;015
SO.CCB:	.BLKW			; Address of outstanding CCB		;014
SO.DEF:	.BLKB			; Default settings			;015
SO.CUR:	.BLKB			; Current settings			;015
SO.TMO:	.BLKW			; Solicit time-out count		;016
SO.RTY:	.BLKW			; Solicit retry count			;016
SO.SID:	.BLKW			; Solicit id 				;015
SO.EID:	.BLKW			; Entry id				;013
SO.ERR:	.BLKB			; Error code				;015
SO.RJR:	.BLKB			; Reject reason				;015
SO.QUE:	.BLKW			; Entry position in server queue	;013
SO.LPL:	.BLKB			; Local port name length		;015
SO.LPN:	.BLKB	5		; Local port name (ASCII, ex. KBn)	;017
;									;013
; Remote data cells (the following must be grouped together)		;017
; 									;013
SO.NAD:	.BLKB	6		; Remote Node's ethernet address	;017
SO.RNL:	.BLKB			; Remote Node name length		;013
SO.RNM:	.BLKB	C.NMAX		; Remote Node name (SET PORT node-name	;013
SO.RSL:	.BLKB			; Remote service name length		;013
SO.RSN:	.BLKB	S.NMAX		; Remote service name (SET PORT/SERVICE) ;013
SO.RPL:	.BLKB			; Remote port name length		;013
SO.RPN:	.BLKB	S.NMAX		; Remote port name (SET PORT/PORT)	;013
SO.RDL	=:	.-SO.NAD	; Total size of remote data fields	;013

.EVEN				; Must be even				;013
SO.LEN:


;
; SO.FLG bit definitions
;

.BSECT	,NOCREF

	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
SOF.PD:	.BLKB	.		; Pending delete of port		;016


;
; SO.STS bit definitions
;

.BSECT	,NOCREF

SOS.CN:	.BLKB	.		; Connected to server			;015
SOS.ER:	.BLKB	.		; Connection request failed		;015
SOS.WR:	.BLKB	.		; Waiting for response to Command Mesg. ;015
SOS.WT:	.BLKB	.		; Waiting for Transmit Complete		;015
SOS.WI:	.BLKB	.		; Waiting for Response Message		;015
SOS.WS:	.BLKB	.		; Waiting for Start Slot		;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015

;
; Default (SO.DEF) and current (SO.CUR) bit definitions
;

.BSECT	,NOCREF

	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
SOD.QD:	.BLKB	.		; Queued access				;015


;
; Solicit command type codes
;


NOQUED	=:	1		;Non-queued access			;015
QUEUED	=:	2		;Queued access				;015
CANCLE	=:	3		;Cancel entry				;015
SNDSTE	=:	4		;Send status of  entry			;015
SNDSTQ	=:	5		;Send status of queue			;015
SNDSTM	=:	6		;Send status of multiple entries	;015


.SBTTL	Definitions for bits in a word
;
; BIT definitions
;

.BSECT	,NOCREF
	
BIT00:	.BLKB	.		; 2 ** 0
BIT01:	.BLKB	.		; 2 ** 1
BIT02:	.BLKB	.		; 2 ** 2
BIT03:	.BLKB	.		; 2 ** 3
BIT04:	.BLKB	.		; 2 ** 4
BIT05:	.BLKB	.		; 2 ** 5
BIT06:	.BLKB	.		; 2 ** 6
BIT07:	.BLKB	.		; 2 ** 7
BIT08:	.BLKB	.		; 2 ** 8
BIT09:	.BLKB	.		; 2 ** 9
BIT10:	.BLKB	.		; 2 ** 10
BIT11:	.BLKB	.		; 2 ** 11
BIT12:	.BLKB	.		; 2 ** 12
BIT13:	.BLKB	.		; 2 ** 13
BIT14:	.BLKB	.		; 2 ** 14
BIT15:	.BLKB	.		; 2 ** 15

.SBTTL	Stop slot reason codes
;
; Stop slot and reject slot reason codes
;                 
ER.URD	=:	1		; User requested disconnect
ER.SHT	=:	2		; System shutdown
ER.INV	=:	3		; Invalid slot received
ER.CLS	=:	4		; Invalid service class
ER.INS	=:	5		; Insufficient resources
ER.SIU	=:	6		; Service in use		
ER.NSS	=:	7		; No such service		
ER.SID	=:	8.		; Service is disabled		
ER.SNO	=:	9.		; Service is not offered by port
ER.PNU	=:	10.		; Port name is unknown		
ER.IPW	=:	11.		; Invalid pass word		
ER.NIQ	=:	12.		; Entry not in queue		
ER.IAR	=:	13.		; immediate access denied	
ER.AD	=:	14.		; access denied			
ER.CSR	=:	15.		; Corrupted Solicit Request	

; Solicitation reject codes

ER.CTI	=:	16.		; COMMAND_TYPE is illegal/not supported	;016
ER.CSS	=:	17.		; Can't send start slot			;016
ER.QED	=:	18.		; Queue entry deleted by local node	;016
ER.IRP	=:	19.		; Inconsistent/illegal request parameter ;016

.SBTTL	VC Stop message reason codes
;
; Virtual Circuit stop message reason codes
;
ER.NSL	=:	 1		; No slots on circuit
ER.IVM	=:	 2		; Invalid message
ER.USR	=:	 3		; Halt from user
ER.NPG	=:	 4		; No progress being made
ER.TIM	=:	 5		; Timeout expired
ER.RTM	=:	 6		; Retransmit limit
ER.RES	=:	 7		; Insufficient resources
ER.SCT	=:	 8.		; Service circuit timer out of range

.SBTTL	Entry Status Codes
;
; Entry status codes returned in Status Message
;
ES$NIP	=:	1		; No additional information provided
ES$RAQ	=:	2		; Request already queued
ES$EAP	=:	4		; Request accepted for processing
ES$PSN	=:	10		; Periodic status not supported
ES$QSN	=:	20		; Queue depth status not supported
ES$CMR	=:	200		; Command message rejected

.SBTTL	VC START Message Format
;
; Virtual Circuit Start Message Format
;

.DSECT

; These fields are identical for all VC messages.  It is the message meader

SM.MT:	.BLKB			; Message type (and RRF/MASTER flags)
SM.NSL:	.BLKB			; Number of slots in the message
SM.DID:	.BLKW			; Destination ID
SM.SID:	.BLKW			; Source ID
SM.SEQ:	.BLKB			; Message Sequence Number (mod 256)
SM.ACK:	.BLKB			; Message Acknowlegement Num (mod 256)
	.ASSUME MSGLEN EQ .	; This is the message header length

; This is the start of the START MESSAGE FORMAT

SM.RDS:	.BLKW			; Receive datagram size 
SM.PTV:	.BLKB			; Protocol version number
	.BLKB			; Protocol ECO number
	.BLKB			; Maximum simultaneous sessions
	.BLKB			; Number of extra datalink buffers
SM.SCT:	.BLKB			; Service circuit timer
SM.KLT:	.BLKB			; Keep alive timer 
	.BLKW			; Facility number
	.BLKB			; Product type code
	.BLKB			; Product version number
SM.NNL:	.BLKB			; Node name length
				; Slave node name (variable length)
				; Master name length
				; Master node name (variable length)
				; Location text length
				; Location text (variable length)
				; Parameter code/length/data

.SBTTL	VC STOP Message Format
;
; Virtual Circuit Stop Message Format
;

.DSECT
	.BLKB	MSGLEN		; VC Messsage header (see start message)
SP.REA:	.BLKB			; Circuit Disconnect Reason code
				; Reason byte text and reason text are allowed
				;  by architecture.  They follow the reason code
STPLEN:				; Length of stop circuit message

;
; Attention slot bit definitions
;
AT.ABO  =:	BIT05		; Abort output control bit

.SBTTL	Response Information Message Format

;									;015
; Response Information Message Format					;015
;									;015

.DSECT

RM.MT:	.BLKB			; Message type (and RRF/MASTER flags)	;015
RM.PFM:	.BLKB			; Protocol format			;018
	.BLKB			; Highest protocol version		;015
	.BLKB			; Lowest protocol version		;015
RM.CPV:	.BLKB			; Current protocol version		;015
RM.ECO:	.BLKB			; ECO level				;015
RM.FSZ:	.BLKW			; Frame size				;018
RM.SID:	.BLKW			; Solicit id				;015
RM.RST:	.BLKW			; Response status			;018
RM.NST:	.BLKW			; Node status				;015
RM.NAD:	.BLKB	6		; Node address				;015
				; Remainder of message is not used	;015

; Protocol Format							;018

ETHFMT	=:	0		; Ethernet format			;018
FMT802	=:	1		; 802 format				;018
ETH802	=:	2		; Ethernet and 802 format		;018

; Node status bit definitions (RM.NST)					;016

.BSECT	,NOCREF

R.DSBL:	.BLKB	.		; Node is disabled			;015
R.SMSG:	.BLKB	.		; Start message can be sent		;018
R.SCMD:	.BLKB	.		; Command message can be sent		;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
	.BLKB	.		; Reserved				;015
