TITLE	DSKCUI,<DSKINT'S CUI MODULE>,0A,10-MAY-91,TWH/FRL

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR DSKCMD

;+
;
;  000  TWH  27-OCT-82	CREATION - CREATED FOR VERSION 8.0
;  001  TWH  01-NOV-82  ADD /PUBLIC,/PRIVATE,/DATE,/WRITE
;  002  TWH  20-DEC-82  CLEAN UP CODE, MAKE MORE READABLE
;  003	TWH  03-OCT-83	ADD /ERASE SWITCH
;  004  FRL  17-Jul-86	Add /NEW_FILES
;  005	PJH  14-May-87	Make /EXERCISE be 0-3 unsigned 8-bit value
;			Make /MFD_CLUSTERSIZE be 4-16
;			Make /CLUSTERSIZE be 1-16
;  
;	[RSTS V9.5]
;  006	PJH  01-Jun-87	Allow seperator to be optional before label name 
;			in initialize command. Do Power of 2 check in
;			/MFD_CLUSTER,/CLUSTER qualifiers
;  007	PJH  06-Jul-87	Allow /Cluster qualifier to be 32,64
;-


.SBTTL	INCLUDE CUI MACROS; DEFINE COMMAND; DEFINE QUALIFIERS

;	This module sets up and defines the CUI interface
;	from DCL INITIALIZE.  It is not real stringent,
;	because DCL always parses the command line, therefore
;	we know for sure that we have a valid command.  We
; 	need only find out what qualifiers we have.

	DEFORG	DCLCUI

	.MCALL	$CUI		;INVOKE CUI MACRO
	$CUI	TABLE		;INCLUDE MACROS AND SYMBOLS NEEDED FOR
				;THREADED ROUTINES AND TABLES
	$CUI	ALLOC		;ALLOCATE STORAGE FOR CUI

;TABLE OF KEYWORDS:  GLOBAL SYMBOLS NEEDED BY CUI TO DEFINE THE SPELLING
;		     OF KEYWORDS AND TO SHOW THEIR ABBREVIATION RULES.
;
;
; COMMANDS
;
	DEFKEY	INI.K,'INI-TIALIZE'	;INITIALIZE
;
; QUALIFIERS
;
	DEFKEY	CLS.Q,'CL-USTER_SIZE'	;/CLUSTER_SIZE

	DEFKEY	DAT.Q,'DA-TE'		;/DATE

	DEFKEY	ERA.Q,'ER-ASE'		;/ERASE

	DEFKEY	EXE.Q,'EX-ERCISE'	;/EXERCISE

	DEFKEY	IND.Q,'IN-DEX'		;/INDEX

	DEFKEY	MFD.Q,'MF-D_CLUSTER_SIZE';/MFD_CLUSTER_SIZE

	DEFKEY	NFF.Q,'NEW-_FILES'	;/NEW_FILES			;004

	DEFKEY	PRI.Q,'PRIV-ATE'	;/PRIVATE

	DEFKEY	PUB.Q,'PU-BLIC'		;/PUBLIC

	DEFKEY	QUE.Q,'QU-ERY'		;/QUERY

.SBTTL	ARGUMENTS FOR /DATE, /EXERCISE, /NEW_FILES			;004

	DEFKEY	RET.Q,'RE-TAIN'		;/RETAIN

	DEFKEY	WRI.Q,'WR-ITE'		;/WRITE

;
; ARGUMENTS FOR /DATE
;

	DEFKEY 	ACC.K,'AC-CESSED'	;=ACCESSED

	DEFKEY	MOD.K,'MO-DIFIED'	;=MODIFIED

;
; ARGUMENTS FOR /EXERCISE
;

	DEFKEY	FUL.K,'FU-LL'		;=FULL

;									;004
; ARGUMENTS FOR /NEW_FILES						;004
;									;004

	DEFKEY	FST.K,'F-IRST'		;=FIRST				;004
	DEFKEY	LST.K,'L-AST'		;=LAST				;004

.SBTTL	ARGUMENTS FOR /INDEX

;
; ARGUMENTS FOR /INDEX
;

	DEFKEY	BEG.K,'BE-GINNING'	;=BEGINNING

	DEFKEY	MID.K,'MI-DDLE'		;=MIDDLE

.SBTTL	COMMAND TABLE

;	This is the code to read the command line and send
;	us off on our way to parse.  Since we know we have a 
;	valid command, we never fail here.

CMDTBL::$THR			;BEGIN THREADED LANGUAGE STATEMENTS
	$RDCMD			;READ THE COMMAND THAT'S IN CORE COMMON
	$PARKEY			;PARSE A KEYWORD ON THE COMMAND LINE
	$ONKEY	INI.K,DSK.CMD	;IF KEYWORD='INITIALIZE' GOTO DSKINT
	$ENDKEY			;OTHERWISE 'ILLEGAL KEYWORD' SENT TO USER
	$ENDTHR			;END THREADED LANGUAGE

;
; DEFINE THE COMMAND LINE FOR DSKINT, INCLUDING ITS PARAMETERS
; WHERE THE FORMAT IS:
;
;	"INITIALIZE device-name[:] label [/qualifiers]"
;
DSK.CMD::$THR				;
	$DEFCMD	QUAL=DSK.Q,U.CMDC=1	;ADDRESS OF TABLE OF LEGAL QUALIFIERS,
					; COMMAND CODE =1
	$PARM	DEV.P,TYPE=U$DEV	;FIRST PARMETER=DEVICE-NAME
	$PARM	LBL.P,FLAGS=PF.SEP,TYPE=U$LBL	;2nd PARM=PACKID LABEL	;006
	$ENDCMD				;
	$ENDTHR				;

.SBTTL	DEFINE COMMAND QUALIFIERS
;
; DEFINE THE LEGAL QUALIFIERS FOR DSKINT
;
DSK.Q:	DEFQUAL	CLS.Q,ARG=REQ		;/CLUSTERSIZE,  ARGUMENT REQUIRED
	  DEFARG TYPE=U$PO2,MINVAL=1,MAXVAL=64 ;	TYPE=Power of 2     ;007
	  ENDARG			;

	DEFQUAL DAT.Q,ARG=REQ		;/DATE		ARGUMENT REQUIRED
	  DEFARG MOD.K			;		=MODIFIED
	  DEFARG ACC.K			;		=ACCESS
	  ENDARG			;

	DEFQUAL	ERA.Q,FLAGS=QF.NEG	;/ERASE

	DEFQUAL	EXE.Q,FLAGS=QF.NEG,ARG=OPT	;/EXERCISE, NEGATE, ARG OPTIONAL
	  DEFARG FUL.K			;		    =FULL
	  DEFARG TYPE=U$U8,MAXVAL=3	;		    TYPE=INTEGER  ;005
	  ENDARG			;

	DEFQUAL	IND.Q,ARG=REQ		;/INDEX		ARGUMENT REQUIRED
	  DEFARG BEG.K			;		=BEGINING
	  DEFARG MID.K			;		=MIDDLE
	  DEFARG TYPE=U$INT		;		TYPE=INTEGER
	  ENDARG			; 

	DEFQUAL	MFD.Q,ARG=REQ		;/MFDCLUSTERSIZE  ARGUMENT REQUIRED
	  DEFARG TYPE=U$PO2,MINVAL=4,MAXVAL=16	;	  TYPE=Power of 2   ;006
	  ENDARG			;

	DEFQUAL NFF.Q,ARG=REQ		;/NEW_FILES	ARGUMENT REQUIRED   ;004
	  DEFARG FST.K			;		=FIRST		    ;004
	  DEFARG LST.K			;		=LAST		    ;004
	  ENDARG			;				    ;004

	DEFQUAL PRI.Q,CONF=PUB.Q	;/PRIVATE	CONFLICTS WITH /PUBLIC

	DEFQUAL	PUB.Q,CONF=PRI.Q	;/PUBLIC	CONFLICTS WITH /PRIVATE

	DEFQUAL	QUE.Q,FLAGS=QF.NEG	;/QUERY		NEGATE

	DEFQUAL	RET.Q,FLAGS=QF.NEG	;/RETAIN	NEGATE

	DEFQUAL WRI.Q,FLAGS=QF.NEG	;/WRITE		NEGATE

	ENDQUAL

	.DSECT
	.BLKB	1			;MAKE PC AN ODD ADDRESS
DEV.P::	.BLKB	2			;STORAGE FOR DEVICE
LBL.P::	.BLKB	2			;STORAGE FOR LABEL
	.EVEN
	UNORG
	

ENT.TY::.WORD	0			;RESERVE WORD FOR ENTRY TYPE
					;	0=RUN
					;	16=DCL
	UNORG

	.END
