	.INCLUDE /CMN:COMMON/
	.INCLUDE /CMN:KERNEL/
TITLE	NLDVR,<NULL DEVICE DRIVER>,0A,10-MAY-91,MHB/AWR/SJK/KPH

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;

.SBTTL	EDIT HISTORY FOR NLDVR
;+
;
;  000	RRF  06-MAR-81	CREATION - COPIED FROM V7.0-07
;
;			[RSTS/E V9.3]
;  001  KPH  23-Feb-86	Add TMPORGs for SPCTBL and SERTBL
;
;-

	DEFORG	NLDVR

.SBTTL	LOCAL DEFINITIONS

; DDB DEFINED

.DSECT

DDIDX:	.BLKB		;DRIVER INDEX
DDSTS:	.BLKB		;STATUS AND ACCESS CONTROL BYTE
DDJBNO:	.BLKB		;OWNER JOB NUMBER TIMES 2 (0 IF FREE)
DDUNT:	.BLKB		;DEVICE UNIT NUMBER
DDTIME:	.BLKW		;TIME ASSIGNED OR INITED
DDCNT:	.BLKW		;INIT COUNT AND ASSIGNMENT CONTROL

; DEFINE 'DDSTS' VALUE FOR NULL DEVICE

STS.NL	==	0/400
		;NO SPECIAL FLAGS

; DEFINE FLAGS FOR NULL DEVICE

FLG.NL	==	FLGRND!DDNFS!NULHND
		;RANDOM ACCESS (?)
		;NON-FILE STRUCTURED
		;NULL DEVICE

; DEFINE WIDTH

SIZ.NL	==	5*14.+1
		;DEFAULT FOR "NO WIDTH"

; DEFINE DEFAULT BUFFER SIZE

BUF.NL	==	2
		;DEFAULT TO 2 BYTE BUFFER (THE MINIMUM)

	UNORG

.SBTTL	SPECIAL FUNCTION SERVICE

;+
; SPC$NL - SPECIAL FUNCTION SERVICE FOR NULL DEVICE.
;
;	R0 =  UNIT NUMBER TIMES 2
;	R1 -> DDB/FCB
;	R2 =  SPECIAL FUNCTION CODE
;	R3 -> XRB
;	R4 =  CALLING JOB NUMBER TIMES 2
;	R5 -> (MAPPED) XRB
;
;	...
;
;	JMP	RTI3
;
;	-OR-
;
;	ERROR	CODE
;-

	TMPORG	SPCTBL,4						;001
	 .WORD	SPC$NL							;001
	UNORG								;001

SPC$NL::ERROR	PRVIOL		;NO SPECIAL FUNCTION SERVICE

.SBTTL	DEVICE ASSIGNMENT SERVICE

;+
; ASN$NL - DEVICE ASSIGNMENT SERVICE FOR NULL DEVICE.
;
;	R0 =  JOB NUMBER OF ASSIGNER TIMES 2
;	R1 -> DDB
;
;	...
;
;	RETURN		(WITH ALL REGISTERS PRESERVED)
;-

ASN$NL::CLR	R0		;WE DON'T ALLOW REAL ASSIGNMENTS
	;RETURN			;THEN EXIT

.SBTTL	DEVICE DEASSIGNMENT SERVICE

;+
; DEA$NL - DEVICE DEASSIGNMENT SERVICE FOR NULL DEVICE.
;
;	R1 -> DDB
;
;	...
;
;	RETURN		(WITH ALL REGISTERS PRESERVED)
;-

DEA$NL::			;NOTHING TO DO...

.SBTTL	INTERRUPTS

;+
; INT$NL - INTERRUPTS FOR NULL DEVICE.
;
;	R0 =  UNIT NUMBER TIMES 2
;	PRIORITY IS INTERRUPT PRIORITY
;
;	...
;
;	RETURN
;-

INT$NL::			;;NOTHING TO DO...

.SBTTL	TIMEOUTS

;+
; TMO$NL - TIME OUT ENTRY POINT.
;
;	R0 =  UNIT NUMBER TIMES 2
;	R1 -> DDB
;	R3 -> CSR
;	PRIORITY IS PR5
;
;	...
;
;	RETURN
;-

TMO$NL::			;;NOTHING TO DO...

.SBTTL	OPEN/CLOSE SERVICE

;+
; OPN$NL - OPEN SERVICE FOR NULL DEVICE.
;
;	R0 =  UNIT NUMBER TIMES 2
;	R1 -> DDB (MUST BE PRESERVED)
;	R4 -> FIRQB (DEFAULT FQFLAG AND FQBUFL VALUE LOADED)
;	R5 -> JOB'S IOB ENTRY (MUST BE PRESERVED)
;
;	...
;
;	RETURN
;
;	-OR-
;
;	CALL	RETDEV
;	ERROR	CODE
;-

OPN$NL::			;NOTHING TO DO...

;+
; CLS$NL - CLOSE SERVICE FOR NULL DEVICE.
;
;	R0 =  UNIT NUMBER TIMES 2
;	R1 -> DDB/FCB
;	R5 -> DDB/FCB (MUST BE PRESERVED)
;	IF Z=1 THEN A REAL CLOSE CALL
;	IF Z=0 THEN A "RESET" CLOSE CALL
;
;	...
;
;	RETURN
;-

CLS$NL::RETURN			;SIMPLE ISN'T IT...

.SBTTL	USER LEVEL SERVICE

;+
; SER$NL - USER LEVEL READ/WRITE SERVICE.
;
;	R0 =  UNIT NUMBER TIMES 2
;	R1 -> DDB/FCB
;	R2 =  2 (.READ)
;	      4 (.WRITE)
;	R3 -> XRB
;	R4 =  CALLING JOB NUMBER TIMES 2
;	R5 -> USER'S BUFFER (THROUGH KISAR6)
;	IF Z=1 OR C=0 THEN THIS IS THE FIRST CALL
;	IF Z=0 OR C=1 THEN THIS IS A "REDO" CALL
;
; NOTES:
;
;	1) ACCESS RIGHTS HAVE BEEN VERIFIED.
;	2) DIRECTIONAL RIGHTS HAVE BEEN VERIFIED.
;
; EXITS:
;
;	1) ALL COMPLETE WITH NO ERROR
;
;		JMP	IOEXIT
;
;	2) ALL COMPLETE WITH ERROR
;
;		SETERR	CODE
;		JMP	IOEXIT
;
;		-OR-
;
;		ERROR	CODE
;
;	3) STALL DESIRED (FOR "REDO" LATER)
;
;		JMP	IOREDO
;-

	TMPORG	SERTBL,4						;001
	 .WORD	SER$NL							;001
	UNORG								;001

SER$NL::CLR	XRBLK(R3)	;INDICATE TRUELY SEQUENTIAL DEVICE
	CLRB	XRBLKM(R3)	; IN BOTH PLACES
	CMP	R2,#.READ&377	;IS THIS READ?
	BNE	10$		;NO, WRITE, JUST EXIT
	ERROR	EOF		;YES, READ, GIVE END-OF-FILE ERROR

10$:	JMPX	IOEXIT		;NOW WE ARE ALL DONE

.END

