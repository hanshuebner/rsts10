.IIF	NDF	L$$ETH,	.NLIST
.IIF	NDF	L$$ETH,	.DSABL	LSB
TITLE	XEDEF,<UNA Definitions file>,0A,10-MAY-91,JHC

;
;		COPYRIGHT (c) 1974, 1991 BY
;	DIGITAL EQUIPMENT CORPORATION, MAYNARD, MASS.
;
; THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY BE USED AND  COPIED
; ONLY  IN  ACCORDANCE  WITH  THE  TERMS  OF  SUCH  LICENSE AND WITH THE
; INCLUSION OF THE ABOVE COPYRIGHT NOTICE.  THIS SOFTWARE OR  ANY  OTHER
; COPIES  THEREOF MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE TO ANY
; OTHER PERSON.  NO TITLE TO AND OWNERSHIP OF  THE  SOFTWARE  IS  HEREBY
; TRANSFERRED.
;
; THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE  WITHOUT  NOTICE
; AND  SHOULD  NOT  BE  CONSTRUED  AS  A COMMITMENT BY DIGITAL EQUIPMENT
; CORPORATION.
;
; DIGITAL ASSUMES NO RESPONSIBILITY FOR THE USE  OR  RELIABILITY  OF ITS
; SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY DIGITAL.
;


.SBTTL	Edit History

;+
;
;  000	JHC  09-Jul-85	Creation Date
;  001  JHC  22-Jan-87	General Cleanup to RSTS convention
;
;-


.SBTTL	Constants	Max Controllers

MAX.XE =: 4		; Pick 4 controller max.  For fun.

.SBTTL	XEDCTL Region Offsets

;+
; XEDCTL --
;	Offsets from the global XECORE to values contained and 
;	jammed in the Read/Write Permanently Mapped control
;	region.  Keep Global Impact to a minimum.
;-

	.DSECT

XECNTL:	.BLKW		; Assignment control - number of controllers *JAMMED*
XEDPR6:	.BLKW		; DAPR6 value to map E-net region 	     *JAMMED*
XEMMUS:	.BLKW		; Size in MMU slivers of E-net region 	     *JAMMED*
XEUBUS:	.BLKW		; UNIBUS addr/100 for UNIBUS addr of region  *JAMMED*
XERCXM:	.BLKW	MAX.XE	; XMIT(high)/RCV(low) rings per controller   *JAMMED*
XEPCBB:	.BLKW	<MAX.XE*4> ; PCBB block, (four words) one per controller
XECDB:	.BLKW	MAX.XE	; Virtual Pointer to CDB (in E-net region)
XECSR0:	.BLKW		; save location for CSR during INT$XE
XECONQ:	.BLKW		; Queue Root to CDB CON$ queue.
XEUMRQ:	.BLKW		; UMR Q root for User reqs waiting for UMR service
	;don't change order of next three entries
XECNT:	.BLKW		; COUNT of buffers in temporary packet
XEPKT:	.BLKW		; HEAD of temporary Packet Chain
XEPKTT:	.BLKW		; TAIL of temporary Packet Chain
	;end of order control
	;Event logging impure area
XESIZ:			; Size of XEDCTL region



.SBTTL	Status Words in CDB and PDB for UNA

;+
; CDB Status Word E.STS
;-

	.BSECT

	.BLKB	16	; set up to reserve space
C$INST:	.BLKB	1	; 4 bits for Init Step
C$DEF:	.BLKB	.	; Polling Demand Deferred (RCV buff unavail)
C$DMO:	.BLKB	.	; Polling Demand Outstanding.
C$PHYS:	.BLKB	.	; Physical address of unit has been changed
C$STEP:	.BLKB	.	; Port Command is in middle of multiple steps(TSTB)
C$PCDN:	.BLKB	.	; Port Command has just completed 
C$RCS:	.BLKB	.	; Read and Clear Port Status Required.
C$CLS:	.BLKB	.	; Portal Closed on channel.  Perform Cleanup.
C$QFIP:	.BLKB	.	; Driver caused RESET/INIT to take place
C$DCNT:	.BLKB	.	; DECnet is present if this is set
C$PDMD:	.BLKB	.	; Polling Demand required
C$GCNT:	.BLKB	.	; We are getting line counters for REQ ID or DECnet
C$PCIP:	.BLKB	.	; Port Command in Progress - don't start a new one (TST)

;+
; PDB Status bits EP.STS
;-

CR$DNT	=: C$DCNT	; This is the DECnet Portal (for logging Events)
			; making these two values the same saves some words
			; later on.



.SBTTL	UNA Buffer Descriptor Ring Entry (RCV/XMIT)

	.DSECT	0

UN$LEN:	.BLKB	2	;LENGTH OF BUFFER SEGMENT
UN$ADD:	.BLKB	2	;LSB OF ADDRESS (16 BITS)
UN$MSB:	.BLKB		;MSB OF ADDRESS (only uses lowest 2 bits)
UN$ST1:	.BLKB		;STATUS
UN$ST2:	.BLKB	2	;MORE STATUS
UN$CCB:	.BLKB	2	;Address of CCB of Buffer (for debugging)
UN$SIZ:			;SIZE OF ONE DESCRIPTOR RING ENTRY


.SBTTL	Transmit Status Word Definitions

;+
; UN$ST1 Status Word Definitions for Transmit Completion
;	REMEMBER THAT THIS IS A HIGH BYTE!!!
;
; Sn$xxx bits are bits which are defined identically for Both RCV and
; XMIT.  Tn$xxx bits are transmit only.
;-

	.BSECT

S1$ENP:	.BLKB	.	;THIS DESCRIPTOR CONTAINS END OF PACKET INFO
S1$STP:	.BLKB	.	;THIS DESCRIPTOR MARKS START OF PACKET
T1$DEF: .BLKB	.	; Transmit was Initially deferred	
T1$ONE:	.BLKB	.	; Transmit with One collision 		
T1$MUL:	.BLKB	.	; Transmit with Multiple collisions 	
T1$MCH:	.BLKB	.	; Transmission was to ourselves (full duplex)
	; means we are transmitting to an address that we are listening
	; on.  If we are full duplex, then we receive the message.
S1$ERS:	.BLKB	.	;ERROR SUMMARY -- INDICATES SOME FAILURE IN ST2
S1$OWN:	.BLKB	.	;OWNERSHIP -- 0 = OUR ENTRY, 1 MEANS UNA'S ENTRY

;+
; BIT DEFINITIONS FOR UN$ST2 For Transmissions
;	THIS IS A WORD
;-
	.BSECT

	.BLKB	1776
T2$TDR:	.BLKB	1	;Time Domain Reflectometry Value
T2$RTY:	.BLKB	.	;Transmit Failure (16 retries) due to collisions
T2$LCR:	.BLKB	.	;Loss of Carrier
T2$LCL:	.BLKB	.	;Late Collision
	.BLKB	.	;Will be returned as zero
S2$NXM:	.BLKB	.	;UNIBUS TIMEOUT, CAN'T ACCESS BUFFER
S2$BFL:	.BLKB	.	;BUFFER LENGTH ERROR. TOO LONG, TOO SHORT, RING ERROR

.SBTTL	UNA Receive Buffer Descriptor Ring Entry


;+
; UN$ST1 Status Word Definitions for Receive Completion
;	REMEMBER THAT THIS IS A HIGH BYTE!!!
; Sn$xxx bits are bits which are defined identically for Both RCV and
; XMIT.  Rn$xxx bits are transmit only.
;-

	.BSECT

S1$ENP:	.BLKB	.	;THIS DESCRIPTOR CONTAINS END OF PACKET INFO
S1$STP:	.BLKB	.	;THIS DESCRIPTOR MARKS START OF PACKET
	.BLKB	.	;	 Reserved, will be zero
R1$CRC:	.BLKB	.	; CRC error detected
R1$OFL:	.BLKB	.	; Received packet illegal length - truncated
R1$FRM:	.BLKB	.	; Framing Error.
S1$ERS:	.BLKB	.	;ERROR SUMMARY -- INDICATES SOME FAILURE IN ST2
S1$OWN:	.BLKB	.	;OWNERSHIP -- 0 = OUR ENTRY, 1 MEANS UNA'S ENTRY
		;- Transmit - initially deferred request

;+
; BIT DEFINITIONS FOR UN$ST2 For Receives
;-

	.BSECT

	.BLKB	7776
R2$MLN:	.BLKB	1	;MESSAGE LENGTH
	.BLKB	.	;ZERO
R2$NCH:	.BLKB	.	;BUFFER CHAINING WAS NOT ENABLED
S2$NXM:	.BLKB	.	;UNIBUS TIMEOUT, CAN'T ACCESS BUFFER
S2$BFL:	.BLKB	.	;BUFFER LENGTH ERROR. TOO LONG, TOO SHORT, RING ERROR


.SBTTL	UNA PORT COMMAND SET

;+
; THESE COMMANDS ARE ISSUED THROUGH THE UNIBUS CSRS
;-

	.DSECT

NOP.XE:	.BLKB		; 0 = NO-OP
GPC.XE:	.BLKB		; 1 = GET PCBB COMMAND
CMD.XE:	.BLKB		; 2 = GET CMD
SLF.XE:	.BLKB		; 3 = SELF TEST
STR.XE:	.BLKB		; 4 = START
BOT.XE:	.BLKB		; 5 = BOOT
	.BLKB		;   RESERVED 6
	.BLKB		;   RESERVED 7
POL.XE:	.BLKB		; 10 = POLLING DEMAND
	.BLKB		;   RESERVED 11
	.BLKB		;   RESERVED 12
	.BLKB		;   RESERVED 13
HLT.XE:	.BLKB		; 14 = HALT (DELUA ONLY)
STP.XE:	.BLKB		; 15 = STOP UNA OPERATION


.SBTTL	Port Control Functions (Ancillary)

;+
; Commands issued through the PCBB
;-

	.DSECT

NOP$XE:	.BLKB		; No-op
	.BLKB		; Load and Start Microaddress (un-used)
RDF$XE:	.BLKB		; Read Default Physical Address
	.BLKB		; No-op
	.BLKB		;- unused - Read Physical Address
WPA$XE:	.BLKB		; Write New Physical Address
	.BLKB		;- unused - Read Multicast List
WML$XE:	.BLKB		; Write Multicast Address List
	.BLKB		;- unused - Read Ring Format
WRF$XE:	.BLKB		; Write Ring Format
	.BLKB		;- unused - Read Counters
RCT$XE:	.BLKB		; Read and Clear Counters
	.BLKB		;- unused - Read Mode
WMD$XE:	.BLKB		; Write Mode
RPS$XE:	.BLKB		; Read Port Status
RCS$XE:	.BLKB		; Read and Clear Port Status
	.BLKB		;- unused - Dump Internal Memory
	.BLKB		;- unused - Load Internal Memory
	.BLKB		;- unused - Read SYS ID params
WPR$XE:	.BLKB		; Write SYS ID params
	.BLKB		;- unused - Read Load Server Address
	.BLKB		;- unused - Write Load Server Address



.SBTTL	UNA CSR set and bit definitions

	.DSECT

PCSR0:	.BLKW		;
PCSR1:	.BLKW		;
PCSR2:	.BLKW		;
PCSR3:	.BLKW		;

;+
; PCSR 0 DEFINITIONS
;-

	.BSECT

	.BLKB	16
C0$CMD:	.BLKB	1	;PORT COMMAND FIELD
	.BLKB	.	;ZERO
C0$RST:	.BLKB	.	;RESET UNA
C0$IE:	.BLKB	.	;INTERRUPT ENABLE
C0$ISM:	.BLKB	.	;INTERRUPT SUMMARY
C0$USI:	.BLKB	.	; UNSOLICITED STATE CHANGE INTERRUPT
	.BLKB	.	;ZERO
C0$NRI:	.BLKB	.	;NO RECEIVE BUFFER AVAILABLE INTERRUPT
C0$DNI:	.BLKB	.	;DONE INTERRUPT -- PORT COMMAND COMPLETED
C0$XMI:	.BLKB	.	;XMIT COMPLETE INTERRUPT
C0$RCI:	.BLKB	.	;RECEIVE COMPLETE INTERRUPT
C0$CEI:	.BLKB	.	;PORT COMMAND ERROR INTERRUPT
C0$SEI:	.BLKB	.	;STATUS ERROR INTERRUPT

ALLINT =: <C0$USI!C0$NRI!C0$DNI!C0$XMI!C0$RCI!C0$CEI!C0$SEI>
	; All interrupt bits (not including C0$ISM, the summary bit)

;+
; PCSR 1 DEFINITIONS
;-

	.BSECT

	.BLKB	16
C1$STE:	.BLKB	1	;UNA STATE <4 BITS>
	.BLKB	.	; ZERO
	.BLKB	.	; ZERO
	.BLKB	.	; ZERO
C1$TMO:	.BLKB	37200	;PORT COMMAND TIMEOUT
C1$TST:	.BLKB 	400	;SELFTEST ERROR CODE <6 BITS>
C1$CBL:	.BLKB	.	;ZERO MEANS CABLING SEEMS OKAY
C1$XPR:	.BLKB	.	;ZERO MEANS XCEIVER SEEMS OKAY

;+
; PCSR 2 USED FOR LOW ORDER PCBB ADDRESS
; PCSR 3 USED FOR HIGH ORDER TWO PCBB ADDRESS BITS
;-



.SBTTL	Mode bits

;+
; Mode bit assignments  (PCBB+2)
;-

	.BSECT

HDPX:	.BLKB	.	; Set for half-duplex operation, clear for full duplex
	.BLKB	.	; RESERVED
LOOP:	.BLKB	.	; 
DTCR:	.BLKB	.	;
	.BLKB	.	; RESERVED
	.BLKB	.	; RESERVED
	.BLKB	.	; RESERVED
	.BLKB	.	; RESERVED
	.BLKB	.	; RESERVED
DMNT:	.BLKB	.	; Disable Maintenance message (always CLEAR)
	.BLKB	.	; RESERVED
ECT:	.BLKB	.	; Enable Collision Test	 (always set)
TPAD:	.BLKB	.	; Transmit Pad Enable	 (always set)
DRDC:	.BLKB	.	; Disable Receive Data Chaining (always CLEAR)
ENAL:	.BLKB	.	; Enable All Multicast Reception (shuts off filtering)
PROM:	.BLKB	.	; Enable Promiscuous Receives

.SBTTL	Port Status bits

;+
; Bit definitions for PCBB+2 after READ/READ and CLEAR PORT STATUS
;-

	.BSECT

	.BLKB	76	; field length of Rom Revision field
PS$RRV:	.BLKB	1	; ROM Revision Field (six bits)
PS$RRM:	.BLKB	.	; RAM Microcode operational.
PS$PTH:	.BLKB	.	; ROM patches are in.
PS$TRG:	.BLKB	.	; Transmit Ring Error
PS$RRG:	.BLKB	.	; Receive Ring Error
	.BLKB	.	; Zero.
PS$TMO:	.BLKB	.	; UNIBUS timeout error
PS$CER:	.BLKB	.	; Collision test error.  Log CDCF even (5.16)
	.BLKB	.	; Zero.
PS$MER:	.BLKB	.	; Multiple errors occurred in buffer handling
PS$ERS:	.BLKB	.	; Error Summary of Port Status Word



.SBTTL	UNA/LUA Hardware States

;+
; State of the UNA/LUA
;-

	.DSECT

RSETXE:	.BLKB	;Reset State
PRIMXE:	.BLKB	;Primary Load State (unused)
RDYXE:	.BLKB	;Ready State
RUNXE:	.BLKB	;Running State
	.BLKB	;RESERVED
UHLTXE:	.BLKB	;UNIBUS halted
EHLTXE:	.BLKB	;Ethernet halted
HALTXE:	.BLKB	;Ethernet and UNIBUS halted
PHLTXE:	.BLKB	;Port Halted
	.BLKB	;RESERVED
	.BLKB	;RESERVED
	.BLKB	;RESERVED
	.BLKB	;RESERVED
	.BLKB	;RESERVED
	.BLKB	;RESERVED
SECLXE:	.BLKB	;Secondary Load (unused)



.SBTTL	SYSID -- UDBB layout.

;+
; Most of these are just hacked into the driver as required.
; This buffer is pretty big, and probably will be changing
; in the future.
;
; So, here is the UDBB layout for a Set System ID params
;-

	.DSECT

	.BLKW		;RESERVED (Verfication word 0)	
	.BLKW		;RESERVED (Verfication word 1)
	.BLKW		;RESERVED (Verfication word 1)
	.BLKW		;RESERVED (Verfication word 1)
ID.SID:	.BLKB		;Software identification ???
	.BLKB		;RESERVED (must be zero)
	.BLKW		;RESERVED (undefined)	
	.BLKW		;RESERVED (undefined)	
	.BLKW		;RESERVED (undefined)	
	.BLKW		;RESERVED (undefined)	
	.BLKW		;RESERVED (undefined)	
	.BLKW		;RESERVED (undefined)	
ID.ETH:	.BLKW		;Ethernet type (default 0260 okay)
ID.CCT:	.BLKW		;size of SYSID message (28.+any parameters)
ID.CDE:	.BLKB		;Function code (default is 7. Okay)
	.BLKB		;RESERVED (must be zero)
ID.RCN:	.BLKW		;Receipt number (default is 0. Okay)
ID.MVT:	.BLKW		;MOP version type (default okay)
ID.MVL:	.BLKB		;MOP Version Length (default okay)???
ID.MVV:	.BLKB		;MOB Version/Version (default = 3, okay)
ID.MVE:	.BLKB		;MOP ECO level. 0 (default) is okay
ID.MVU:	.BLKB		;MOP uECO level. DEUNA default is okay.
ID.FTY:	.BLKW		;Function type. 2 (default) is okay
ID.FLN:	.BLKB		;Function length.
ID.FV1:	.BLKB		;Bit 0 (LOOP func) and Bit 6 (Data Link Counters)
ID.FV2:	.BLKB		;Function value 2. 0 (default) is okay
ID.HA1:	.BLKB		;Hardware Address type (default is 7)
ID.HA2:	.BLKB		;Hardware Address type 2
ID.HLN:	.BLKB		;Hardware Address Length (6 bytes) default okay
ID.HAD:	.BLKW		;Hardware addres word 0
	.BLKW		;Hardware address word 1
	.BLKW		;Hardware address word 2
ID.DTY:	.BLKW		;Device type.  Default okay
ID.DLN:	.BLKB		;Device Length.  Default of one is okay.
ID.DVL:	.BLKB		;Device Value. One.
ID.PRM:			; some space for additional params. not in use.


.IIF	NDF	L$$ETH,	.ENABL	CRF
.IIF	NDF	L$$ETH,	.LIST
